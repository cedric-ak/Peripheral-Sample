

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr 06 20:01:21 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46J13
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49  0000                     
    50                           ; Version 1.45
    51                           ; Generated 16/11/2017 GMT
    52                           ; 
    53                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18LF46J13 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     
    85 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    86  0000                     
    87 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    88  0000                     
    89 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    90  0000                     
    91                           	psect	idataCOMRAM
    92  0018B2                     __pidataCOMRAM:
    93                           	opt stack 0
    94                           
    95                           ;initializer for setTime@F7757
    96  0018B2  0003               	dw	3
    97  0018B4  0004               	dw	4
    98  0018B6  0005               	dw	5
    99  0018B8  00                 	db	0
   100  0018B9  00                 	db	0
   101                           
   102                           ;initializer for setDate@F7764
   103  0018BA  06                 	db	6
   104  0018BB  07                 	db	7
   105  0018BC  08                 	db	8
   106  0018BD  09                 	db	9
   107  0018BE  00                 	db	0
   108                           
   109                           	psect	smallconst
   110  000F00                     __psmallconst:
   111                           	opt stack 0
   112  000F00  00                 	db	0
   113  000F01  00                 	db	0
   114  000F02  80                 	db	128
   115  000F03  3F                 	db	63
   116  000F04  72                 	db	114
   117  000F05  31                 	db	49
   118  000F06  3F                 	db	63
   119  000F07  FE                 	db	254
   120  000F08  75                 	db	117
   121  000F09  3E                 	db	62
   122  000F0A  58                 	db	88
   123  000F0B  63                 	db	99
   124  000F0C  3D                 	db	61
   125  000F0D  95                 	db	149
   126  000F0E  1D                 	db	29
   127  000F0F  3C                 	db	60
   128  000F10  C5                 	db	197
   129  000F11  AE                 	db	174
   130  000F12  3A                 	db	58
   131  000F13  79                 	db	121
   132  000F14  21                 	db	33
   133  000F15  39                 	db	57
   134  000F16  94                 	db	148
   135  000F17  80                 	db	128
   136  000F18  37                 	db	55
   137  000F19  93                 	db	147
   138  000F1A  A7                 	db	167
   139  000F1B  35                 	db	53
   140  000F1C  56                 	db	86
   141  000F1D  15                 	db	21
   142  000F1E  34                 	db	52
   143  000F1F                     __end_ofexp@coeff:
   144                           	opt stack 0
   145  000F1F  00                 	db	0
   146  000F20  00                 	db	0
   147  000F21  00                 	db	0
   148  000F22  00                 	db	0
   149  000F23  80                 	db	128
   150  000F24  3F                 	db	63
   151  000F25  F0                 	db	240
   152  000F26  FF                 	db	255
   153  000F27  BE                 	db	190
   154  000F28  E2                 	db	226
   155  000F29  A9                 	db	169
   156  000F2A  3E                 	db	62
   157  000F2B  83                 	db	131
   158  000F2C  76                 	db	118
   159  000F2D  BE                 	db	190
   160  000F2E  AE                 	db	174
   161  000F2F  2B                 	db	43
   162  000F30  3E                 	db	62
   163  000F31  3C                 	db	60
   164  000F32  C3                 	db	195
   165  000F33  BD                 	db	189
   166  000F34  D2                 	db	210
   167  000F35  13                 	db	19
   168  000F36  3D                 	db	61
   169  000F37  78                 	db	120
   170  000F38  D3                 	db	211
   171  000F39  BB                 	db	187
   172  000F3A                     __end_oflog@coeff:
   173                           	opt stack 0
   174  0000                     _ODCON3	set	3904
   175  0000                     _ODCON2	set	3905
   176  0000                     _ODCON1	set	3906
   177  0000                     _ANCON1	set	3913
   178  0000                     _ANCON0	set	3912
   179  0000                     _REFOCON	set	3901
   180  0000                     _SSP2STATbits	set	3955
   181  0000                     _SSP2BUF	set	3957
   182  0000                     _SSP2ADD	set	3956
   183  0000                     _SSP2CON2bits	set	3953
   184  0000                     _SSP2CON1bits	set	3954
   185  0000                     _TRISDbits	set	3989
   186  0000                     _PIR3bits	set	4004
   187  0000                     _PIE3bits	set	4003
   188  0000                     _LATCbits	set	3979
   189  0000                     _LATBbits	set	3978
   190  0000                     _PORTBbits	set	3969
   191  0000                     _INTCONbits	set	4082
   192  0000                     _TRISEbits	set	3990
   193  0000                     _INTCON2bits	set	4081
   194  0000                     _TRISD	set	3989
   195  0000                     _TRISC	set	3988
   196  0000                     _TRISB	set	3987
   197  0000                     _TRISA	set	3986
   198  0000                     _TRISE	set	3990
   199  0000                     _LATC	set	3979
   200  0000                     _LATB	set	3978
   201  0000                     _LATA	set	3977
   202  0000                     _LATD	set	3980
   203  0000                     _LATE	set	3981
   204  0000                     _OSCCON2	set	3975
   205  0000                     _OSCTUNE	set	3995
   206  0000                     _OSCCON	set	4051
   207  0000                     _TXREG1	set	4014
   208  0000                     _RCREG1	set	4015
   209  0000                     _RCSTA1bits	set	4012
   210  0000                     _TXSTA1bits	set	4013
   211  0000                     _PIR1bits	set	3998
   212  0000                     _SPBRGH1	set	3967
   213  0000                     _SPBRG1	set	4016
   214  0000                     _TXSTA1	set	4013
   215  0000                     _RCSTA1	set	4012
   216  0000                     _BAUDCON1	set	3966
   217  0000                     _SSP1STATbits	set	4039
   218  0000                     _SSP1BUF	set	4041
   219  0000                     _SSP1CON1bits	set	4038
   220  0000                     _SSP1ADD	set	4040
   221  0000                     _SSP1CON1	set	4038
   222  0000                     _SSP1STAT	set	4039
   223  000F3A                     STR_1:
   224  000F3A  0D                 	db	13
   225  000F3B  00                 	db	0
   226                           
   227                           ; #config settings
   228  000F3C  00                 	db	0	; dummy byte at the end
   229  0000                     
   230                           	psect	cinit
   231  00154C                     __pcinit:
   232                           	opt stack 0
   233  00154C                     start_initialization:
   234                           	opt stack 0
   235  00154C                     __initialization:
   236                           	opt stack 0
   237                           
   238                           ; Initialize objects allocated to COMRAM (13 bytes)
   239                           ; load TBLPTR registers with __pidataCOMRAM
   240  00154C  0EB2               	movlw	low __pidataCOMRAM
   241  00154E  6EF6               	movwf	tblptrl,c
   242  001550  0E18               	movlw	high __pidataCOMRAM
   243  001552  6EF7               	movwf	tblptrh,c
   244  001554  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   245  001556  6EF8               	movwf	tblptru,c
   246  001558  EE00  F03F         	lfsr	0,__pdataCOMRAM
   247  00155C  EE10 F00D          	lfsr	1,13
   248  001560                     copy_data0:
   249  001560  0009               	tblrd		*+
   250  001562  CFF5 FFEE          	movff	tablat,postinc0
   251  001566  50E5               	movf	postdec1,w,c
   252  001568  50E1               	movf	fsr1l,w,c
   253  00156A  E1FA               	bnz	copy_data0
   254                           
   255                           ; Clear objects allocated to BANK1 (256 bytes)
   256  00156C  EE01  F000         	lfsr	0,__pbssBANK1
   257  001570  EE11 F000          	lfsr	1,256
   258  001574                     clear_0:
   259  001574  6AEE               	clrf	postinc0,c
   260  001576  50E5               	movf	postdec1,w,c
   261  001578  50E1               	movf	fsr1l,w,c
   262  00157A  E1FC               	bnz	clear_0
   263  00157C  50E2               	movf	fsr1h,w,c
   264  00157E  E1FA               	bnz	clear_0
   265                           
   266                           ; Clear objects allocated to COMRAM (21 bytes)
   267  001580  EE00  F02A         	lfsr	0,__pbssCOMRAM
   268  001584  0E15               	movlw	21
   269  001586                     clear_1:
   270  001586  6AEE               	clrf	postinc0,c
   271  001588  06E8               	decf	wreg,f,c
   272  00158A  E1FD               	bnz	clear_1
   273  00158C                     end_of_initialization:
   274                           	opt stack 0
   275  00158C                     __end_of__initialization:
   276                           	opt stack 0
   277  00158C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   278  00158E  6EF8               	movwf	tblptru,c
   279  001590  0100               	movlb	0
   280  001592  EF4C  F009         	goto	_main	;jump to C main() function
   281                           tblptru	equ	0xFF8
   282                           tblptrh	equ	0xFF7
   283                           tblptrl	equ	0xFF6
   284                           tablat	equ	0xFF5
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           postdec1	equ	0xFE5
   288                           fsr1h	equ	0xFE2
   289                           fsr1l	equ	0xFE1
   290                           
   291                           	psect	bssCOMRAM
   292  00002A                     __pbssCOMRAM:
   293                           	opt stack 0
   294  00002A                     _sData:
   295                           	opt stack 0
   296  00002A                     	ds	10
   297  000034                     _errno:
   298                           	opt stack 0
   299  000034                     	ds	2
   300  000036                     _ADC:
   301                           	opt stack 0
   302  000036                     	ds	2
   303  000038                     _EUSART1_ErrorHandler:
   304                           	opt stack 0
   305  000038                     	ds	2
   306  00003A                     _EUSART1_OverrunErrorHandler:
   307                           	opt stack 0
   308  00003A                     	ds	2
   309  00003C                     _EUSART1_FramingErrorHandler:
   310                           	opt stack 0
   311  00003C                     	ds	2
   312  00003E                     _eusart1RxLastError:
   313                           	opt stack 0
   314  00003E                     	ds	1
   315                           tblptru	equ	0xFF8
   316                           tblptrh	equ	0xFF7
   317                           tblptrl	equ	0xFF6
   318                           tablat	equ	0xFF5
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           postdec1	equ	0xFE5
   322                           fsr1h	equ	0xFE2
   323                           fsr1l	equ	0xFE1
   324                           
   325                           	psect	dataCOMRAM
   326  00003F                     __pdataCOMRAM:
   327                           	opt stack 0
   328  00003F                     setTime@F7757:
   329                           	opt stack 0
   330  00003F                     	ds	8
   331  000047                     setDate@F7764:
   332                           	opt stack 0
   333  000047                     	ds	5
   334                           tblptru	equ	0xFF8
   335                           tblptrh	equ	0xFF7
   336                           tblptrl	equ	0xFF6
   337                           tablat	equ	0xFF5
   338                           postinc0	equ	0xFEE
   339                           wreg	equ	0xFE8
   340                           postdec1	equ	0xFE5
   341                           fsr1h	equ	0xFE2
   342                           fsr1l	equ	0xFE1
   343                           
   344                           	psect	bssBANK1
   345  000100                     __pbssBANK1:
   346                           	opt stack 0
   347  000100                     _TxData:
   348                           	opt stack 0
   349  000100                     	ds	256
   350                           tblptru	equ	0xFF8
   351                           tblptrh	equ	0xFF7
   352                           tblptrl	equ	0xFF6
   353                           tablat	equ	0xFF5
   354                           postinc0	equ	0xFEE
   355                           wreg	equ	0xFE8
   356                           postdec1	equ	0xFE5
   357                           fsr1h	equ	0xFE2
   358                           fsr1l	equ	0xFE1
   359                           
   360                           	psect	cstackCOMRAM
   361  000001                     __pcstackCOMRAM:
   362                           	opt stack 0
   363  000001                     ??_OSCILLATOR_Initialize:
   364  000001                     ?___wmul:
   365                           	opt stack 0
   366  000001                     ?___awdiv:
   367                           	opt stack 0
   368  000001                     ?___awmod:
   369                           	opt stack 0
   370  000001                     ?___lwdiv:
   371                           	opt stack 0
   372  000001                     ?___lwmod:
   373                           	opt stack 0
   374  000001                     I2C_Write@data:
   375                           	opt stack 0
   376  000001                     EUSART1_Write_Text@pbData:
   377                           	opt stack 0
   378  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
   379                           	opt stack 0
   380  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   381                           	opt stack 0
   382  000001                     EUSART1_SetErrorHandler@interruptHandler:
   383                           	opt stack 0
   384  000001                     I2C_read@ACK_NACK:
   385                           	opt stack 0
   386  000001                     BCDtoDecimal@BCDvalue:
   387                           	opt stack 0
   388  000001                     ___wmul@multiplier:
   389                           	opt stack 0
   390  000001                     ___awdiv@dividend:
   391                           	opt stack 0
   392  000001                     ___awmod@dividend:
   393                           	opt stack 0
   394  000001                     ___lwdiv@dividend:
   395                           	opt stack 0
   396  000001                     ___lwmod@dividend:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x0
   400  000001                     	ds	1
   401  000002                     
   402                           ; 1 bytes @ 0x1
   403  000002                     	ds	1
   404  000003                     ??_BCDtoDecimal:
   405  000003                     EUSART1_Write_Text@iSize:
   406                           	opt stack 0
   407  000003                     ___wmul@multiplicand:
   408                           	opt stack 0
   409  000003                     ___awdiv@divisor:
   410                           	opt stack 0
   411  000003                     ___awmod@divisor:
   412                           	opt stack 0
   413  000003                     ___lwdiv@divisor:
   414                           	opt stack 0
   415  000003                     ___lwmod@divisor:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x2
   419  000003                     	ds	1
   420  000004                     ??_EUSART1_Write_Text:
   421                           
   422                           ; 1 bytes @ 0x3
   423  000004                     	ds	1
   424  000005                     ___awdiv@counter:
   425                           	opt stack 0
   426  000005                     ___awmod@counter:
   427                           	opt stack 0
   428  000005                     ___lwmod@counter:
   429                           	opt stack 0
   430  000005                     ___wmul@product:
   431                           	opt stack 0
   432  000005                     ___lwdiv@quotient:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x4
   436  000005                     	ds	1
   437  000006                     EUSART1_Write_Text@iSizeQueued:
   438                           	opt stack 0
   439  000006                     ___awdiv@sign:
   440                           	opt stack 0
   441  000006                     ___awmod@sign:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x5
   445  000006                     	ds	1
   446  000007                     ?___aldiv:
   447                           	opt stack 0
   448  000007                     rtcRead@address:
   449                           	opt stack 0
   450  000007                     ___lwdiv@counter:
   451                           	opt stack 0
   452  000007                     ___awdiv@quotient:
   453                           	opt stack 0
   454  000007                     ___aldiv@dividend:
   455                           	opt stack 0
   456                           
   457                           ; 4 bytes @ 0x6
   458  000007                     	ds	1
   459  000008                     utoa@buf:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x7
   463  000008                     	ds	1
   464  000009                     decimalToBCD@DecValue:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x8
   468  000009                     	ds	1
   469  00000A                     utoa@val:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x9
   473  00000A                     	ds	1
   474  00000B                     ??_decimalToBCD:
   475  00000B                     ___aldiv@divisor:
   476                           	opt stack 0
   477                           
   478                           ; 4 bytes @ 0xA
   479  00000B                     	ds	1
   480  00000C                     utoa@base:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0xB
   484  00000C                     	ds	1
   485  00000D                     PCF8523_write@data:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0xC
   489  00000D                     	ds	1
   490  00000E                     PCF8523_write@regAdd:
   491                           	opt stack 0
   492  00000E                     utoa@v:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0xD
   496  00000E                     	ds	1
   497  00000F                     setTime@minute:
   498                           	opt stack 0
   499  00000F                     setDate@weekday:
   500                           	opt stack 0
   501  00000F                     countDown@time:
   502                           	opt stack 0
   503  00000F                     ___aldiv@counter:
   504                           	opt stack 0
   505  00000F                     rtc_INTF_CLR@interruptFlag:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0xE
   509  00000F                     	ds	1
   510  000010                     setTime@second:
   511                           	opt stack 0
   512  000010                     setDate@month:
   513                           	opt stack 0
   514  000010                     countDown@timeUnit:
   515                           	opt stack 0
   516  000010                     ___aldiv@sign:
   517                           	opt stack 0
   518  000010                     utoa@c:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0xF
   522  000010                     	ds	1
   523  000011                     ??_rtc_INTF_CLR:
   524  000011                     setDate@year:
   525                           	opt stack 0
   526  000011                     itoa@buf:
   527                           	opt stack 0
   528  000011                     ___aldiv@quotient:
   529                           	opt stack 0
   530                           
   531                           ; 4 bytes @ 0x10
   532  000011                     	ds	1
   533  000012                     setDate@Register:
   534                           	opt stack 0
   535                           
   536                           ; 5 bytes @ 0x11
   537  000012                     	ds	1
   538  000013                     setTime@hour:
   539                           	opt stack 0
   540  000013                     itoa@val:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x12
   544  000013                     	ds	1
   545  000014                     setTime@Register:
   546                           	opt stack 0
   547                           
   548                           ; 8 bytes @ 0x13
   549  000014                     	ds	1
   550  000015                     I2C_Init@F_clock:
   551                           	opt stack 0
   552  000015                     itoa@base:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x14
   556  000015                     	ds	1
   557  000016                     
   558                           ; 1 bytes @ 0x15
   559  000016                     	ds	1
   560  000017                     setDate@day:
   561                           	opt stack 0
   562  000017                     itoa@cp:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x16
   566  000017                     	ds	1
   567  000018                     setDate@timeReg:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x17
   571  000018                     	ds	1
   572  000019                     EUSART1_itoa@data:
   573                           	opt stack 0
   574                           
   575                           ; 4 bytes @ 0x18
   576  000019                     	ds	3
   577  00001C                     setTime@timeReg:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x1B
   581  00001C                     	ds	1
   582  00001D                     EUSART1_itoa@base:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x1C
   586  00001D                     	ds	2
   587  00001F                     EUSART1_itoa@buf:
   588                           	opt stack 0
   589                           
   590                           ; 10 bytes @ 0x1E
   591  00001F                     	ds	10
   592  000029                     ??_main:
   593                           
   594                           ; 1 bytes @ 0x28
   595  000029                     	ds	1
   596                           tblptru	equ	0xFF8
   597                           tblptrh	equ	0xFF7
   598                           tblptrl	equ	0xFF6
   599                           tablat	equ	0xFF5
   600                           postinc0	equ	0xFEE
   601                           wreg	equ	0xFE8
   602                           postdec1	equ	0xFE5
   603                           fsr1h	equ	0xFE2
   604                           fsr1l	equ	0xFE1
   605                           
   606 ;;
   607 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   608 ;;
   609 ;; *************** function _main *****************
   610 ;; Defined at:
   611 ;;		line 5 in file "main.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;		None
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   627 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   628 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   629 ;;Total ram usage:        1 bytes
   630 ;; Hardware stack levels required when called:    4
   631 ;; This function calls:
   632 ;;		_EUSART1_itoa
   633 ;;		_I2C_buffClear
   634 ;;		_RTC_Init
   635 ;;		_SYSTEM_Initialize
   636 ;;		_countDown
   637 ;;		_interrupt_Init
   638 ;;		_rtcRead
   639 ;;		_rtc_INTF_CLR
   640 ;;		_setDate
   641 ;;		_setTime
   642 ;; This function is called by:
   643 ;;		Startup code after reset
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text0
   648  001298                     __ptext0:
   649                           	opt stack 0
   650  001298                     _main:
   651                           	opt stack 27
   652                           
   653                           ;main.c: 7: interrupt_Init();
   654                           
   655                           ;incstack = 0
   656  001298  EC60  F00C         	call	_interrupt_Init	;wreg free
   657                           
   658                           ;main.c: 8: SYSTEM_Initialize();
   659  00129C  EC33  F00C         	call	_SYSTEM_Initialize	;wreg free
   660                           
   661                           ;main.c: 9: I2C_buffClear();
   662  0012A0  EC4A  F00C         	call	_I2C_buffClear	;wreg free
   663                           
   664                           ;main.c: 10: _delay((unsigned long)((10)*(16000000/4000.0)));
   665  0012A4  0E34               	movlw	52
   666  0012A6  6E29               	movwf	??_main& (0+255),c
   667  0012A8  0EF2               	movlw	242
   668  0012AA                     u1397:
   669  0012AA  2EE8               	decfsz	wreg,f,c
   670  0012AC  D7FE               	bra	u1397
   671  0012AE  2E29               	decfsz	??_main& (0+255),f,c
   672  0012B0  D7FC               	bra	u1397
   673                           
   674                           ;main.c: 12: RTC_Init();
   675  0012B2  ECF9  F00B         	call	_RTC_Init	;wreg free
   676                           
   677                           ;main.c: 13: setTime(12, 54, 45);
   678  0012B6  0E36               	movlw	54
   679  0012B8  6E0F               	movwf	setTime@minute,c
   680  0012BA  0E2D               	movlw	45
   681  0012BC  6E10               	movwf	setTime@second,c
   682  0012BE  0E0C               	movlw	12
   683  0012C0  EC9F  F007         	call	_setTime
   684                           
   685                           ;main.c: 14: setDate(25, Fri, Sep, 23);
   686  0012C4  0E05               	movlw	5
   687  0012C6  6E0F               	movwf	setDate@weekday,c
   688  0012C8  0E09               	movlw	9
   689  0012CA  6E10               	movwf	setDate@month,c
   690  0012CC  0E17               	movlw	23
   691  0012CE  6E11               	movwf	setDate@year,c
   692  0012D0  0E19               	movlw	25
   693  0012D2  EC22  F008         	call	_setDate
   694                           
   695                           ;main.c: 16: countDown(seconds, 10);
   696  0012D6  0E0A               	movlw	10
   697  0012D8  6E0F               	movwf	countDown@time,c
   698  0012DA  0E02               	movlw	2
   699  0012DC  ECA7  F00B         	call	_countDown
   700  0012E0                     
   701                           ;main.c: 18: if (!PORTBbits.RB0) {
   702  0012E0  B081               	btfsc	3969,0,c	;volatile
   703  0012E2  D7FE               	goto	l260
   704                           
   705                           ;main.c: 19: do { LATBbits.LATB5 = ~LATBbits.LATB5; } while(0);
   706  0012E4  AA8A               	btfss	3978,5,c	;volatile
   707  0012E6  D002               	goto	u1380
   708  0012E8  0E01               	movlw	1
   709  0012EA  D001               	goto	u1386
   710  0012EC                     u1380:
   711  0012EC  0E00               	movlw	0
   712  0012EE                     u1386:
   713  0012EE  0AFF               	xorlw	255
   714  0012F0  6E29               	movwf	??_main& (0+255),c
   715  0012F2  3A29               	swapf	??_main,f,c
   716  0012F4  4629               	rlncf	??_main,f,c
   717  0012F6  508A               	movf	3978,w,c	;volatile
   718  0012F8  1829               	xorwf	??_main,w,c
   719  0012FA  0BDF               	andlw	-33
   720  0012FC  1829               	xorwf	??_main,w,c
   721  0012FE  6E8A               	movwf	3978,c	;volatile
   722                           
   723                           ;main.c: 20: rtc_INTF_CLR(CTAF);
   724  001300  0E00               	movlw	0
   725  001302  6E10               	movwf	rtc_INTF_CLR@interruptFlag+1,c
   726  001304  0E02               	movlw	2
   727  001306  6E0F               	movwf	rtc_INTF_CLR@interruptFlag,c
   728  001308  EC18  F00C         	call	_rtc_INTF_CLR	;wreg free
   729                           
   730                           ;main.c: 21: EUSART1_itoa(rtcRead(0x03), 10);
   731  00130C  0E03               	movlw	3
   732  00130E  EC6D  F00B         	call	_rtcRead
   733  001312  6E29               	movwf	??_main& (0+255),c
   734  001314  5029               	movf	??_main,w,c
   735  001316  6E19               	movwf	EUSART1_itoa@data,c
   736  001318  6A1A               	clrf	EUSART1_itoa@data+1,c
   737  00131A  6A1B               	clrf	EUSART1_itoa@data+2,c
   738  00131C  6A1C               	clrf	EUSART1_itoa@data+3,c
   739  00131E  0E00               	movlw	0
   740  001320  6E1E               	movwf	EUSART1_itoa@base+1,c
   741  001322  0E0A               	movlw	10
   742  001324  6E1D               	movwf	EUSART1_itoa@base,c
   743  001326  EC4E  F00B         	call	_EUSART1_itoa	;wreg free
   744  00132A  D7DA               	goto	l260
   745  00132C                     __end_of_main:
   746                           	opt stack 0
   747                           tblptru	equ	0xFF8
   748                           tblptrh	equ	0xFF7
   749                           tblptrl	equ	0xFF6
   750                           tablat	equ	0xFF5
   751                           postinc0	equ	0xFEE
   752                           wreg	equ	0xFE8
   753                           postdec1	equ	0xFE5
   754                           fsr1h	equ	0xFE2
   755                           fsr1l	equ	0xFE1
   756                           
   757 ;; *************** function _setTime *****************
   758 ;; Defined at:
   759 ;;		line 28 in file "RTC_PCF8523.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;  hour            1    wreg     unsigned char 
   762 ;;  minute          1   14[COMRAM] unsigned char 
   763 ;;  second          1   15[COMRAM] unsigned char 
   764 ;; Auto vars:     Size  Location     Type
   765 ;;  hour            1   18[COMRAM] unsigned char 
   766 ;;  timeReg         2   27[COMRAM] int 
   767 ;;  Register        8   19[COMRAM] int [4]
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   778 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   779 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   780 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   781 ;;Total ram usage:       15 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; Hardware stack levels required when called:    3
   784 ;; This function calls:
   785 ;;		_PCF8523_write
   786 ;;		_decimalToBCD
   787 ;; This function is called by:
   788 ;;		_main
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           	psect	text1
   793  000F3E                     __ptext1:
   794                           	opt stack 0
   795  000F3E                     _setTime:
   796                           	opt stack 27
   797                           
   798                           ;incstack = 0
   799                           ;setTime@hour stored from wreg
   800  000F3E  6E13               	movwf	setTime@hour,c
   801                           
   802                           ;RTC_PCF8523.c: 29: int Register[4] = {0x03, 0x04, 0x05};
   803  000F40  EE20  F03F         	lfsr	2,setTime@F7757
   804  000F44  EE10  F014         	lfsr	1,setTime@Register
   805  000F48  0E07               	movlw	7
   806  000F4A                     u1281:
   807  000F4A  CFDB FFE3          	movff	plusw2,plusw1
   808  000F4E  06E8               	decf	wreg,f,c
   809  000F50  E2FC               	bc	u1281
   810                           
   811                           ;RTC_PCF8523.c: 30: for (int timeReg = 0; timeReg < 3; timeReg++) {
   812  000F52  0E00               	movlw	0
   813  000F54  6E1D               	movwf	setTime@timeReg+1,c
   814  000F56  0E00               	movlw	0
   815  000F58  6E1C               	movwf	setTime@timeReg,c
   816  000F5A  BE1D               	btfsc	setTime@timeReg+1,7,c
   817  000F5C  D006               	goto	l576
   818  000F5E  501D               	movf	setTime@timeReg+1,w,c
   819  000F60  E170               	bnz	l577
   820  000F62  0E03               	movlw	3
   821  000F64  5C1C               	subwf	setTime@timeReg,w,c
   822  000F66  B0D8               	btfsc	status,0,c
   823  000F68  0012               	return	
   824  000F6A                     l576:
   825                           
   826                           ;RTC_PCF8523.c: 31: if (Register[timeReg] == 0x03)
   827  000F6A  90D8               	bcf	status,0,c
   828  000F6C  341C               	rlcf	setTime@timeReg,w,c
   829  000F6E  6ED9               	movwf	fsr2l,c
   830  000F70  341D               	rlcf	setTime@timeReg+1,w,c
   831  000F72  6EDA               	movwf	fsr2h,c
   832  000F74  0E14               	movlw	low setTime@Register
   833  000F76  26D9               	addwf	fsr2l,f,c
   834  000F78  0E00               	movlw	high setTime@Register
   835  000F7A  22DA               	addwfc	fsr2h,f,c
   836  000F7C  0E03               	movlw	3
   837  000F7E  18DE               	xorwf	postinc2,w,c
   838  000F80  10DE               	iorwf	postinc2,w,c
   839  000F82  A4D8               	btfss	status,2,c
   840  000F84  D014               	goto	l578
   841                           
   842                           ;RTC_PCF8523.c: 32: PCF8523_write(Register[timeReg], decimalToBCD(second)&0x7F);
   843  000F86  C010  F009         	movff	setTime@second,decimalToBCD@DecValue
   844  000F8A  6A0A               	clrf	decimalToBCD@DecValue+1,c
   845  000F8C  EC8B  F00B         	call	_decimalToBCD	;wreg free
   846  000F90  0B7F               	andlw	127
   847  000F92  6E0D               	movwf	PCF8523_write@data,c
   848  000F94  90D8               	bcf	status,0,c
   849  000F96  341C               	rlcf	setTime@timeReg,w,c
   850  000F98  6ED9               	movwf	fsr2l,c
   851  000F9A  341D               	rlcf	setTime@timeReg+1,w,c
   852  000F9C  6EDA               	movwf	fsr2h,c
   853  000F9E  0E14               	movlw	low setTime@Register
   854  000FA0  26D9               	addwf	fsr2l,f,c
   855  000FA2  0E00               	movlw	high setTime@Register
   856  000FA4  22DA               	addwfc	fsr2h,f,c
   857  000FA6  50DF               	movf	indf2,w,c
   858  000FA8  EC09  F00C         	call	_PCF8523_write
   859  000FAC  D043               	goto	l582
   860  000FAE                     l578:
   861                           
   862                           ;RTC_PCF8523.c: 33: else if (Register[timeReg] == 0x04)
   863  000FAE  90D8               	bcf	status,0,c
   864  000FB0  341C               	rlcf	setTime@timeReg,w,c
   865  000FB2  6ED9               	movwf	fsr2l,c
   866  000FB4  341D               	rlcf	setTime@timeReg+1,w,c
   867  000FB6  6EDA               	movwf	fsr2h,c
   868  000FB8  0E14               	movlw	low setTime@Register
   869  000FBA  26D9               	addwf	fsr2l,f,c
   870  000FBC  0E00               	movlw	high setTime@Register
   871  000FBE  22DA               	addwfc	fsr2h,f,c
   872  000FC0  0E04               	movlw	4
   873  000FC2  18DE               	xorwf	postinc2,w,c
   874  000FC4  10DE               	iorwf	postinc2,w,c
   875  000FC6  A4D8               	btfss	status,2,c
   876  000FC8  D014               	goto	l580
   877                           
   878                           ;RTC_PCF8523.c: 34: PCF8523_write(Register[timeReg], decimalToBCD(minute)&0x7F);
   879  000FCA  C00F  F009         	movff	setTime@minute,decimalToBCD@DecValue
   880  000FCE  6A0A               	clrf	decimalToBCD@DecValue+1,c
   881  000FD0  EC8B  F00B         	call	_decimalToBCD	;wreg free
   882  000FD4  0B7F               	andlw	127
   883  000FD6  6E0D               	movwf	PCF8523_write@data,c
   884  000FD8  90D8               	bcf	status,0,c
   885  000FDA  341C               	rlcf	setTime@timeReg,w,c
   886  000FDC  6ED9               	movwf	fsr2l,c
   887  000FDE  341D               	rlcf	setTime@timeReg+1,w,c
   888  000FE0  6EDA               	movwf	fsr2h,c
   889  000FE2  0E14               	movlw	low setTime@Register
   890  000FE4  26D9               	addwf	fsr2l,f,c
   891  000FE6  0E00               	movlw	high setTime@Register
   892  000FE8  22DA               	addwfc	fsr2h,f,c
   893  000FEA  50DF               	movf	indf2,w,c
   894  000FEC  EC09  F00C         	call	_PCF8523_write
   895  000FF0  D021               	goto	l582
   896  000FF2                     l580:
   897                           
   898                           ;RTC_PCF8523.c: 35: else if (Register[timeReg] == 0x05)
   899  000FF2  90D8               	bcf	status,0,c
   900  000FF4  341C               	rlcf	setTime@timeReg,w,c
   901  000FF6  6ED9               	movwf	fsr2l,c
   902  000FF8  341D               	rlcf	setTime@timeReg+1,w,c
   903  000FFA  6EDA               	movwf	fsr2h,c
   904  000FFC  0E14               	movlw	low setTime@Register
   905  000FFE  26D9               	addwf	fsr2l,f,c
   906  001000  0E00               	movlw	high setTime@Register
   907  001002  22DA               	addwfc	fsr2h,f,c
   908  001004  0E05               	movlw	5
   909  001006  18DE               	xorwf	postinc2,w,c
   910  001008  10DE               	iorwf	postinc2,w,c
   911  00100A  A4D8               	btfss	status,2,c
   912  00100C  D013               	goto	l582
   913                           
   914                           ;RTC_PCF8523.c: 36: PCF8523_write(Register[timeReg], decimalToBCD(hour)&0x7F);
   915  00100E  C013  F009         	movff	setTime@hour,decimalToBCD@DecValue
   916  001012  6A0A               	clrf	decimalToBCD@DecValue+1,c
   917  001014  EC8B  F00B         	call	_decimalToBCD	;wreg free
   918  001018  0B7F               	andlw	127
   919  00101A  6E0D               	movwf	PCF8523_write@data,c
   920  00101C  90D8               	bcf	status,0,c
   921  00101E  341C               	rlcf	setTime@timeReg,w,c
   922  001020  6ED9               	movwf	fsr2l,c
   923  001022  341D               	rlcf	setTime@timeReg+1,w,c
   924  001024  6EDA               	movwf	fsr2h,c
   925  001026  0E14               	movlw	low setTime@Register
   926  001028  26D9               	addwf	fsr2l,f,c
   927  00102A  0E00               	movlw	high setTime@Register
   928  00102C  22DA               	addwfc	fsr2h,f,c
   929  00102E  50DF               	movf	indf2,w,c
   930  001030  EC09  F00C         	call	_PCF8523_write
   931  001034                     l582:
   932  001034  4A1C               	infsnz	setTime@timeReg,f,c
   933  001036  2A1D               	incf	setTime@timeReg+1,f,c
   934  001038  BE1D               	btfsc	setTime@timeReg+1,7,c
   935  00103A  D797               	goto	l576
   936  00103C  501D               	movf	setTime@timeReg+1,w,c
   937  00103E  E101               	bnz	l583
   938  001040  D790               	goto	L1
   939  001042                     l577:
   940  001042                     l583:
   941  001042  0012               	return		;funcret
   942  001044                     __end_of_setTime:
   943                           	opt stack 0
   944                           tblptru	equ	0xFF8
   945                           tblptrh	equ	0xFF7
   946                           tblptrl	equ	0xFF6
   947                           tablat	equ	0xFF5
   948                           postinc0	equ	0xFEE
   949                           wreg	equ	0xFE8
   950                           postdec1	equ	0xFE5
   951                           plusw1	equ	0xFE3
   952                           fsr1h	equ	0xFE2
   953                           fsr1l	equ	0xFE1
   954                           indf2	equ	0xFDF
   955                           postinc2	equ	0xFDE
   956                           plusw2	equ	0xFDB
   957                           fsr2h	equ	0xFDA
   958                           fsr2l	equ	0xFD9
   959                           status	equ	0xFD8
   960                           
   961 ;; *************** function _setDate *****************
   962 ;; Defined at:
   963 ;;		line 40 in file "RTC_PCF8523.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;  day             1    wreg     unsigned char 
   966 ;;  weekday         1   14[COMRAM] unsigned char 
   967 ;;  month           1   15[COMRAM] unsigned char 
   968 ;;  year            1   16[COMRAM] unsigned char 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  day             1   22[COMRAM] unsigned char 
   971 ;;  timeReg         2   23[COMRAM] int 
   972 ;;  Register        5   17[COMRAM] unsigned char [5]
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   982 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   983 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   985 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   986 ;;Total ram usage:       11 bytes
   987 ;; Hardware stack levels used:    1
   988 ;; Hardware stack levels required when called:    3
   989 ;; This function calls:
   990 ;;		_PCF8523_write
   991 ;;		_decimalToBCD
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text2
   998  001044                     __ptext2:
   999                           	opt stack 0
  1000  001044                     _setDate:
  1001                           	opt stack 27
  1002                           
  1003                           ;incstack = 0
  1004                           ;setDate@day stored from wreg
  1005  001044  6E17               	movwf	setDate@day,c
  1006                           
  1007                           ;RTC_PCF8523.c: 41: uint8_t Register[5] = {0x06, 0x07, 0x08, 0x09};
  1008  001046  EE20  F047         	lfsr	2,setDate@F7764
  1009  00104A  EE10  F012         	lfsr	1,setDate@Register
  1010  00104E  0E04               	movlw	4
  1011  001050                     u1341:
  1012  001050  CFDB FFE3          	movff	plusw2,plusw1
  1013  001054  06E8               	decf	wreg,f,c
  1014  001056  E2FC               	bc	u1341
  1015                           
  1016                           ;RTC_PCF8523.c: 42: for (int timeReg = 0; timeReg < 4; timeReg++) {
  1017  001058  0E00               	movlw	0
  1018  00105A  6E19               	movwf	setDate@timeReg+1,c
  1019  00105C  0E00               	movlw	0
  1020  00105E  6E18               	movwf	setDate@timeReg,c
  1021  001060                     l2458:
  1022  001060  BE19               	btfsc	setDate@timeReg+1,7,c
  1023  001062  D04B               	goto	l590
  1024  001064  5019               	movf	setDate@timeReg+1,w,c
  1025  001066  E15F               	bnz	l596
  1026  001068  0E04               	movlw	4
  1027  00106A  5C18               	subwf	setDate@timeReg,w,c
  1028  00106C  B0D8               	btfsc	status,0,c
  1029  00106E  0012               	return	
  1030  001070  D044               	goto	l590
  1031  001072  C017  F009         	movff	setDate@day,decimalToBCD@DecValue
  1032  001076  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1033  001078  EC8B  F00B         	call	_decimalToBCD	;wreg free
  1034  00107C  0B7F               	andlw	127
  1035  00107E  6E0D               	movwf	PCF8523_write@data,c
  1036  001080  0E12               	movlw	low setDate@Register
  1037  001082  2418               	addwf	setDate@timeReg,w,c
  1038  001084  6ED9               	movwf	fsr2l,c
  1039  001086  0E00               	movlw	high setDate@Register
  1040  001088  2019               	addwfc	setDate@timeReg+1,w,c
  1041  00108A  6EDA               	movwf	fsr2h,c
  1042  00108C  50DF               	movf	indf2,w,c
  1043  00108E  EC09  F00C         	call	_PCF8523_write
  1044                           
  1045                           ;RTC_PCF8523.c: 45: break;
  1046  001092  D046               	goto	l592
  1047  001094  C00F  F009         	movff	setDate@weekday,decimalToBCD@DecValue
  1048  001098  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1049  00109A  EC8B  F00B         	call	_decimalToBCD	;wreg free
  1050  00109E  0B7F               	andlw	127
  1051  0010A0  6E0D               	movwf	PCF8523_write@data,c
  1052  0010A2  0E12               	movlw	low setDate@Register
  1053  0010A4  2418               	addwf	setDate@timeReg,w,c
  1054  0010A6  6ED9               	movwf	fsr2l,c
  1055  0010A8  0E00               	movlw	high setDate@Register
  1056  0010AA  2019               	addwfc	setDate@timeReg+1,w,c
  1057  0010AC  6EDA               	movwf	fsr2h,c
  1058  0010AE  50DF               	movf	indf2,w,c
  1059  0010B0  EC09  F00C         	call	_PCF8523_write
  1060                           
  1061                           ;RTC_PCF8523.c: 47: break;
  1062  0010B4  D035               	goto	l592
  1063  0010B6  C010  F009         	movff	setDate@month,decimalToBCD@DecValue
  1064  0010BA  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1065  0010BC  EC8B  F00B         	call	_decimalToBCD	;wreg free
  1066  0010C0  0B7F               	andlw	127
  1067  0010C2  6E0D               	movwf	PCF8523_write@data,c
  1068  0010C4  0E12               	movlw	low setDate@Register
  1069  0010C6  2418               	addwf	setDate@timeReg,w,c
  1070  0010C8  6ED9               	movwf	fsr2l,c
  1071  0010CA  0E00               	movlw	high setDate@Register
  1072  0010CC  2019               	addwfc	setDate@timeReg+1,w,c
  1073  0010CE  6EDA               	movwf	fsr2h,c
  1074  0010D0  50DF               	movf	indf2,w,c
  1075  0010D2  EC09  F00C         	call	_PCF8523_write
  1076                           
  1077                           ;RTC_PCF8523.c: 49: break;
  1078  0010D6  D024               	goto	l592
  1079  0010D8  C011  F009         	movff	setDate@year,decimalToBCD@DecValue
  1080  0010DC  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1081  0010DE  EC8B  F00B         	call	_decimalToBCD	;wreg free
  1082  0010E2  0B7F               	andlw	127
  1083  0010E4  6E0D               	movwf	PCF8523_write@data,c
  1084  0010E6  0E12               	movlw	low setDate@Register
  1085  0010E8  2418               	addwf	setDate@timeReg,w,c
  1086  0010EA  6ED9               	movwf	fsr2l,c
  1087  0010EC  0E00               	movlw	high setDate@Register
  1088  0010EE  2019               	addwfc	setDate@timeReg+1,w,c
  1089  0010F0  6EDA               	movwf	fsr2h,c
  1090  0010F2  50DF               	movf	indf2,w,c
  1091  0010F4  EC09  F00C         	call	_PCF8523_write
  1092                           
  1093                           ;RTC_PCF8523.c: 52: }
  1094                           
  1095                           ;RTC_PCF8523.c: 51: break;
  1096  0010F8  D013               	goto	l592
  1097  0010FA                     l590:
  1098  0010FA  0E12               	movlw	low setDate@Register
  1099  0010FC  2418               	addwf	setDate@timeReg,w,c
  1100  0010FE  6ED9               	movwf	fsr2l,c
  1101  001100  0E00               	movlw	high setDate@Register
  1102  001102  2019               	addwfc	setDate@timeReg+1,w,c
  1103  001104  6EDA               	movwf	fsr2h,c
  1104  001106  50DF               	movf	indf2,w,c
  1105                           
  1106                           ; Switch size 1, requested type "space"
  1107                           ; Number of cases is 4, Range of values is 6 to 9
  1108                           ; switch strategies available:
  1109                           ; Name         Instructions Cycles
  1110                           ; simple_byte           13     7 (average)
  1111                           ;	Chosen strategy is simple_byte
  1112  001108  0A06               	xorlw	6	; case 6
  1113  00110A  B4D8               	btfsc	status,2,c
  1114  00110C  D7B2               	goto	l591
  1115  00110E  0A01               	xorlw	1	; case 7
  1116  001110  B4D8               	btfsc	status,2,c
  1117  001112  D7C0               	goto	l593
  1118  001114  0A0F               	xorlw	15	; case 8
  1119  001116  B4D8               	btfsc	status,2,c
  1120  001118  D7CE               	goto	l594
  1121  00111A  0A01               	xorlw	1	; case 9
  1122  00111C  B4D8               	btfsc	status,2,c
  1123  00111E  D7DC               	goto	l595
  1124  001120                     l592:
  1125  001120  4A18               	infsnz	setDate@timeReg,f,c
  1126  001122  2A19               	incf	setDate@timeReg+1,f,c
  1127  001124  D79D               	goto	l2458
  1128  001126                     l596:
  1129  001126  0012               	return		;funcret
  1130  001128                     __end_of_setDate:
  1131                           	opt stack 0
  1132                           tblptru	equ	0xFF8
  1133                           tblptrh	equ	0xFF7
  1134                           tblptrl	equ	0xFF6
  1135                           tablat	equ	0xFF5
  1136                           postinc0	equ	0xFEE
  1137                           wreg	equ	0xFE8
  1138                           postdec1	equ	0xFE5
  1139                           plusw1	equ	0xFE3
  1140                           fsr1h	equ	0xFE2
  1141                           fsr1l	equ	0xFE1
  1142                           indf2	equ	0xFDF
  1143                           postinc2	equ	0xFDE
  1144                           plusw2	equ	0xFDB
  1145                           fsr2h	equ	0xFDA
  1146                           fsr2l	equ	0xFD9
  1147                           status	equ	0xFD8
  1148                           
  1149 ;; *************** function _decimalToBCD *****************
  1150 ;; Defined at:
  1151 ;;		line 95 in file "RTC_PCF8523.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  DecValue        2    8[COMRAM] int 
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;		None
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      unsigned char 
  1158 ;; Registers used:
  1159 ;;		wreg, status,2, status,0, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1165 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1167 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1168 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1169 ;;Total ram usage:        4 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; Hardware stack levels required when called:    1
  1172 ;; This function calls:
  1173 ;;		___awdiv
  1174 ;;		___awmod
  1175 ;; This function is called by:
  1176 ;;		_setTime
  1177 ;;		_setDate
  1178 ;;		_setAlarm
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text3
  1183  001716                     __ptext3:
  1184                           	opt stack 0
  1185  001716                     _decimalToBCD:
  1186                           	opt stack 28
  1187                           
  1188                           ;RTC_PCF8523.c: 96: return (((DecValue / 10) << 4) | (DecValue % 10));
  1189                           
  1190                           ;incstack = 0
  1191  001716  C009  F001         	movff	decimalToBCD@DecValue,___awmod@dividend
  1192  00171A  C00A  F002         	movff	decimalToBCD@DecValue+1,___awmod@dividend+1
  1193  00171E  0E00               	movlw	0
  1194  001720  6E04               	movwf	___awmod@divisor+1,c
  1195  001722  0E0A               	movlw	10
  1196  001724  6E03               	movwf	___awmod@divisor,c
  1197  001726  EC1B  F00A         	call	___awmod	;wreg free
  1198  00172A  C001  F00B         	movff	?___awmod,??_decimalToBCD
  1199  00172E  C002  F00C         	movff	?___awmod+1,??_decimalToBCD+1
  1200  001732  C009  F001         	movff	decimalToBCD@DecValue,___awdiv@dividend
  1201  001736  C00A  F002         	movff	decimalToBCD@DecValue+1,___awdiv@dividend+1
  1202  00173A  0E00               	movlw	0
  1203  00173C  6E04               	movwf	___awdiv@divisor+1,c
  1204  00173E  0E0A               	movlw	10
  1205  001740  6E03               	movwf	___awdiv@divisor,c
  1206  001742  ECD9  F009         	call	___awdiv	;wreg free
  1207  001746  3801               	swapf	?___awdiv,w,c
  1208  001748  0BF0               	andlw	240
  1209  00174A  100B               	iorwf	??_decimalToBCD,w,c
  1210  00174C  0012               	return	
  1211  00174E                     __end_of_decimalToBCD:
  1212                           	opt stack 0
  1213                           tblptru	equ	0xFF8
  1214                           tblptrh	equ	0xFF7
  1215                           tblptrl	equ	0xFF6
  1216                           tablat	equ	0xFF5
  1217                           postinc0	equ	0xFEE
  1218                           wreg	equ	0xFE8
  1219                           postdec1	equ	0xFE5
  1220                           plusw1	equ	0xFE3
  1221                           fsr1h	equ	0xFE2
  1222                           fsr1l	equ	0xFE1
  1223                           indf2	equ	0xFDF
  1224                           postinc2	equ	0xFDE
  1225                           plusw2	equ	0xFDB
  1226                           fsr2h	equ	0xFDA
  1227                           fsr2l	equ	0xFD9
  1228                           status	equ	0xFD8
  1229                           
  1230 ;; *************** function ___awmod *****************
  1231 ;; Defined at:
  1232 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;  dividend        2    0[COMRAM] int 
  1235 ;;  divisor         2    2[COMRAM] int 
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;  sign            1    5[COMRAM] unsigned char 
  1238 ;;  counter         1    4[COMRAM] unsigned char 
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  2    0[COMRAM] int 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1248 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1249 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1251 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1252 ;;Total ram usage:        6 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; This function calls:
  1255 ;;		Nothing
  1256 ;; This function is called by:
  1257 ;;		_decimalToBCD
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text4
  1262  001436                     __ptext4:
  1263                           	opt stack 0
  1264  001436                     ___awmod:
  1265                           	opt stack 28
  1266                           
  1267                           ;incstack = 0
  1268  001436  0E00               	movlw	0
  1269  001438  6E06               	movwf	___awmod@sign,c
  1270  00143A  AE02               	btfss	___awmod@dividend+1,7,c
  1271  00143C  D006               	goto	l802
  1272  00143E  6C01               	negf	___awmod@dividend,c
  1273  001440  1E02               	comf	___awmod@dividend+1,f,c
  1274  001442  B0D8               	btfsc	status,0,c
  1275  001444  2A02               	incf	___awmod@dividend+1,f,c
  1276  001446  0E01               	movlw	1
  1277  001448  6E06               	movwf	___awmod@sign,c
  1278  00144A                     l802:
  1279  00144A  AE04               	btfss	___awmod@divisor+1,7,c
  1280  00144C  D004               	goto	l803
  1281  00144E  6C03               	negf	___awmod@divisor,c
  1282  001450  1E04               	comf	___awmod@divisor+1,f,c
  1283  001452  B0D8               	btfsc	status,0,c
  1284  001454  2A04               	incf	___awmod@divisor+1,f,c
  1285  001456                     l803:
  1286  001456  5003               	movf	___awmod@divisor,w,c
  1287  001458  1004               	iorwf	___awmod@divisor+1,w,c
  1288  00145A  B4D8               	btfsc	status,2,c
  1289  00145C  D018               	goto	l810
  1290  00145E  0E01               	movlw	1
  1291  001460  6E05               	movwf	___awmod@counter,c
  1292  001462  D004               	goto	l805
  1293  001464  90D8               	bcf	status,0,c
  1294  001466  3603               	rlcf	___awmod@divisor,f,c
  1295  001468  3604               	rlcf	___awmod@divisor+1,f,c
  1296  00146A  2A05               	incf	___awmod@counter,f,c
  1297  00146C                     l805:
  1298  00146C  AE04               	btfss	___awmod@divisor+1,7,c
  1299  00146E  D7FA               	goto	l806
  1300  001470                     u1130:
  1301  001470  5003               	movf	___awmod@divisor,w,c
  1302  001472  5C01               	subwf	___awmod@dividend,w,c
  1303  001474  5004               	movf	___awmod@divisor+1,w,c
  1304  001476  5802               	subwfb	___awmod@dividend+1,w,c
  1305  001478  A0D8               	btfss	status,0,c
  1306  00147A  D004               	goto	l809
  1307  00147C  5003               	movf	___awmod@divisor,w,c
  1308  00147E  5E01               	subwf	___awmod@dividend,f,c
  1309  001480  5004               	movf	___awmod@divisor+1,w,c
  1310  001482  5A02               	subwfb	___awmod@dividend+1,f,c
  1311  001484                     l809:
  1312  001484  90D8               	bcf	status,0,c
  1313  001486  3204               	rrcf	___awmod@divisor+1,f,c
  1314  001488  3203               	rrcf	___awmod@divisor,f,c
  1315  00148A  2E05               	decfsz	___awmod@counter,f,c
  1316  00148C  D7F1               	goto	u1130
  1317  00148E                     l810:
  1318  00148E  5006               	movf	___awmod@sign,w,c
  1319  001490  B4D8               	btfsc	status,2,c
  1320  001492  D004               	goto	l811
  1321  001494  6C01               	negf	___awmod@dividend,c
  1322  001496  1E02               	comf	___awmod@dividend+1,f,c
  1323  001498  B0D8               	btfsc	status,0,c
  1324  00149A  2A02               	incf	___awmod@dividend+1,f,c
  1325  00149C                     l811:
  1326  00149C  C001  F001         	movff	___awmod@dividend,?___awmod
  1327  0014A0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1328  0014A4  0012               	return	
  1329  0014A6                     __end_of___awmod:
  1330                           	opt stack 0
  1331                           tblptru	equ	0xFF8
  1332                           tblptrh	equ	0xFF7
  1333                           tblptrl	equ	0xFF6
  1334                           tablat	equ	0xFF5
  1335                           postinc0	equ	0xFEE
  1336                           wreg	equ	0xFE8
  1337                           postdec1	equ	0xFE5
  1338                           plusw1	equ	0xFE3
  1339                           fsr1h	equ	0xFE2
  1340                           fsr1l	equ	0xFE1
  1341                           indf2	equ	0xFDF
  1342                           postinc2	equ	0xFDE
  1343                           plusw2	equ	0xFDB
  1344                           fsr2h	equ	0xFDA
  1345                           fsr2l	equ	0xFD9
  1346                           status	equ	0xFD8
  1347                           
  1348 ;; *************** function ___awdiv *****************
  1349 ;; Defined at:
  1350 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;  dividend        2    0[COMRAM] int 
  1353 ;;  divisor         2    2[COMRAM] int 
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;  quotient        2    6[COMRAM] int 
  1356 ;;  sign            1    5[COMRAM] unsigned char 
  1357 ;;  counter         1    4[COMRAM] unsigned char 
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  2    0[COMRAM] int 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1368 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1371 ;;Total ram usage:        8 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_decimalToBCD
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text5
  1381  0013B2                     __ptext5:
  1382                           	opt stack 0
  1383  0013B2                     ___awdiv:
  1384                           	opt stack 28
  1385                           
  1386                           ;incstack = 0
  1387  0013B2  0E00               	movlw	0
  1388  0013B4  6E06               	movwf	___awdiv@sign,c
  1389  0013B6  AE04               	btfss	___awdiv@divisor+1,7,c
  1390  0013B8  D006               	goto	l789
  1391  0013BA  6C03               	negf	___awdiv@divisor,c
  1392  0013BC  1E04               	comf	___awdiv@divisor+1,f,c
  1393  0013BE  B0D8               	btfsc	status,0,c
  1394  0013C0  2A04               	incf	___awdiv@divisor+1,f,c
  1395  0013C2  0E01               	movlw	1
  1396  0013C4  6E06               	movwf	___awdiv@sign,c
  1397  0013C6                     l789:
  1398  0013C6  AE02               	btfss	___awdiv@dividend+1,7,c
  1399  0013C8  D006               	goto	l790
  1400  0013CA  6C01               	negf	___awdiv@dividend,c
  1401  0013CC  1E02               	comf	___awdiv@dividend+1,f,c
  1402  0013CE  B0D8               	btfsc	status,0,c
  1403  0013D0  2A02               	incf	___awdiv@dividend+1,f,c
  1404  0013D2  0E01               	movlw	1
  1405  0013D4  1A06               	xorwf	___awdiv@sign,f,c
  1406  0013D6                     l790:
  1407  0013D6  0E00               	movlw	0
  1408  0013D8  6E08               	movwf	___awdiv@quotient+1,c
  1409  0013DA  0E00               	movlw	0
  1410  0013DC  6E07               	movwf	___awdiv@quotient,c
  1411  0013DE  5003               	movf	___awdiv@divisor,w,c
  1412  0013E0  1004               	iorwf	___awdiv@divisor+1,w,c
  1413  0013E2  B4D8               	btfsc	status,2,c
  1414  0013E4  D01C               	goto	l797
  1415  0013E6  0E01               	movlw	1
  1416  0013E8  6E05               	movwf	___awdiv@counter,c
  1417  0013EA  D004               	goto	l792
  1418  0013EC  90D8               	bcf	status,0,c
  1419  0013EE  3603               	rlcf	___awdiv@divisor,f,c
  1420  0013F0  3604               	rlcf	___awdiv@divisor+1,f,c
  1421  0013F2  2A05               	incf	___awdiv@counter,f,c
  1422  0013F4                     l792:
  1423  0013F4  AE04               	btfss	___awdiv@divisor+1,7,c
  1424  0013F6  D7FA               	goto	l793
  1425  0013F8                     u1070:
  1426  0013F8  90D8               	bcf	status,0,c
  1427  0013FA  3607               	rlcf	___awdiv@quotient,f,c
  1428  0013FC  3608               	rlcf	___awdiv@quotient+1,f,c
  1429  0013FE  5003               	movf	___awdiv@divisor,w,c
  1430  001400  5C01               	subwf	___awdiv@dividend,w,c
  1431  001402  5004               	movf	___awdiv@divisor+1,w,c
  1432  001404  5802               	subwfb	___awdiv@dividend+1,w,c
  1433  001406  A0D8               	btfss	status,0,c
  1434  001408  D005               	goto	l796
  1435  00140A  5003               	movf	___awdiv@divisor,w,c
  1436  00140C  5E01               	subwf	___awdiv@dividend,f,c
  1437  00140E  5004               	movf	___awdiv@divisor+1,w,c
  1438  001410  5A02               	subwfb	___awdiv@dividend+1,f,c
  1439  001412  8007               	bsf	___awdiv@quotient,0,c
  1440  001414                     l796:
  1441  001414  90D8               	bcf	status,0,c
  1442  001416  3204               	rrcf	___awdiv@divisor+1,f,c
  1443  001418  3203               	rrcf	___awdiv@divisor,f,c
  1444  00141A  2E05               	decfsz	___awdiv@counter,f,c
  1445  00141C  D7ED               	goto	u1070
  1446  00141E                     l797:
  1447  00141E  5006               	movf	___awdiv@sign,w,c
  1448  001420  B4D8               	btfsc	status,2,c
  1449  001422  D004               	goto	l798
  1450  001424  6C07               	negf	___awdiv@quotient,c
  1451  001426  1E08               	comf	___awdiv@quotient+1,f,c
  1452  001428  B0D8               	btfsc	status,0,c
  1453  00142A  2A08               	incf	___awdiv@quotient+1,f,c
  1454  00142C                     l798:
  1455  00142C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1456  001430  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1457  001434  0012               	return	
  1458  001436                     __end_of___awdiv:
  1459                           	opt stack 0
  1460                           tblptru	equ	0xFF8
  1461                           tblptrh	equ	0xFF7
  1462                           tblptrl	equ	0xFF6
  1463                           tablat	equ	0xFF5
  1464                           postinc0	equ	0xFEE
  1465                           wreg	equ	0xFE8
  1466                           postdec1	equ	0xFE5
  1467                           plusw1	equ	0xFE3
  1468                           fsr1h	equ	0xFE2
  1469                           fsr1l	equ	0xFE1
  1470                           indf2	equ	0xFDF
  1471                           postinc2	equ	0xFDE
  1472                           plusw2	equ	0xFDB
  1473                           fsr2h	equ	0xFDA
  1474                           fsr2l	equ	0xFD9
  1475                           status	equ	0xFD8
  1476                           
  1477 ;; *************** function _rtc_INTF_CLR *****************
  1478 ;; Defined at:
  1479 ;;		line 89 in file "RTC_PCF8523.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;  interruptFla    2   14[COMRAM] int 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  2   14[COMRAM] int 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1493 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1495 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1496 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1497 ;;Total ram usage:        3 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    3
  1500 ;; This function calls:
  1501 ;;		_PCF8523_write
  1502 ;; This function is called by:
  1503 ;;		_main
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text6
  1508  001830                     __ptext6:
  1509                           	opt stack 0
  1510  001830                     _rtc_INTF_CLR:
  1511                           	opt stack 27
  1512                           
  1513                           ;RTC_PCF8523.c: 90: PCF8523_write(0x01, interruptFlag);
  1514                           
  1515                           ;incstack = 0
  1516  001830  C00F  F00D         	movff	rtc_INTF_CLR@interruptFlag,PCF8523_write@data
  1517  001834  0E01               	movlw	1
  1518  001836  EC09  F00C         	call	_PCF8523_write
  1519                           
  1520                           ;RTC_PCF8523.c: 91: _delay((unsigned long)((5)*(16000000/4000.0)));
  1521  00183A  0E1A               	movlw	26
  1522  00183C  6E11               	movwf	??_rtc_INTF_CLR& (0+255),c
  1523  00183E  0EF8               	movlw	248
  1524  001840                     u1407:
  1525  001840  2EE8               	decfsz	wreg,f,c
  1526  001842  D7FE               	bra	u1407
  1527  001844  2E11               	decfsz	??_rtc_INTF_CLR& (0+255),f,c
  1528  001846  D7FC               	bra	u1407
  1529  001848  D000               	nop2	
  1530  00184A  0012               	return	
  1531  00184C                     __end_of_rtc_INTF_CLR:
  1532                           	opt stack 0
  1533                           tblptru	equ	0xFF8
  1534                           tblptrh	equ	0xFF7
  1535                           tblptrl	equ	0xFF6
  1536                           tablat	equ	0xFF5
  1537                           postinc0	equ	0xFEE
  1538                           wreg	equ	0xFE8
  1539                           postdec1	equ	0xFE5
  1540                           plusw1	equ	0xFE3
  1541                           fsr1h	equ	0xFE2
  1542                           fsr1l	equ	0xFE1
  1543                           indf2	equ	0xFDF
  1544                           postinc2	equ	0xFDE
  1545                           plusw2	equ	0xFDB
  1546                           fsr2h	equ	0xFDA
  1547                           fsr2l	equ	0xFD9
  1548                           status	equ	0xFD8
  1549                           
  1550 ;; *************** function _rtcRead *****************
  1551 ;; Defined at:
  1552 ;;		line 69 in file "RTC_PCF8523.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  address         1    wreg     unsigned char 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  address         1    6[COMRAM] unsigned char 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      unsigned char 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1569 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1570 ;;Total ram usage:        1 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; Hardware stack levels required when called:    2
  1573 ;; This function calls:
  1574 ;;		_BCDtoDecimal
  1575 ;;		_I2C_Write
  1576 ;;		_I2C_read
  1577 ;;		_I2C_start
  1578 ;;		_I2C_stop
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text7
  1585  0016DA                     __ptext7:
  1586                           	opt stack 0
  1587  0016DA                     _rtcRead:
  1588                           	opt stack 28
  1589                           
  1590                           ;incstack = 0
  1591                           ;rtcRead@address stored from wreg
  1592  0016DA  6E07               	movwf	rtcRead@address,c
  1593                           
  1594                           ;RTC_PCF8523.c: 70: I2C_start();
  1595  0016DC  EC74  F00C         	call	_I2C_start	;wreg free
  1596                           
  1597                           ;RTC_PCF8523.c: 71: I2C_Write(0xD0);
  1598  0016E0  0ED0               	movlw	208
  1599  0016E2  EC26  F00C         	call	_I2C_Write
  1600                           
  1601                           ;RTC_PCF8523.c: 72: I2C_Write(address);
  1602  0016E6  5007               	movf	rtcRead@address,w,c
  1603  0016E8  EC26  F00C         	call	_I2C_Write
  1604                           
  1605                           ;RTC_PCF8523.c: 73: I2C_stop();
  1606  0016EC  EC79  F00C         	call	_I2C_stop	;wreg free
  1607                           
  1608                           ;RTC_PCF8523.c: 74: I2C_start();
  1609  0016F0  EC74  F00C         	call	_I2C_start	;wreg free
  1610                           
  1611                           ;RTC_PCF8523.c: 75: I2C_Write(0xD0|0x01);
  1612  0016F4  0ED1               	movlw	209
  1613  0016F6  EC26  F00C         	call	_I2C_Write
  1614                           
  1615                           ;RTC_PCF8523.c: 76: I2C_read(1);
  1616  0016FA  0E00               	movlw	0
  1617  0016FC  6E02               	movwf	I2C_read@ACK_NACK+1,c
  1618  0016FE  0E01               	movlw	1
  1619  001700  6E01               	movwf	I2C_read@ACK_NACK,c
  1620  001702  EC3F  F00C         	call	_I2C_read	;wreg free
  1621                           
  1622                           ;RTC_PCF8523.c: 77: I2C_stop();
  1623  001706  EC79  F00C         	call	_I2C_stop	;wreg free
  1624                           
  1625                           ;RTC_PCF8523.c: 78: return BCDtoDecimal(SSP2BUF);
  1626  00170A  CF75 F001          	movff	3957,BCDtoDecimal@BCDvalue	;volatile
  1627  00170E  6A02               	clrf	BCDtoDecimal@BCDvalue+1,c
  1628  001710  ECD2  F00B         	call	_BCDtoDecimal	;wreg free
  1629  001714  0012               	return	
  1630  001716                     __end_of_rtcRead:
  1631                           	opt stack 0
  1632                           tblptru	equ	0xFF8
  1633                           tblptrh	equ	0xFF7
  1634                           tblptrl	equ	0xFF6
  1635                           tablat	equ	0xFF5
  1636                           postinc0	equ	0xFEE
  1637                           wreg	equ	0xFE8
  1638                           postdec1	equ	0xFE5
  1639                           plusw1	equ	0xFE3
  1640                           fsr1h	equ	0xFE2
  1641                           fsr1l	equ	0xFE1
  1642                           indf2	equ	0xFDF
  1643                           postinc2	equ	0xFDE
  1644                           plusw2	equ	0xFDB
  1645                           fsr2h	equ	0xFDA
  1646                           fsr2l	equ	0xFD9
  1647                           status	equ	0xFD8
  1648                           
  1649 ;; *************** function _I2C_read *****************
  1650 ;; Defined at:
  1651 ;;		line 42 in file "I2C.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  ACK_NACK        2    0[COMRAM] int 
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  2    0[COMRAM] int 
  1658 ;; Registers used:
  1659 ;;		None
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1669 ;;Total ram usage:        2 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_rtcRead
  1675 ;;		_MCP23008_read
  1676 ;;		_MCP9801_TempRead
  1677 ;;		_EEPROM_24AA512_Read
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text8
  1682  00187E                     __ptext8:
  1683                           	opt stack 0
  1684  00187E                     _I2C_read:
  1685                           	opt stack 29
  1686                           
  1687                           ;I2C.c: 43: SSP2CON2bits.RCEN = 1;
  1688                           
  1689                           ;incstack = 0
  1690  00187E  8671               	bsf	3953,3,c	;volatile
  1691  001880  A073               	btfss	3955,0,c	;volatile
  1692  001882  D7FE               	goto	l437
  1693                           
  1694                           ;I2C.c: 45: SSP2CON2bits.ACKDT = ACK_NACK;
  1695  001884  B001               	btfsc	I2C_read@ACK_NACK,0,c
  1696  001886  D002               	bra	u1255
  1697  001888  9A71               	bcf	3953,5,c	;volatile
  1698  00188A  D001               	bra	u1256
  1699  00188C                     u1255:
  1700  00188C  8A71               	bsf	3953,5,c	;volatile
  1701  00188E                     u1256:
  1702                           
  1703                           ;I2C.c: 46: while (SSP2CON2bits.ACKEN);
  1704  00188E  A871               	btfss	3953,4,c	;volatile
  1705  001890  0012               	return	
  1706  001892  D7FD               	goto	u1256
  1707  001894                     __end_of_I2C_read:
  1708                           	opt stack 0
  1709                           tblptru	equ	0xFF8
  1710                           tblptrh	equ	0xFF7
  1711                           tblptrl	equ	0xFF6
  1712                           tablat	equ	0xFF5
  1713                           postinc0	equ	0xFEE
  1714                           wreg	equ	0xFE8
  1715                           postdec1	equ	0xFE5
  1716                           plusw1	equ	0xFE3
  1717                           fsr1h	equ	0xFE2
  1718                           fsr1l	equ	0xFE1
  1719                           indf2	equ	0xFDF
  1720                           postinc2	equ	0xFDE
  1721                           plusw2	equ	0xFDB
  1722                           fsr2h	equ	0xFDA
  1723                           fsr2l	equ	0xFD9
  1724                           status	equ	0xFD8
  1725                           
  1726 ;; *************** function _BCDtoDecimal *****************
  1727 ;; Defined at:
  1728 ;;		line 99 in file "RTC_PCF8523.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  BCDvalue        2    0[COMRAM] int 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      unsigned char 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2, status,0, prodl, prodh
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1744 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1745 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1746 ;;Total ram usage:        6 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; This function calls:
  1749 ;;		Nothing
  1750 ;; This function is called by:
  1751 ;;		_rtcRead
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text9
  1756  0017A4                     __ptext9:
  1757                           	opt stack 0
  1758  0017A4                     _BCDtoDecimal:
  1759                           	opt stack 29
  1760                           
  1761                           ;RTC_PCF8523.c: 100: return (((BCDvalue >> 4)*10) + (BCDvalue & 0xF));
  1762                           
  1763                           ;incstack = 0
  1764  0017A4  C001  F003         	movff	BCDtoDecimal@BCDvalue,??_BCDtoDecimal
  1765  0017A8  0E0F               	movlw	15
  1766  0017AA  1603               	andwf	??_BCDtoDecimal,f,c
  1767  0017AC  C001  F004         	movff	BCDtoDecimal@BCDvalue,??_BCDtoDecimal+1
  1768  0017B0  C002  F005         	movff	BCDtoDecimal@BCDvalue+1,??_BCDtoDecimal+2
  1769  0017B4  0E04               	movlw	4
  1770  0017B6  6E06               	movwf	(??_BCDtoDecimal+3)& (0+255),c
  1771  0017B8                     u1275:
  1772  0017B8  3405               	rlcf	??_BCDtoDecimal+2,w,c
  1773  0017BA  3205               	rrcf	??_BCDtoDecimal+2,f,c
  1774  0017BC  3204               	rrcf	??_BCDtoDecimal+1,f,c
  1775  0017BE  2E06               	decfsz	(??_BCDtoDecimal+3)& (0+255),f,c
  1776  0017C0  D7FB               	goto	u1275
  1777  0017C2  5004               	movf	??_BCDtoDecimal+1,w,c
  1778  0017C4  0D0A               	mullw	10
  1779  0017C6  50F3               	movf	prodl,w,c
  1780  0017C8  2403               	addwf	??_BCDtoDecimal,w,c
  1781  0017CA  0012               	return	
  1782  0017CC                     __end_of_BCDtoDecimal:
  1783                           	opt stack 0
  1784                           tblptru	equ	0xFF8
  1785                           tblptrh	equ	0xFF7
  1786                           tblptrl	equ	0xFF6
  1787                           tablat	equ	0xFF5
  1788                           prodl	equ	0xFF3
  1789                           postinc0	equ	0xFEE
  1790                           wreg	equ	0xFE8
  1791                           postdec1	equ	0xFE5
  1792                           plusw1	equ	0xFE3
  1793                           fsr1h	equ	0xFE2
  1794                           fsr1l	equ	0xFE1
  1795                           indf2	equ	0xFDF
  1796                           postinc2	equ	0xFDE
  1797                           plusw2	equ	0xFDB
  1798                           fsr2h	equ	0xFDA
  1799                           fsr2l	equ	0xFD9
  1800                           status	equ	0xFD8
  1801                           
  1802 ;; *************** function _interrupt_Init *****************
  1803 ;; Defined at:
  1804 ;;		line 15 in file "Interrupt.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;		None
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		None
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1822 ;;Total ram usage:        0 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_main
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text10
  1832  0018C0                     __ptext10:
  1833                           	opt stack 0
  1834  0018C0                     _interrupt_Init:
  1835                           	opt stack 30
  1836                           
  1837                           ;Interrupt.c: 16: INTCONbits.GIE = 1;
  1838                           
  1839                           ;incstack = 0
  1840  0018C0  8EF2               	bsf	intcon,7,c	;volatile
  1841                           
  1842                           ;Interrupt.c: 17: INTCONbits.PEIE = 1;
  1843  0018C2  8CF2               	bsf	intcon,6,c	;volatile
  1844                           
  1845                           ;Interrupt.c: 18: PIE3bits.SSP2IE = 1;
  1846  0018C4  8EA3               	bsf	4003,7,c	;volatile
  1847                           
  1848                           ;Interrupt.c: 19: PIR3bits.SSP2IF = 0;
  1849  0018C6  9EA4               	bcf	4004,7,c	;volatile
  1850  0018C8  0012               	return		;funcret
  1851  0018CA                     __end_of_interrupt_Init:
  1852                           	opt stack 0
  1853                           tblptru	equ	0xFF8
  1854                           tblptrh	equ	0xFF7
  1855                           tblptrl	equ	0xFF6
  1856                           tablat	equ	0xFF5
  1857                           prodl	equ	0xFF3
  1858                           intcon	equ	0xFF2
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           postdec1	equ	0xFE5
  1862                           plusw1	equ	0xFE3
  1863                           fsr1h	equ	0xFE2
  1864                           fsr1l	equ	0xFE1
  1865                           indf2	equ	0xFDF
  1866                           postinc2	equ	0xFDE
  1867                           plusw2	equ	0xFDB
  1868                           fsr2h	equ	0xFDA
  1869                           fsr2l	equ	0xFD9
  1870                           status	equ	0xFD8
  1871                           
  1872 ;; *************** function _countDown *****************
  1873 ;; Defined at:
  1874 ;;		line 62 in file "RTC_PCF8523.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;  timeUnit        1    wreg     unsigned char 
  1877 ;;  time            1   14[COMRAM] unsigned char 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  timeUnit        1   15[COMRAM] unsigned char 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1889 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1892 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1893 ;;Total ram usage:        2 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    3
  1896 ;; This function calls:
  1897 ;;		_PCF8523_write
  1898 ;; This function is called by:
  1899 ;;		_main
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text11
  1904  00174E                     __ptext11:
  1905                           	opt stack 0
  1906  00174E                     _countDown:
  1907                           	opt stack 27
  1908                           
  1909                           ;incstack = 0
  1910                           ;countDown@timeUnit stored from wreg
  1911  00174E  6E10               	movwf	countDown@timeUnit,c
  1912                           
  1913                           ;RTC_PCF8523.c: 63: PCF8523_write(0x0F, 0xFA);
  1914  001750  0EFA               	movlw	250
  1915  001752  6E0D               	movwf	PCF8523_write@data,c
  1916  001754  0E0F               	movlw	15
  1917  001756  EC09  F00C         	call	_PCF8523_write
  1918                           
  1919                           ;RTC_PCF8523.c: 64: PCF8523_write(0x01, 0x02);
  1920  00175A  0E02               	movlw	2
  1921  00175C  6E0D               	movwf	PCF8523_write@data,c
  1922  00175E  0E01               	movlw	1
  1923  001760  EC09  F00C         	call	_PCF8523_write
  1924                           
  1925                           ;RTC_PCF8523.c: 65: PCF8523_write(0x10, timeUnit);
  1926  001764  C010  F00D         	movff	countDown@timeUnit,PCF8523_write@data
  1927  001768  0E10               	movlw	16
  1928  00176A  EC09  F00C         	call	_PCF8523_write
  1929                           
  1930                           ;RTC_PCF8523.c: 66: PCF8523_write(0x11, time);
  1931  00176E  C00F  F00D         	movff	countDown@time,PCF8523_write@data
  1932  001772  0E11               	movlw	17
  1933  001774  EC09  F00C         	call	_PCF8523_write
  1934  001778  0012               	return		;funcret
  1935  00177A                     __end_of_countDown:
  1936                           	opt stack 0
  1937                           tblptru	equ	0xFF8
  1938                           tblptrh	equ	0xFF7
  1939                           tblptrl	equ	0xFF6
  1940                           tablat	equ	0xFF5
  1941                           prodl	equ	0xFF3
  1942                           intcon	equ	0xFF2
  1943                           postinc0	equ	0xFEE
  1944                           wreg	equ	0xFE8
  1945                           postdec1	equ	0xFE5
  1946                           plusw1	equ	0xFE3
  1947                           fsr1h	equ	0xFE2
  1948                           fsr1l	equ	0xFE1
  1949                           indf2	equ	0xFDF
  1950                           postinc2	equ	0xFDE
  1951                           plusw2	equ	0xFDB
  1952                           fsr2h	equ	0xFDA
  1953                           fsr2l	equ	0xFD9
  1954                           status	equ	0xFD8
  1955                           
  1956 ;; *************** function _SYSTEM_Initialize *****************
  1957 ;; Defined at:
  1958 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1976 ;;Total ram usage:        0 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    2
  1979 ;; This function calls:
  1980 ;;		_EUSART1_Initialize
  1981 ;;		_I2C_Init
  1982 ;;		_OSCILLATOR_Initialize
  1983 ;;		_PIN_MANAGER_Initialize
  1984 ;;		_SPI1_Initialize
  1985 ;; This function is called by:
  1986 ;;		_main
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text12
  1991  001866                     __ptext12:
  1992                           	opt stack 0
  1993  001866                     _SYSTEM_Initialize:
  1994                           	opt stack 28
  1995                           
  1996                           ;mcc.c: 52: PIN_MANAGER_Initialize();
  1997                           
  1998                           ;incstack = 0
  1999  001866  ECCB  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
  2000                           
  2001                           ;mcc.c: 53: OSCILLATOR_Initialize();
  2002  00186A  ECBD  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  2003                           
  2004                           ;mcc.c: 54: SPI1_Initialize();
  2005  00186E  EC52  F00C         	call	_SPI1_Initialize	;wreg free
  2006                           
  2007                           ;mcc.c: 55: EUSART1_Initialize();
  2008  001872  EC2F  F00B         	call	_EUSART1_Initialize	;wreg free
  2009                           
  2010                           ;mcc.c: 56: I2C_Init(100);
  2011  001876  0E64               	movlw	100
  2012  001878  EC53  F00A         	call	_I2C_Init
  2013  00187C  0012               	return		;funcret
  2014  00187E                     __end_of_SYSTEM_Initialize:
  2015                           	opt stack 0
  2016                           tblptru	equ	0xFF8
  2017                           tblptrh	equ	0xFF7
  2018                           tblptrl	equ	0xFF6
  2019                           tablat	equ	0xFF5
  2020                           prodl	equ	0xFF3
  2021                           intcon	equ	0xFF2
  2022                           postinc0	equ	0xFEE
  2023                           wreg	equ	0xFE8
  2024                           postdec1	equ	0xFE5
  2025                           plusw1	equ	0xFE3
  2026                           fsr1h	equ	0xFE2
  2027                           fsr1l	equ	0xFE1
  2028                           indf2	equ	0xFDF
  2029                           postinc2	equ	0xFDE
  2030                           plusw2	equ	0xFDB
  2031                           fsr2h	equ	0xFDA
  2032                           fsr2l	equ	0xFD9
  2033                           status	equ	0xFD8
  2034                           
  2035 ;; *************** function _SPI1_Initialize *****************
  2036 ;; Defined at:
  2037 ;;		line 65 in file "mcc_generated_files/spi1.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;		None
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;		None
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2055 ;;Total ram usage:        0 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; This function calls:
  2058 ;;		Nothing
  2059 ;; This function is called by:
  2060 ;;		_SYSTEM_Initialize
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text13
  2065  0018A4                     __ptext13:
  2066                           	opt stack 0
  2067  0018A4                     _SPI1_Initialize:
  2068                           	opt stack 29
  2069                           
  2070                           ;spi1.c: 70: SSP1STAT = 0x80;
  2071                           
  2072                           ;incstack = 0
  2073  0018A4  0E80               	movlw	128
  2074  0018A6  6EC7               	movwf	4039,c	;volatile
  2075                           
  2076                           ;spi1.c: 73: SSP1CON1 = 0x20;
  2077  0018A8  0E20               	movlw	32
  2078  0018AA  6EC6               	movwf	4038,c	;volatile
  2079                           
  2080                           ;spi1.c: 76: SSP1ADD = 0x00;
  2081  0018AC  0E00               	movlw	0
  2082  0018AE  6EC8               	movwf	4040,c	;volatile
  2083  0018B0  0012               	return		;funcret
  2084  0018B2                     __end_of_SPI1_Initialize:
  2085                           	opt stack 0
  2086                           tblptru	equ	0xFF8
  2087                           tblptrh	equ	0xFF7
  2088                           tblptrl	equ	0xFF6
  2089                           tablat	equ	0xFF5
  2090                           prodl	equ	0xFF3
  2091                           intcon	equ	0xFF2
  2092                           postinc0	equ	0xFEE
  2093                           wreg	equ	0xFE8
  2094                           postdec1	equ	0xFE5
  2095                           plusw1	equ	0xFE3
  2096                           fsr1h	equ	0xFE2
  2097                           fsr1l	equ	0xFE1
  2098                           indf2	equ	0xFDF
  2099                           postinc2	equ	0xFDE
  2100                           plusw2	equ	0xFDB
  2101                           fsr2h	equ	0xFDA
  2102                           fsr2l	equ	0xFD9
  2103                           status	equ	0xFD8
  2104                           
  2105 ;; *************** function _PIN_MANAGER_Initialize *****************
  2106 ;; Defined at:
  2107 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;		None
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;		None
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		wreg, status,2
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2125 ;;Total ram usage:        0 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; This function calls:
  2128 ;;		Nothing
  2129 ;; This function is called by:
  2130 ;;		_SYSTEM_Initialize
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text14
  2135  001596                     __ptext14:
  2136                           	opt stack 0
  2137  001596                     _PIN_MANAGER_Initialize:
  2138                           	opt stack 29
  2139                           
  2140                           ;pin_manager.c: 57: LATE = 0x00;
  2141                           
  2142                           ;incstack = 0
  2143  001596  0E00               	movlw	0
  2144  001598  6E8D               	movwf	3981,c	;volatile
  2145                           
  2146                           ;pin_manager.c: 58: LATD = 0x00;
  2147  00159A  0E00               	movlw	0
  2148  00159C  6E8C               	movwf	3980,c	;volatile
  2149                           
  2150                           ;pin_manager.c: 59: LATA = 0x00;
  2151  00159E  0E00               	movlw	0
  2152  0015A0  6E89               	movwf	3977,c	;volatile
  2153                           
  2154                           ;pin_manager.c: 60: LATB = 0x00;
  2155  0015A2  0E00               	movlw	0
  2156  0015A4  6E8A               	movwf	3978,c	;volatile
  2157                           
  2158                           ;pin_manager.c: 61: LATC = 0x01;
  2159  0015A6  0E01               	movlw	1
  2160  0015A8  6E8B               	movwf	3979,c	;volatile
  2161                           
  2162                           ;pin_manager.c: 66: TRISE = 0xC7;
  2163  0015AA  0EC7               	movlw	199
  2164  0015AC  6E96               	movwf	3990,c	;volatile
  2165                           
  2166                           ;pin_manager.c: 67: TRISA = 0xEF;
  2167  0015AE  0EEF               	movlw	239
  2168  0015B0  6E92               	movwf	3986,c	;volatile
  2169                           
  2170                           ;pin_manager.c: 68: TRISB = 0xDF;
  2171  0015B2  0EDF               	movlw	223
  2172  0015B4  6E93               	movwf	3987,c	;volatile
  2173                           
  2174                           ;pin_manager.c: 69: TRISC = 0x96;
  2175  0015B6  0E96               	movlw	150
  2176  0015B8  6E94               	movwf	3988,c	;volatile
  2177                           
  2178                           ;pin_manager.c: 70: TRISD = 0xFF;
  2179  0015BA  6895               	setf	3989,c	;volatile
  2180                           
  2181                           ;pin_manager.c: 75: ANCON0 = 0x00;
  2182  0015BC  0E00               	movlw	0
  2183  0015BE  010F               	movlb	15	; () banked
  2184  0015C0  6F48               	movwf	72,b	;volatile
  2185                           
  2186                           ;pin_manager.c: 76: ANCON1 = 0x10;
  2187  0015C2  0E10               	movlw	16
  2188  0015C4  6F49               	movwf	73,b	;volatile
  2189                           
  2190                           ; BSR set to: 15
  2191                           ;pin_manager.c: 81: INTCON2bits.nRBPU = 1;
  2192  0015C6  8EF1               	bsf	intcon2,7,c	;volatile
  2193                           
  2194                           ; BSR set to: 15
  2195                           ;pin_manager.c: 82: TRISEbits.RDPU = 1;
  2196  0015C8  8E96               	bsf	3990,7,c	;volatile
  2197                           
  2198                           ; BSR set to: 15
  2199                           ;pin_manager.c: 83: TRISEbits.REPU = 1;
  2200  0015CA  8C96               	bsf	3990,6,c	;volatile
  2201                           
  2202                           ;pin_manager.c: 88: ODCON1 = 0x00;
  2203  0015CC  0E00               	movlw	0
  2204  0015CE  6F42               	movwf	66,b	;volatile
  2205                           
  2206                           ;pin_manager.c: 89: ODCON2 = 0x00;
  2207  0015D0  0E00               	movlw	0
  2208  0015D2  6F41               	movwf	65,b	;volatile
  2209                           
  2210                           ;pin_manager.c: 90: ODCON3 = 0x00;
  2211  0015D4  0E00               	movlw	0
  2212  0015D6  6F40               	movwf	64,b	;volatile
  2213                           
  2214                           ; BSR set to: 15
  2215  0015D8  0012               	return		;funcret
  2216  0015DA                     __end_of_PIN_MANAGER_Initialize:
  2217                           	opt stack 0
  2218                           tblptru	equ	0xFF8
  2219                           tblptrh	equ	0xFF7
  2220                           tblptrl	equ	0xFF6
  2221                           tablat	equ	0xFF5
  2222                           prodl	equ	0xFF3
  2223                           intcon	equ	0xFF2
  2224                           intcon2	equ	0xFF1
  2225                           postinc0	equ	0xFEE
  2226                           wreg	equ	0xFE8
  2227                           postdec1	equ	0xFE5
  2228                           plusw1	equ	0xFE3
  2229                           fsr1h	equ	0xFE2
  2230                           fsr1l	equ	0xFE1
  2231                           indf2	equ	0xFDF
  2232                           postinc2	equ	0xFDE
  2233                           plusw2	equ	0xFDB
  2234                           fsr2h	equ	0xFDA
  2235                           fsr2l	equ	0xFD9
  2236                           status	equ	0xFD8
  2237                           
  2238 ;; *************** function _OSCILLATOR_Initialize *****************
  2239 ;; Defined at:
  2240 ;;		line 59 in file "mcc_generated_files/mcc.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, status,2
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2256 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2257 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2258 ;;Total ram usage:        2 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; This function calls:
  2261 ;;		Nothing
  2262 ;; This function is called by:
  2263 ;;		_SYSTEM_Initialize
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           	psect	text15
  2268  00177A                     __ptext15:
  2269                           	opt stack 0
  2270  00177A                     _OSCILLATOR_Initialize:
  2271                           	opt stack 29
  2272                           
  2273                           ;mcc.c: 62: OSCCON = 0x70;
  2274                           
  2275                           ; BSR set to: 15
  2276                           ;incstack = 0
  2277  00177A  0E70               	movlw	112
  2278  00177C  6ED3               	movwf	4051,c	;volatile
  2279                           
  2280                           ;mcc.c: 64: OSCTUNE = 0x00;
  2281  00177E  0E00               	movlw	0
  2282  001780  6E9B               	movwf	3995,c	;volatile
  2283                           
  2284                           ;mcc.c: 66: REFOCON = 0x00;
  2285  001782  0E00               	movlw	0
  2286  001784  010F               	movlb	15	; () banked
  2287  001786  6F3D               	movwf	61,b	;volatile
  2288                           
  2289                           ;mcc.c: 68: OSCCON2 = 0x14;
  2290  001788  0E14               	movlw	20
  2291  00178A  6E87               	movwf	3975,c	;volatile
  2292                           
  2293                           ; BSR set to: 15
  2294                           ;mcc.c: 69: _delay((unsigned long)((500)*(16000000/4000.0)));
  2295  00178C  0E0B               	movlw	11
  2296  00178E  6E02               	movwf	(??_OSCILLATOR_Initialize+1)& (0+255),c
  2297  001790  0E26               	movlw	38
  2298  001792  6E01               	movwf	??_OSCILLATOR_Initialize& (0+255),c
  2299  001794  0E5E               	movlw	94
  2300  001796                     u1417:
  2301  001796  2EE8               	decfsz	wreg,f,c
  2302  001798  D7FE               	bra	u1417
  2303  00179A  2E01               	decfsz	??_OSCILLATOR_Initialize& (0+255),f,c
  2304  00179C  D7FC               	bra	u1417
  2305  00179E  2E02               	decfsz	(??_OSCILLATOR_Initialize+1)& (0+255),f,c
  2306  0017A0  D7FA               	bra	u1417
  2307  0017A2  0012               	return		;funcret
  2308  0017A4                     __end_of_OSCILLATOR_Initialize:
  2309                           	opt stack 0
  2310                           tblptru	equ	0xFF8
  2311                           tblptrh	equ	0xFF7
  2312                           tblptrl	equ	0xFF6
  2313                           tablat	equ	0xFF5
  2314                           prodl	equ	0xFF3
  2315                           intcon	equ	0xFF2
  2316                           intcon2	equ	0xFF1
  2317                           postinc0	equ	0xFEE
  2318                           wreg	equ	0xFE8
  2319                           postdec1	equ	0xFE5
  2320                           plusw1	equ	0xFE3
  2321                           fsr1h	equ	0xFE2
  2322                           fsr1l	equ	0xFE1
  2323                           indf2	equ	0xFDF
  2324                           postinc2	equ	0xFDE
  2325                           plusw2	equ	0xFDB
  2326                           fsr2h	equ	0xFDA
  2327                           fsr2l	equ	0xFD9
  2328                           status	equ	0xFD8
  2329                           
  2330 ;; *************** function _I2C_Init *****************
  2331 ;; Defined at:
  2332 ;;		line 20 in file "I2C.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;  F_clock         1    wreg     unsigned char 
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  F_clock         1   20[COMRAM] unsigned char 
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      void 
  2339 ;; Registers used:
  2340 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2349 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2350 ;;Total ram usage:        1 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:    1
  2353 ;; This function calls:
  2354 ;;		___aldiv
  2355 ;;		___wmul
  2356 ;; This function is called by:
  2357 ;;		_SYSTEM_Initialize
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text16
  2362  0014A6                     __ptext16:
  2363                           	opt stack 0
  2364  0014A6                     _I2C_Init:
  2365                           	opt stack 28
  2366                           
  2367                           ;incstack = 0
  2368                           ;I2C_Init@F_clock stored from wreg
  2369  0014A6  6E15               	movwf	I2C_Init@F_clock,c
  2370                           
  2371                           ;I2C.c: 21: TRISDbits.TRISD0 = 1;
  2372  0014A8  8095               	bsf	3989,0,c	;volatile
  2373                           
  2374                           ;I2C.c: 22: TRISDbits.TRISD1 = 1;
  2375  0014AA  8295               	bsf	3989,1,c	;volatile
  2376                           
  2377                           ;I2C.c: 23: SSP2CON1bits.WCOL = 0;
  2378  0014AC  9E72               	bcf	3954,7,c	;volatile
  2379                           
  2380                           ;I2C.c: 24: SSP2CON1bits.SSPEN = 1;
  2381  0014AE  8A72               	bsf	3954,5,c	;volatile
  2382                           
  2383                           ;I2C.c: 25: SSP2CON1bits.SSPM = 0x08;
  2384  0014B0  5072               	movf	3954,w,c	;volatile
  2385  0014B2  0BF0               	andlw	-16
  2386  0014B4  0908               	iorlw	8
  2387  0014B6  6E72               	movwf	3954,c	;volatile
  2388                           
  2389                           ;I2C.c: 26: SSP2CON2bits.ACKDT = 0;
  2390  0014B8  9A71               	bcf	3953,5,c	;volatile
  2391                           
  2392                           ;I2C.c: 27: SSP2CON2bits.ACKEN = 1;
  2393  0014BA  8871               	bsf	3953,4,c	;volatile
  2394                           
  2395                           ;I2C.c: 28: SSP2ADD = (16000000 / ((F_clock * 1000) * 4)) - 1;
  2396  0014BC  0E00               	movlw	0
  2397  0014BE  6E07               	movwf	___aldiv@dividend,c
  2398  0014C0  0E24               	movlw	36
  2399  0014C2  6E08               	movwf	___aldiv@dividend+1,c
  2400  0014C4  0EF4               	movlw	244
  2401  0014C6  6E09               	movwf	___aldiv@dividend+2,c
  2402  0014C8  0E00               	movlw	0
  2403  0014CA  6E0A               	movwf	___aldiv@dividend+3,c
  2404  0014CC  C015  F001         	movff	I2C_Init@F_clock,___wmul@multiplier
  2405  0014D0  6A02               	clrf	___wmul@multiplier+1,c
  2406  0014D2  0E0F               	movlw	15
  2407  0014D4  6E04               	movwf	___wmul@multiplicand+1,c
  2408  0014D6  0EA0               	movlw	160
  2409  0014D8  6E03               	movwf	___wmul@multiplicand,c
  2410  0014DA  ECE6  F00B         	call	___wmul	;wreg free
  2411  0014DE  C001  F00B         	movff	?___wmul,___aldiv@divisor
  2412  0014E2  C002  F00C         	movff	?___wmul+1,___aldiv@divisor+1
  2413  0014E6  0E00               	movlw	0
  2414  0014E8  BE0C               	btfsc	___aldiv@divisor+1,7,c
  2415  0014EA  0EFF               	movlw	-1
  2416  0014EC  6E0D               	movwf	___aldiv@divisor+2,c
  2417  0014EE  6E0E               	movwf	___aldiv@divisor+3,c
  2418  0014F0  EC94  F008         	call	___aldiv	;wreg free
  2419  0014F4  0407               	decf	?___aldiv,w,c
  2420  0014F6  6E74               	movwf	3956,c	;volatile
  2421  0014F8  0012               	return		;funcret
  2422  0014FA                     __end_of_I2C_Init:
  2423                           	opt stack 0
  2424                           tblptru	equ	0xFF8
  2425                           tblptrh	equ	0xFF7
  2426                           tblptrl	equ	0xFF6
  2427                           tablat	equ	0xFF5
  2428                           prodl	equ	0xFF3
  2429                           intcon	equ	0xFF2
  2430                           intcon2	equ	0xFF1
  2431                           postinc0	equ	0xFEE
  2432                           wreg	equ	0xFE8
  2433                           postdec1	equ	0xFE5
  2434                           plusw1	equ	0xFE3
  2435                           fsr1h	equ	0xFE2
  2436                           fsr1l	equ	0xFE1
  2437                           indf2	equ	0xFDF
  2438                           postinc2	equ	0xFDE
  2439                           plusw2	equ	0xFDB
  2440                           fsr2h	equ	0xFDA
  2441                           fsr2l	equ	0xFD9
  2442                           status	equ	0xFD8
  2443                           
  2444 ;; *************** function ___wmul *****************
  2445 ;; Defined at:
  2446 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  multiplier      2    0[COMRAM] unsigned int 
  2449 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  product         2    4[COMRAM] unsigned int 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  2    0[COMRAM] unsigned int 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, status,0, prodl, prodh
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2462 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2464 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2465 ;;Total ram usage:        6 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_I2C_Init
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text17
  2475  0017CC                     __ptext17:
  2476                           	opt stack 0
  2477  0017CC                     ___wmul:
  2478                           	opt stack 28
  2479                           
  2480                           ;incstack = 0
  2481  0017CC  5001               	movf	___wmul@multiplier,w,c
  2482  0017CE  0203               	mulwf	___wmul@multiplicand,c
  2483  0017D0  CFF3 F005          	movff	prodl,___wmul@product
  2484  0017D4  CFF4 F006          	movff	prodh,___wmul@product+1
  2485  0017D8  5001               	movf	___wmul@multiplier,w,c
  2486  0017DA  0204               	mulwf	___wmul@multiplicand+1,c
  2487  0017DC  50F3               	movf	prodl,w,c
  2488  0017DE  2606               	addwf	___wmul@product+1,f,c
  2489  0017E0  5002               	movf	___wmul@multiplier+1,w,c
  2490  0017E2  0203               	mulwf	___wmul@multiplicand,c
  2491  0017E4  50F3               	movf	prodl,w,c
  2492  0017E6  2606               	addwf	___wmul@product+1,f,c
  2493  0017E8  C005  F001         	movff	___wmul@product,?___wmul
  2494  0017EC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2495  0017F0  0012               	return	
  2496  0017F2                     __end_of___wmul:
  2497                           	opt stack 0
  2498                           tblptru	equ	0xFF8
  2499                           tblptrh	equ	0xFF7
  2500                           tblptrl	equ	0xFF6
  2501                           tablat	equ	0xFF5
  2502                           prodh	equ	0xFF4
  2503                           prodl	equ	0xFF3
  2504                           intcon	equ	0xFF2
  2505                           intcon2	equ	0xFF1
  2506                           postinc0	equ	0xFEE
  2507                           wreg	equ	0xFE8
  2508                           postdec1	equ	0xFE5
  2509                           plusw1	equ	0xFE3
  2510                           fsr1h	equ	0xFE2
  2511                           fsr1l	equ	0xFE1
  2512                           indf2	equ	0xFDF
  2513                           postinc2	equ	0xFDE
  2514                           plusw2	equ	0xFDB
  2515                           fsr2h	equ	0xFDA
  2516                           fsr2l	equ	0xFD9
  2517                           status	equ	0xFD8
  2518                           
  2519 ;; *************** function ___aldiv *****************
  2520 ;; Defined at:
  2521 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  dividend        4    6[COMRAM] long 
  2524 ;;  divisor         4   10[COMRAM] long 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  quotient        4   16[COMRAM] long 
  2527 ;;  sign            1   15[COMRAM] unsigned char 
  2528 ;;  counter         1   14[COMRAM] unsigned char 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  4    6[COMRAM] long 
  2531 ;; Registers used:
  2532 ;;		wreg, status,2, status,0
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2538 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2539 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2541 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2542 ;;Total ram usage:       14 bytes
  2543 ;; Hardware stack levels used:    1
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_I2C_Init
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           	psect	text18
  2552  001128                     __ptext18:
  2553                           	opt stack 0
  2554  001128                     ___aldiv:
  2555                           	opt stack 28
  2556                           
  2557                           ;incstack = 0
  2558  001128  0E00               	movlw	0
  2559  00112A  6E10               	movwf	___aldiv@sign,c
  2560  00112C  AE0E               	btfss	___aldiv@divisor+3,7,c
  2561  00112E  D00A               	goto	l677
  2562  001130  1E0E               	comf	___aldiv@divisor+3,f,c
  2563  001132  1E0D               	comf	___aldiv@divisor+2,f,c
  2564  001134  1E0C               	comf	___aldiv@divisor+1,f,c
  2565  001136  6C0B               	negf	___aldiv@divisor,c
  2566  001138  0E00               	movlw	0
  2567  00113A  220C               	addwfc	___aldiv@divisor+1,f,c
  2568  00113C  220D               	addwfc	___aldiv@divisor+2,f,c
  2569  00113E  220E               	addwfc	___aldiv@divisor+3,f,c
  2570  001140  0E01               	movlw	1
  2571  001142  6E10               	movwf	___aldiv@sign,c
  2572  001144                     l677:
  2573  001144  AE0A               	btfss	___aldiv@dividend+3,7,c
  2574  001146  D00A               	goto	l678
  2575  001148  1E0A               	comf	___aldiv@dividend+3,f,c
  2576  00114A  1E09               	comf	___aldiv@dividend+2,f,c
  2577  00114C  1E08               	comf	___aldiv@dividend+1,f,c
  2578  00114E  6C07               	negf	___aldiv@dividend,c
  2579  001150  0E00               	movlw	0
  2580  001152  2208               	addwfc	___aldiv@dividend+1,f,c
  2581  001154  2209               	addwfc	___aldiv@dividend+2,f,c
  2582  001156  220A               	addwfc	___aldiv@dividend+3,f,c
  2583  001158  0E01               	movlw	1
  2584  00115A  1A10               	xorwf	___aldiv@sign,f,c
  2585  00115C                     l678:
  2586  00115C  0E00               	movlw	0
  2587  00115E  6E11               	movwf	___aldiv@quotient,c
  2588  001160  0E00               	movlw	0
  2589  001162  6E12               	movwf	___aldiv@quotient+1,c
  2590  001164  0E00               	movlw	0
  2591  001166  6E13               	movwf	___aldiv@quotient+2,c
  2592  001168  0E00               	movlw	0
  2593  00116A  6E14               	movwf	___aldiv@quotient+3,c
  2594  00116C  500B               	movf	___aldiv@divisor,w,c
  2595  00116E  100C               	iorwf	___aldiv@divisor+1,w,c
  2596  001170  100D               	iorwf	___aldiv@divisor+2,w,c
  2597  001172  100E               	iorwf	___aldiv@divisor+3,w,c
  2598  001174  B4D8               	btfsc	status,2,c
  2599  001176  D02A               	goto	l685
  2600  001178  0E01               	movlw	1
  2601  00117A  6E0F               	movwf	___aldiv@counter,c
  2602  00117C  D006               	goto	l680
  2603  00117E  90D8               	bcf	status,0,c
  2604  001180  360B               	rlcf	___aldiv@divisor,f,c
  2605  001182  360C               	rlcf	___aldiv@divisor+1,f,c
  2606  001184  360D               	rlcf	___aldiv@divisor+2,f,c
  2607  001186  360E               	rlcf	___aldiv@divisor+3,f,c
  2608  001188  2A0F               	incf	___aldiv@counter,f,c
  2609  00118A                     l680:
  2610  00118A  AE0E               	btfss	___aldiv@divisor+3,7,c
  2611  00118C  D7F8               	goto	l681
  2612  00118E                     u1010:
  2613  00118E  90D8               	bcf	status,0,c
  2614  001190  3611               	rlcf	___aldiv@quotient,f,c
  2615  001192  3612               	rlcf	___aldiv@quotient+1,f,c
  2616  001194  3613               	rlcf	___aldiv@quotient+2,f,c
  2617  001196  3614               	rlcf	___aldiv@quotient+3,f,c
  2618  001198  500B               	movf	___aldiv@divisor,w,c
  2619  00119A  5C07               	subwf	___aldiv@dividend,w,c
  2620  00119C  500C               	movf	___aldiv@divisor+1,w,c
  2621  00119E  5808               	subwfb	___aldiv@dividend+1,w,c
  2622  0011A0  500D               	movf	___aldiv@divisor+2,w,c
  2623  0011A2  5809               	subwfb	___aldiv@dividend+2,w,c
  2624  0011A4  500E               	movf	___aldiv@divisor+3,w,c
  2625  0011A6  580A               	subwfb	___aldiv@dividend+3,w,c
  2626  0011A8  A0D8               	btfss	status,0,c
  2627  0011AA  D009               	goto	l684
  2628  0011AC  500B               	movf	___aldiv@divisor,w,c
  2629  0011AE  5E07               	subwf	___aldiv@dividend,f,c
  2630  0011B0  500C               	movf	___aldiv@divisor+1,w,c
  2631  0011B2  5A08               	subwfb	___aldiv@dividend+1,f,c
  2632  0011B4  500D               	movf	___aldiv@divisor+2,w,c
  2633  0011B6  5A09               	subwfb	___aldiv@dividend+2,f,c
  2634  0011B8  500E               	movf	___aldiv@divisor+3,w,c
  2635  0011BA  5A0A               	subwfb	___aldiv@dividend+3,f,c
  2636  0011BC  8011               	bsf	___aldiv@quotient,0,c
  2637  0011BE                     l684:
  2638  0011BE  90D8               	bcf	status,0,c
  2639  0011C0  320E               	rrcf	___aldiv@divisor+3,f,c
  2640  0011C2  320D               	rrcf	___aldiv@divisor+2,f,c
  2641  0011C4  320C               	rrcf	___aldiv@divisor+1,f,c
  2642  0011C6  320B               	rrcf	___aldiv@divisor,f,c
  2643  0011C8  2E0F               	decfsz	___aldiv@counter,f,c
  2644  0011CA  D7E1               	goto	u1010
  2645  0011CC                     l685:
  2646  0011CC  5010               	movf	___aldiv@sign,w,c
  2647  0011CE  B4D8               	btfsc	status,2,c
  2648  0011D0  D008               	goto	l686
  2649  0011D2  1E14               	comf	___aldiv@quotient+3,f,c
  2650  0011D4  1E13               	comf	___aldiv@quotient+2,f,c
  2651  0011D6  1E12               	comf	___aldiv@quotient+1,f,c
  2652  0011D8  6C11               	negf	___aldiv@quotient,c
  2653  0011DA  0E00               	movlw	0
  2654  0011DC  2212               	addwfc	___aldiv@quotient+1,f,c
  2655  0011DE  2213               	addwfc	___aldiv@quotient+2,f,c
  2656  0011E0  2214               	addwfc	___aldiv@quotient+3,f,c
  2657  0011E2                     l686:
  2658  0011E2  C011  F007         	movff	___aldiv@quotient,?___aldiv
  2659  0011E6  C012  F008         	movff	___aldiv@quotient+1,?___aldiv+1
  2660  0011EA  C013  F009         	movff	___aldiv@quotient+2,?___aldiv+2
  2661  0011EE  C014  F00A         	movff	___aldiv@quotient+3,?___aldiv+3
  2662  0011F2  0012               	return	
  2663  0011F4                     __end_of___aldiv:
  2664                           	opt stack 0
  2665                           tblptru	equ	0xFF8
  2666                           tblptrh	equ	0xFF7
  2667                           tblptrl	equ	0xFF6
  2668                           tablat	equ	0xFF5
  2669                           prodh	equ	0xFF4
  2670                           prodl	equ	0xFF3
  2671                           intcon	equ	0xFF2
  2672                           intcon2	equ	0xFF1
  2673                           postinc0	equ	0xFEE
  2674                           wreg	equ	0xFE8
  2675                           postdec1	equ	0xFE5
  2676                           plusw1	equ	0xFE3
  2677                           fsr1h	equ	0xFE2
  2678                           fsr1l	equ	0xFE1
  2679                           indf2	equ	0xFDF
  2680                           postinc2	equ	0xFDE
  2681                           plusw2	equ	0xFDB
  2682                           fsr2h	equ	0xFDA
  2683                           fsr2l	equ	0xFD9
  2684                           status	equ	0xFD8
  2685                           
  2686 ;; *************** function _EUSART1_Initialize *****************
  2687 ;; Defined at:
  2688 ;;		line 68 in file "mcc_generated_files/eusart1.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;		None
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1    wreg      void 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0, cstack
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2706 ;;Total ram usage:        0 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    1
  2709 ;; This function calls:
  2710 ;;		_EUSART1_SetErrorHandler
  2711 ;;		_EUSART1_SetFramingErrorHandler
  2712 ;;		_EUSART1_SetOverrunErrorHandler
  2713 ;; This function is called by:
  2714 ;;		_SYSTEM_Initialize
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text19
  2719  00165E                     __ptext19:
  2720                           	opt stack 0
  2721  00165E                     _EUSART1_Initialize:
  2722                           	opt stack 28
  2723                           
  2724                           ;eusart1.c: 72: BAUDCON1 = 0x18;
  2725                           
  2726                           ;incstack = 0
  2727  00165E  0E18               	movlw	24
  2728  001660  6E7E               	movwf	3966,c	;volatile
  2729                           
  2730                           ;eusart1.c: 75: RCSTA1 = 0x98;
  2731  001662  0E98               	movlw	152
  2732  001664  6EAC               	movwf	4012,c	;volatile
  2733                           
  2734                           ;eusart1.c: 78: TXSTA1 = 0x24;
  2735  001666  0E24               	movlw	36
  2736  001668  6EAD               	movwf	4013,c	;volatile
  2737                           
  2738                           ;eusart1.c: 81: SPBRG1 = 0xCF;
  2739  00166A  0ECF               	movlw	207
  2740  00166C  6EB0               	movwf	4016,c	;volatile
  2741                           
  2742                           ;eusart1.c: 84: SPBRGH1 = 0x00;
  2743  00166E  0E00               	movlw	0
  2744  001670  6E7F               	movwf	3967,c	;volatile
  2745                           
  2746                           ;eusart1.c: 87: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  2747  001672  0E00               	movlw	0
  2748  001674  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  2749  001676  0E00               	movlw	0
  2750  001678  6E02               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  2751  00167A  EC6A  F00C         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2752                           
  2753                           ;eusart1.c: 88: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  2754  00167E  0E00               	movlw	0
  2755  001680  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  2756  001682  0E00               	movlw	0
  2757  001684  6E02               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  2758  001686  EC65  F00C         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2759                           
  2760                           ;eusart1.c: 89: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  2761  00168A  0E00               	movlw	0
  2762  00168C  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  2763  00168E  0E00               	movlw	0
  2764  001690  6E02               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  2765  001692  EC6F  F00C         	call	_EUSART1_SetErrorHandler	;wreg free
  2766                           
  2767                           ;eusart1.c: 91: eusart1RxLastError.status = 0;
  2768  001696  0E00               	movlw	0
  2769  001698  6E3E               	movwf	_eusart1RxLastError,c	;volatile
  2770  00169A  0012               	return		;funcret
  2771  00169C                     __end_of_EUSART1_Initialize:
  2772                           	opt stack 0
  2773                           tblptru	equ	0xFF8
  2774                           tblptrh	equ	0xFF7
  2775                           tblptrl	equ	0xFF6
  2776                           tablat	equ	0xFF5
  2777                           prodh	equ	0xFF4
  2778                           prodl	equ	0xFF3
  2779                           intcon	equ	0xFF2
  2780                           intcon2	equ	0xFF1
  2781                           postinc0	equ	0xFEE
  2782                           wreg	equ	0xFE8
  2783                           postdec1	equ	0xFE5
  2784                           plusw1	equ	0xFE3
  2785                           fsr1h	equ	0xFE2
  2786                           fsr1l	equ	0xFE1
  2787                           indf2	equ	0xFDF
  2788                           postinc2	equ	0xFDE
  2789                           plusw2	equ	0xFDB
  2790                           fsr2h	equ	0xFDA
  2791                           fsr2l	equ	0xFD9
  2792                           status	equ	0xFD8
  2793                           
  2794 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2795 ;; Defined at:
  2796 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  2799 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		wreg, status,2, status,0
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2814 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2815 ;;Total ram usage:        2 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_EUSART1_Initialize
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text20
  2825  0018CA                     __ptext20:
  2826                           	opt stack 0
  2827  0018CA                     _EUSART1_SetOverrunErrorHandler:
  2828                           	opt stack 28
  2829                           
  2830                           ;eusart1.c: 171: EUSART1_OverrunErrorHandler = interruptHandler;
  2831                           
  2832                           ;incstack = 0
  2833  0018CA  C001  F03A         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2834  0018CE  C002  F03B         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2835  0018D2  0012               	return		;funcret
  2836  0018D4                     __end_of_EUSART1_SetOverrunErrorHandler:
  2837                           	opt stack 0
  2838                           tblptru	equ	0xFF8
  2839                           tblptrh	equ	0xFF7
  2840                           tblptrl	equ	0xFF6
  2841                           tablat	equ	0xFF5
  2842                           prodh	equ	0xFF4
  2843                           prodl	equ	0xFF3
  2844                           intcon	equ	0xFF2
  2845                           intcon2	equ	0xFF1
  2846                           postinc0	equ	0xFEE
  2847                           wreg	equ	0xFE8
  2848                           postdec1	equ	0xFE5
  2849                           plusw1	equ	0xFE3
  2850                           fsr1h	equ	0xFE2
  2851                           fsr1l	equ	0xFE1
  2852                           indf2	equ	0xFDF
  2853                           postinc2	equ	0xFDE
  2854                           plusw2	equ	0xFDB
  2855                           fsr2h	equ	0xFDA
  2856                           fsr2l	equ	0xFD9
  2857                           status	equ	0xFD8
  2858                           
  2859 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2860 ;; Defined at:
  2861 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  2864 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2879 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2880 ;;Total ram usage:        2 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_EUSART1_Initialize
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text21
  2890  0018D4                     __ptext21:
  2891                           	opt stack 0
  2892  0018D4                     _EUSART1_SetFramingErrorHandler:
  2893                           	opt stack 28
  2894                           
  2895                           ;eusart1.c: 167: EUSART1_FramingErrorHandler = interruptHandler;
  2896                           
  2897                           ;incstack = 0
  2898  0018D4  C001  F03C         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2899  0018D8  C002  F03D         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2900  0018DC  0012               	return		;funcret
  2901  0018DE                     __end_of_EUSART1_SetFramingErrorHandler:
  2902                           	opt stack 0
  2903                           tblptru	equ	0xFF8
  2904                           tblptrh	equ	0xFF7
  2905                           tblptrl	equ	0xFF6
  2906                           tablat	equ	0xFF5
  2907                           prodh	equ	0xFF4
  2908                           prodl	equ	0xFF3
  2909                           intcon	equ	0xFF2
  2910                           intcon2	equ	0xFF1
  2911                           postinc0	equ	0xFEE
  2912                           wreg	equ	0xFE8
  2913                           postdec1	equ	0xFE5
  2914                           plusw1	equ	0xFE3
  2915                           fsr1h	equ	0xFE2
  2916                           fsr1l	equ	0xFE1
  2917                           indf2	equ	0xFDF
  2918                           postinc2	equ	0xFDE
  2919                           plusw2	equ	0xFDB
  2920                           fsr2h	equ	0xFDA
  2921                           fsr2l	equ	0xFD9
  2922                           status	equ	0xFD8
  2923                           
  2924 ;; *************** function _EUSART1_SetErrorHandler *****************
  2925 ;; Defined at:
  2926 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  2929 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      void 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2944 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2945 ;;Total ram usage:        2 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; This function calls:
  2948 ;;		Nothing
  2949 ;; This function is called by:
  2950 ;;		_EUSART1_Initialize
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text22
  2955  0018DE                     __ptext22:
  2956                           	opt stack 0
  2957  0018DE                     _EUSART1_SetErrorHandler:
  2958                           	opt stack 28
  2959                           
  2960                           ;eusart1.c: 175: EUSART1_ErrorHandler = interruptHandler;
  2961                           
  2962                           ;incstack = 0
  2963  0018DE  C001  F038         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2964  0018E2  C002  F039         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2965  0018E6  0012               	return		;funcret
  2966  0018E8                     __end_of_EUSART1_SetErrorHandler:
  2967                           	opt stack 0
  2968                           tblptru	equ	0xFF8
  2969                           tblptrh	equ	0xFF7
  2970                           tblptrl	equ	0xFF6
  2971                           tablat	equ	0xFF5
  2972                           prodh	equ	0xFF4
  2973                           prodl	equ	0xFF3
  2974                           intcon	equ	0xFF2
  2975                           intcon2	equ	0xFF1
  2976                           postinc0	equ	0xFEE
  2977                           wreg	equ	0xFE8
  2978                           postdec1	equ	0xFE5
  2979                           plusw1	equ	0xFE3
  2980                           fsr1h	equ	0xFE2
  2981                           fsr1l	equ	0xFE1
  2982                           indf2	equ	0xFDF
  2983                           postinc2	equ	0xFDE
  2984                           plusw2	equ	0xFDB
  2985                           fsr2h	equ	0xFDA
  2986                           fsr2l	equ	0xFD9
  2987                           status	equ	0xFD8
  2988                           
  2989 ;; *************** function _RTC_Init *****************
  2990 ;; Defined at:
  2991 ;;		line 4 in file "RTC_PCF8523.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3009 ;;Total ram usage:        0 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    3
  3012 ;; This function calls:
  3013 ;;		_PCF8523_write
  3014 ;; This function is called by:
  3015 ;;		_main
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text23
  3020  0017F2                     __ptext23:
  3021                           	opt stack 0
  3022  0017F2                     _RTC_Init:
  3023                           	opt stack 27
  3024                           
  3025                           ;RTC_PCF8523.c: 12: PCF8523_write(0X00, 0x80);
  3026                           
  3027                           ;incstack = 0
  3028  0017F2  0E80               	movlw	128
  3029  0017F4  6E0D               	movwf	PCF8523_write@data,c
  3030  0017F6  0E00               	movlw	0
  3031  0017F8  EC09  F00C         	call	_PCF8523_write
  3032                           
  3033                           ;RTC_PCF8523.c: 19: PCF8523_write(0x02, 0x80);
  3034  0017FC  0E80               	movlw	128
  3035  0017FE  6E0D               	movwf	PCF8523_write@data,c
  3036  001800  0E02               	movlw	2
  3037  001802  EC09  F00C         	call	_PCF8523_write
  3038                           
  3039                           ;RTC_PCF8523.c: 25: PCF8523_write(0x0F, 0xF8);
  3040  001806  0EF8               	movlw	248
  3041  001808  6E0D               	movwf	PCF8523_write@data,c
  3042  00180A  0E0F               	movlw	15
  3043  00180C  EC09  F00C         	call	_PCF8523_write
  3044  001810  0012               	return		;funcret
  3045  001812                     __end_of_RTC_Init:
  3046                           	opt stack 0
  3047                           tblptru	equ	0xFF8
  3048                           tblptrh	equ	0xFF7
  3049                           tblptrl	equ	0xFF6
  3050                           tablat	equ	0xFF5
  3051                           prodh	equ	0xFF4
  3052                           prodl	equ	0xFF3
  3053                           intcon	equ	0xFF2
  3054                           intcon2	equ	0xFF1
  3055                           postinc0	equ	0xFEE
  3056                           wreg	equ	0xFE8
  3057                           postdec1	equ	0xFE5
  3058                           plusw1	equ	0xFE3
  3059                           fsr1h	equ	0xFE2
  3060                           fsr1l	equ	0xFE1
  3061                           indf2	equ	0xFDF
  3062                           postinc2	equ	0xFDE
  3063                           plusw2	equ	0xFDB
  3064                           fsr2h	equ	0xFDA
  3065                           fsr2l	equ	0xFD9
  3066                           status	equ	0xFD8
  3067                           
  3068 ;; *************** function _PCF8523_write *****************
  3069 ;; Defined at:
  3070 ;;		line 81 in file "RTC_PCF8523.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  regAdd          1    wreg     unsigned char 
  3073 ;;  data            1   12[COMRAM] unsigned char 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  regAdd          1   13[COMRAM] unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3085 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3088 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3089 ;;Total ram usage:        2 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    2
  3092 ;; This function calls:
  3093 ;;		_I2C_Write
  3094 ;;		_I2C_start
  3095 ;;		_I2C_stop
  3096 ;; This function is called by:
  3097 ;;		_RTC_Init
  3098 ;;		_setTime
  3099 ;;		_setDate
  3100 ;;		_countDown
  3101 ;;		_rtc_INTF_CLR
  3102 ;;		_setAlarm
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           	psect	text24
  3107  001812                     __ptext24:
  3108                           	opt stack 0
  3109  001812                     _PCF8523_write:
  3110                           	opt stack 27
  3111                           
  3112                           ;incstack = 0
  3113                           ;PCF8523_write@regAdd stored from wreg
  3114  001812  6E0E               	movwf	PCF8523_write@regAdd,c
  3115                           
  3116                           ;RTC_PCF8523.c: 82: I2C_start();
  3117  001814  EC74  F00C         	call	_I2C_start	;wreg free
  3118                           
  3119                           ;RTC_PCF8523.c: 83: I2C_Write(0xD0);
  3120  001818  0ED0               	movlw	208
  3121  00181A  EC26  F00C         	call	_I2C_Write
  3122                           
  3123                           ;RTC_PCF8523.c: 84: I2C_Write(regAdd);
  3124  00181E  500E               	movf	PCF8523_write@regAdd,w,c
  3125  001820  EC26  F00C         	call	_I2C_Write
  3126                           
  3127                           ;RTC_PCF8523.c: 85: I2C_Write(data);
  3128  001824  500D               	movf	PCF8523_write@data,w,c
  3129  001826  EC26  F00C         	call	_I2C_Write
  3130                           
  3131                           ;RTC_PCF8523.c: 86: I2C_stop();
  3132  00182A  EC79  F00C         	call	_I2C_stop	;wreg free
  3133  00182E  0012               	return		;funcret
  3134  001830                     __end_of_PCF8523_write:
  3135                           	opt stack 0
  3136                           tblptru	equ	0xFF8
  3137                           tblptrh	equ	0xFF7
  3138                           tblptrl	equ	0xFF6
  3139                           tablat	equ	0xFF5
  3140                           prodh	equ	0xFF4
  3141                           prodl	equ	0xFF3
  3142                           intcon	equ	0xFF2
  3143                           intcon2	equ	0xFF1
  3144                           postinc0	equ	0xFEE
  3145                           wreg	equ	0xFE8
  3146                           postdec1	equ	0xFE5
  3147                           plusw1	equ	0xFE3
  3148                           fsr1h	equ	0xFE2
  3149                           fsr1l	equ	0xFE1
  3150                           indf2	equ	0xFDF
  3151                           postinc2	equ	0xFDE
  3152                           plusw2	equ	0xFDB
  3153                           fsr2h	equ	0xFDA
  3154                           fsr2l	equ	0xFD9
  3155                           status	equ	0xFD8
  3156                           
  3157 ;; *************** function _I2C_buffClear *****************
  3158 ;; Defined at:
  3159 ;;		line 80 in file "I2C.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;		None
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;		None
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1    wreg      void 
  3166 ;; Registers used:
  3167 ;;		wreg, cstack
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3177 ;;Total ram usage:        0 bytes
  3178 ;; Hardware stack levels used:    1
  3179 ;; Hardware stack levels required when called:    2
  3180 ;; This function calls:
  3181 ;;		_I2C_Write
  3182 ;;		_I2C_start
  3183 ;;		_I2C_stop
  3184 ;; This function is called by:
  3185 ;;		_main
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text25
  3190  001894                     __ptext25:
  3191                           	opt stack 0
  3192  001894                     _I2C_buffClear:
  3193                           	opt stack 28
  3194                           
  3195                           ;I2C.c: 81: I2C_start();
  3196                           
  3197                           ;incstack = 0
  3198  001894  EC74  F00C         	call	_I2C_start	;wreg free
  3199                           
  3200                           ;I2C.c: 82: I2C_Write(0x00);
  3201  001898  0E00               	movlw	0
  3202  00189A  EC26  F00C         	call	_I2C_Write
  3203                           
  3204                           ;I2C.c: 83: I2C_stop();
  3205  00189E  EC79  F00C         	call	_I2C_stop	;wreg free
  3206  0018A2  0012               	return		;funcret
  3207  0018A4                     __end_of_I2C_buffClear:
  3208                           	opt stack 0
  3209                           tblptru	equ	0xFF8
  3210                           tblptrh	equ	0xFF7
  3211                           tblptrl	equ	0xFF6
  3212                           tablat	equ	0xFF5
  3213                           prodh	equ	0xFF4
  3214                           prodl	equ	0xFF3
  3215                           intcon	equ	0xFF2
  3216                           intcon2	equ	0xFF1
  3217                           postinc0	equ	0xFEE
  3218                           wreg	equ	0xFE8
  3219                           postdec1	equ	0xFE5
  3220                           plusw1	equ	0xFE3
  3221                           fsr1h	equ	0xFE2
  3222                           fsr1l	equ	0xFE1
  3223                           indf2	equ	0xFDF
  3224                           postinc2	equ	0xFDE
  3225                           plusw2	equ	0xFDB
  3226                           fsr2h	equ	0xFDA
  3227                           fsr2l	equ	0xFD9
  3228                           status	equ	0xFD8
  3229                           
  3230 ;; *************** function _I2C_start *****************
  3231 ;; Defined at:
  3232 ;;		line 50 in file "I2C.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;		None
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;		None
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  1    wreg      void 
  3239 ;; Registers used:
  3240 ;;		None
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3250 ;;Total ram usage:        0 bytes
  3251 ;; Hardware stack levels used:    1
  3252 ;; This function calls:
  3253 ;;		Nothing
  3254 ;; This function is called by:
  3255 ;;		_I2C_buffClear
  3256 ;;		_rtcRead
  3257 ;;		_PCF8523_write
  3258 ;;		_I2C_BusSCan
  3259 ;;		_MCP23008_Init
  3260 ;;		_MCP23008_Write
  3261 ;;		_MCP23008_read
  3262 ;;		_MCP9801_Init
  3263 ;;		_MCP9801_TempRead
  3264 ;;		_EEPROM_24AA512_Write
  3265 ;;		_EEPROM_24AA512_Read
  3266 ;;		_EEPROM_24AA512_pageWrite
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text26
  3271  0018E8                     __ptext26:
  3272                           	opt stack 0
  3273  0018E8                     _I2C_start:
  3274                           	opt stack 28
  3275                           
  3276                           ;I2C.c: 51: SSP2CON2bits.SEN = 1;
  3277                           
  3278                           ;incstack = 0
  3279  0018E8  8071               	bsf	3953,0,c	;volatile
  3280  0018EA  B071               	btfsc	3953,0,c	;volatile
  3281  0018EC  D7FE               	goto	l446
  3282                           
  3283                           ;I2C.c: 53: PIR3bits.SSP2IF = 0;
  3284  0018EE  9EA4               	bcf	4004,7,c	;volatile
  3285  0018F0  0012               	return		;funcret
  3286  0018F2                     __end_of_I2C_start:
  3287                           	opt stack 0
  3288                           tblptru	equ	0xFF8
  3289                           tblptrh	equ	0xFF7
  3290                           tblptrl	equ	0xFF6
  3291                           tablat	equ	0xFF5
  3292                           prodh	equ	0xFF4
  3293                           prodl	equ	0xFF3
  3294                           intcon	equ	0xFF2
  3295                           intcon2	equ	0xFF1
  3296                           postinc0	equ	0xFEE
  3297                           wreg	equ	0xFE8
  3298                           postdec1	equ	0xFE5
  3299                           plusw1	equ	0xFE3
  3300                           fsr1h	equ	0xFE2
  3301                           fsr1l	equ	0xFE1
  3302                           indf2	equ	0xFDF
  3303                           postinc2	equ	0xFDE
  3304                           plusw2	equ	0xFDB
  3305                           fsr2h	equ	0xFDA
  3306                           fsr2l	equ	0xFD9
  3307                           status	equ	0xFD8
  3308                           
  3309 ;; *************** function _I2C_Write *****************
  3310 ;; Defined at:
  3311 ;;		line 31 in file "I2C.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  data            1    wreg     unsigned char 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;  data            1    0[COMRAM] unsigned char 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3328 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3329 ;;Total ram usage:        1 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    1
  3332 ;; This function calls:
  3333 ;;		_I2C_stop
  3334 ;; This function is called by:
  3335 ;;		_I2C_buffClear
  3336 ;;		_rtcRead
  3337 ;;		_PCF8523_write
  3338 ;;		_I2C_BusSCan
  3339 ;;		_MCP23008_Init
  3340 ;;		_MCP23008_Write
  3341 ;;		_MCP23008_read
  3342 ;;		_MCP9801_Init
  3343 ;;		_MCP9801_TempRead
  3344 ;;		_EEPROM_24AA512_Write
  3345 ;;		_EEPROM_24AA512_Read
  3346 ;;		_EEPROM_24AA512_pageWrite
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           	psect	text27
  3351  00184C                     __ptext27:
  3352                           	opt stack 0
  3353  00184C                     _I2C_Write:
  3354                           	opt stack 27
  3355                           
  3356                           ;incstack = 0
  3357                           ;I2C_Write@data stored from wreg
  3358  00184C  6E01               	movwf	I2C_Write@data,c
  3359                           
  3360                           ;I2C.c: 32: SSP2BUF = data;
  3361  00184E  C001  FF75         	movff	I2C_Write@data,3957	;volatile
  3362  001852  A073               	btfss	3955,0,c	;volatile
  3363  001854  D7FE               	goto	l427
  3364  001856                     u80:
  3365                           
  3366                           ;I2C.c: 34: while (!PIR3bits.SSP2IF);
  3367  001856  AEA4               	btfss	4004,7,c	;volatile
  3368  001858  D7FE               	goto	u80
  3369                           
  3370                           ;I2C.c: 35: PIR3bits.SSP2IF = 0;
  3371  00185A  9EA4               	bcf	4004,7,c	;volatile
  3372                           
  3373                           ;I2C.c: 36: if (SSP2CON2bits.ACKSTAT) {
  3374  00185C  AC71               	btfss	3953,6,c	;volatile
  3375  00185E  0012               	return	
  3376                           
  3377                           ;I2C.c: 37: I2C_stop();
  3378  001860  EC79  F00C         	call	_I2C_stop	;wreg free
  3379                           
  3380                           ;I2C.c: 38: return;
  3381  001864  0012               	return	
  3382  001866                     __end_of_I2C_Write:
  3383                           	opt stack 0
  3384                           tblptru	equ	0xFF8
  3385                           tblptrh	equ	0xFF7
  3386                           tblptrl	equ	0xFF6
  3387                           tablat	equ	0xFF5
  3388                           prodh	equ	0xFF4
  3389                           prodl	equ	0xFF3
  3390                           intcon	equ	0xFF2
  3391                           intcon2	equ	0xFF1
  3392                           postinc0	equ	0xFEE
  3393                           wreg	equ	0xFE8
  3394                           postdec1	equ	0xFE5
  3395                           plusw1	equ	0xFE3
  3396                           fsr1h	equ	0xFE2
  3397                           fsr1l	equ	0xFE1
  3398                           indf2	equ	0xFDF
  3399                           postinc2	equ	0xFDE
  3400                           plusw2	equ	0xFDB
  3401                           fsr2h	equ	0xFDA
  3402                           fsr2l	equ	0xFD9
  3403                           status	equ	0xFD8
  3404                           
  3405 ;; *************** function _I2C_stop *****************
  3406 ;; Defined at:
  3407 ;;		line 62 in file "I2C.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;		None
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		None
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3425 ;;Total ram usage:        0 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_I2C_Write
  3431 ;;		_I2C_buffClear
  3432 ;;		_rtcRead
  3433 ;;		_PCF8523_write
  3434 ;;		_I2C_BusSCan
  3435 ;;		_MCP23008_Init
  3436 ;;		_MCP23008_Write
  3437 ;;		_MCP23008_read
  3438 ;;		_MCP9801_Init
  3439 ;;		_MCP9801_TempRead
  3440 ;;		_EEPROM_24AA512_Write
  3441 ;;		_EEPROM_24AA512_Read
  3442 ;;		_EEPROM_24AA512_pageWrite
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text28
  3447  0018F2                     __ptext28:
  3448                           	opt stack 0
  3449  0018F2                     _I2C_stop:
  3450                           	opt stack 28
  3451                           
  3452                           ;I2C.c: 63: SSP2CON2bits.PEN = 1;
  3453                           
  3454                           ;incstack = 0
  3455  0018F2  8471               	bsf	3953,2,c	;volatile
  3456  0018F4  B471               	btfsc	3953,2,c	;volatile
  3457  0018F6  D7FE               	goto	l458
  3458                           
  3459                           ;I2C.c: 65: PIR3bits.SSP2IF = 0;
  3460  0018F8  9EA4               	bcf	4004,7,c	;volatile
  3461  0018FA  0012               	return		;funcret
  3462  0018FC                     __end_of_I2C_stop:
  3463                           	opt stack 0
  3464                           tblptru	equ	0xFF8
  3465                           tblptrh	equ	0xFF7
  3466                           tblptrl	equ	0xFF6
  3467                           tablat	equ	0xFF5
  3468                           prodh	equ	0xFF4
  3469                           prodl	equ	0xFF3
  3470                           intcon	equ	0xFF2
  3471                           intcon2	equ	0xFF1
  3472                           postinc0	equ	0xFEE
  3473                           wreg	equ	0xFE8
  3474                           postdec1	equ	0xFE5
  3475                           plusw1	equ	0xFE3
  3476                           fsr1h	equ	0xFE2
  3477                           fsr1l	equ	0xFE1
  3478                           indf2	equ	0xFDF
  3479                           postinc2	equ	0xFDE
  3480                           plusw2	equ	0xFDB
  3481                           fsr2h	equ	0xFDA
  3482                           fsr2l	equ	0xFD9
  3483                           status	equ	0xFD8
  3484                           
  3485 ;; *************** function _EUSART1_itoa *****************
  3486 ;; Defined at:
  3487 ;;		line 145 in file "mcc_generated_files/eusart1.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;  data            4   24[COMRAM] unsigned long 
  3490 ;;  base            2   28[COMRAM] int 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  buf            10   30[COMRAM] unsigned char [10]
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      void 
  3495 ;; Registers used:
  3496 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3502 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3503 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3505 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3506 ;;Total ram usage:       16 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:    3
  3509 ;; This function calls:
  3510 ;;		_EUSART1_Write_Text
  3511 ;;		_itoa
  3512 ;; This function is called by:
  3513 ;;		_main
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text29
  3518  00169C                     __ptext29:
  3519                           	opt stack 0
  3520  00169C                     _EUSART1_itoa:
  3521                           	opt stack 27
  3522                           
  3523                           ;eusart1.c: 146: char buf[10];
  3524                           ;eusart1.c: 147: itoa(buf, data, base);
  3525                           
  3526                           ;incstack = 0
  3527  00169C  0E1F               	movlw	low EUSART1_itoa@buf
  3528  00169E  6E11               	movwf	itoa@buf,c
  3529  0016A0  0E00               	movlw	high EUSART1_itoa@buf
  3530  0016A2  6E12               	movwf	itoa@buf+1,c
  3531  0016A4  C019  F013         	movff	EUSART1_itoa@data,itoa@val
  3532  0016A8  C01A  F014         	movff	EUSART1_itoa@data+1,itoa@val+1
  3533  0016AC  C01D  F015         	movff	EUSART1_itoa@base,itoa@base
  3534  0016B0  C01E  F016         	movff	EUSART1_itoa@base+1,itoa@base+1
  3535  0016B4  ECED  F00A         	call	_itoa	;wreg free
  3536                           
  3537                           ;eusart1.c: 148: EUSART1_Write_Text(buf, sizeof (buf));
  3538  0016B8  0E1F               	movlw	low EUSART1_itoa@buf
  3539  0016BA  6E01               	movwf	EUSART1_Write_Text@pbData,c
  3540  0016BC  0E00               	movlw	high EUSART1_itoa@buf
  3541  0016BE  6E02               	movwf	EUSART1_Write_Text@pbData+1,c
  3542  0016C0  0E0A               	movlw	10
  3543  0016C2  6E03               	movwf	EUSART1_Write_Text@iSize,c
  3544  0016C4  EC96  F009         	call	_EUSART1_Write_Text	;wreg free
  3545                           
  3546                           ;eusart1.c: 149: EUSART1_Write_Text("\r", 2);
  3547  0016C8  0E3A               	movlw	low STR_1
  3548  0016CA  6E01               	movwf	EUSART1_Write_Text@pbData,c
  3549  0016CC  0E0F               	movlw	high STR_1
  3550  0016CE  6E02               	movwf	EUSART1_Write_Text@pbData+1,c
  3551  0016D0  0E02               	movlw	2
  3552  0016D2  6E03               	movwf	EUSART1_Write_Text@iSize,c
  3553  0016D4  EC96  F009         	call	_EUSART1_Write_Text	;wreg free
  3554  0016D8  0012               	return		;funcret
  3555  0016DA                     __end_of_EUSART1_itoa:
  3556                           	opt stack 0
  3557                           tblptru	equ	0xFF8
  3558                           tblptrh	equ	0xFF7
  3559                           tblptrl	equ	0xFF6
  3560                           tablat	equ	0xFF5
  3561                           prodh	equ	0xFF4
  3562                           prodl	equ	0xFF3
  3563                           intcon	equ	0xFF2
  3564                           intcon2	equ	0xFF1
  3565                           postinc0	equ	0xFEE
  3566                           wreg	equ	0xFE8
  3567                           postdec1	equ	0xFE5
  3568                           plusw1	equ	0xFE3
  3569                           fsr1h	equ	0xFE2
  3570                           fsr1l	equ	0xFE1
  3571                           indf2	equ	0xFDF
  3572                           postinc2	equ	0xFDE
  3573                           plusw2	equ	0xFDB
  3574                           fsr2h	equ	0xFDA
  3575                           fsr2l	equ	0xFD9
  3576                           status	equ	0xFD8
  3577                           
  3578 ;; *************** function _itoa *****************
  3579 ;; Defined at:
  3580 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  buf             2   16[COMRAM] PTR unsigned char 
  3583 ;;		 -> EUSART1_itoa@buf(10), 
  3584 ;;  val             2   18[COMRAM] int 
  3585 ;;  base            2   20[COMRAM] int 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  cp              2   22[COMRAM] PTR unsigned char 
  3588 ;;		 -> EUSART1_itoa@buf(10), 
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  2   16[COMRAM] PTR unsigned char 
  3591 ;; Registers used:
  3592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3598 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3599 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3601 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3602 ;;Total ram usage:        8 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    2
  3605 ;; This function calls:
  3606 ;;		_utoa
  3607 ;; This function is called by:
  3608 ;;		_EUSART1_itoa
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text30
  3613  0015DA                     __ptext30:
  3614                           	opt stack 0
  3615  0015DA                     _itoa:
  3616                           	opt stack 27
  3617                           
  3618                           ;incstack = 0
  3619  0015DA  C011  F017         	movff	itoa@buf,itoa@cp
  3620  0015DE  C012  F018         	movff	itoa@buf+1,itoa@cp+1
  3621  0015E2  AE14               	btfss	itoa@val+1,7,c
  3622  0015E4  D00C               	goto	l952
  3623  0015E6  C011  FFD9         	movff	itoa@buf,fsr2l
  3624  0015EA  C012  FFDA         	movff	itoa@buf+1,fsr2h
  3625  0015EE  0E2D               	movlw	45
  3626  0015F0  6EDF               	movwf	indf2,c
  3627  0015F2  4A11               	infsnz	itoa@buf,f,c
  3628  0015F4  2A12               	incf	itoa@buf+1,f,c
  3629  0015F6  6C13               	negf	itoa@val,c
  3630  0015F8  1E14               	comf	itoa@val+1,f,c
  3631  0015FA  B0D8               	btfsc	status,0,c
  3632  0015FC  2A14               	incf	itoa@val+1,f,c
  3633  0015FE                     l952:
  3634  0015FE  C011  F008         	movff	itoa@buf,utoa@buf
  3635  001602  C012  F009         	movff	itoa@buf+1,utoa@buf+1
  3636  001606  C013  F00A         	movff	itoa@val,utoa@val
  3637  00160A  C014  F00B         	movff	itoa@val+1,utoa@val+1
  3638  00160E  C015  F00C         	movff	itoa@base,utoa@base
  3639  001612  C016  F00D         	movff	itoa@base+1,utoa@base+1
  3640  001616  ECFA  F008         	call	_utoa	;wreg free
  3641  00161A  0012               	return	
  3642  00161C                     __end_of_itoa:
  3643                           	opt stack 0
  3644                           tblptru	equ	0xFF8
  3645                           tblptrh	equ	0xFF7
  3646                           tblptrl	equ	0xFF6
  3647                           tablat	equ	0xFF5
  3648                           prodh	equ	0xFF4
  3649                           prodl	equ	0xFF3
  3650                           intcon	equ	0xFF2
  3651                           intcon2	equ	0xFF1
  3652                           postinc0	equ	0xFEE
  3653                           wreg	equ	0xFE8
  3654                           postdec1	equ	0xFE5
  3655                           plusw1	equ	0xFE3
  3656                           fsr1h	equ	0xFE2
  3657                           fsr1l	equ	0xFE1
  3658                           indf2	equ	0xFDF
  3659                           postinc2	equ	0xFDE
  3660                           plusw2	equ	0xFDB
  3661                           fsr2h	equ	0xFDA
  3662                           fsr2l	equ	0xFD9
  3663                           status	equ	0xFD8
  3664                           
  3665 ;; *************** function _utoa *****************
  3666 ;; Defined at:
  3667 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;  buf             2    7[COMRAM] PTR unsigned char 
  3670 ;;		 -> EUSART1_itoa@buf(10), 
  3671 ;;  val             2    9[COMRAM] unsigned int 
  3672 ;;  base            2   11[COMRAM] int 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  v               2   13[COMRAM] unsigned int 
  3675 ;;  c               1   15[COMRAM] unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  2    7[COMRAM] PTR unsigned char 
  3678 ;; Registers used:
  3679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3685 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3686 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3688 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3689 ;;Total ram usage:        9 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    1
  3692 ;; This function calls:
  3693 ;;		___lwdiv
  3694 ;;		___lwmod
  3695 ;; This function is called by:
  3696 ;;		_itoa
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           	psect	text31
  3701  0011F4                     __ptext31:
  3702                           	opt stack 0
  3703  0011F4                     _utoa:
  3704                           	opt stack 27
  3705                           
  3706                           ;incstack = 0
  3707  0011F4  C00A  F00E         	movff	utoa@val,utoa@v
  3708  0011F8  C00B  F00F         	movff	utoa@val+1,utoa@v+1
  3709  0011FC  C00E  F001         	movff	utoa@v,___lwdiv@dividend
  3710  001200  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  3711  001204  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  3712  001208  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  3713  00120C  EC7D  F00A         	call	___lwdiv	;wreg free
  3714  001210  C001  F00E         	movff	?___lwdiv,utoa@v
  3715  001214  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
  3716  001218  4A08               	infsnz	utoa@buf,f,c
  3717  00121A  2A09               	incf	utoa@buf+1,f,c
  3718  00121C  500E               	movf	utoa@v,w,c
  3719  00121E  100F               	iorwf	utoa@v+1,w,c
  3720  001220  A4D8               	btfss	status,2,c
  3721  001222  D7EC               	goto	l956
  3722  001224  C008  FFD9         	movff	utoa@buf,fsr2l
  3723  001228  C009  FFDA         	movff	utoa@buf+1,fsr2h
  3724  00122C  0E00               	movlw	0
  3725  00122E  6EDF               	movwf	indf2,c
  3726  001230  0608               	decf	utoa@buf,f,c
  3727  001232  A0D8               	btfss	status,0,c
  3728  001234  0609               	decf	utoa@buf+1,f,c
  3729  001236  C00A  F001         	movff	utoa@val,___lwmod@dividend
  3730  00123A  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
  3731  00123E  C00C  F003         	movff	utoa@base,___lwmod@divisor
  3732  001242  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
  3733  001246  EC0E  F00B         	call	___lwmod	;wreg free
  3734  00124A  5001               	movf	?___lwmod,w,c
  3735  00124C  6E10               	movwf	utoa@c,c
  3736  00124E  C00A  F001         	movff	utoa@val,___lwdiv@dividend
  3737  001252  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  3738  001256  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  3739  00125A  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  3740  00125E  EC7D  F00A         	call	___lwdiv	;wreg free
  3741  001262  C001  F00A         	movff	?___lwdiv,utoa@val
  3742  001266  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
  3743  00126A  0E09               	movlw	9
  3744  00126C  6410               	cpfsgt	utoa@c,c
  3745  00126E  D002               	goto	l959
  3746  001270  0E07               	movlw	7
  3747  001272  2610               	addwf	utoa@c,f,c
  3748  001274                     l959:
  3749  001274  0E30               	movlw	48
  3750  001276  2610               	addwf	utoa@c,f,c
  3751  001278  C008  FFD9         	movff	utoa@buf,fsr2l
  3752  00127C  C009  FFDA         	movff	utoa@buf+1,fsr2h
  3753  001280  C010  FFDF         	movff	utoa@c,indf2
  3754  001284  0608               	decf	utoa@buf,f,c
  3755  001286  A0D8               	btfss	status,0,c
  3756  001288  0609               	decf	utoa@buf+1,f,c
  3757  00128A  500A               	movf	utoa@val,w,c
  3758  00128C  100B               	iorwf	utoa@val+1,w,c
  3759  00128E  A4D8               	btfss	status,2,c
  3760  001290  D7D2               	goto	l958
  3761                           
  3762                           ;	Return value of _utoa is never used
  3763  001292  4A08               	infsnz	utoa@buf,f,c
  3764  001294  2A09               	incf	utoa@buf+1,f,c
  3765  001296  0012               	return	
  3766  001298                     __end_of_utoa:
  3767                           	opt stack 0
  3768                           tblptru	equ	0xFF8
  3769                           tblptrh	equ	0xFF7
  3770                           tblptrl	equ	0xFF6
  3771                           tablat	equ	0xFF5
  3772                           prodh	equ	0xFF4
  3773                           prodl	equ	0xFF3
  3774                           intcon	equ	0xFF2
  3775                           intcon2	equ	0xFF1
  3776                           postinc0	equ	0xFEE
  3777                           wreg	equ	0xFE8
  3778                           postdec1	equ	0xFE5
  3779                           plusw1	equ	0xFE3
  3780                           fsr1h	equ	0xFE2
  3781                           fsr1l	equ	0xFE1
  3782                           indf2	equ	0xFDF
  3783                           postinc2	equ	0xFDE
  3784                           plusw2	equ	0xFDB
  3785                           fsr2h	equ	0xFDA
  3786                           fsr2l	equ	0xFD9
  3787                           status	equ	0xFD8
  3788                           
  3789 ;; *************** function ___lwmod *****************
  3790 ;; Defined at:
  3791 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  dividend        2    0[COMRAM] unsigned int 
  3794 ;;  divisor         2    2[COMRAM] unsigned int 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  counter         1    4[COMRAM] unsigned char 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  2    0[COMRAM] unsigned int 
  3799 ;; Registers used:
  3800 ;;		wreg, status,2, status,0
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3806 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3809 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3810 ;;Total ram usage:        5 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_utoa
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text32
  3820  00161C                     __ptext32:
  3821                           	opt stack 0
  3822  00161C                     ___lwmod:
  3823                           	opt stack 27
  3824                           
  3825                           ;incstack = 0
  3826  00161C  5003               	movf	___lwmod@divisor,w,c
  3827  00161E  1004               	iorwf	___lwmod@divisor+1,w,c
  3828  001620  B4D8               	btfsc	status,2,c
  3829  001622  D018               	goto	l1054
  3830  001624  0E01               	movlw	1
  3831  001626  6E05               	movwf	___lwmod@counter,c
  3832  001628  D004               	goto	l1049
  3833  00162A  90D8               	bcf	status,0,c
  3834  00162C  3603               	rlcf	___lwmod@divisor,f,c
  3835  00162E  3604               	rlcf	___lwmod@divisor+1,f,c
  3836  001630  2A05               	incf	___lwmod@counter,f,c
  3837  001632                     l1049:
  3838  001632  AE04               	btfss	___lwmod@divisor+1,7,c
  3839  001634  D7FA               	goto	l1050
  3840  001636                     u960:
  3841  001636  5003               	movf	___lwmod@divisor,w,c
  3842  001638  5C01               	subwf	___lwmod@dividend,w,c
  3843  00163A  5004               	movf	___lwmod@divisor+1,w,c
  3844  00163C  5802               	subwfb	___lwmod@dividend+1,w,c
  3845  00163E  A0D8               	btfss	status,0,c
  3846  001640  D004               	goto	l1053
  3847  001642  5003               	movf	___lwmod@divisor,w,c
  3848  001644  5E01               	subwf	___lwmod@dividend,f,c
  3849  001646  5004               	movf	___lwmod@divisor+1,w,c
  3850  001648  5A02               	subwfb	___lwmod@dividend+1,f,c
  3851  00164A                     l1053:
  3852  00164A  90D8               	bcf	status,0,c
  3853  00164C  3204               	rrcf	___lwmod@divisor+1,f,c
  3854  00164E  3203               	rrcf	___lwmod@divisor,f,c
  3855  001650  2E05               	decfsz	___lwmod@counter,f,c
  3856  001652  D7F1               	goto	u960
  3857  001654                     l1054:
  3858  001654  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3859  001658  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3860  00165C  0012               	return		;funcret
  3861  00165E                     __end_of___lwmod:
  3862                           	opt stack 0
  3863                           tblptru	equ	0xFF8
  3864                           tblptrh	equ	0xFF7
  3865                           tblptrl	equ	0xFF6
  3866                           tablat	equ	0xFF5
  3867                           prodh	equ	0xFF4
  3868                           prodl	equ	0xFF3
  3869                           intcon	equ	0xFF2
  3870                           intcon2	equ	0xFF1
  3871                           postinc0	equ	0xFEE
  3872                           wreg	equ	0xFE8
  3873                           postdec1	equ	0xFE5
  3874                           plusw1	equ	0xFE3
  3875                           fsr1h	equ	0xFE2
  3876                           fsr1l	equ	0xFE1
  3877                           indf2	equ	0xFDF
  3878                           postinc2	equ	0xFDE
  3879                           plusw2	equ	0xFDB
  3880                           fsr2h	equ	0xFDA
  3881                           fsr2l	equ	0xFD9
  3882                           status	equ	0xFD8
  3883                           
  3884 ;; *************** function ___lwdiv *****************
  3885 ;; Defined at:
  3886 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  dividend        2    0[COMRAM] unsigned int 
  3889 ;;  divisor         2    2[COMRAM] unsigned int 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  quotient        2    4[COMRAM] unsigned int 
  3892 ;;  counter         1    6[COMRAM] unsigned char 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  2    0[COMRAM] unsigned int 
  3895 ;; Registers used:
  3896 ;;		wreg, status,2, status,0
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3902 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3903 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3905 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3906 ;;Total ram usage:        7 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_utoa
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text33
  3916  0014FA                     __ptext33:
  3917                           	opt stack 0
  3918  0014FA                     ___lwdiv:
  3919                           	opt stack 27
  3920                           
  3921                           ;incstack = 0
  3922  0014FA  0E00               	movlw	0
  3923  0014FC  6E06               	movwf	___lwdiv@quotient+1,c
  3924  0014FE  0E00               	movlw	0
  3925  001500  6E05               	movwf	___lwdiv@quotient,c
  3926  001502  5003               	movf	___lwdiv@divisor,w,c
  3927  001504  1004               	iorwf	___lwdiv@divisor+1,w,c
  3928  001506  B4D8               	btfsc	status,2,c
  3929  001508  D01C               	goto	l1044
  3930  00150A  0E01               	movlw	1
  3931  00150C  6E07               	movwf	___lwdiv@counter,c
  3932  00150E  D004               	goto	l1039
  3933  001510  90D8               	bcf	status,0,c
  3934  001512  3603               	rlcf	___lwdiv@divisor,f,c
  3935  001514  3604               	rlcf	___lwdiv@divisor+1,f,c
  3936  001516  2A07               	incf	___lwdiv@counter,f,c
  3937  001518                     l1039:
  3938  001518  AE04               	btfss	___lwdiv@divisor+1,7,c
  3939  00151A  D7FA               	goto	l1040
  3940  00151C                     u930:
  3941  00151C  90D8               	bcf	status,0,c
  3942  00151E  3605               	rlcf	___lwdiv@quotient,f,c
  3943  001520  3606               	rlcf	___lwdiv@quotient+1,f,c
  3944  001522  5003               	movf	___lwdiv@divisor,w,c
  3945  001524  5C01               	subwf	___lwdiv@dividend,w,c
  3946  001526  5004               	movf	___lwdiv@divisor+1,w,c
  3947  001528  5802               	subwfb	___lwdiv@dividend+1,w,c
  3948  00152A  A0D8               	btfss	status,0,c
  3949  00152C  D005               	goto	l1043
  3950  00152E  5003               	movf	___lwdiv@divisor,w,c
  3951  001530  5E01               	subwf	___lwdiv@dividend,f,c
  3952  001532  5004               	movf	___lwdiv@divisor+1,w,c
  3953  001534  5A02               	subwfb	___lwdiv@dividend+1,f,c
  3954  001536  8005               	bsf	___lwdiv@quotient,0,c
  3955  001538                     l1043:
  3956  001538  90D8               	bcf	status,0,c
  3957  00153A  3204               	rrcf	___lwdiv@divisor+1,f,c
  3958  00153C  3203               	rrcf	___lwdiv@divisor,f,c
  3959  00153E  2E07               	decfsz	___lwdiv@counter,f,c
  3960  001540  D7ED               	goto	u930
  3961  001542                     l1044:
  3962  001542  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3963  001546  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3964  00154A  0012               	return		;funcret
  3965  00154C                     __end_of___lwdiv:
  3966                           	opt stack 0
  3967                           tblptru	equ	0xFF8
  3968                           tblptrh	equ	0xFF7
  3969                           tblptrl	equ	0xFF6
  3970                           tablat	equ	0xFF5
  3971                           prodh	equ	0xFF4
  3972                           prodl	equ	0xFF3
  3973                           intcon	equ	0xFF2
  3974                           intcon2	equ	0xFF1
  3975                           postinc0	equ	0xFEE
  3976                           wreg	equ	0xFE8
  3977                           postdec1	equ	0xFE5
  3978                           plusw1	equ	0xFE3
  3979                           fsr1h	equ	0xFE2
  3980                           fsr1l	equ	0xFE1
  3981                           indf2	equ	0xFDF
  3982                           postinc2	equ	0xFDE
  3983                           plusw2	equ	0xFDB
  3984                           fsr2h	equ	0xFDA
  3985                           fsr2l	equ	0xFD9
  3986                           status	equ	0xFD8
  3987                           
  3988 ;; *************** function _EUSART1_Write_Text *****************
  3989 ;; Defined at:
  3990 ;;		line 135 in file "mcc_generated_files/eusart1.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  pbData          2    0[COMRAM] PTR unsigned char 
  3993 ;;		 -> STR_1(2), EUSART1_itoa@buf(10), 
  3994 ;;  iSize           1    2[COMRAM] unsigned char 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;  iSizeQueued     1    5[COMRAM] unsigned char 
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      void 
  3999 ;; Registers used:
  4000 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4006 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4008 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4009 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4010 ;;Total ram usage:        6 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_EUSART1_itoa
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           	psect	text34
  4020  00132C                     __ptext34:
  4021                           	opt stack 0
  4022  00132C                     _EUSART1_Write_Text:
  4023                           	opt stack 29
  4024                           
  4025                           ;eusart1.c: 136: for (uint8_t iSizeQueued = 0; iSizeQueued < iSize; iSizeQueued++) {
  4026                           
  4027                           ;incstack = 0
  4028  00132C  0E00               	movlw	0
  4029  00132E  6E06               	movwf	EUSART1_Write_Text@iSizeQueued,c
  4030  001330  D03B               	goto	l125
  4031  001332                     
  4032                           ;eusart1.c: 137: TxData[iSizeQueued] = pbData[iSizeQueued];
  4033  001332  5006               	movf	EUSART1_Write_Text@iSizeQueued,w,c
  4034  001334  0D01               	mullw	1
  4035  001336  C001  F004         	movff	EUSART1_Write_Text@pbData,??_EUSART1_Write_Text
  4036  00133A  C002  F005         	movff	EUSART1_Write_Text@pbData+1,??_EUSART1_Write_Text+1
  4037  00133E  50F3               	movf	prodl,w,c
  4038  001340  2604               	addwf	??_EUSART1_Write_Text,f,c
  4039  001342  50F4               	movf	prodh,w,c
  4040  001344  2205               	addwfc	??_EUSART1_Write_Text+1,f,c
  4041  001346  C004  FFF6         	movff	??_EUSART1_Write_Text,tblptrl
  4042  00134A  C005  FFF7         	movff	??_EUSART1_Write_Text+1,tblptrh
  4043  00134E  6AF8               	clrf	tblptru,c
  4044  001350  5006               	movf	EUSART1_Write_Text@iSizeQueued,w,c
  4045  001352  0D01               	mullw	1
  4046  001354  0E00               	movlw	low _TxData
  4047  001356  24F3               	addwf	prodl,w,c
  4048  001358  6ED9               	movwf	fsr2l,c
  4049  00135A  0E01               	movlw	high _TxData
  4050  00135C  20F4               	addwfc	prodh,w,c
  4051  00135E  6EDA               	movwf	fsr2h,c
  4052  001360  0E0E               	movlw	(high __ramtop+-1)
  4053  001362  64F7               	cpfsgt	tblptrh,c
  4054  001364  D003               	bra	u1197
  4055  001366  0008               	tblrd		*
  4056  001368  50F5               	movf	tablat,w,c
  4057  00136A  D005               	bra	u1190
  4058  00136C                     u1197:
  4059  00136C  CFF6 FFE9          	movff	tblptrl,fsr0l
  4060  001370  CFF7 FFEA          	movff	tblptrh,fsr0h
  4061  001374  50EF               	movf	indf0,w,c
  4062  001376                     u1190:
  4063  001376  6EDF               	movwf	indf2,c
  4064                           
  4065                           ;eusart1.c: 138: if (TxData[iSizeQueued] != '\0') {
  4066  001378  5006               	movf	EUSART1_Write_Text@iSizeQueued,w,c
  4067  00137A  0D01               	mullw	1
  4068  00137C  0E00               	movlw	low _TxData
  4069  00137E  24F3               	addwf	prodl,w,c
  4070  001380  6ED9               	movwf	fsr2l,c
  4071  001382  0E01               	movlw	high _TxData
  4072  001384  20F4               	addwfc	prodh,w,c
  4073  001386  6EDA               	movwf	fsr2h,c
  4074  001388  50DF               	movf	indf2,w,c
  4075  00138A  B4D8               	btfsc	status,2,c
  4076  00138C  D00C               	goto	l127
  4077  00138E                     u1200:
  4078                           
  4079                           ;eusart1.c: 139: while (!TXSTA1bits.TRMT);
  4080  00138E  A2AD               	btfss	4013,1,c	;volatile
  4081  001390  D7FE               	goto	u1200
  4082                           
  4083                           ;eusart1.c: 140: TXREG1 = TxData[iSizeQueued];
  4084  001392  5006               	movf	EUSART1_Write_Text@iSizeQueued,w,c
  4085  001394  0D01               	mullw	1
  4086  001396  0E00               	movlw	low _TxData
  4087  001398  24F3               	addwf	prodl,w,c
  4088  00139A  6ED9               	movwf	fsr2l,c
  4089  00139C  0E01               	movlw	high _TxData
  4090  00139E  20F4               	addwfc	prodh,w,c
  4091  0013A0  6EDA               	movwf	fsr2h,c
  4092  0013A2  50DF               	movf	indf2,w,c
  4093  0013A4  6EAE               	movwf	4014,c	;volatile
  4094  0013A6                     l127:
  4095  0013A6  2A06               	incf	EUSART1_Write_Text@iSizeQueued,f,c
  4096  0013A8                     l125:
  4097  0013A8  5003               	movf	EUSART1_Write_Text@iSize,w,c
  4098  0013AA  5C06               	subwf	EUSART1_Write_Text@iSizeQueued,w,c
  4099  0013AC  B0D8               	btfsc	status,0,c
  4100  0013AE  0012               	return	
  4101  0013B0  D7C0               	goto	l126
  4102  0013B2                     __end_of_EUSART1_Write_Text:
  4103                           	opt stack 0
  4104                           tblptru	equ	0xFF8
  4105                           tblptrh	equ	0xFF7
  4106                           tblptrl	equ	0xFF6
  4107                           tablat	equ	0xFF5
  4108                           prodh	equ	0xFF4
  4109                           prodl	equ	0xFF3
  4110                           intcon	equ	0xFF2
  4111                           intcon2	equ	0xFF1
  4112                           indf0	equ	0xFEF
  4113                           postinc0	equ	0xFEE
  4114                           fsr0h	equ	0xFEA
  4115                           fsr0l	equ	0xFE9
  4116                           wreg	equ	0xFE8
  4117                           postdec1	equ	0xFE5
  4118                           plusw1	equ	0xFE3
  4119                           fsr1h	equ	0xFE2
  4120                           fsr1l	equ	0xFE1
  4121                           indf2	equ	0xFDF
  4122                           postinc2	equ	0xFDE
  4123                           plusw2	equ	0xFDB
  4124                           fsr2h	equ	0xFDA
  4125                           fsr2l	equ	0xFD9
  4126                           status	equ	0xFD8
  4127                           tblptru	equ	0xFF8
  4128                           tblptrh	equ	0xFF7
  4129                           tblptrl	equ	0xFF6
  4130                           tablat	equ	0xFF5
  4131                           prodh	equ	0xFF4
  4132                           prodl	equ	0xFF3
  4133                           intcon	equ	0xFF2
  4134                           intcon2	equ	0xFF1
  4135                           indf0	equ	0xFEF
  4136                           postinc0	equ	0xFEE
  4137                           fsr0h	equ	0xFEA
  4138                           fsr0l	equ	0xFE9
  4139                           wreg	equ	0xFE8
  4140                           postdec1	equ	0xFE5
  4141                           plusw1	equ	0xFE3
  4142                           fsr1h	equ	0xFE2
  4143                           fsr1l	equ	0xFE1
  4144                           indf2	equ	0xFDF
  4145                           postinc2	equ	0xFDE
  4146                           plusw2	equ	0xFDB
  4147                           fsr2h	equ	0xFDA
  4148                           fsr2l	equ	0xFD9
  4149                           status	equ	0xFD8
  4150                           
  4151                           	psect	rparam
  4152  0000                     tblptru	equ	0xFF8
  4153                           tblptrh	equ	0xFF7
  4154                           tblptrl	equ	0xFF6
  4155                           tablat	equ	0xFF5
  4156                           prodh	equ	0xFF4
  4157                           prodl	equ	0xFF3
  4158                           intcon	equ	0xFF2
  4159                           intcon2	equ	0xFF1
  4160                           indf0	equ	0xFEF
  4161                           postinc0	equ	0xFEE
  4162                           fsr0h	equ	0xFEA
  4163                           fsr0l	equ	0xFE9
  4164                           wreg	equ	0xFE8
  4165                           postdec1	equ	0xFE5
  4166                           plusw1	equ	0xFE3
  4167                           fsr1h	equ	0xFE2
  4168                           fsr1l	equ	0xFE1
  4169                           indf2	equ	0xFDF
  4170                           postinc2	equ	0xFDE
  4171                           plusw2	equ	0xFDB
  4172                           fsr2h	equ	0xFDA
  4173                           fsr2l	equ	0xFD9
  4174                           status	equ	0xFD8


Data Sizes:
    Strings     2
    Constant    57
    Data        13
    BSS         277
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     41      75
    BANK0           160      0       0
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 

    EUSART1_Write_Text@pbData	PTR unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[2]), EUSART1_itoa@buf(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->_EUSART1_itoa
    _setTime->_PCF8523_write
    _setDate->_PCF8523_write
    _decimalToBCD->___awdiv
    _rtc_INTF_CLR->_PCF8523_write
    _rtcRead->_BCDtoDecimal
    _countDown->_PCF8523_write
    _SYSTEM_Initialize->_I2C_Init
    _I2C_Init->___aldiv
    ___aldiv->___wmul
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _RTC_Init->_PCF8523_write
    _PCF8523_write->_decimalToBCD
    _I2C_buffClear->_I2C_Write
    _EUSART1_itoa->_itoa
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   15891
                                             40 COMRAM     1     1      0
                       _EUSART1_itoa
                      _I2C_buffClear
                           _RTC_Init
                  _SYSTEM_Initialize
                          _countDown
                     _interrupt_Init
                            _rtcRead
                       _rtc_INTF_CLR
                            _setDate
                            _setTime
 ---------------------------------------------------------------------------------
 (1) _setTime                                             15    13      2    3514
                                             14 COMRAM    15    13      2
                      _PCF8523_write
                       _decimalToBCD
 ---------------------------------------------------------------------------------
 (1) _setDate                                             11     8      3    3568
                                             14 COMRAM    11     8      3
                      _PCF8523_write
                       _decimalToBCD
 ---------------------------------------------------------------------------------
 (2) _decimalToBCD                                         4     2      2    1552
                                              8 COMRAM     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _rtc_INTF_CLR                                         3     1      2    1525
                                             14 COMRAM     3     1      2
                      _PCF8523_write
 ---------------------------------------------------------------------------------
 (1) _rtcRead                                              1     1      0     559
                                              6 COMRAM     1     1      0
                       _BCDtoDecimal
                          _I2C_Write
                           _I2C_read
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _I2C_read                                             2     0      2     402
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _BCDtoDecimal                                         6     4      2     120
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _countDown                                            2     1      1    1547
                                             14 COMRAM     2     1      1
                      _PCF8523_write
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1331
                 _EUSART1_Initialize
                           _I2C_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             1     1      0    1037
                                             20 COMRAM     1     1      0
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     563
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              6 COMRAM    14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RTC_Init                                             0     0      0    1427
                      _PCF8523_write
 ---------------------------------------------------------------------------------
 (2) _PCF8523_write                                        2     1      1    1427
                                             12 COMRAM     2     1      1
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
                       _decimalToBCD (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_buffClear                                        0     0      0      15
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (3) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      15
                                              0 COMRAM     1     1      0
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (3) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_itoa                                        16    10      6    2405
                                             24 COMRAM    16    10      6
                 _EUSART1_Write_Text
                               _itoa
                            _rtcRead (ARG)
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    1698
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1307
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write_Text                                   6     3      3     460
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_itoa
     _EUSART1_Write_Text
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _rtcRead (ARG)
       _BCDtoDecimal
       _I2C_Write
         _I2C_stop
       _I2C_read
       _I2C_start
       _I2C_stop
   _I2C_buffClear
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
   _RTC_Init
     _PCF8523_write
       _I2C_Write
         _I2C_stop
       _I2C_start
       _I2C_stop
       _decimalToBCD (ARG)
         ___awdiv
         ___awmod
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _I2C_Init
       ___aldiv
         ___wmul (ARG)
       ___wmul
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   _countDown
     _PCF8523_write
       _I2C_Write
         _I2C_stop
       _I2C_start
       _I2C_stop
       _decimalToBCD (ARG)
         ___awdiv
         ___awmod
   _interrupt_Init
   _rtcRead
     _BCDtoDecimal
     _I2C_Write
       _I2C_stop
     _I2C_read
     _I2C_start
     _I2C_stop
   _rtc_INTF_CLR
     _PCF8523_write
       _I2C_Write
         _I2C_stop
       _I2C_start
       _I2C_stop
       _decimalToBCD (ARG)
         ___awdiv
         ___awmod
   _setDate
     _PCF8523_write
       _I2C_Write
         _I2C_stop
       _I2C_start
       _I2C_stop
       _decimalToBCD (ARG)
         ___awdiv
         ___awmod
     _decimalToBCD
       ___awdiv
       ___awmod
   _setTime
     _PCF8523_write
       _I2C_Write
         _I2C_stop
       _I2C_start
       _I2C_stop
       _decimalToBCD (ARG)
         ___awdiv
         ___awmod
     _decimalToBCD
       ___awdiv
       ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0     100       8      100.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     29      4B       1       78.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14B       6        0.0%
DATA                 0      0     14B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr 06 20:01:21 2020

                              EUSART1_itoa@base 001D                                EUSART1_itoa@data 0019  
                            __size_of_I2C_Write 001A                            __end_of_decimalToBCD 174E  
                                            u80 1856                                    ___awdiv@sign 0006  
                           ___wmul@multiplicand 0003                          __end_of_interrupt_Init 18CA  
                                setTime@timeReg 001C                                    __CFG_CP0$OFF 000000  
                            __size_of_I2C_start 000A                                     __CFG_OSC$HS 000000  
                                           l125 13A8                                             l126 1332  
                                           l127 13A6                                             l260 12E0  
                                           _ADC 0036                                             l427 1852  
                                           l437 1880                                             l446 18EA  
                                           l458 18F4                                             l810 148E  
                                           l802 144A                                             l811 149C  
                                           l803 1456                                             l580 0FF2  
                                           l805 146C                                             l806 1464  
                                           l590 10FA                                             l582 1034  
                                           l591 1072                                             l583 1042  
                                           l680 118A                                             l592 1120  
                                           l576 0F6A                                             l681 117E  
                                           l809 1484                                             l593 1094  
                                           l577 1042                                             l594 10B6  
                                           l578 0FAE                                             l595 10D8  
                                           l684 11BE                                             l596 1126  
                                           l685 11CC                                             l677 1144  
                                           l686 11E2                                             l678 115C  
                                           l790 13D6                                             l952 15FE  
                                           l792 13F4                                             l793 13EC  
                                           l956 11FC                                             l796 1414  
                                           l797 141E                                             l789 13C6  
                                           l958 1236                                             l798 142C  
                                           l959 1274                                             u930 151C  
                                           u960 1636                                    ___awmod@sign 0006  
                                           prod 000FF3                                             wreg 000FE8  
                                    _TXSTA1bits 000FAD                                    __CFG_IESO$ON 000000  
                                          l1040 1510                                            l1050 162A  
                                          l1043 1538                                            l1044 1542  
                                          l1053 164A                                            l1054 1654  
                                          l1039 1518                                            l1049 1632  
                                          l2458 1060                                            STR_1 0F3A  
                                          u1010 118E                                            u1200 138E  
                                          u1130 1470                                            u1070 13F8  
                                          u1341 1050                                            _LATA 000F89  
                                          u1190 1376                                            _LATB 000F8A  
                                          u1255 188C                                            u1407 1840  
                                          _LATC 000F8B                                            u1256 188E  
                                          _LATD 000F8C                                            u1417 1796  
                                          u1281 0F4A                                            _LATE 000F8D  
                                          u1275 17B8                                            u1380 12EC  
                                          u1197 136C                                            u1386 12EE  
                                          u1397 12AA                            __end_of_BCDtoDecimal 17CC  
                                 __CFG_FCMEN$ON 000000                                            _main 1298  
                                          _itoa 15DA                                __end_of_I2C_Init 14FA  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf2 000FDF  
                                          fsr1l 000FE1                                            fsr2l 000FD9  
                                          _utoa 11F4                                   ?_EUSART1_itoa 0019  
                              __end_of_I2C_read 1894                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0000  
                              __end_of_I2C_stop 18FC                                    ___param_bank 000000  
                                 __CFG_PLLDIV$1 000000                  __size_of_OSCILLATOR_Initialize 002A  
                 __end_of_OSCILLATOR_Initialize 17A4                                 ?_interrupt_Init 0001  
                               __end_of___aldiv 11F4                                           ?_main 0001  
                                         ?_itoa 0011                                 __end_of___awdiv 1436  
                               __end_of___awmod 14A6                                           ?_utoa 0008  
                               ___awdiv@divisor 0003                                 __end_of___lwdiv 154C  
                               __end_of___lwmod 165E                                 ___awdiv@counter 0005  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                                           _sData 002A  
                                         _errno 0034                                  __CFG_CLKOEC$ON 000000  
                              __end_of_RTC_Init 1812                                 __end_of_setDate 1128  
                               __end_of_setTime 1044                               __end_of_I2C_Write 1866  
                               __end_of_rtcRead 1716                                           tablat 000FF5  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         utoa@c 0010                                           utoa@v 000E  
                                         status 000FD8                               __end_of_I2C_start 18F2  
                                ??_EUSART1_itoa 001F              _EUSART1_DefaultFramingErrorHandler 000000  
                      __size_of_SPI1_Initialize 000E                         __CFG_DSWDTOSC$INTOSCREF 000000  
                               __initialization 154C                      __end_of_EUSART1_Initialize 169C  
                                  __end_of_main 132C                                    __end_of_itoa 161C  
                                  __end_of_utoa 1298                                          ??_main 0029  
                                        ??_itoa 0017                                          ??_utoa 000E  
                                 __activetblptr 000002                                          _ANCON0 000F48  
                                        _ANCON1 000F49                                ___awdiv@dividend 0001  
                                        _ODCON1 000F42                                          _ODCON2 000F41  
                                        _ODCON3 000F40                                  __CFG_WDTEN$OFF 000000  
                                        _RCREG1 000FAF                                          _RCSTA1 000FAC  
                                        _OSCCON 000FD3                                          _SPBRG1 000FB0  
                                __CFG_WPCFG$OFF 000000                                          _TXREG1 000FAE  
                                        _TXSTA1 000FAD                                  __CFG_WPDIS$OFF 000000  
                         __size_of_decimalToBCD 0038                                  __CFG_XINST$OFF 000000  
                                        _TxData 0100                                       ??___aldiv 000F  
                                        ___wmul 17CC                                       ??___awdiv 0005  
                                __CFG_STVREN$ON 000000                                       ??___awmod 0005  
                                     ??___lwdiv 0005                          __size_of_I2C_buffClear 0010  
                                     ??___lwmod 0005                        ?_EUSART1_SetErrorHandler 0001  
                                        clear_0 1574                                          clear_1 1586  
                              ___awdiv@quotient 0007                                 ___awmod@divisor 0003  
                               ___awmod@counter 0005                ??_EUSART1_SetOverrunErrorHandler 0003  
               ?_EUSART1_SetOverrunErrorHandler 0001                                          itoa@cp 0017  
                                  __pdataCOMRAM 003F                                       ?_I2C_Init 0001  
                                     ??_setDate 0012                                    __mediumconst 0000  
                                     ?_I2C_read 0001                                       ??_setTime 0011  
                         __size_of_BCDtoDecimal 0028                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                                     ??_rtcRead 0007                           __end_of_PCF8523_write 1830  
                                     ?_I2C_stop 0001                                 __CFG_DSBOREN$ON 000000  
                                  _decimalToBCD 1716                                __end_ofexp@coeff 0F1F  
                             _SYSTEM_Initialize 1866                                __end_oflog@coeff 0F3A  
                                    __accesstop 0060                         __end_of__initialization 158C  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                               __CFG_IOL1WAY$ON 000000                            __CFG_WPEND$PAGE_WPFP 000000  
                    __end_of_EUSART1_Write_Text 13B2                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 0016                               ??_SPI1_Initialize 0001  
                               __CFG_DSWDTEN$ON 000000                                 __CFG_DSWDTPS$G2 000000  
                                  _BCDtoDecimal 17A4                                       ?_RTC_Init 0001  
                          __end_of_EUSART1_itoa 16DA                                      ??_I2C_Init 0015  
                                    ??_I2C_read 0003                                      ??_I2C_stop 0001  
                                   setDate@year 0011                       __end_of_SYSTEM_Initialize 187E  
                                 _I2C_buffClear 1894                                      __pbssBANK1 0100  
                            __size_of_countDown 002C                 __end_of_EUSART1_SetErrorHandler 18E8  
                             __CFG_PLLSEL$PLL4X 000000                                ??_interrupt_Init 0001  
                                       ?___wmul 0001                                      ??_RTC_Init 000F  
                                 ?_rtc_INTF_CLR 000F          __end_of_EUSART1_SetFramingErrorHandler 18DE  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 18D4  
                           PCF8523_write@regAdd 000E                                         _REFOCON 000F3D  
                                rtcRead@address 0007                                         _OSCCON2 000F87  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000F7F  
                                       _SSP1ADD 000FC8                                         _SSP2ADD 000F74  
                                       _SSP1BUF 000FC9                                         _SSP2BUF 000F75  
                                ?_I2C_buffClear 0001                                I2C_read@ACK_NACK 0001  
                                   setTime@hour 0013                                       _I2C_Write 184C  
                       EUSART1_Write_Text@iSize 0003                                         __Hparam 0000  
                                       __Lparam 0000                                       _I2C_start 18E8  
                                setDate@timeReg 0018                                  setDate@weekday 000F  
                                       ___aldiv 1128                                         ___awdiv 13B2  
                                       ___awmod 1436                                 __size_of___wmul 0026  
                                       ___lwdiv 14FA                                         ___lwmod 161C  
                                  __psmallconst 0F00                                  ??_rtc_INTF_CLR 0011  
                             __end_of_countDown 177A                                         __pcinit 154C  
                                       __ramtop 0F00                                         __ptext0 1298  
                                       __ptext1 0F3E                                         __ptext2 1044  
                                       __ptext3 1716                                         __ptext4 1436  
                                       __ptext5 13B2                                         __ptext6 1830  
                                       __ptext7 16DA                                         __ptext8 187E  
                                       __ptext9 17A4                           _OSCILLATOR_Initialize 177A  
                              ___awmod@dividend 0001                                         _setDate 1044  
                              ___aldiv@dividend 0007                              _EUSART1_Initialize 165E  
                      ??_PIN_MANAGER_Initialize 0001                                         _setTime 0F3E  
                                       _rtcRead 16DA                      __size_of_SYSTEM_Initialize 0018  
                          end_of_initialization 158C                             ?_EUSART1_Initialize 0001  
                                       itoa@buf 0011                                         itoa@val 0013  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 003A  
                                    ?_I2C_Write 0001                                      ?_I2C_start 0001  
                              ___aldiv@quotient 0011                                         postdec1 000FE5  
                                       postinc0 000FEE                                         postinc2 000FDE  
                                       utoa@buf 0008                           __size_of_EUSART1_itoa 003E  
                                       utoa@val 000A                            ??_EUSART1_Initialize 0003  
                                 countDown@time 000F                                       _PORTBbits 000F81  
                               ??_I2C_buffClear 0002                                       _TRISDbits 000F95  
                                     _TRISEbits 000F96                               __size_of_I2C_Init 0054  
                               EUSART1_itoa@buf 001F                __size_of_EUSART1_SetErrorHandler 000A  
                                 setTime@minute 000F                                   setTime@second 0010  
                             __size_of_I2C_read 0016                               __size_of_I2C_stop 000A  
                          BCDtoDecimal@BCDvalue 0001                                 _SPI1_Initialize 18A4  
                             __CFG_WPFP$PAGE_63 000000                                    _EUSART1_itoa 169C  
                     rtc_INTF_CLR@interruptFlag 000F                             __CFG_MSSP7B_EN$MSK7 000000  
                                __end_of___wmul 17F2                                   __pidataCOMRAM 18B2  
                        ?_OSCILLATOR_Initialize 0001                               __size_of_RTC_Init 0020  
                            _EUSART1_Write_Text 132C                             start_initialization 154C  
               __size_of_PIN_MANAGER_Initialize 0044                                    setDate@F7764 0047  
                           ?_EUSART1_Write_Text 0001                            __end_of_rtc_INTF_CLR 184C  
                                   ??_I2C_Write 0001                                     ??_I2C_start 0001  
                                  setDate@month 0010                            decimalToBCD@DecValue 0009  
                        __size_of_PCF8523_write 001E                                        ??___wmul 0005  
                          ??_EUSART1_Write_Text 0004                               __CFG_ADCSEL$BIT10 000000  
                               I2C_Init@F_clock 0015                                     __pbssCOMRAM 002A  
                       __end_of_SPI1_Initialize 18B2                                      setDate@day 0017  
              ??_EUSART1_SetFramingErrorHandler 0003                 ?_EUSART1_SetFramingErrorHandler 0001  
                              ___lwdiv@dividend 0001                          _PIN_MANAGER_Initialize 1596  
                                      ?___aldiv 0007                                        ?___awdiv 0001  
                                      ?___awmod 0001                                        ?___lwdiv 0001  
                                      ?___lwmod 0001                               countDown@timeUnit 0010  
                                   __smallconst 0F00                                        _BAUDCON1 000F7E  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        _I2C_Init 14A6  
                                     _countDown 174E                            _EUSART1_ErrorHandler 0038  
                                      ?_setDate 000F                            __CFG_RTCOSC$T1OSCREF 000000  
                                      _I2C_read 187E                                        ?_setTime 000F  
                                      ?_rtcRead 0001                                        _I2C_stop 18F2  
                       _EUSART1_SetErrorHandler 18DE                                   _PCF8523_write 1812  
                              ___lwdiv@quotient 0005                                 ___aldiv@divisor 000B  
                               ___aldiv@counter 000F                                  ___wmul@product 0005  
       EUSART1_SetErrorHandler@interruptHandler 0001                                        _LATBbits 000F8A  
                                      _LATCbits 000F8B                                        _PIE3bits 000FA3  
                               setDate@Register 0012                                    setTime@F7757 003F  
                                      _PIR1bits 000F9E                                        _PIR3bits 000FA4  
                              __CFG_WDTPS$32768 000000                                        _SSP1CON1 000FC6  
                                      _SSP1STAT 000FC7                                        _RTC_Init 17F2  
                             ___wmul@multiplier 0001                                __CFG_SOSCSEL$DIG 000000  
                       __size_of_interrupt_Init 000A                                      ?_countDown 000F  
                             __CFG_CFGPLLEN$OFF 000000                                  ?_PCF8523_write 000D  
                         __size_of_rtc_INTF_CLR 001C                                ?_SPI1_Initialize 0001  
                                   _INTCON2bits 000FF1                                       copy_data0 1560  
                                 ?_decimalToBCD 0009                        EUSART1_Write_Text@pbData 0001  
                                      __Hrparam 0000                                        __Lrparam 0000  
                                 I2C_Write@data 0001                         ??_OSCILLATOR_Initialize 0001  
                              __size_of___aldiv 00CC                                __size_of___awdiv 0084  
                              __size_of___awmod 0070                                   ?_BCDtoDecimal 0001  
                   __size_of_EUSART1_Initialize 003E                                __size_of___lwdiv 0052  
                              __size_of___lwmod 0042                                    _rtc_INTF_CLR 1830  
                     ??_EUSART1_SetErrorHandler 0003                     _EUSART1_DefaultErrorHandler 000000  
                               ___lwdiv@divisor 0003                                __size_of_setDate 00E4  
                               ___lwdiv@counter 0007                                __size_of_setTime 0106  
                                      __ptext10 18C0                                        __ptext11 174E  
                                      __ptext20 18CA                                        __ptext12 1866  
                                      __ptext21 18D4                                        __ptext13 18A4  
                                      __ptext30 15DA                                        __ptext22 18DE  
                                      __ptext14 1596                                        __ptext31 11F4  
                                      __ptext23 17F2                                        __ptext15 177A  
                                      __ptext32 161C                                        __ptext24 1812  
                                      __ptext16 14A6                                        __ptext33 14FA  
                                      __ptext25 1894                                        __ptext17 17CC  
                                      __ptext34 132C                                        __ptext26 18E8  
                                      __ptext18 1128                                        __ptext27 184C  
                                      __ptext19 165E                                        __ptext28 18F2  
                                      __ptext29 169C                           __end_of_I2C_buffClear 18A4  
                             PCF8523_write@data 000D                                __size_of_rtcRead 003C  
                                  _SSP1CON1bits 000FC6                                  ??_decimalToBCD 000B  
                                  _SSP2CON1bits 000F72                                    _SSP2CON2bits 000F71  
                                 __size_of_main 0094                                   __size_of_itoa 0042  
                                 __size_of_utoa 00A4  EUSART1_SetOverrunErrorHandler@interruptHandler 0001  
                                ??_BCDtoDecimal 0003                                    _SSP1STATbits 000FC7  
                   _EUSART1_FramingErrorHandler 003C                                    _SSP2STATbits 000F73  
                                      exp@coeff 0F01                                        log@coeff 0F1F  
                               ??_PCF8523_write 000E                                     ??_countDown 0010  
                                    _INTCONbits 000FF2                                        itoa@base 0015  
                              ___lwmod@dividend 0001                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 18D4         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 18CA                                      _RCSTA1bits 000FAC  
                 EUSART1_Write_Text@iSizeQueued 0006  EUSART1_SetFramingErrorHandler@interruptHandler 0001  
                   __size_of_EUSART1_Write_Text 0086                              _eusart1RxLastError 003E  
                                      utoa@base 000C                                  _interrupt_Init 18C0  
                               ___lwmod@divisor 0003                                 setTime@Register 0014  
                               ___lwmod@counter 0005                                    ___aldiv@sign 0010  
                __end_of_PIN_MANAGER_Initialize 15DA  
