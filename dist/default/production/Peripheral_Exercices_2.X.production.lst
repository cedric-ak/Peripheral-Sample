

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Apr 05 22:32:11 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46J13
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44  0000                     
    45                           ; Version 1.45
    46                           ; Generated 16/11/2017 GMT
    47                           ; 
    48                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18LF46J13 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    81  0000                     
    82 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    83  0000                     
    84 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    85  0000                     
    86                           	psect	idataCOMRAM
    87  001874                     __pidataCOMRAM:
    88                           	opt stack 0
    89                           
    90                           ;initializer for setDate@F7749
    91  001874  0006               	dw	6
    92  001876  0007               	dw	7
    93  001878  0008               	dw	8
    94  00187A  0009               	dw	9
    95  00187C  00                 	db	0
    96  00187D  00                 	db	0
    97                           
    98                           ;initializer for setTime@F7742
    99  00187E  0003               	dw	3
   100  001880  0004               	dw	4
   101  001882  0005               	dw	5
   102  001884  00                 	db	0
   103  001885  00                 	db	0
   104                           
   105                           	psect	smallconst
   106  000F00                     __psmallconst:
   107                           	opt stack 0
   108  000F00  00                 	db	0
   109  000F01  00                 	db	0
   110  000F02  80                 	db	128
   111  000F03  3F                 	db	63
   112  000F04  72                 	db	114
   113  000F05  31                 	db	49
   114  000F06  3F                 	db	63
   115  000F07  FE                 	db	254
   116  000F08  75                 	db	117
   117  000F09  3E                 	db	62
   118  000F0A  58                 	db	88
   119  000F0B  63                 	db	99
   120  000F0C  3D                 	db	61
   121  000F0D  95                 	db	149
   122  000F0E  1D                 	db	29
   123  000F0F  3C                 	db	60
   124  000F10  C5                 	db	197
   125  000F11  AE                 	db	174
   126  000F12  3A                 	db	58
   127  000F13  79                 	db	121
   128  000F14  21                 	db	33
   129  000F15  39                 	db	57
   130  000F16  94                 	db	148
   131  000F17  80                 	db	128
   132  000F18  37                 	db	55
   133  000F19  93                 	db	147
   134  000F1A  A7                 	db	167
   135  000F1B  35                 	db	53
   136  000F1C  56                 	db	86
   137  000F1D  15                 	db	21
   138  000F1E  34                 	db	52
   139  000F1F                     __end_ofexp@coeff:
   140                           	opt stack 0
   141  000F1F  00                 	db	0
   142  000F20  00                 	db	0
   143  000F21  00                 	db	0
   144  000F22  00                 	db	0
   145  000F23  80                 	db	128
   146  000F24  3F                 	db	63
   147  000F25  F0                 	db	240
   148  000F26  FF                 	db	255
   149  000F27  BE                 	db	190
   150  000F28  E2                 	db	226
   151  000F29  A9                 	db	169
   152  000F2A  3E                 	db	62
   153  000F2B  83                 	db	131
   154  000F2C  76                 	db	118
   155  000F2D  BE                 	db	190
   156  000F2E  AE                 	db	174
   157  000F2F  2B                 	db	43
   158  000F30  3E                 	db	62
   159  000F31  3C                 	db	60
   160  000F32  C3                 	db	195
   161  000F33  BD                 	db	189
   162  000F34  D2                 	db	210
   163  000F35  13                 	db	19
   164  000F36  3D                 	db	61
   165  000F37  78                 	db	120
   166  000F38  D3                 	db	211
   167  000F39  BB                 	db	187
   168  000F3A                     __end_oflog@coeff:
   169                           	opt stack 0
   170  0000                     _ODCON3	set	3904
   171  0000                     _ODCON2	set	3905
   172  0000                     _ODCON1	set	3906
   173  0000                     _ANCON1	set	3913
   174  0000                     _ANCON0	set	3912
   175  0000                     _REFOCON	set	3901
   176  0000                     _SSP2STATbits	set	3955
   177  0000                     _SSP2BUF	set	3957
   178  0000                     _SSP2ADD	set	3956
   179  0000                     _SSP2CON2bits	set	3953
   180  0000                     _SSP2CON1bits	set	3954
   181  0000                     _TRISDbits	set	3989
   182  0000                     _PIR3bits	set	4004
   183  0000                     _PIE3bits	set	4003
   184  0000                     _PORTBbits	set	3969
   185  0000                     _LATCbits	set	3979
   186  0000                     _LATBbits	set	3978
   187  0000                     _INTCONbits	set	4082
   188  0000                     _TRISEbits	set	3990
   189  0000                     _INTCON2bits	set	4081
   190  0000                     _TRISD	set	3989
   191  0000                     _TRISC	set	3988
   192  0000                     _TRISB	set	3987
   193  0000                     _TRISA	set	3986
   194  0000                     _TRISE	set	3990
   195  0000                     _LATC	set	3979
   196  0000                     _LATB	set	3978
   197  0000                     _LATA	set	3977
   198  0000                     _LATD	set	3980
   199  0000                     _LATE	set	3981
   200  0000                     _OSCCON2	set	3975
   201  0000                     _OSCTUNE	set	3995
   202  0000                     _OSCCON	set	4051
   203  0000                     _TXREG1	set	4014
   204  0000                     _RCREG1	set	4015
   205  0000                     _RCSTA1bits	set	4012
   206  0000                     _TXSTA1bits	set	4013
   207  0000                     _PIR1bits	set	3998
   208  0000                     _SPBRGH1	set	3967
   209  0000                     _SPBRG1	set	4016
   210  0000                     _TXSTA1	set	4013
   211  0000                     _RCSTA1	set	4012
   212  0000                     _BAUDCON1	set	3966
   213  0000                     _SSP1STATbits	set	4039
   214  0000                     _SSP1BUF	set	4041
   215  0000                     _SSP1CON1bits	set	4038
   216  0000                     _SSP1ADD	set	4040
   217  0000                     _SSP1CON1	set	4038
   218  0000                     _SSP1STAT	set	4039
   219  000F3A                     STR_1:
   220  000F3A  0D                 	db	13
   221  000F3B  00                 	db	0
   222                           
   223                           ; #config settings
   224  000F3C  00                 	db	0	; dummy byte at the end
   225  0000                     
   226                           	psect	cinit
   227  00162C                     __pcinit:
   228                           	opt stack 0
   229  00162C                     start_initialization:
   230                           	opt stack 0
   231  00162C                     __initialization:
   232                           	opt stack 0
   233                           
   234                           ; Initialize objects allocated to COMRAM (18 bytes)
   235                           ; load TBLPTR registers with __pidataCOMRAM
   236  00162C  0E74               	movlw	low __pidataCOMRAM
   237  00162E  6EF6               	movwf	tblptrl,c
   238  001630  0E18               	movlw	high __pidataCOMRAM
   239  001632  6EF7               	movwf	tblptrh,c
   240  001634  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   241  001636  6EF8               	movwf	tblptru,c
   242  001638  EE00  F040         	lfsr	0,__pdataCOMRAM
   243  00163C  EE10 F012          	lfsr	1,18
   244  001640                     copy_data0:
   245  001640  0009               	tblrd		*+
   246  001642  CFF5 FFEE          	movff	tablat,postinc0
   247  001646  50E5               	movf	postdec1,w,c
   248  001648  50E1               	movf	fsr1l,w,c
   249  00164A  E1FA               	bnz	copy_data0
   250                           
   251                           ; Clear objects allocated to BANK1 (256 bytes)
   252  00164C  EE01  F000         	lfsr	0,__pbssBANK1
   253  001650  EE11 F000          	lfsr	1,256
   254  001654                     clear_0:
   255  001654  6AEE               	clrf	postinc0,c
   256  001656  50E5               	movf	postdec1,w,c
   257  001658  50E1               	movf	fsr1l,w,c
   258  00165A  E1FC               	bnz	clear_0
   259  00165C  50E2               	movf	fsr1h,w,c
   260  00165E  E1FA               	bnz	clear_0
   261                           
   262                           ; Clear objects allocated to COMRAM (21 bytes)
   263  001660  EE00  F02B         	lfsr	0,__pbssCOMRAM
   264  001664  0E15               	movlw	21
   265  001666                     clear_1:
   266  001666  6AEE               	clrf	postinc0,c
   267  001668  06E8               	decf	wreg,f,c
   268  00166A  E1FD               	bnz	clear_1
   269  00166C                     end_of_initialization:
   270                           	opt stack 0
   271  00166C                     __end_of__initialization:
   272                           	opt stack 0
   273  00166C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   274  00166E  6EF8               	movwf	tblptru,c
   275  001670  0100               	movlb	0
   276  001672  EF0E  F009         	goto	_main	;jump to C main() function
   277                           tblptru	equ	0xFF8
   278                           tblptrh	equ	0xFF7
   279                           tblptrl	equ	0xFF6
   280                           tablat	equ	0xFF5
   281                           postinc0	equ	0xFEE
   282                           wreg	equ	0xFE8
   283                           postdec1	equ	0xFE5
   284                           fsr1h	equ	0xFE2
   285                           fsr1l	equ	0xFE1
   286                           
   287                           	psect	bssCOMRAM
   288  00002B                     __pbssCOMRAM:
   289                           	opt stack 0
   290  00002B                     _sData:
   291                           	opt stack 0
   292  00002B                     	ds	10
   293  000035                     _errno:
   294                           	opt stack 0
   295  000035                     	ds	2
   296  000037                     _ADC:
   297                           	opt stack 0
   298  000037                     	ds	2
   299  000039                     _EUSART1_ErrorHandler:
   300                           	opt stack 0
   301  000039                     	ds	2
   302  00003B                     _EUSART1_OverrunErrorHandler:
   303                           	opt stack 0
   304  00003B                     	ds	2
   305  00003D                     _EUSART1_FramingErrorHandler:
   306                           	opt stack 0
   307  00003D                     	ds	2
   308  00003F                     _eusart1RxLastError:
   309                           	opt stack 0
   310  00003F                     	ds	1
   311                           tblptru	equ	0xFF8
   312                           tblptrh	equ	0xFF7
   313                           tblptrl	equ	0xFF6
   314                           tablat	equ	0xFF5
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           postdec1	equ	0xFE5
   318                           fsr1h	equ	0xFE2
   319                           fsr1l	equ	0xFE1
   320                           
   321                           	psect	dataCOMRAM
   322  000040                     __pdataCOMRAM:
   323                           	opt stack 0
   324  000040                     setDate@F7749:
   325                           	opt stack 0
   326  000040                     	ds	10
   327  00004A                     setTime@F7742:
   328                           	opt stack 0
   329  00004A                     	ds	8
   330                           tblptru	equ	0xFF8
   331                           tblptrh	equ	0xFF7
   332                           tblptrl	equ	0xFF6
   333                           tablat	equ	0xFF5
   334                           postinc0	equ	0xFEE
   335                           wreg	equ	0xFE8
   336                           postdec1	equ	0xFE5
   337                           fsr1h	equ	0xFE2
   338                           fsr1l	equ	0xFE1
   339                           
   340                           	psect	bssBANK1
   341  000100                     __pbssBANK1:
   342                           	opt stack 0
   343  000100                     _TxData:
   344                           	opt stack 0
   345  000100                     	ds	256
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           postdec1	equ	0xFE5
   353                           fsr1h	equ	0xFE2
   354                           fsr1l	equ	0xFE1
   355                           
   356                           	psect	cstackCOMRAM
   357  000001                     __pcstackCOMRAM:
   358                           	opt stack 0
   359  000001                     ??_OSCILLATOR_Initialize:
   360  000001                     ?___wmul:
   361                           	opt stack 0
   362  000001                     ?___awdiv:
   363                           	opt stack 0
   364  000001                     ?___awmod:
   365                           	opt stack 0
   366  000001                     ?___lwdiv:
   367                           	opt stack 0
   368  000001                     ?___lwmod:
   369                           	opt stack 0
   370  000001                     I2C_Write@data:
   371                           	opt stack 0
   372  000001                     EUSART1_Write_Text@pbData:
   373                           	opt stack 0
   374  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
   375                           	opt stack 0
   376  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   377                           	opt stack 0
   378  000001                     EUSART1_SetErrorHandler@interruptHandler:
   379                           	opt stack 0
   380  000001                     ___wmul@multiplier:
   381                           	opt stack 0
   382  000001                     ___awdiv@dividend:
   383                           	opt stack 0
   384  000001                     ___awmod@dividend:
   385                           	opt stack 0
   386  000001                     ___lwdiv@dividend:
   387                           	opt stack 0
   388  000001                     ___lwmod@dividend:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x0
   392  000001                     	ds	1
   393  000002                     setAlarm@minute:
   394                           	opt stack 0
   395                           
   396                           ; 1 bytes @ 0x1
   397  000002                     	ds	1
   398  000003                     EUSART1_Write_Text@iSize:
   399                           	opt stack 0
   400  000003                     setAlarm@hour:
   401                           	opt stack 0
   402  000003                     ___wmul@multiplicand:
   403                           	opt stack 0
   404  000003                     ___awdiv@divisor:
   405                           	opt stack 0
   406  000003                     ___awmod@divisor:
   407                           	opt stack 0
   408  000003                     ___lwdiv@divisor:
   409                           	opt stack 0
   410  000003                     ___lwmod@divisor:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x2
   414  000003                     	ds	1
   415  000004                     ??_EUSART1_Write_Text:
   416  000004                     setAlarm@day:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x3
   420  000004                     	ds	1
   421  000005                     setAlarm@weekDay:
   422                           	opt stack 0
   423  000005                     ___awdiv@counter:
   424                           	opt stack 0
   425  000005                     ___awmod@counter:
   426                           	opt stack 0
   427  000005                     ___lwmod@counter:
   428                           	opt stack 0
   429  000005                     ___wmul@product:
   430                           	opt stack 0
   431  000005                     ___lwdiv@quotient:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x4
   435  000005                     	ds	1
   436  000006                     EUSART1_Write_Text@iSizeQueued:
   437                           	opt stack 0
   438  000006                     setAlarm@alarmReg:
   439                           	opt stack 0
   440  000006                     ___awdiv@sign:
   441                           	opt stack 0
   442  000006                     ___awmod@sign:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x5
   446  000006                     	ds	1
   447  000007                     ?___aldiv:
   448                           	opt stack 0
   449  000007                     ___lwdiv@counter:
   450                           	opt stack 0
   451  000007                     ___awdiv@quotient:
   452                           	opt stack 0
   453  000007                     ___aldiv@dividend:
   454                           	opt stack 0
   455                           
   456                           ; 4 bytes @ 0x6
   457  000007                     	ds	1
   458  000008                     utoa@buf:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x7
   462  000008                     	ds	1
   463  000009                     decimalToBCD@DecValue:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x8
   467  000009                     	ds	1
   468  00000A                     utoa@val:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x9
   472  00000A                     	ds	1
   473  00000B                     ??_decimalToBCD:
   474  00000B                     ___aldiv@divisor:
   475                           	opt stack 0
   476                           
   477                           ; 4 bytes @ 0xA
   478  00000B                     	ds	1
   479  00000C                     utoa@base:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0xB
   483  00000C                     	ds	1
   484  00000D                     setTime@minute:
   485                           	opt stack 0
   486  00000D                     setDate@weekday:
   487                           	opt stack 0
   488                           
   489                           ; 1 bytes @ 0xC
   490  00000D                     	ds	1
   491  00000E                     setTime@second:
   492                           	opt stack 0
   493  00000E                     setDate@month:
   494                           	opt stack 0
   495  00000E                     utoa@v:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0xD
   499  00000E                     	ds	1
   500  00000F                     setDate@year:
   501                           	opt stack 0
   502  00000F                     ___aldiv@counter:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0xE
   506  00000F                     	ds	1
   507  000010                     ___aldiv@sign:
   508                           	opt stack 0
   509  000010                     utoa@c:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0xF
   513  000010                     	ds	1
   514  000011                     itoa@buf:
   515                           	opt stack 0
   516  000011                     ___aldiv@quotient:
   517                           	opt stack 0
   518  000011                     setTime@Register:
   519                           	opt stack 0
   520                           
   521                           ; 8 bytes @ 0x10
   522  000011                     	ds	1
   523  000012                     setDate@Register:
   524                           	opt stack 0
   525                           
   526                           ; 10 bytes @ 0x11
   527  000012                     	ds	1
   528  000013                     itoa@val:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x12
   532  000013                     	ds	2
   533  000015                     I2C_Init@F_clock:
   534                           	opt stack 0
   535  000015                     itoa@base:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x14
   539  000015                     	ds	1
   540  000016                     
   541                           ; 1 bytes @ 0x15
   542  000016                     	ds	1
   543  000017                     itoa@cp:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x16
   547  000017                     	ds	2
   548  000019                     setTime@hour:
   549                           	opt stack 0
   550  000019                     EUSART1_itoa@data:
   551                           	opt stack 0
   552                           
   553                           ; 4 bytes @ 0x18
   554  000019                     	ds	1
   555  00001A                     setTime@timeReg:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x19
   559  00001A                     	ds	2
   560  00001C                     setDate@day:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x1B
   564  00001C                     	ds	1
   565  00001D                     EUSART1_itoa@base:
   566                           	opt stack 0
   567  00001D                     setDate@timeReg:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x1C
   571  00001D                     	ds	2
   572  00001F                     EUSART1_itoa@buf:
   573                           	opt stack 0
   574                           
   575                           ; 10 bytes @ 0x1E
   576  00001F                     	ds	10
   577  000029                     ??_main:
   578                           
   579                           ; 1 bytes @ 0x28
   580  000029                     	ds	2
   581                           tblptru	equ	0xFF8
   582                           tblptrh	equ	0xFF7
   583                           tblptrl	equ	0xFF6
   584                           tablat	equ	0xFF5
   585                           postinc0	equ	0xFEE
   586                           wreg	equ	0xFE8
   587                           postdec1	equ	0xFE5
   588                           fsr1h	equ	0xFE2
   589                           fsr1l	equ	0xFE1
   590                           
   591 ;;
   592 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   593 ;;
   594 ;; *************** function _main *****************
   595 ;; Defined at:
   596 ;;		line 5 in file "main.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   612 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   613 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   614 ;;Total ram usage:        2 bytes
   615 ;; Hardware stack levels required when called:    4
   616 ;; This function calls:
   617 ;;		_EUSART1_itoa
   618 ;;		_I2C_buffClear
   619 ;;		_RTC_Init
   620 ;;		_SYSTEM_Initialize
   621 ;;		_interrupt_Init
   622 ;;		_setAlarm
   623 ;;		_setDate
   624 ;;		_setTime
   625 ;; This function is called by:
   626 ;;		Startup code after reset
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text0
   631  00121C                     __ptext0:
   632                           	opt stack 0
   633  00121C                     _main:
   634                           	opt stack 27
   635                           
   636                           ;main.c: 7: interrupt_Init();
   637                           
   638                           ;incstack = 0
   639  00121C  EC52  F00C         	call	_interrupt_Init	;wreg free
   640                           
   641                           ;main.c: 8: SYSTEM_Initialize();
   642  001220  EC2E  F00C         	call	_SYSTEM_Initialize	;wreg free
   643                           
   644                           ;main.c: 9: I2C_buffClear();
   645  001224  EC43  F00C         	call	_I2C_buffClear	;wreg free
   646                           
   647                           ;main.c: 10: _delay((unsigned long)((10)*(16000000/4000.0)));
   648  001228  0E34               	movlw	52
   649  00122A  6E29               	movwf	??_main& (0+255),c
   650  00122C  0EF2               	movlw	242
   651  00122E                     u1407:
   652  00122E  2EE8               	decfsz	wreg,f,c
   653  001230  D7FE               	bra	u1407
   654  001232  2E29               	decfsz	??_main& (0+255),f,c
   655  001234  D7FC               	bra	u1407
   656                           
   657                           ;main.c: 12: RTC_Init();
   658  001236  ECEE  F00A         	call	_RTC_Init	;wreg free
   659                           
   660                           ;main.c: 13: setTime(23, 58, 50);
   661  00123A  0E3A               	movlw	58
   662  00123C  6E0D               	movwf	setTime@minute,c
   663  00123E  0E32               	movlw	50
   664  001240  6E0E               	movwf	setTime@second,c
   665  001242  0E17               	movlw	23
   666  001244  EC33  F008         	call	_setTime
   667                           
   668                           ;main.c: 14: setDate(28, Fri, Feb, 21);
   669  001248  0E05               	movlw	5
   670  00124A  6E0D               	movwf	setDate@weekday,c
   671  00124C  0E02               	movlw	2
   672  00124E  6E0E               	movwf	setDate@month,c
   673  001250  0E15               	movlw	21
   674  001252  6E0F               	movwf	setDate@year,c
   675  001254  0E1C               	movlw	28
   676  001256  EC9F  F007         	call	_setDate
   677                           
   678                           ;main.c: 15: setAlarm(0x0A, 59, 0, 0, 0);
   679  00125A  0E3B               	movlw	59
   680  00125C  6E02               	movwf	setAlarm@minute,c
   681  00125E  0E00               	movlw	0
   682  001260  6E03               	movwf	setAlarm@hour,c
   683  001262  0E00               	movlw	0
   684  001264  6E04               	movwf	setAlarm@day,c
   685  001266  0E00               	movlw	0
   686  001268  6E05               	movwf	setAlarm@weekDay,c
   687  00126A  0E0A               	movlw	10
   688  00126C  EC6F  F00A         	call	_setAlarm
   689  001270                     
   690                           ;main.c: 18: EUSART1_itoa(Mon, 10);
   691  001270  0E01               	movlw	1
   692  001272  6E19               	movwf	EUSART1_itoa@data,c
   693  001274  0E00               	movlw	0
   694  001276  6E1A               	movwf	EUSART1_itoa@data+1,c
   695  001278  0E00               	movlw	0
   696  00127A  6E1B               	movwf	EUSART1_itoa@data+2,c
   697  00127C  0E00               	movlw	0
   698  00127E  6E1C               	movwf	EUSART1_itoa@data+3,c
   699  001280  0E00               	movlw	0
   700  001282  6E1E               	movwf	EUSART1_itoa@base+1,c
   701  001284  0E0A               	movlw	10
   702  001286  6E1D               	movwf	EUSART1_itoa@base,c
   703  001288  ECBE  F00B         	call	_EUSART1_itoa	;wreg free
   704                           
   705                           ;main.c: 19: do { LATBbits.LATB5 = ~LATBbits.LATB5; } while(0);
   706  00128C  AA8A               	btfss	3978,5,c	;volatile
   707  00128E  D002               	goto	u1390
   708  001290  0E01               	movlw	1
   709  001292  D001               	goto	u1396
   710  001294                     u1390:
   711  001294  0E00               	movlw	0
   712  001296                     u1396:
   713  001296  0AFF               	xorlw	255
   714  001298  6E29               	movwf	??_main& (0+255),c
   715  00129A  3A29               	swapf	??_main,f,c
   716  00129C  4629               	rlncf	??_main,f,c
   717  00129E  508A               	movf	3978,w,c	;volatile
   718  0012A0  1829               	xorwf	??_main,w,c
   719  0012A2  0BDF               	andlw	-33
   720  0012A4  1829               	xorwf	??_main,w,c
   721  0012A6  6E8A               	movwf	3978,c	;volatile
   722                           
   723                           ;main.c: 20: _delay((unsigned long)((500)*(16000000/4000.0)));
   724  0012A8  0E0B               	movlw	11
   725  0012AA  6E2A               	movwf	(??_main+1)& (0+255),c
   726  0012AC  0E26               	movlw	38
   727  0012AE  6E29               	movwf	??_main& (0+255),c
   728  0012B0  0E5E               	movlw	94
   729  0012B2                     u1417:
   730  0012B2  2EE8               	decfsz	wreg,f,c
   731  0012B4  D7FE               	bra	u1417
   732  0012B6  2E29               	decfsz	??_main& (0+255),f,c
   733  0012B8  D7FC               	bra	u1417
   734  0012BA  2E2A               	decfsz	(??_main+1)& (0+255),f,c
   735  0012BC  D7FA               	bra	u1417
   736  0012BE  D7D8               	goto	l254
   737  0012C0                     __end_of_main:
   738                           	opt stack 0
   739                           tblptru	equ	0xFF8
   740                           tblptrh	equ	0xFF7
   741                           tblptrl	equ	0xFF6
   742                           tablat	equ	0xFF5
   743                           postinc0	equ	0xFEE
   744                           wreg	equ	0xFE8
   745                           postdec1	equ	0xFE5
   746                           fsr1h	equ	0xFE2
   747                           fsr1l	equ	0xFE1
   748                           
   749 ;; *************** function _setTime *****************
   750 ;; Defined at:
   751 ;;		line 36 in file "RTC_PCF8523.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;  hour            1    wreg     unsigned char 
   754 ;;  minute          1   12[COMRAM] unsigned char 
   755 ;;  second          1   13[COMRAM] unsigned char 
   756 ;; Auto vars:     Size  Location     Type
   757 ;;  hour            1   24[COMRAM] unsigned char 
   758 ;;  timeReg         2   25[COMRAM] int 
   759 ;;  Register        8   16[COMRAM] int [4]
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   770 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   771 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   772 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   773 ;;Total ram usage:       15 bytes
   774 ;; Hardware stack levels used:    1
   775 ;; Hardware stack levels required when called:    2
   776 ;; This function calls:
   777 ;;		_I2C_Write
   778 ;;		_I2C_start
   779 ;;		_I2C_stop
   780 ;;		_decimalToBCD
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           	psect	text1
   787  001066                     __ptext1:
   788                           	opt stack 0
   789  001066                     _setTime:
   790                           	opt stack 28
   791                           
   792                           ;incstack = 0
   793                           ;setTime@hour stored from wreg
   794  001066  6E19               	movwf	setTime@hour,c
   795                           
   796                           ;RTC_PCF8523.c: 37: int Register[4] = {0x03, 0x04, 0x05};
   797  001068  EE20  F04A         	lfsr	2,setTime@F7742
   798  00106C  EE10  F011         	lfsr	1,setTime@Register
   799  001070  0E07               	movlw	7
   800  001072                     u1261:
   801  001072  CFDB FFE3          	movff	plusw2,plusw1
   802  001076  06E8               	decf	wreg,f,c
   803  001078  E2FC               	bc	u1261
   804                           
   805                           ;RTC_PCF8523.c: 38: for (int timeReg = 0; timeReg < 3; timeReg++) {
   806  00107A  0E00               	movlw	0
   807  00107C  6E1B               	movwf	setTime@timeReg+1,c
   808  00107E  0E00               	movlw	0
   809  001080  6E1A               	movwf	setTime@timeReg,c
   810  001082                     l2426:
   811  001082  BE1B               	btfsc	setTime@timeReg+1,7,c
   812  001084  D006               	goto	l559
   813  001086  501B               	movf	setTime@timeReg+1,w,c
   814  001088  E162               	bnz	l566
   815  00108A  0E03               	movlw	3
   816  00108C  5C1A               	subwf	setTime@timeReg,w,c
   817  00108E  B0D8               	btfsc	status,0,c
   818  001090  0012               	return	
   819  001092                     l559:
   820                           
   821                           ;RTC_PCF8523.c: 39: I2C_start();
   822  001092  EC66  F00C         	call	_I2C_start	;wreg free
   823                           
   824                           ;RTC_PCF8523.c: 40: I2C_Write(0xD0);
   825  001096  0ED0               	movlw	208
   826  001098  EC21  F00C         	call	_I2C_Write
   827                           
   828                           ;RTC_PCF8523.c: 41: I2C_Write(Register[timeReg]);
   829  00109C  90D8               	bcf	status,0,c
   830  00109E  341A               	rlcf	setTime@timeReg,w,c
   831  0010A0  6ED9               	movwf	fsr2l,c
   832  0010A2  341B               	rlcf	setTime@timeReg+1,w,c
   833  0010A4  6EDA               	movwf	fsr2h,c
   834  0010A6  0E11               	movlw	low setTime@Register
   835  0010A8  26D9               	addwf	fsr2l,f,c
   836  0010AA  0E00               	movlw	high setTime@Register
   837  0010AC  22DA               	addwfc	fsr2h,f,c
   838  0010AE  50DF               	movf	indf2,w,c
   839  0010B0  EC21  F00C         	call	_I2C_Write
   840                           
   841                           ;RTC_PCF8523.c: 42: if (Register[timeReg] == 0x03) {
   842  0010B4  90D8               	bcf	status,0,c
   843  0010B6  341A               	rlcf	setTime@timeReg,w,c
   844  0010B8  6ED9               	movwf	fsr2l,c
   845  0010BA  341B               	rlcf	setTime@timeReg+1,w,c
   846  0010BC  6EDA               	movwf	fsr2h,c
   847  0010BE  0E11               	movlw	low setTime@Register
   848  0010C0  26D9               	addwf	fsr2l,f,c
   849  0010C2  0E00               	movlw	high setTime@Register
   850  0010C4  22DA               	addwfc	fsr2h,f,c
   851  0010C6  0E03               	movlw	3
   852  0010C8  18DE               	xorwf	postinc2,w,c
   853  0010CA  10DE               	iorwf	postinc2,w,c
   854  0010CC  A4D8               	btfss	status,2,c
   855  0010CE  D00B               	goto	l561
   856                           
   857                           ;RTC_PCF8523.c: 43: I2C_Write(decimalToBCD(second)&0x7F);
   858  0010D0  C00E  F009         	movff	setTime@second,decimalToBCD@DecValue
   859  0010D4  6A0A               	clrf	decimalToBCD@DecValue+1,c
   860  0010D6  ECDD  F00B         	call	_decimalToBCD	;wreg free
   861  0010DA  0B7F               	andlw	127
   862  0010DC  EC21  F00C         	call	_I2C_Write
   863                           
   864                           ;RTC_PCF8523.c: 44: I2C_stop();
   865  0010E0  EC6B  F00C         	call	_I2C_stop	;wreg free
   866                           
   867                           ;RTC_PCF8523.c: 45: } else if (Register[timeReg] == 0x04) {
   868  0010E4  D031               	goto	l565
   869  0010E6                     l561:
   870  0010E6  90D8               	bcf	status,0,c
   871  0010E8  341A               	rlcf	setTime@timeReg,w,c
   872  0010EA  6ED9               	movwf	fsr2l,c
   873  0010EC  341B               	rlcf	setTime@timeReg+1,w,c
   874  0010EE  6EDA               	movwf	fsr2h,c
   875  0010F0  0E11               	movlw	low setTime@Register
   876  0010F2  26D9               	addwf	fsr2l,f,c
   877  0010F4  0E00               	movlw	high setTime@Register
   878  0010F6  22DA               	addwfc	fsr2h,f,c
   879  0010F8  0E04               	movlw	4
   880  0010FA  18DE               	xorwf	postinc2,w,c
   881  0010FC  10DE               	iorwf	postinc2,w,c
   882  0010FE  A4D8               	btfss	status,2,c
   883  001100  D00B               	goto	l563
   884                           
   885                           ;RTC_PCF8523.c: 46: I2C_Write(decimalToBCD(minute)&0x7F);
   886  001102  C00D  F009         	movff	setTime@minute,decimalToBCD@DecValue
   887  001106  6A0A               	clrf	decimalToBCD@DecValue+1,c
   888  001108  ECDD  F00B         	call	_decimalToBCD	;wreg free
   889  00110C  0B7F               	andlw	127
   890  00110E  EC21  F00C         	call	_I2C_Write
   891                           
   892                           ;RTC_PCF8523.c: 47: I2C_stop();
   893  001112  EC6B  F00C         	call	_I2C_stop	;wreg free
   894                           
   895                           ;RTC_PCF8523.c: 48: } else if (Register[timeReg] == 0x05) {
   896  001116  D018               	goto	l565
   897  001118                     l563:
   898  001118  90D8               	bcf	status,0,c
   899  00111A  341A               	rlcf	setTime@timeReg,w,c
   900  00111C  6ED9               	movwf	fsr2l,c
   901  00111E  341B               	rlcf	setTime@timeReg+1,w,c
   902  001120  6EDA               	movwf	fsr2h,c
   903  001122  0E11               	movlw	low setTime@Register
   904  001124  26D9               	addwf	fsr2l,f,c
   905  001126  0E00               	movlw	high setTime@Register
   906  001128  22DA               	addwfc	fsr2h,f,c
   907  00112A  0E05               	movlw	5
   908  00112C  18DE               	xorwf	postinc2,w,c
   909  00112E  10DE               	iorwf	postinc2,w,c
   910  001130  A4D8               	btfss	status,2,c
   911  001132  D00A               	goto	l565
   912                           
   913                           ;RTC_PCF8523.c: 49: I2C_Write(decimalToBCD(hour)&0x7F);
   914  001134  C019  F009         	movff	setTime@hour,decimalToBCD@DecValue
   915  001138  6A0A               	clrf	decimalToBCD@DecValue+1,c
   916  00113A  ECDD  F00B         	call	_decimalToBCD	;wreg free
   917  00113E  0B7F               	andlw	127
   918  001140  EC21  F00C         	call	_I2C_Write
   919                           
   920                           ;RTC_PCF8523.c: 50: I2C_stop();
   921  001144  EC6B  F00C         	call	_I2C_stop	;wreg free
   922  001148                     l565:
   923  001148  4A1A               	infsnz	setTime@timeReg,f,c
   924  00114A  2A1B               	incf	setTime@timeReg+1,f,c
   925  00114C  D79A               	goto	l2426
   926  00114E                     l566:
   927  00114E  0012               	return		;funcret
   928  001150                     __end_of_setTime:
   929                           	opt stack 0
   930                           tblptru	equ	0xFF8
   931                           tblptrh	equ	0xFF7
   932                           tblptrl	equ	0xFF6
   933                           tablat	equ	0xFF5
   934                           postinc0	equ	0xFEE
   935                           wreg	equ	0xFE8
   936                           postdec1	equ	0xFE5
   937                           plusw1	equ	0xFE3
   938                           fsr1h	equ	0xFE2
   939                           fsr1l	equ	0xFE1
   940                           indf2	equ	0xFDF
   941                           postinc2	equ	0xFDE
   942                           plusw2	equ	0xFDB
   943                           fsr2h	equ	0xFDA
   944                           fsr2l	equ	0xFD9
   945                           status	equ	0xFD8
   946                           
   947 ;; *************** function _setDate *****************
   948 ;; Defined at:
   949 ;;		line 55 in file "RTC_PCF8523.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  day             1    wreg     unsigned char 
   952 ;;  weekday         1   12[COMRAM] unsigned char 
   953 ;;  month           1   13[COMRAM] unsigned char 
   954 ;;  year            1   14[COMRAM] unsigned char 
   955 ;; Auto vars:     Size  Location     Type
   956 ;;  day             1   27[COMRAM] unsigned char 
   957 ;;  timeReg         2   28[COMRAM] int 
   958 ;;  Register       10   17[COMRAM] int [5]
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   968 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   969 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   970 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   971 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   972 ;;Total ram usage:       18 bytes
   973 ;; Hardware stack levels used:    1
   974 ;; Hardware stack levels required when called:    2
   975 ;; This function calls:
   976 ;;		_I2C_Write
   977 ;;		_I2C_start
   978 ;;		_I2C_stop
   979 ;;		_decimalToBCD
   980 ;; This function is called by:
   981 ;;		_main
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text2
   986  000F3E                     __ptext2:
   987                           	opt stack 0
   988  000F3E                     _setDate:
   989                           	opt stack 28
   990                           
   991                           ;incstack = 0
   992                           ;setDate@day stored from wreg
   993  000F3E  6E1C               	movwf	setDate@day,c
   994                           
   995                           ;RTC_PCF8523.c: 56: int Register[5] = {0x06, 0x07, 0x08, 0x09};
   996  000F40  EE20  F040         	lfsr	2,setDate@F7749
   997  000F44  EE10  F012         	lfsr	1,setDate@Register
   998  000F48  0E09               	movlw	9
   999  000F4A                     u1321:
  1000  000F4A  CFDB FFE3          	movff	plusw2,plusw1
  1001  000F4E  06E8               	decf	wreg,f,c
  1002  000F50  E2FC               	bc	u1321
  1003                           
  1004                           ;RTC_PCF8523.c: 57: for (int timeReg = 0; timeReg < 4; timeReg++) {
  1005  000F52  0E00               	movlw	0
  1006  000F54  6E1E               	movwf	setDate@timeReg+1,c
  1007  000F56  0E00               	movlw	0
  1008  000F58  6E1D               	movwf	setDate@timeReg,c
  1009  000F5A  BE1E               	btfsc	setDate@timeReg+1,7,c
  1010  000F5C  D008               	goto	l571
  1011  000F5E  501E               	movf	setDate@timeReg+1,w,c
  1012  000F60  E105               	bnz	u1330
  1013  000F62  0E04               	movlw	4
  1014  000F64  5C1D               	subwf	setDate@timeReg,w,c
  1015  000F66  B0D8               	btfsc	status,0,c
  1016  000F68  0012               	return	
  1017  000F6A  D001               	goto	l571
  1018  000F6C                     u1330:
  1019  000F6C  0012               	return	
  1020  000F6E                     l571:
  1021                           
  1022                           ;RTC_PCF8523.c: 58: I2C_start();
  1023  000F6E  EC66  F00C         	call	_I2C_start	;wreg free
  1024                           
  1025                           ;RTC_PCF8523.c: 59: I2C_Write(0xD0);
  1026  000F72  0ED0               	movlw	208
  1027  000F74  EC21  F00C         	call	_I2C_Write
  1028                           
  1029                           ;RTC_PCF8523.c: 60: I2C_Write(Register[timeReg]);
  1030  000F78  90D8               	bcf	status,0,c
  1031  000F7A  341D               	rlcf	setDate@timeReg,w,c
  1032  000F7C  6ED9               	movwf	fsr2l,c
  1033  000F7E  341E               	rlcf	setDate@timeReg+1,w,c
  1034  000F80  6EDA               	movwf	fsr2h,c
  1035  000F82  0E12               	movlw	low setDate@Register
  1036  000F84  26D9               	addwf	fsr2l,f,c
  1037  000F86  0E00               	movlw	high setDate@Register
  1038  000F88  22DA               	addwfc	fsr2h,f,c
  1039  000F8A  50DF               	movf	indf2,w,c
  1040  000F8C  EC21  F00C         	call	_I2C_Write
  1041                           
  1042                           ;RTC_PCF8523.c: 61: if (Register[timeReg] == 0x06) {
  1043  000F90  90D8               	bcf	status,0,c
  1044  000F92  341D               	rlcf	setDate@timeReg,w,c
  1045  000F94  6ED9               	movwf	fsr2l,c
  1046  000F96  341E               	rlcf	setDate@timeReg+1,w,c
  1047  000F98  6EDA               	movwf	fsr2h,c
  1048  000F9A  0E12               	movlw	low setDate@Register
  1049  000F9C  26D9               	addwf	fsr2l,f,c
  1050  000F9E  0E00               	movlw	high setDate@Register
  1051  000FA0  22DA               	addwfc	fsr2h,f,c
  1052  000FA2  0E06               	movlw	6
  1053  000FA4  18DE               	xorwf	postinc2,w,c
  1054  000FA6  10DE               	iorwf	postinc2,w,c
  1055  000FA8  A4D8               	btfss	status,2,c
  1056  000FAA  D00B               	goto	l573
  1057                           
  1058                           ;RTC_PCF8523.c: 62: I2C_Write(decimalToBCD(day)&0x7F);
  1059  000FAC  C01C  F009         	movff	setDate@day,decimalToBCD@DecValue
  1060  000FB0  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1061  000FB2  ECDD  F00B         	call	_decimalToBCD	;wreg free
  1062  000FB6  0B7F               	andlw	127
  1063  000FB8  EC21  F00C         	call	_I2C_Write
  1064                           
  1065                           ;RTC_PCF8523.c: 63: I2C_stop();
  1066  000FBC  EC6B  F00C         	call	_I2C_stop	;wreg free
  1067                           
  1068                           ;RTC_PCF8523.c: 64: } else if (Register[timeReg] == 0x07) {
  1069  000FC0  D04A               	goto	l579
  1070  000FC2                     l573:
  1071  000FC2  90D8               	bcf	status,0,c
  1072  000FC4  341D               	rlcf	setDate@timeReg,w,c
  1073  000FC6  6ED9               	movwf	fsr2l,c
  1074  000FC8  341E               	rlcf	setDate@timeReg+1,w,c
  1075  000FCA  6EDA               	movwf	fsr2h,c
  1076  000FCC  0E12               	movlw	low setDate@Register
  1077  000FCE  26D9               	addwf	fsr2l,f,c
  1078  000FD0  0E00               	movlw	high setDate@Register
  1079  000FD2  22DA               	addwfc	fsr2h,f,c
  1080  000FD4  0E07               	movlw	7
  1081  000FD6  18DE               	xorwf	postinc2,w,c
  1082  000FD8  10DE               	iorwf	postinc2,w,c
  1083  000FDA  A4D8               	btfss	status,2,c
  1084  000FDC  D00B               	goto	l575
  1085                           
  1086                           ;RTC_PCF8523.c: 65: I2C_Write(decimalToBCD(weekday)&0x7F);
  1087  000FDE  C00D  F009         	movff	setDate@weekday,decimalToBCD@DecValue
  1088  000FE2  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1089  000FE4  ECDD  F00B         	call	_decimalToBCD	;wreg free
  1090  000FE8  0B7F               	andlw	127
  1091  000FEA  EC21  F00C         	call	_I2C_Write
  1092                           
  1093                           ;RTC_PCF8523.c: 66: I2C_stop();
  1094  000FEE  EC6B  F00C         	call	_I2C_stop	;wreg free
  1095                           
  1096                           ;RTC_PCF8523.c: 67: } else if (Register[timeReg] == 0x08) {
  1097  000FF2  D031               	goto	l579
  1098  000FF4                     l575:
  1099  000FF4  90D8               	bcf	status,0,c
  1100  000FF6  341D               	rlcf	setDate@timeReg,w,c
  1101  000FF8  6ED9               	movwf	fsr2l,c
  1102  000FFA  341E               	rlcf	setDate@timeReg+1,w,c
  1103  000FFC  6EDA               	movwf	fsr2h,c
  1104  000FFE  0E12               	movlw	low setDate@Register
  1105  001000  26D9               	addwf	fsr2l,f,c
  1106  001002  0E00               	movlw	high setDate@Register
  1107  001004  22DA               	addwfc	fsr2h,f,c
  1108  001006  0E08               	movlw	8
  1109  001008  18DE               	xorwf	postinc2,w,c
  1110  00100A  10DE               	iorwf	postinc2,w,c
  1111  00100C  A4D8               	btfss	status,2,c
  1112  00100E  D00B               	goto	l577
  1113                           
  1114                           ;RTC_PCF8523.c: 68: I2C_Write(decimalToBCD(month)&0x7F);
  1115  001010  C00E  F009         	movff	setDate@month,decimalToBCD@DecValue
  1116  001014  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1117  001016  ECDD  F00B         	call	_decimalToBCD	;wreg free
  1118  00101A  0B7F               	andlw	127
  1119  00101C  EC21  F00C         	call	_I2C_Write
  1120                           
  1121                           ;RTC_PCF8523.c: 69: I2C_stop();
  1122  001020  EC6B  F00C         	call	_I2C_stop	;wreg free
  1123                           
  1124                           ;RTC_PCF8523.c: 70: } else if (Register[timeReg] == 0x09) {
  1125  001024  D018               	goto	l579
  1126  001026                     l577:
  1127  001026  90D8               	bcf	status,0,c
  1128  001028  341D               	rlcf	setDate@timeReg,w,c
  1129  00102A  6ED9               	movwf	fsr2l,c
  1130  00102C  341E               	rlcf	setDate@timeReg+1,w,c
  1131  00102E  6EDA               	movwf	fsr2h,c
  1132  001030  0E12               	movlw	low setDate@Register
  1133  001032  26D9               	addwf	fsr2l,f,c
  1134  001034  0E00               	movlw	high setDate@Register
  1135  001036  22DA               	addwfc	fsr2h,f,c
  1136  001038  0E09               	movlw	9
  1137  00103A  18DE               	xorwf	postinc2,w,c
  1138  00103C  10DE               	iorwf	postinc2,w,c
  1139  00103E  A4D8               	btfss	status,2,c
  1140  001040  D00A               	goto	l579
  1141                           
  1142                           ;RTC_PCF8523.c: 71: I2C_Write(decimalToBCD(year)&0x7F);
  1143  001042  C00F  F009         	movff	setDate@year,decimalToBCD@DecValue
  1144  001046  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1145  001048  ECDD  F00B         	call	_decimalToBCD	;wreg free
  1146  00104C  0B7F               	andlw	127
  1147  00104E  EC21  F00C         	call	_I2C_Write
  1148                           
  1149                           ;RTC_PCF8523.c: 72: I2C_stop();
  1150  001052  EC6B  F00C         	call	_I2C_stop	;wreg free
  1151  001056                     l579:
  1152  001056  4A1D               	infsnz	setDate@timeReg,f,c
  1153  001058  2A1E               	incf	setDate@timeReg+1,f,c
  1154  00105A  BE1E               	btfsc	setDate@timeReg+1,7,c
  1155  00105C  D788               	goto	l571
  1156  00105E  501E               	movf	setDate@timeReg+1,w,c
  1157  001060  E101               	bnz	l580
  1158  001062  D77F               	goto	L1
  1159  001064                     l580:
  1160  001064  0012               	return		;funcret
  1161  001066                     __end_of_setDate:
  1162                           	opt stack 0
  1163                           tblptru	equ	0xFF8
  1164                           tblptrh	equ	0xFF7
  1165                           tblptrl	equ	0xFF6
  1166                           tablat	equ	0xFF5
  1167                           postinc0	equ	0xFEE
  1168                           wreg	equ	0xFE8
  1169                           postdec1	equ	0xFE5
  1170                           plusw1	equ	0xFE3
  1171                           fsr1h	equ	0xFE2
  1172                           fsr1l	equ	0xFE1
  1173                           indf2	equ	0xFDF
  1174                           postinc2	equ	0xFDE
  1175                           plusw2	equ	0xFDB
  1176                           fsr2h	equ	0xFDA
  1177                           fsr2l	equ	0xFD9
  1178                           status	equ	0xFD8
  1179                           
  1180 ;; *************** function _decimalToBCD *****************
  1181 ;; Defined at:
  1182 ;;		line 99 in file "RTC_PCF8523.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  DecValue        2    8[COMRAM] int 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;		None
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      unsigned char 
  1189 ;; Registers used:
  1190 ;;		wreg, status,2, status,0, cstack
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1198 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1199 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1200 ;;Total ram usage:        4 bytes
  1201 ;; Hardware stack levels used:    1
  1202 ;; Hardware stack levels required when called:    1
  1203 ;; This function calls:
  1204 ;;		___awdiv
  1205 ;;		___awmod
  1206 ;; This function is called by:
  1207 ;;		_setTime
  1208 ;;		_setDate
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text3
  1213  0017BA                     __ptext3:
  1214                           	opt stack 0
  1215  0017BA                     _decimalToBCD:
  1216                           	opt stack 28
  1217                           
  1218                           ;RTC_PCF8523.c: 101: return (((DecValue / 10) << 4) | (DecValue % 10));
  1219                           
  1220                           ;incstack = 0
  1221  0017BA  C009  F001         	movff	decimalToBCD@DecValue,___awmod@dividend
  1222  0017BE  C00A  F002         	movff	decimalToBCD@DecValue+1,___awmod@dividend+1
  1223  0017C2  0E00               	movlw	0
  1224  0017C4  6E04               	movwf	___awmod@divisor+1,c
  1225  0017C6  0E0A               	movlw	10
  1226  0017C8  6E03               	movwf	___awmod@divisor,c
  1227  0017CA  EC37  F00A         	call	___awmod	;wreg free
  1228  0017CE  C001  F00B         	movff	?___awmod,??_decimalToBCD
  1229  0017D2  C002  F00C         	movff	?___awmod+1,??_decimalToBCD+1
  1230  0017D6  C009  F001         	movff	decimalToBCD@DecValue,___awdiv@dividend
  1231  0017DA  C00A  F002         	movff	decimalToBCD@DecValue+1,___awdiv@dividend+1
  1232  0017DE  0E00               	movlw	0
  1233  0017E0  6E04               	movwf	___awdiv@divisor+1,c
  1234  0017E2  0E0A               	movlw	10
  1235  0017E4  6E03               	movwf	___awdiv@divisor,c
  1236  0017E6  ECF5  F009         	call	___awdiv	;wreg free
  1237  0017EA  3801               	swapf	?___awdiv,w,c
  1238  0017EC  0BF0               	andlw	240
  1239  0017EE  100B               	iorwf	??_decimalToBCD,w,c
  1240  0017F0  0012               	return	
  1241  0017F2                     __end_of_decimalToBCD:
  1242                           	opt stack 0
  1243                           tblptru	equ	0xFF8
  1244                           tblptrh	equ	0xFF7
  1245                           tblptrl	equ	0xFF6
  1246                           tablat	equ	0xFF5
  1247                           postinc0	equ	0xFEE
  1248                           wreg	equ	0xFE8
  1249                           postdec1	equ	0xFE5
  1250                           plusw1	equ	0xFE3
  1251                           fsr1h	equ	0xFE2
  1252                           fsr1l	equ	0xFE1
  1253                           indf2	equ	0xFDF
  1254                           postinc2	equ	0xFDE
  1255                           plusw2	equ	0xFDB
  1256                           fsr2h	equ	0xFDA
  1257                           fsr2l	equ	0xFD9
  1258                           status	equ	0xFD8
  1259                           
  1260 ;; *************** function ___awmod *****************
  1261 ;; Defined at:
  1262 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  dividend        2    0[COMRAM] int 
  1265 ;;  divisor         2    2[COMRAM] int 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  sign            1    5[COMRAM] unsigned char 
  1268 ;;  counter         1    4[COMRAM] unsigned char 
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  2    0[COMRAM] int 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2, status,0
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1278 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1281 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1282 ;;Total ram usage:        6 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; This function calls:
  1285 ;;		Nothing
  1286 ;; This function is called by:
  1287 ;;		_decimalToBCD
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text4
  1292  00146E                     __ptext4:
  1293                           	opt stack 0
  1294  00146E                     ___awmod:
  1295                           	opt stack 28
  1296                           
  1297                           ;incstack = 0
  1298  00146E  0E00               	movlw	0
  1299  001470  6E06               	movwf	___awmod@sign,c
  1300  001472  AE02               	btfss	___awmod@dividend+1,7,c
  1301  001474  D006               	goto	l774
  1302  001476  6C01               	negf	___awmod@dividend,c
  1303  001478  1E02               	comf	___awmod@dividend+1,f,c
  1304  00147A  B0D8               	btfsc	status,0,c
  1305  00147C  2A02               	incf	___awmod@dividend+1,f,c
  1306  00147E  0E01               	movlw	1
  1307  001480  6E06               	movwf	___awmod@sign,c
  1308  001482                     l774:
  1309  001482  AE04               	btfss	___awmod@divisor+1,7,c
  1310  001484  D004               	goto	l775
  1311  001486  6C03               	negf	___awmod@divisor,c
  1312  001488  1E04               	comf	___awmod@divisor+1,f,c
  1313  00148A  B0D8               	btfsc	status,0,c
  1314  00148C  2A04               	incf	___awmod@divisor+1,f,c
  1315  00148E                     l775:
  1316  00148E  5003               	movf	___awmod@divisor,w,c
  1317  001490  1004               	iorwf	___awmod@divisor+1,w,c
  1318  001492  B4D8               	btfsc	status,2,c
  1319  001494  D018               	goto	l782
  1320  001496  0E01               	movlw	1
  1321  001498  6E05               	movwf	___awmod@counter,c
  1322  00149A  D004               	goto	l777
  1323  00149C  90D8               	bcf	status,0,c
  1324  00149E  3603               	rlcf	___awmod@divisor,f,c
  1325  0014A0  3604               	rlcf	___awmod@divisor+1,f,c
  1326  0014A2  2A05               	incf	___awmod@counter,f,c
  1327  0014A4                     l777:
  1328  0014A4  AE04               	btfss	___awmod@divisor+1,7,c
  1329  0014A6  D7FA               	goto	l778
  1330  0014A8                     u1150:
  1331  0014A8  5003               	movf	___awmod@divisor,w,c
  1332  0014AA  5C01               	subwf	___awmod@dividend,w,c
  1333  0014AC  5004               	movf	___awmod@divisor+1,w,c
  1334  0014AE  5802               	subwfb	___awmod@dividend+1,w,c
  1335  0014B0  A0D8               	btfss	status,0,c
  1336  0014B2  D004               	goto	l781
  1337  0014B4  5003               	movf	___awmod@divisor,w,c
  1338  0014B6  5E01               	subwf	___awmod@dividend,f,c
  1339  0014B8  5004               	movf	___awmod@divisor+1,w,c
  1340  0014BA  5A02               	subwfb	___awmod@dividend+1,f,c
  1341  0014BC                     l781:
  1342  0014BC  90D8               	bcf	status,0,c
  1343  0014BE  3204               	rrcf	___awmod@divisor+1,f,c
  1344  0014C0  3203               	rrcf	___awmod@divisor,f,c
  1345  0014C2  2E05               	decfsz	___awmod@counter,f,c
  1346  0014C4  D7F1               	goto	u1150
  1347  0014C6                     l782:
  1348  0014C6  5006               	movf	___awmod@sign,w,c
  1349  0014C8  B4D8               	btfsc	status,2,c
  1350  0014CA  D004               	goto	l783
  1351  0014CC  6C01               	negf	___awmod@dividend,c
  1352  0014CE  1E02               	comf	___awmod@dividend+1,f,c
  1353  0014D0  B0D8               	btfsc	status,0,c
  1354  0014D2  2A02               	incf	___awmod@dividend+1,f,c
  1355  0014D4                     l783:
  1356  0014D4  C001  F001         	movff	___awmod@dividend,?___awmod
  1357  0014D8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1358  0014DC  0012               	return	
  1359  0014DE                     __end_of___awmod:
  1360                           	opt stack 0
  1361                           tblptru	equ	0xFF8
  1362                           tblptrh	equ	0xFF7
  1363                           tblptrl	equ	0xFF6
  1364                           tablat	equ	0xFF5
  1365                           postinc0	equ	0xFEE
  1366                           wreg	equ	0xFE8
  1367                           postdec1	equ	0xFE5
  1368                           plusw1	equ	0xFE3
  1369                           fsr1h	equ	0xFE2
  1370                           fsr1l	equ	0xFE1
  1371                           indf2	equ	0xFDF
  1372                           postinc2	equ	0xFDE
  1373                           plusw2	equ	0xFDB
  1374                           fsr2h	equ	0xFDA
  1375                           fsr2l	equ	0xFD9
  1376                           status	equ	0xFD8
  1377                           
  1378 ;; *************** function ___awdiv *****************
  1379 ;; Defined at:
  1380 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  dividend        2    0[COMRAM] int 
  1383 ;;  divisor         2    2[COMRAM] int 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  quotient        2    6[COMRAM] int 
  1386 ;;  sign            1    5[COMRAM] unsigned char 
  1387 ;;  counter         1    4[COMRAM] unsigned char 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  2    0[COMRAM] int 
  1390 ;; Registers used:
  1391 ;;		wreg, status,2, status,0
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1397 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1398 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1400 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1401 ;;Total ram usage:        8 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_decimalToBCD
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text5
  1411  0013EA                     __ptext5:
  1412                           	opt stack 0
  1413  0013EA                     ___awdiv:
  1414                           	opt stack 28
  1415                           
  1416                           ;incstack = 0
  1417  0013EA  0E00               	movlw	0
  1418  0013EC  6E06               	movwf	___awdiv@sign,c
  1419  0013EE  AE04               	btfss	___awdiv@divisor+1,7,c
  1420  0013F0  D006               	goto	l761
  1421  0013F2  6C03               	negf	___awdiv@divisor,c
  1422  0013F4  1E04               	comf	___awdiv@divisor+1,f,c
  1423  0013F6  B0D8               	btfsc	status,0,c
  1424  0013F8  2A04               	incf	___awdiv@divisor+1,f,c
  1425  0013FA  0E01               	movlw	1
  1426  0013FC  6E06               	movwf	___awdiv@sign,c
  1427  0013FE                     l761:
  1428  0013FE  AE02               	btfss	___awdiv@dividend+1,7,c
  1429  001400  D006               	goto	l762
  1430  001402  6C01               	negf	___awdiv@dividend,c
  1431  001404  1E02               	comf	___awdiv@dividend+1,f,c
  1432  001406  B0D8               	btfsc	status,0,c
  1433  001408  2A02               	incf	___awdiv@dividend+1,f,c
  1434  00140A  0E01               	movlw	1
  1435  00140C  1A06               	xorwf	___awdiv@sign,f,c
  1436  00140E                     l762:
  1437  00140E  0E00               	movlw	0
  1438  001410  6E08               	movwf	___awdiv@quotient+1,c
  1439  001412  0E00               	movlw	0
  1440  001414  6E07               	movwf	___awdiv@quotient,c
  1441  001416  5003               	movf	___awdiv@divisor,w,c
  1442  001418  1004               	iorwf	___awdiv@divisor+1,w,c
  1443  00141A  B4D8               	btfsc	status,2,c
  1444  00141C  D01C               	goto	l769
  1445  00141E  0E01               	movlw	1
  1446  001420  6E05               	movwf	___awdiv@counter,c
  1447  001422  D004               	goto	l764
  1448  001424  90D8               	bcf	status,0,c
  1449  001426  3603               	rlcf	___awdiv@divisor,f,c
  1450  001428  3604               	rlcf	___awdiv@divisor+1,f,c
  1451  00142A  2A05               	incf	___awdiv@counter,f,c
  1452  00142C                     l764:
  1453  00142C  AE04               	btfss	___awdiv@divisor+1,7,c
  1454  00142E  D7FA               	goto	l765
  1455  001430                     u1090:
  1456  001430  90D8               	bcf	status,0,c
  1457  001432  3607               	rlcf	___awdiv@quotient,f,c
  1458  001434  3608               	rlcf	___awdiv@quotient+1,f,c
  1459  001436  5003               	movf	___awdiv@divisor,w,c
  1460  001438  5C01               	subwf	___awdiv@dividend,w,c
  1461  00143A  5004               	movf	___awdiv@divisor+1,w,c
  1462  00143C  5802               	subwfb	___awdiv@dividend+1,w,c
  1463  00143E  A0D8               	btfss	status,0,c
  1464  001440  D005               	goto	l768
  1465  001442  5003               	movf	___awdiv@divisor,w,c
  1466  001444  5E01               	subwf	___awdiv@dividend,f,c
  1467  001446  5004               	movf	___awdiv@divisor+1,w,c
  1468  001448  5A02               	subwfb	___awdiv@dividend+1,f,c
  1469  00144A  8007               	bsf	___awdiv@quotient,0,c
  1470  00144C                     l768:
  1471  00144C  90D8               	bcf	status,0,c
  1472  00144E  3204               	rrcf	___awdiv@divisor+1,f,c
  1473  001450  3203               	rrcf	___awdiv@divisor,f,c
  1474  001452  2E05               	decfsz	___awdiv@counter,f,c
  1475  001454  D7ED               	goto	u1090
  1476  001456                     l769:
  1477  001456  5006               	movf	___awdiv@sign,w,c
  1478  001458  B4D8               	btfsc	status,2,c
  1479  00145A  D004               	goto	l770
  1480  00145C  6C07               	negf	___awdiv@quotient,c
  1481  00145E  1E08               	comf	___awdiv@quotient+1,f,c
  1482  001460  B0D8               	btfsc	status,0,c
  1483  001462  2A08               	incf	___awdiv@quotient+1,f,c
  1484  001464                     l770:
  1485  001464  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1486  001468  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1487  00146C  0012               	return	
  1488  00146E                     __end_of___awdiv:
  1489                           	opt stack 0
  1490                           tblptru	equ	0xFF8
  1491                           tblptrh	equ	0xFF7
  1492                           tblptrl	equ	0xFF6
  1493                           tablat	equ	0xFF5
  1494                           postinc0	equ	0xFEE
  1495                           wreg	equ	0xFE8
  1496                           postdec1	equ	0xFE5
  1497                           plusw1	equ	0xFE3
  1498                           fsr1h	equ	0xFE2
  1499                           fsr1l	equ	0xFE1
  1500                           indf2	equ	0xFDF
  1501                           postinc2	equ	0xFDE
  1502                           plusw2	equ	0xFDB
  1503                           fsr2h	equ	0xFDA
  1504                           fsr2l	equ	0xFD9
  1505                           status	equ	0xFD8
  1506                           
  1507 ;; *************** function _setAlarm *****************
  1508 ;; Defined at:
  1509 ;;		line 77 in file "RTC_PCF8523.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  alarmReg        1    wreg     unsigned char 
  1512 ;;  minute          1    1[COMRAM] unsigned char 
  1513 ;;  hour            1    2[COMRAM] unsigned char 
  1514 ;;  day             1    3[COMRAM] unsigned char 
  1515 ;;  weekDay         1    4[COMRAM] unsigned char 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  alarmReg        1    5[COMRAM] unsigned char 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0, cstack
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1527 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1530 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1531 ;;Total ram usage:        5 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; Hardware stack levels required when called:    2
  1534 ;; This function calls:
  1535 ;;		_I2C_Write
  1536 ;;		_I2C_start
  1537 ;;		_I2C_stop
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text6
  1544  0014DE                     __ptext6:
  1545                           	opt stack 0
  1546  0014DE                     _setAlarm:
  1547                           	opt stack 28
  1548                           
  1549                           ;incstack = 0
  1550                           ;setAlarm@alarmReg stored from wreg
  1551  0014DE  6E06               	movwf	setAlarm@alarmReg,c
  1552                           
  1553                           ;RTC_PCF8523.c: 79: I2C_start();
  1554  0014E0  EC66  F00C         	call	_I2C_start	;wreg free
  1555                           
  1556                           ;RTC_PCF8523.c: 80: I2C_Write(0xD0);
  1557  0014E4  0ED0               	movlw	208
  1558  0014E6  EC21  F00C         	call	_I2C_Write
  1559                           
  1560                           ;RTC_PCF8523.c: 81: I2C_Write(0X00);
  1561  0014EA  0E00               	movlw	0
  1562  0014EC  EC21  F00C         	call	_I2C_Write
  1563                           
  1564                           ;RTC_PCF8523.c: 82: I2C_Write(0x80|0x02);
  1565  0014F0  0E82               	movlw	130
  1566  0014F2  EC21  F00C         	call	_I2C_Write
  1567                           
  1568                           ;RTC_PCF8523.c: 83: I2C_stop();
  1569  0014F6  EC6B  F00C         	call	_I2C_stop	;wreg free
  1570                           
  1571                           ;RTC_PCF8523.c: 85: I2C_start();
  1572  0014FA  EC66  F00C         	call	_I2C_start	;wreg free
  1573                           
  1574                           ;RTC_PCF8523.c: 86: I2C_Write(0xD0);
  1575  0014FE  0ED0               	movlw	208
  1576  001500  EC21  F00C         	call	_I2C_Write
  1577                           
  1578                           ;RTC_PCF8523.c: 87: I2C_Write(alarmReg);
  1579  001504  5006               	movf	setAlarm@alarmReg,w,c
  1580  001506  EC21  F00C         	call	_I2C_Write
  1581                           
  1582                           ;RTC_PCF8523.c: 88: I2C_Write((minute + hour + weekDay)&0x7F);
  1583  00150A  5002               	movf	setAlarm@minute,w,c
  1584  00150C  2403               	addwf	setAlarm@hour,w,c
  1585  00150E  2405               	addwf	setAlarm@weekDay,w,c
  1586  001510  0B7F               	andlw	127
  1587  001512  EC21  F00C         	call	_I2C_Write
  1588                           
  1589                           ;RTC_PCF8523.c: 89: I2C_stop();
  1590  001516  EC6B  F00C         	call	_I2C_stop	;wreg free
  1591                           
  1592                           ;RTC_PCF8523.c: 92: I2C_start();
  1593  00151A  EC66  F00C         	call	_I2C_start	;wreg free
  1594                           
  1595                           ;RTC_PCF8523.c: 93: I2C_Write(0xD0);
  1596  00151E  0ED0               	movlw	208
  1597  001520  EC21  F00C         	call	_I2C_Write
  1598                           
  1599                           ;RTC_PCF8523.c: 94: I2C_Write(0x01);
  1600  001524  0E01               	movlw	1
  1601  001526  EC21  F00C         	call	_I2C_Write
  1602                           
  1603                           ;RTC_PCF8523.c: 95: I2C_Write(0x00);
  1604  00152A  0E00               	movlw	0
  1605  00152C  EC21  F00C         	call	_I2C_Write
  1606                           
  1607                           ;RTC_PCF8523.c: 96: I2C_stop();
  1608  001530  EC6B  F00C         	call	_I2C_stop	;wreg free
  1609  001534  0012               	return		;funcret
  1610  001536                     __end_of_setAlarm:
  1611                           	opt stack 0
  1612                           tblptru	equ	0xFF8
  1613                           tblptrh	equ	0xFF7
  1614                           tblptrl	equ	0xFF6
  1615                           tablat	equ	0xFF5
  1616                           postinc0	equ	0xFEE
  1617                           wreg	equ	0xFE8
  1618                           postdec1	equ	0xFE5
  1619                           plusw1	equ	0xFE3
  1620                           fsr1h	equ	0xFE2
  1621                           fsr1l	equ	0xFE1
  1622                           indf2	equ	0xFDF
  1623                           postinc2	equ	0xFDE
  1624                           plusw2	equ	0xFDB
  1625                           fsr2h	equ	0xFDA
  1626                           fsr2l	equ	0xFD9
  1627                           status	equ	0xFD8
  1628                           
  1629 ;; *************** function _interrupt_Init *****************
  1630 ;; Defined at:
  1631 ;;		line 15 in file "Interrupt.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;		None
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;		None
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		None
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1649 ;;Total ram usage:        0 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_main
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text7
  1659  0018A4                     __ptext7:
  1660                           	opt stack 0
  1661  0018A4                     _interrupt_Init:
  1662                           	opt stack 30
  1663                           
  1664                           ;Interrupt.c: 16: INTCONbits.GIE = 1;
  1665                           
  1666                           ;incstack = 0
  1667  0018A4  8EF2               	bsf	intcon,7,c	;volatile
  1668                           
  1669                           ;Interrupt.c: 17: INTCONbits.PEIE = 1;
  1670  0018A6  8CF2               	bsf	intcon,6,c	;volatile
  1671                           
  1672                           ;Interrupt.c: 18: PIE3bits.SSP2IE = 1;
  1673  0018A8  8EA3               	bsf	4003,7,c	;volatile
  1674                           
  1675                           ;Interrupt.c: 19: PIR3bits.SSP2IF = 0;
  1676  0018AA  9EA4               	bcf	4004,7,c	;volatile
  1677  0018AC  0012               	return		;funcret
  1678  0018AE                     __end_of_interrupt_Init:
  1679                           	opt stack 0
  1680                           tblptru	equ	0xFF8
  1681                           tblptrh	equ	0xFF7
  1682                           tblptrl	equ	0xFF6
  1683                           tablat	equ	0xFF5
  1684                           intcon	equ	0xFF2
  1685                           postinc0	equ	0xFEE
  1686                           wreg	equ	0xFE8
  1687                           postdec1	equ	0xFE5
  1688                           plusw1	equ	0xFE3
  1689                           fsr1h	equ	0xFE2
  1690                           fsr1l	equ	0xFE1
  1691                           indf2	equ	0xFDF
  1692                           postinc2	equ	0xFDE
  1693                           plusw2	equ	0xFDB
  1694                           fsr2h	equ	0xFDA
  1695                           fsr2l	equ	0xFD9
  1696                           status	equ	0xFD8
  1697                           
  1698 ;; *************** function _SYSTEM_Initialize *****************
  1699 ;; Defined at:
  1700 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1718 ;;Total ram usage:        0 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    2
  1721 ;; This function calls:
  1722 ;;		_EUSART1_Initialize
  1723 ;;		_I2C_Init
  1724 ;;		_OSCILLATOR_Initialize
  1725 ;;		_PIN_MANAGER_Initialize
  1726 ;;		_SPI1_Initialize
  1727 ;; This function is called by:
  1728 ;;		_main
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text8
  1733  00185C                     __ptext8:
  1734                           	opt stack 0
  1735  00185C                     _SYSTEM_Initialize:
  1736                           	opt stack 28
  1737                           
  1738                           ;mcc.c: 52: PIN_MANAGER_Initialize();
  1739                           
  1740                           ;incstack = 0
  1741  00185C  EC3B  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  1742                           
  1743                           ;mcc.c: 53: OSCILLATOR_Initialize();
  1744  001860  ECF9  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  1745                           
  1746                           ;mcc.c: 54: SPI1_Initialize();
  1747  001864  EC4B  F00C         	call	_SPI1_Initialize	;wreg free
  1748                           
  1749                           ;mcc.c: 55: EUSART1_Initialize();
  1750  001868  EC9F  F00B         	call	_EUSART1_Initialize	;wreg free
  1751                           
  1752                           ;mcc.c: 56: I2C_Init(100);
  1753  00186C  0E64               	movlw	100
  1754  00186E  EC9B  F00A         	call	_I2C_Init
  1755  001872  0012               	return		;funcret
  1756  001874                     __end_of_SYSTEM_Initialize:
  1757                           	opt stack 0
  1758                           tblptru	equ	0xFF8
  1759                           tblptrh	equ	0xFF7
  1760                           tblptrl	equ	0xFF6
  1761                           tablat	equ	0xFF5
  1762                           intcon	equ	0xFF2
  1763                           postinc0	equ	0xFEE
  1764                           wreg	equ	0xFE8
  1765                           postdec1	equ	0xFE5
  1766                           plusw1	equ	0xFE3
  1767                           fsr1h	equ	0xFE2
  1768                           fsr1l	equ	0xFE1
  1769                           indf2	equ	0xFDF
  1770                           postinc2	equ	0xFDE
  1771                           plusw2	equ	0xFDB
  1772                           fsr2h	equ	0xFDA
  1773                           fsr2l	equ	0xFD9
  1774                           status	equ	0xFD8
  1775                           
  1776 ;; *************** function _SPI1_Initialize *****************
  1777 ;; Defined at:
  1778 ;;		line 65 in file "mcc_generated_files/spi1.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, status,2
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1796 ;;Total ram usage:        0 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; This function calls:
  1799 ;;		Nothing
  1800 ;; This function is called by:
  1801 ;;		_SYSTEM_Initialize
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text9
  1806  001896                     __ptext9:
  1807                           	opt stack 0
  1808  001896                     _SPI1_Initialize:
  1809                           	opt stack 29
  1810                           
  1811                           ;spi1.c: 70: SSP1STAT = 0x80;
  1812                           
  1813                           ;incstack = 0
  1814  001896  0E80               	movlw	128
  1815  001898  6EC7               	movwf	4039,c	;volatile
  1816                           
  1817                           ;spi1.c: 73: SSP1CON1 = 0x20;
  1818  00189A  0E20               	movlw	32
  1819  00189C  6EC6               	movwf	4038,c	;volatile
  1820                           
  1821                           ;spi1.c: 76: SSP1ADD = 0x00;
  1822  00189E  0E00               	movlw	0
  1823  0018A0  6EC8               	movwf	4040,c	;volatile
  1824  0018A2  0012               	return		;funcret
  1825  0018A4                     __end_of_SPI1_Initialize:
  1826                           	opt stack 0
  1827                           tblptru	equ	0xFF8
  1828                           tblptrh	equ	0xFF7
  1829                           tblptrl	equ	0xFF6
  1830                           tablat	equ	0xFF5
  1831                           intcon	equ	0xFF2
  1832                           postinc0	equ	0xFEE
  1833                           wreg	equ	0xFE8
  1834                           postdec1	equ	0xFE5
  1835                           plusw1	equ	0xFE3
  1836                           fsr1h	equ	0xFE2
  1837                           fsr1l	equ	0xFE1
  1838                           indf2	equ	0xFDF
  1839                           postinc2	equ	0xFDE
  1840                           plusw2	equ	0xFDB
  1841                           fsr2h	equ	0xFDA
  1842                           fsr2l	equ	0xFD9
  1843                           status	equ	0xFD8
  1844                           
  1845 ;; *************** function _PIN_MANAGER_Initialize *****************
  1846 ;; Defined at:
  1847 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1865 ;;Total ram usage:        0 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; This function calls:
  1868 ;;		Nothing
  1869 ;; This function is called by:
  1870 ;;		_SYSTEM_Initialize
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text10
  1875  001676                     __ptext10:
  1876                           	opt stack 0
  1877  001676                     _PIN_MANAGER_Initialize:
  1878                           	opt stack 29
  1879                           
  1880                           ;pin_manager.c: 57: LATE = 0x00;
  1881                           
  1882                           ;incstack = 0
  1883  001676  0E00               	movlw	0
  1884  001678  6E8D               	movwf	3981,c	;volatile
  1885                           
  1886                           ;pin_manager.c: 58: LATD = 0x00;
  1887  00167A  0E00               	movlw	0
  1888  00167C  6E8C               	movwf	3980,c	;volatile
  1889                           
  1890                           ;pin_manager.c: 59: LATA = 0x00;
  1891  00167E  0E00               	movlw	0
  1892  001680  6E89               	movwf	3977,c	;volatile
  1893                           
  1894                           ;pin_manager.c: 60: LATB = 0x00;
  1895  001682  0E00               	movlw	0
  1896  001684  6E8A               	movwf	3978,c	;volatile
  1897                           
  1898                           ;pin_manager.c: 61: LATC = 0x01;
  1899  001686  0E01               	movlw	1
  1900  001688  6E8B               	movwf	3979,c	;volatile
  1901                           
  1902                           ;pin_manager.c: 66: TRISE = 0xC7;
  1903  00168A  0EC7               	movlw	199
  1904  00168C  6E96               	movwf	3990,c	;volatile
  1905                           
  1906                           ;pin_manager.c: 67: TRISA = 0xEF;
  1907  00168E  0EEF               	movlw	239
  1908  001690  6E92               	movwf	3986,c	;volatile
  1909                           
  1910                           ;pin_manager.c: 68: TRISB = 0xDF;
  1911  001692  0EDF               	movlw	223
  1912  001694  6E93               	movwf	3987,c	;volatile
  1913                           
  1914                           ;pin_manager.c: 69: TRISC = 0x96;
  1915  001696  0E96               	movlw	150
  1916  001698  6E94               	movwf	3988,c	;volatile
  1917                           
  1918                           ;pin_manager.c: 70: TRISD = 0xFF;
  1919  00169A  6895               	setf	3989,c	;volatile
  1920                           
  1921                           ;pin_manager.c: 75: ANCON0 = 0x00;
  1922  00169C  0E00               	movlw	0
  1923  00169E  010F               	movlb	15	; () banked
  1924  0016A0  6F48               	movwf	72,b	;volatile
  1925                           
  1926                           ;pin_manager.c: 76: ANCON1 = 0x10;
  1927  0016A2  0E10               	movlw	16
  1928  0016A4  6F49               	movwf	73,b	;volatile
  1929                           
  1930                           ; BSR set to: 15
  1931                           ;pin_manager.c: 81: INTCON2bits.nRBPU = 1;
  1932  0016A6  8EF1               	bsf	intcon2,7,c	;volatile
  1933                           
  1934                           ; BSR set to: 15
  1935                           ;pin_manager.c: 82: TRISEbits.RDPU = 1;
  1936  0016A8  8E96               	bsf	3990,7,c	;volatile
  1937                           
  1938                           ; BSR set to: 15
  1939                           ;pin_manager.c: 83: TRISEbits.REPU = 1;
  1940  0016AA  8C96               	bsf	3990,6,c	;volatile
  1941                           
  1942                           ;pin_manager.c: 88: ODCON1 = 0x00;
  1943  0016AC  0E00               	movlw	0
  1944  0016AE  6F42               	movwf	66,b	;volatile
  1945                           
  1946                           ;pin_manager.c: 89: ODCON2 = 0x00;
  1947  0016B0  0E00               	movlw	0
  1948  0016B2  6F41               	movwf	65,b	;volatile
  1949                           
  1950                           ;pin_manager.c: 90: ODCON3 = 0x00;
  1951  0016B4  0E00               	movlw	0
  1952  0016B6  6F40               	movwf	64,b	;volatile
  1953                           
  1954                           ; BSR set to: 15
  1955  0016B8  0012               	return		;funcret
  1956  0016BA                     __end_of_PIN_MANAGER_Initialize:
  1957                           	opt stack 0
  1958                           tblptru	equ	0xFF8
  1959                           tblptrh	equ	0xFF7
  1960                           tblptrl	equ	0xFF6
  1961                           tablat	equ	0xFF5
  1962                           intcon	equ	0xFF2
  1963                           intcon2	equ	0xFF1
  1964                           postinc0	equ	0xFEE
  1965                           wreg	equ	0xFE8
  1966                           postdec1	equ	0xFE5
  1967                           plusw1	equ	0xFE3
  1968                           fsr1h	equ	0xFE2
  1969                           fsr1l	equ	0xFE1
  1970                           indf2	equ	0xFDF
  1971                           postinc2	equ	0xFDE
  1972                           plusw2	equ	0xFDB
  1973                           fsr2h	equ	0xFDA
  1974                           fsr2l	equ	0xFD9
  1975                           status	equ	0xFD8
  1976                           
  1977 ;; *************** function _OSCILLATOR_Initialize *****************
  1978 ;; Defined at:
  1979 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;		None
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1995 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1997 ;;Total ram usage:        2 bytes
  1998 ;; Hardware stack levels used:    1
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_SYSTEM_Initialize
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text11
  2007  0017F2                     __ptext11:
  2008                           	opt stack 0
  2009  0017F2                     _OSCILLATOR_Initialize:
  2010                           	opt stack 29
  2011                           
  2012                           ;mcc.c: 62: OSCCON = 0x70;
  2013                           
  2014                           ; BSR set to: 15
  2015                           ;incstack = 0
  2016  0017F2  0E70               	movlw	112
  2017  0017F4  6ED3               	movwf	4051,c	;volatile
  2018                           
  2019                           ;mcc.c: 64: OSCTUNE = 0x00;
  2020  0017F6  0E00               	movlw	0
  2021  0017F8  6E9B               	movwf	3995,c	;volatile
  2022                           
  2023                           ;mcc.c: 66: REFOCON = 0x00;
  2024  0017FA  0E00               	movlw	0
  2025  0017FC  010F               	movlb	15	; () banked
  2026  0017FE  6F3D               	movwf	61,b	;volatile
  2027                           
  2028                           ;mcc.c: 68: OSCCON2 = 0x14;
  2029  001800  0E14               	movlw	20
  2030  001802  6E87               	movwf	3975,c	;volatile
  2031                           
  2032                           ; BSR set to: 15
  2033                           ;mcc.c: 69: _delay((unsigned long)((500)*(16000000/4000.0)));
  2034  001804  0E0B               	movlw	11
  2035  001806  6E02               	movwf	(??_OSCILLATOR_Initialize+1)& (0+255),c
  2036  001808  0E26               	movlw	38
  2037  00180A  6E01               	movwf	??_OSCILLATOR_Initialize& (0+255),c
  2038  00180C  0E5E               	movlw	94
  2039  00180E                     u1427:
  2040  00180E  2EE8               	decfsz	wreg,f,c
  2041  001810  D7FE               	bra	u1427
  2042  001812  2E01               	decfsz	??_OSCILLATOR_Initialize& (0+255),f,c
  2043  001814  D7FC               	bra	u1427
  2044  001816  2E02               	decfsz	(??_OSCILLATOR_Initialize+1)& (0+255),f,c
  2045  001818  D7FA               	bra	u1427
  2046  00181A  0012               	return		;funcret
  2047  00181C                     __end_of_OSCILLATOR_Initialize:
  2048                           	opt stack 0
  2049                           tblptru	equ	0xFF8
  2050                           tblptrh	equ	0xFF7
  2051                           tblptrl	equ	0xFF6
  2052                           tablat	equ	0xFF5
  2053                           intcon	equ	0xFF2
  2054                           intcon2	equ	0xFF1
  2055                           postinc0	equ	0xFEE
  2056                           wreg	equ	0xFE8
  2057                           postdec1	equ	0xFE5
  2058                           plusw1	equ	0xFE3
  2059                           fsr1h	equ	0xFE2
  2060                           fsr1l	equ	0xFE1
  2061                           indf2	equ	0xFDF
  2062                           postinc2	equ	0xFDE
  2063                           plusw2	equ	0xFDB
  2064                           fsr2h	equ	0xFDA
  2065                           fsr2l	equ	0xFD9
  2066                           status	equ	0xFD8
  2067                           
  2068 ;; *************** function _I2C_Init *****************
  2069 ;; Defined at:
  2070 ;;		line 20 in file "I2C.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  F_clock         1    wreg     unsigned char 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;  F_clock         1   20[COMRAM] unsigned char 
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2085 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2087 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2088 ;;Total ram usage:        1 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; Hardware stack levels required when called:    1
  2091 ;; This function calls:
  2092 ;;		___aldiv
  2093 ;;		___wmul
  2094 ;; This function is called by:
  2095 ;;		_SYSTEM_Initialize
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text12
  2100  001536                     __ptext12:
  2101                           	opt stack 0
  2102  001536                     _I2C_Init:
  2103                           	opt stack 28
  2104                           
  2105                           ;incstack = 0
  2106                           ;I2C_Init@F_clock stored from wreg
  2107  001536  6E15               	movwf	I2C_Init@F_clock,c
  2108                           
  2109                           ;I2C.c: 21: TRISDbits.TRISD0 = 1;
  2110  001538  8095               	bsf	3989,0,c	;volatile
  2111                           
  2112                           ;I2C.c: 22: TRISDbits.TRISD1 = 1;
  2113  00153A  8295               	bsf	3989,1,c	;volatile
  2114                           
  2115                           ;I2C.c: 23: SSP2CON1bits.WCOL = 0;
  2116  00153C  9E72               	bcf	3954,7,c	;volatile
  2117                           
  2118                           ;I2C.c: 24: SSP2CON1bits.SSPEN = 1;
  2119  00153E  8A72               	bsf	3954,5,c	;volatile
  2120                           
  2121                           ;I2C.c: 25: SSP2CON1bits.SSPM = 0x08;
  2122  001540  5072               	movf	3954,w,c	;volatile
  2123  001542  0BF0               	andlw	-16
  2124  001544  0908               	iorlw	8
  2125  001546  6E72               	movwf	3954,c	;volatile
  2126                           
  2127                           ;I2C.c: 26: SSP2CON2bits.ACKDT = 0;
  2128  001548  9A71               	bcf	3953,5,c	;volatile
  2129                           
  2130                           ;I2C.c: 27: SSP2CON2bits.ACKEN = 1;
  2131  00154A  8871               	bsf	3953,4,c	;volatile
  2132                           
  2133                           ;I2C.c: 28: SSP2ADD = (16000000 / ((F_clock * 1000) * 4)) - 1;
  2134  00154C  0E00               	movlw	0
  2135  00154E  6E07               	movwf	___aldiv@dividend,c
  2136  001550  0E24               	movlw	36
  2137  001552  6E08               	movwf	___aldiv@dividend+1,c
  2138  001554  0EF4               	movlw	244
  2139  001556  6E09               	movwf	___aldiv@dividend+2,c
  2140  001558  0E00               	movlw	0
  2141  00155A  6E0A               	movwf	___aldiv@dividend+3,c
  2142  00155C  C015  F001         	movff	I2C_Init@F_clock,___wmul@multiplier
  2143  001560  6A02               	clrf	___wmul@multiplier+1,c
  2144  001562  0E0F               	movlw	15
  2145  001564  6E04               	movwf	___wmul@multiplicand+1,c
  2146  001566  0EA0               	movlw	160
  2147  001568  6E03               	movwf	___wmul@multiplicand,c
  2148  00156A  EC0E  F00C         	call	___wmul	;wreg free
  2149  00156E  C001  F00B         	movff	?___wmul,___aldiv@divisor
  2150  001572  C002  F00C         	movff	?___wmul+1,___aldiv@divisor+1
  2151  001576  0E00               	movlw	0
  2152  001578  BE0C               	btfsc	___aldiv@divisor+1,7,c
  2153  00157A  0EFF               	movlw	-1
  2154  00157C  6E0D               	movwf	___aldiv@divisor+2,c
  2155  00157E  6E0E               	movwf	___aldiv@divisor+3,c
  2156  001580  ECA8  F008         	call	___aldiv	;wreg free
  2157  001584  0407               	decf	?___aldiv,w,c
  2158  001586  6E74               	movwf	3956,c	;volatile
  2159  001588  0012               	return		;funcret
  2160  00158A                     __end_of_I2C_Init:
  2161                           	opt stack 0
  2162                           tblptru	equ	0xFF8
  2163                           tblptrh	equ	0xFF7
  2164                           tblptrl	equ	0xFF6
  2165                           tablat	equ	0xFF5
  2166                           intcon	equ	0xFF2
  2167                           intcon2	equ	0xFF1
  2168                           postinc0	equ	0xFEE
  2169                           wreg	equ	0xFE8
  2170                           postdec1	equ	0xFE5
  2171                           plusw1	equ	0xFE3
  2172                           fsr1h	equ	0xFE2
  2173                           fsr1l	equ	0xFE1
  2174                           indf2	equ	0xFDF
  2175                           postinc2	equ	0xFDE
  2176                           plusw2	equ	0xFDB
  2177                           fsr2h	equ	0xFDA
  2178                           fsr2l	equ	0xFD9
  2179                           status	equ	0xFD8
  2180                           
  2181 ;; *************** function ___wmul *****************
  2182 ;; Defined at:
  2183 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  multiplier      2    0[COMRAM] unsigned int 
  2186 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  product         2    4[COMRAM] unsigned int 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  2    0[COMRAM] unsigned int 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, prodl, prodh
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2198 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2199 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2201 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2202 ;;Total ram usage:        6 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_I2C_Init
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text13
  2212  00181C                     __ptext13:
  2213                           	opt stack 0
  2214  00181C                     ___wmul:
  2215                           	opt stack 28
  2216                           
  2217                           ;incstack = 0
  2218  00181C  5001               	movf	___wmul@multiplier,w,c
  2219  00181E  0203               	mulwf	___wmul@multiplicand,c
  2220  001820  CFF3 F005          	movff	prodl,___wmul@product
  2221  001824  CFF4 F006          	movff	prodh,___wmul@product+1
  2222  001828  5001               	movf	___wmul@multiplier,w,c
  2223  00182A  0204               	mulwf	___wmul@multiplicand+1,c
  2224  00182C  50F3               	movf	prodl,w,c
  2225  00182E  2606               	addwf	___wmul@product+1,f,c
  2226  001830  5002               	movf	___wmul@multiplier+1,w,c
  2227  001832  0203               	mulwf	___wmul@multiplicand,c
  2228  001834  50F3               	movf	prodl,w,c
  2229  001836  2606               	addwf	___wmul@product+1,f,c
  2230  001838  C005  F001         	movff	___wmul@product,?___wmul
  2231  00183C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2232  001840  0012               	return	
  2233  001842                     __end_of___wmul:
  2234                           	opt stack 0
  2235                           tblptru	equ	0xFF8
  2236                           tblptrh	equ	0xFF7
  2237                           tblptrl	equ	0xFF6
  2238                           tablat	equ	0xFF5
  2239                           prodh	equ	0xFF4
  2240                           prodl	equ	0xFF3
  2241                           intcon	equ	0xFF2
  2242                           intcon2	equ	0xFF1
  2243                           postinc0	equ	0xFEE
  2244                           wreg	equ	0xFE8
  2245                           postdec1	equ	0xFE5
  2246                           plusw1	equ	0xFE3
  2247                           fsr1h	equ	0xFE2
  2248                           fsr1l	equ	0xFE1
  2249                           indf2	equ	0xFDF
  2250                           postinc2	equ	0xFDE
  2251                           plusw2	equ	0xFDB
  2252                           fsr2h	equ	0xFDA
  2253                           fsr2l	equ	0xFD9
  2254                           status	equ	0xFD8
  2255                           
  2256 ;; *************** function ___aldiv *****************
  2257 ;; Defined at:
  2258 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  dividend        4    6[COMRAM] long 
  2261 ;;  divisor         4   10[COMRAM] long 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  quotient        4   16[COMRAM] long 
  2264 ;;  sign            1   15[COMRAM] unsigned char 
  2265 ;;  counter         1   14[COMRAM] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  4    6[COMRAM] long 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2, status,0
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2275 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2276 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2278 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2279 ;;Total ram usage:       14 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_I2C_Init
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text14
  2289  001150                     __ptext14:
  2290                           	opt stack 0
  2291  001150                     ___aldiv:
  2292                           	opt stack 28
  2293                           
  2294                           ;incstack = 0
  2295  001150  0E00               	movlw	0
  2296  001152  6E10               	movwf	___aldiv@sign,c
  2297  001154  AE0E               	btfss	___aldiv@divisor+3,7,c
  2298  001156  D00A               	goto	l649
  2299  001158  1E0E               	comf	___aldiv@divisor+3,f,c
  2300  00115A  1E0D               	comf	___aldiv@divisor+2,f,c
  2301  00115C  1E0C               	comf	___aldiv@divisor+1,f,c
  2302  00115E  6C0B               	negf	___aldiv@divisor,c
  2303  001160  0E00               	movlw	0
  2304  001162  220C               	addwfc	___aldiv@divisor+1,f,c
  2305  001164  220D               	addwfc	___aldiv@divisor+2,f,c
  2306  001166  220E               	addwfc	___aldiv@divisor+3,f,c
  2307  001168  0E01               	movlw	1
  2308  00116A  6E10               	movwf	___aldiv@sign,c
  2309  00116C                     l649:
  2310  00116C  AE0A               	btfss	___aldiv@dividend+3,7,c
  2311  00116E  D00A               	goto	l650
  2312  001170  1E0A               	comf	___aldiv@dividend+3,f,c
  2313  001172  1E09               	comf	___aldiv@dividend+2,f,c
  2314  001174  1E08               	comf	___aldiv@dividend+1,f,c
  2315  001176  6C07               	negf	___aldiv@dividend,c
  2316  001178  0E00               	movlw	0
  2317  00117A  2208               	addwfc	___aldiv@dividend+1,f,c
  2318  00117C  2209               	addwfc	___aldiv@dividend+2,f,c
  2319  00117E  220A               	addwfc	___aldiv@dividend+3,f,c
  2320  001180  0E01               	movlw	1
  2321  001182  1A10               	xorwf	___aldiv@sign,f,c
  2322  001184                     l650:
  2323  001184  0E00               	movlw	0
  2324  001186  6E11               	movwf	___aldiv@quotient,c
  2325  001188  0E00               	movlw	0
  2326  00118A  6E12               	movwf	___aldiv@quotient+1,c
  2327  00118C  0E00               	movlw	0
  2328  00118E  6E13               	movwf	___aldiv@quotient+2,c
  2329  001190  0E00               	movlw	0
  2330  001192  6E14               	movwf	___aldiv@quotient+3,c
  2331  001194  500B               	movf	___aldiv@divisor,w,c
  2332  001196  100C               	iorwf	___aldiv@divisor+1,w,c
  2333  001198  100D               	iorwf	___aldiv@divisor+2,w,c
  2334  00119A  100E               	iorwf	___aldiv@divisor+3,w,c
  2335  00119C  B4D8               	btfsc	status,2,c
  2336  00119E  D02A               	goto	l657
  2337  0011A0  0E01               	movlw	1
  2338  0011A2  6E0F               	movwf	___aldiv@counter,c
  2339  0011A4  D006               	goto	l652
  2340  0011A6  90D8               	bcf	status,0,c
  2341  0011A8  360B               	rlcf	___aldiv@divisor,f,c
  2342  0011AA  360C               	rlcf	___aldiv@divisor+1,f,c
  2343  0011AC  360D               	rlcf	___aldiv@divisor+2,f,c
  2344  0011AE  360E               	rlcf	___aldiv@divisor+3,f,c
  2345  0011B0  2A0F               	incf	___aldiv@counter,f,c
  2346  0011B2                     l652:
  2347  0011B2  AE0E               	btfss	___aldiv@divisor+3,7,c
  2348  0011B4  D7F8               	goto	l653
  2349  0011B6                     u1030:
  2350  0011B6  90D8               	bcf	status,0,c
  2351  0011B8  3611               	rlcf	___aldiv@quotient,f,c
  2352  0011BA  3612               	rlcf	___aldiv@quotient+1,f,c
  2353  0011BC  3613               	rlcf	___aldiv@quotient+2,f,c
  2354  0011BE  3614               	rlcf	___aldiv@quotient+3,f,c
  2355  0011C0  500B               	movf	___aldiv@divisor,w,c
  2356  0011C2  5C07               	subwf	___aldiv@dividend,w,c
  2357  0011C4  500C               	movf	___aldiv@divisor+1,w,c
  2358  0011C6  5808               	subwfb	___aldiv@dividend+1,w,c
  2359  0011C8  500D               	movf	___aldiv@divisor+2,w,c
  2360  0011CA  5809               	subwfb	___aldiv@dividend+2,w,c
  2361  0011CC  500E               	movf	___aldiv@divisor+3,w,c
  2362  0011CE  580A               	subwfb	___aldiv@dividend+3,w,c
  2363  0011D0  A0D8               	btfss	status,0,c
  2364  0011D2  D009               	goto	l656
  2365  0011D4  500B               	movf	___aldiv@divisor,w,c
  2366  0011D6  5E07               	subwf	___aldiv@dividend,f,c
  2367  0011D8  500C               	movf	___aldiv@divisor+1,w,c
  2368  0011DA  5A08               	subwfb	___aldiv@dividend+1,f,c
  2369  0011DC  500D               	movf	___aldiv@divisor+2,w,c
  2370  0011DE  5A09               	subwfb	___aldiv@dividend+2,f,c
  2371  0011E0  500E               	movf	___aldiv@divisor+3,w,c
  2372  0011E2  5A0A               	subwfb	___aldiv@dividend+3,f,c
  2373  0011E4  8011               	bsf	___aldiv@quotient,0,c
  2374  0011E6                     l656:
  2375  0011E6  90D8               	bcf	status,0,c
  2376  0011E8  320E               	rrcf	___aldiv@divisor+3,f,c
  2377  0011EA  320D               	rrcf	___aldiv@divisor+2,f,c
  2378  0011EC  320C               	rrcf	___aldiv@divisor+1,f,c
  2379  0011EE  320B               	rrcf	___aldiv@divisor,f,c
  2380  0011F0  2E0F               	decfsz	___aldiv@counter,f,c
  2381  0011F2  D7E1               	goto	u1030
  2382  0011F4                     l657:
  2383  0011F4  5010               	movf	___aldiv@sign,w,c
  2384  0011F6  B4D8               	btfsc	status,2,c
  2385  0011F8  D008               	goto	l658
  2386  0011FA  1E14               	comf	___aldiv@quotient+3,f,c
  2387  0011FC  1E13               	comf	___aldiv@quotient+2,f,c
  2388  0011FE  1E12               	comf	___aldiv@quotient+1,f,c
  2389  001200  6C11               	negf	___aldiv@quotient,c
  2390  001202  0E00               	movlw	0
  2391  001204  2212               	addwfc	___aldiv@quotient+1,f,c
  2392  001206  2213               	addwfc	___aldiv@quotient+2,f,c
  2393  001208  2214               	addwfc	___aldiv@quotient+3,f,c
  2394  00120A                     l658:
  2395  00120A  C011  F007         	movff	___aldiv@quotient,?___aldiv
  2396  00120E  C012  F008         	movff	___aldiv@quotient+1,?___aldiv+1
  2397  001212  C013  F009         	movff	___aldiv@quotient+2,?___aldiv+2
  2398  001216  C014  F00A         	movff	___aldiv@quotient+3,?___aldiv+3
  2399  00121A  0012               	return	
  2400  00121C                     __end_of___aldiv:
  2401                           	opt stack 0
  2402                           tblptru	equ	0xFF8
  2403                           tblptrh	equ	0xFF7
  2404                           tblptrl	equ	0xFF6
  2405                           tablat	equ	0xFF5
  2406                           prodh	equ	0xFF4
  2407                           prodl	equ	0xFF3
  2408                           intcon	equ	0xFF2
  2409                           intcon2	equ	0xFF1
  2410                           postinc0	equ	0xFEE
  2411                           wreg	equ	0xFE8
  2412                           postdec1	equ	0xFE5
  2413                           plusw1	equ	0xFE3
  2414                           fsr1h	equ	0xFE2
  2415                           fsr1l	equ	0xFE1
  2416                           indf2	equ	0xFDF
  2417                           postinc2	equ	0xFDE
  2418                           plusw2	equ	0xFDB
  2419                           fsr2h	equ	0xFDA
  2420                           fsr2l	equ	0xFD9
  2421                           status	equ	0xFD8
  2422                           
  2423 ;; *************** function _EUSART1_Initialize *****************
  2424 ;; Defined at:
  2425 ;;		line 69 in file "mcc_generated_files/eusart1.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;		None
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;		None
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      void 
  2432 ;; Registers used:
  2433 ;;		wreg, status,2, status,0, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2443 ;;Total ram usage:        0 bytes
  2444 ;; Hardware stack levels used:    1
  2445 ;; Hardware stack levels required when called:    1
  2446 ;; This function calls:
  2447 ;;		_EUSART1_SetErrorHandler
  2448 ;;		_EUSART1_SetFramingErrorHandler
  2449 ;;		_EUSART1_SetOverrunErrorHandler
  2450 ;; This function is called by:
  2451 ;;		_SYSTEM_Initialize
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text15
  2456  00173E                     __ptext15:
  2457                           	opt stack 0
  2458  00173E                     _EUSART1_Initialize:
  2459                           	opt stack 28
  2460                           
  2461                           ;eusart1.c: 74: BAUDCON1 = 0x18;
  2462                           
  2463                           ;incstack = 0
  2464  00173E  0E18               	movlw	24
  2465  001740  6E7E               	movwf	3966,c	;volatile
  2466                           
  2467                           ;eusart1.c: 77: RCSTA1 = 0x98;
  2468  001742  0E98               	movlw	152
  2469  001744  6EAC               	movwf	4012,c	;volatile
  2470                           
  2471                           ;eusart1.c: 80: TXSTA1 = 0x24;
  2472  001746  0E24               	movlw	36
  2473  001748  6EAD               	movwf	4013,c	;volatile
  2474                           
  2475                           ;eusart1.c: 83: SPBRG1 = 0xCF;
  2476  00174A  0ECF               	movlw	207
  2477  00174C  6EB0               	movwf	4016,c	;volatile
  2478                           
  2479                           ;eusart1.c: 86: SPBRGH1 = 0x00;
  2480  00174E  0E00               	movlw	0
  2481  001750  6E7F               	movwf	3967,c	;volatile
  2482                           
  2483                           ;eusart1.c: 89: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  2484  001752  0E00               	movlw	0
  2485  001754  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  2486  001756  0E00               	movlw	0
  2487  001758  6E02               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  2488  00175A  EC5C  F00C         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2489                           
  2490                           ;eusart1.c: 90: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  2491  00175E  0E00               	movlw	0
  2492  001760  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  2493  001762  0E00               	movlw	0
  2494  001764  6E02               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  2495  001766  EC57  F00C         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2496                           
  2497                           ;eusart1.c: 91: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  2498  00176A  0E00               	movlw	0
  2499  00176C  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  2500  00176E  0E00               	movlw	0
  2501  001770  6E02               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  2502  001772  EC61  F00C         	call	_EUSART1_SetErrorHandler	;wreg free
  2503                           
  2504                           ;eusart1.c: 93: eusart1RxLastError.status = 0;
  2505  001776  0E00               	movlw	0
  2506  001778  6E3F               	movwf	_eusart1RxLastError,c	;volatile
  2507  00177A  0012               	return		;funcret
  2508  00177C                     __end_of_EUSART1_Initialize:
  2509                           	opt stack 0
  2510                           tblptru	equ	0xFF8
  2511                           tblptrh	equ	0xFF7
  2512                           tblptrl	equ	0xFF6
  2513                           tablat	equ	0xFF5
  2514                           prodh	equ	0xFF4
  2515                           prodl	equ	0xFF3
  2516                           intcon	equ	0xFF2
  2517                           intcon2	equ	0xFF1
  2518                           postinc0	equ	0xFEE
  2519                           wreg	equ	0xFE8
  2520                           postdec1	equ	0xFE5
  2521                           plusw1	equ	0xFE3
  2522                           fsr1h	equ	0xFE2
  2523                           fsr1l	equ	0xFE1
  2524                           indf2	equ	0xFDF
  2525                           postinc2	equ	0xFDE
  2526                           plusw2	equ	0xFDB
  2527                           fsr2h	equ	0xFDA
  2528                           fsr2l	equ	0xFD9
  2529                           status	equ	0xFD8
  2530                           
  2531 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2532 ;; Defined at:
  2533 ;;		line 179 in file "mcc_generated_files/eusart1.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  2536 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2551 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2552 ;;Total ram usage:        2 bytes
  2553 ;; Hardware stack levels used:    1
  2554 ;; This function calls:
  2555 ;;		Nothing
  2556 ;; This function is called by:
  2557 ;;		_EUSART1_Initialize
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text16
  2562  0018AE                     __ptext16:
  2563                           	opt stack 0
  2564  0018AE                     _EUSART1_SetOverrunErrorHandler:
  2565                           	opt stack 28
  2566                           
  2567                           ;eusart1.c: 180: EUSART1_OverrunErrorHandler = interruptHandler;
  2568                           
  2569                           ;incstack = 0
  2570  0018AE  C001  F03B         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2571  0018B2  C002  F03C         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2572  0018B6  0012               	return		;funcret
  2573  0018B8                     __end_of_EUSART1_SetOverrunErrorHandler:
  2574                           	opt stack 0
  2575                           tblptru	equ	0xFF8
  2576                           tblptrh	equ	0xFF7
  2577                           tblptrl	equ	0xFF6
  2578                           tablat	equ	0xFF5
  2579                           prodh	equ	0xFF4
  2580                           prodl	equ	0xFF3
  2581                           intcon	equ	0xFF2
  2582                           intcon2	equ	0xFF1
  2583                           postinc0	equ	0xFEE
  2584                           wreg	equ	0xFE8
  2585                           postdec1	equ	0xFE5
  2586                           plusw1	equ	0xFE3
  2587                           fsr1h	equ	0xFE2
  2588                           fsr1l	equ	0xFE1
  2589                           indf2	equ	0xFDF
  2590                           postinc2	equ	0xFDE
  2591                           plusw2	equ	0xFDB
  2592                           fsr2h	equ	0xFDA
  2593                           fsr2l	equ	0xFD9
  2594                           status	equ	0xFD8
  2595                           
  2596 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2597 ;; Defined at:
  2598 ;;		line 175 in file "mcc_generated_files/eusart1.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  2601 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;		None
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		wreg, status,2, status,0
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2616 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2617 ;;Total ram usage:        2 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; This function calls:
  2620 ;;		Nothing
  2621 ;; This function is called by:
  2622 ;;		_EUSART1_Initialize
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           	psect	text17
  2627  0018B8                     __ptext17:
  2628                           	opt stack 0
  2629  0018B8                     _EUSART1_SetFramingErrorHandler:
  2630                           	opt stack 28
  2631                           
  2632                           ;eusart1.c: 176: EUSART1_FramingErrorHandler = interruptHandler;
  2633                           
  2634                           ;incstack = 0
  2635  0018B8  C001  F03D         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2636  0018BC  C002  F03E         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2637  0018C0  0012               	return		;funcret
  2638  0018C2                     __end_of_EUSART1_SetFramingErrorHandler:
  2639                           	opt stack 0
  2640                           tblptru	equ	0xFF8
  2641                           tblptrh	equ	0xFF7
  2642                           tblptrl	equ	0xFF6
  2643                           tablat	equ	0xFF5
  2644                           prodh	equ	0xFF4
  2645                           prodl	equ	0xFF3
  2646                           intcon	equ	0xFF2
  2647                           intcon2	equ	0xFF1
  2648                           postinc0	equ	0xFEE
  2649                           wreg	equ	0xFE8
  2650                           postdec1	equ	0xFE5
  2651                           plusw1	equ	0xFE3
  2652                           fsr1h	equ	0xFE2
  2653                           fsr1l	equ	0xFE1
  2654                           indf2	equ	0xFDF
  2655                           postinc2	equ	0xFDE
  2656                           plusw2	equ	0xFDB
  2657                           fsr2h	equ	0xFDA
  2658                           fsr2l	equ	0xFD9
  2659                           status	equ	0xFD8
  2660                           
  2661 ;; *************** function _EUSART1_SetErrorHandler *****************
  2662 ;; Defined at:
  2663 ;;		line 183 in file "mcc_generated_files/eusart1.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  2666 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      void 
  2671 ;; Registers used:
  2672 ;;		wreg, status,2, status,0
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2681 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2682 ;;Total ram usage:        2 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_EUSART1_Initialize
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text18
  2692  0018C2                     __ptext18:
  2693                           	opt stack 0
  2694  0018C2                     _EUSART1_SetErrorHandler:
  2695                           	opt stack 28
  2696                           
  2697                           ;eusart1.c: 184: EUSART1_ErrorHandler = interruptHandler;
  2698                           
  2699                           ;incstack = 0
  2700  0018C2  C001  F039         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2701  0018C6  C002  F03A         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2702  0018CA  0012               	return		;funcret
  2703  0018CC                     __end_of_EUSART1_SetErrorHandler:
  2704                           	opt stack 0
  2705                           tblptru	equ	0xFF8
  2706                           tblptrh	equ	0xFF7
  2707                           tblptrl	equ	0xFF6
  2708                           tablat	equ	0xFF5
  2709                           prodh	equ	0xFF4
  2710                           prodl	equ	0xFF3
  2711                           intcon	equ	0xFF2
  2712                           intcon2	equ	0xFF1
  2713                           postinc0	equ	0xFEE
  2714                           wreg	equ	0xFE8
  2715                           postdec1	equ	0xFE5
  2716                           plusw1	equ	0xFE3
  2717                           fsr1h	equ	0xFE2
  2718                           fsr1l	equ	0xFE1
  2719                           indf2	equ	0xFDF
  2720                           postinc2	equ	0xFDE
  2721                           plusw2	equ	0xFDB
  2722                           fsr2h	equ	0xFDA
  2723                           fsr2l	equ	0xFD9
  2724                           status	equ	0xFD8
  2725                           
  2726 ;; *************** function _RTC_Init *****************
  2727 ;; Defined at:
  2728 ;;		line 4 in file "RTC_PCF8523.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;		None
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;		None
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  1    wreg      void 
  2735 ;; Registers used:
  2736 ;;		wreg, cstack
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2746 ;;Total ram usage:        0 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:    2
  2749 ;; This function calls:
  2750 ;;		_I2C_Write
  2751 ;;		_I2C_start
  2752 ;;		_I2C_stop
  2753 ;; This function is called by:
  2754 ;;		_main
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text19
  2759  0015DC                     __ptext19:
  2760                           	opt stack 0
  2761  0015DC                     _RTC_Init:
  2762                           	opt stack 28
  2763                           
  2764                           ;RTC_PCF8523.c: 5: I2C_start();
  2765                           
  2766                           ;incstack = 0
  2767  0015DC  EC66  F00C         	call	_I2C_start	;wreg free
  2768                           
  2769                           ;RTC_PCF8523.c: 6: I2C_Write(0xD0);
  2770  0015E0  0ED0               	movlw	208
  2771  0015E2  EC21  F00C         	call	_I2C_Write
  2772                           
  2773                           ;RTC_PCF8523.c: 7: I2C_Write(0X00);
  2774  0015E6  0E00               	movlw	0
  2775  0015E8  EC21  F00C         	call	_I2C_Write
  2776                           
  2777                           ;RTC_PCF8523.c: 8: I2C_Write(0x80);
  2778  0015EC  0E80               	movlw	128
  2779  0015EE  EC21  F00C         	call	_I2C_Write
  2780                           
  2781                           ;RTC_PCF8523.c: 9: I2C_stop();
  2782  0015F2  EC6B  F00C         	call	_I2C_stop	;wreg free
  2783                           
  2784                           ;RTC_PCF8523.c: 12: I2C_start();
  2785  0015F6  EC66  F00C         	call	_I2C_start	;wreg free
  2786                           
  2787                           ;RTC_PCF8523.c: 13: I2C_Write(0xD0);
  2788  0015FA  0ED0               	movlw	208
  2789  0015FC  EC21  F00C         	call	_I2C_Write
  2790                           
  2791                           ;RTC_PCF8523.c: 14: I2C_Write(0x02);
  2792  001600  0E02               	movlw	2
  2793  001602  EC21  F00C         	call	_I2C_Write
  2794                           
  2795                           ;RTC_PCF8523.c: 15: I2C_Write(0x80);
  2796  001606  0E80               	movlw	128
  2797  001608  EC21  F00C         	call	_I2C_Write
  2798                           
  2799                           ;RTC_PCF8523.c: 16: I2C_stop();
  2800  00160C  EC6B  F00C         	call	_I2C_stop	;wreg free
  2801                           
  2802                           ;RTC_PCF8523.c: 19: I2C_start();
  2803  001610  EC66  F00C         	call	_I2C_start	;wreg free
  2804                           
  2805                           ;RTC_PCF8523.c: 20: I2C_Write(0xD0);
  2806  001614  0ED0               	movlw	208
  2807  001616  EC21  F00C         	call	_I2C_Write
  2808                           
  2809                           ;RTC_PCF8523.c: 21: I2C_Write(0x0F);
  2810  00161A  0E0F               	movlw	15
  2811  00161C  EC21  F00C         	call	_I2C_Write
  2812                           
  2813                           ;RTC_PCF8523.c: 22: I2C_Write(0xF8);
  2814  001620  0EF8               	movlw	248
  2815  001622  EC21  F00C         	call	_I2C_Write
  2816                           
  2817                           ;RTC_PCF8523.c: 23: I2C_stop();
  2818  001626  EC6B  F00C         	call	_I2C_stop	;wreg free
  2819  00162A  0012               	return		;funcret
  2820  00162C                     __end_of_RTC_Init:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           tblptrh	equ	0xFF7
  2824                           tblptrl	equ	0xFF6
  2825                           tablat	equ	0xFF5
  2826                           prodh	equ	0xFF4
  2827                           prodl	equ	0xFF3
  2828                           intcon	equ	0xFF2
  2829                           intcon2	equ	0xFF1
  2830                           postinc0	equ	0xFEE
  2831                           wreg	equ	0xFE8
  2832                           postdec1	equ	0xFE5
  2833                           plusw1	equ	0xFE3
  2834                           fsr1h	equ	0xFE2
  2835                           fsr1l	equ	0xFE1
  2836                           indf2	equ	0xFDF
  2837                           postinc2	equ	0xFDE
  2838                           plusw2	equ	0xFDB
  2839                           fsr2h	equ	0xFDA
  2840                           fsr2l	equ	0xFD9
  2841                           status	equ	0xFD8
  2842                           
  2843 ;; *************** function _I2C_buffClear *****************
  2844 ;; Defined at:
  2845 ;;		line 80 in file "I2C.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		wreg, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2863 ;;Total ram usage:        0 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:    2
  2866 ;; This function calls:
  2867 ;;		_I2C_Write
  2868 ;;		_I2C_start
  2869 ;;		_I2C_stop
  2870 ;; This function is called by:
  2871 ;;		_main
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text20
  2876  001886                     __ptext20:
  2877                           	opt stack 0
  2878  001886                     _I2C_buffClear:
  2879                           	opt stack 28
  2880                           
  2881                           ;I2C.c: 81: I2C_start();
  2882                           
  2883                           ;incstack = 0
  2884  001886  EC66  F00C         	call	_I2C_start	;wreg free
  2885                           
  2886                           ;I2C.c: 82: I2C_Write(0x00);
  2887  00188A  0E00               	movlw	0
  2888  00188C  EC21  F00C         	call	_I2C_Write
  2889                           
  2890                           ;I2C.c: 83: I2C_stop();
  2891  001890  EC6B  F00C         	call	_I2C_stop	;wreg free
  2892  001894  0012               	return		;funcret
  2893  001896                     __end_of_I2C_buffClear:
  2894                           	opt stack 0
  2895                           tblptru	equ	0xFF8
  2896                           tblptrh	equ	0xFF7
  2897                           tblptrl	equ	0xFF6
  2898                           tablat	equ	0xFF5
  2899                           prodh	equ	0xFF4
  2900                           prodl	equ	0xFF3
  2901                           intcon	equ	0xFF2
  2902                           intcon2	equ	0xFF1
  2903                           postinc0	equ	0xFEE
  2904                           wreg	equ	0xFE8
  2905                           postdec1	equ	0xFE5
  2906                           plusw1	equ	0xFE3
  2907                           fsr1h	equ	0xFE2
  2908                           fsr1l	equ	0xFE1
  2909                           indf2	equ	0xFDF
  2910                           postinc2	equ	0xFDE
  2911                           plusw2	equ	0xFDB
  2912                           fsr2h	equ	0xFDA
  2913                           fsr2l	equ	0xFD9
  2914                           status	equ	0xFD8
  2915                           
  2916 ;; *************** function _I2C_start *****************
  2917 ;; Defined at:
  2918 ;;		line 50 in file "I2C.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;		None
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;		None
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		None
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2936 ;;Total ram usage:        0 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_I2C_buffClear
  2942 ;;		_RTC_Init
  2943 ;;		_setTime
  2944 ;;		_setDate
  2945 ;;		_setAlarm
  2946 ;;		_I2C_BusSCan
  2947 ;;		_MCP23008_Init
  2948 ;;		_MCP23008_Write
  2949 ;;		_MCP23008_read
  2950 ;;		_MCP9801_Init
  2951 ;;		_MCP9801_TempRead
  2952 ;;		_EEPROM_24AA512_Write
  2953 ;;		_EEPROM_24AA512_Read
  2954 ;;		_EEPROM_24AA512_pageWrite
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	text21
  2959  0018CC                     __ptext21:
  2960                           	opt stack 0
  2961  0018CC                     _I2C_start:
  2962                           	opt stack 29
  2963                           
  2964                           ;I2C.c: 51: SSP2CON2bits.SEN = 1;
  2965                           
  2966                           ;incstack = 0
  2967  0018CC  8071               	bsf	3953,0,c	;volatile
  2968  0018CE  B071               	btfsc	3953,0,c	;volatile
  2969  0018D0  D7FE               	goto	l439
  2970                           
  2971                           ;I2C.c: 53: PIR3bits.SSP2IF = 0;
  2972  0018D2  9EA4               	bcf	4004,7,c	;volatile
  2973  0018D4  0012               	return		;funcret
  2974  0018D6                     __end_of_I2C_start:
  2975                           	opt stack 0
  2976                           tblptru	equ	0xFF8
  2977                           tblptrh	equ	0xFF7
  2978                           tblptrl	equ	0xFF6
  2979                           tablat	equ	0xFF5
  2980                           prodh	equ	0xFF4
  2981                           prodl	equ	0xFF3
  2982                           intcon	equ	0xFF2
  2983                           intcon2	equ	0xFF1
  2984                           postinc0	equ	0xFEE
  2985                           wreg	equ	0xFE8
  2986                           postdec1	equ	0xFE5
  2987                           plusw1	equ	0xFE3
  2988                           fsr1h	equ	0xFE2
  2989                           fsr1l	equ	0xFE1
  2990                           indf2	equ	0xFDF
  2991                           postinc2	equ	0xFDE
  2992                           plusw2	equ	0xFDB
  2993                           fsr2h	equ	0xFDA
  2994                           fsr2l	equ	0xFD9
  2995                           status	equ	0xFD8
  2996                           
  2997 ;; *************** function _I2C_Write *****************
  2998 ;; Defined at:
  2999 ;;		line 31 in file "I2C.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  data            1    wreg     unsigned char 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  data            1    0[COMRAM] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  1    wreg      void 
  3006 ;; Registers used:
  3007 ;;		wreg, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3016 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3017 ;;Total ram usage:        1 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    1
  3020 ;; This function calls:
  3021 ;;		_I2C_stop
  3022 ;; This function is called by:
  3023 ;;		_I2C_buffClear
  3024 ;;		_RTC_Init
  3025 ;;		_setTime
  3026 ;;		_setDate
  3027 ;;		_setAlarm
  3028 ;;		_I2C_BusSCan
  3029 ;;		_MCP23008_Init
  3030 ;;		_MCP23008_Write
  3031 ;;		_MCP23008_read
  3032 ;;		_MCP9801_Init
  3033 ;;		_MCP9801_TempRead
  3034 ;;		_EEPROM_24AA512_Write
  3035 ;;		_EEPROM_24AA512_Read
  3036 ;;		_EEPROM_24AA512_pageWrite
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text22
  3041  001842                     __ptext22:
  3042                           	opt stack 0
  3043  001842                     _I2C_Write:
  3044                           	opt stack 28
  3045                           
  3046                           ;incstack = 0
  3047                           ;I2C_Write@data stored from wreg
  3048  001842  6E01               	movwf	I2C_Write@data,c
  3049                           
  3050                           ;I2C.c: 32: SSP2BUF = data;
  3051  001844  C001  FF75         	movff	I2C_Write@data,3957	;volatile
  3052  001848  A073               	btfss	3955,0,c	;volatile
  3053  00184A  D7FE               	goto	l420
  3054  00184C                     u350:
  3055                           
  3056                           ;I2C.c: 34: while (!PIR3bits.SSP2IF);
  3057  00184C  AEA4               	btfss	4004,7,c	;volatile
  3058  00184E  D7FE               	goto	u350
  3059                           
  3060                           ;I2C.c: 35: PIR3bits.SSP2IF = 0;
  3061  001850  9EA4               	bcf	4004,7,c	;volatile
  3062                           
  3063                           ;I2C.c: 36: if (SSP2CON2bits.ACKSTAT) {
  3064  001852  AC71               	btfss	3953,6,c	;volatile
  3065  001854  0012               	return	
  3066                           
  3067                           ;I2C.c: 37: I2C_stop();
  3068  001856  EC6B  F00C         	call	_I2C_stop	;wreg free
  3069                           
  3070                           ;I2C.c: 38: return;
  3071  00185A  0012               	return	
  3072  00185C                     __end_of_I2C_Write:
  3073                           	opt stack 0
  3074                           tblptru	equ	0xFF8
  3075                           tblptrh	equ	0xFF7
  3076                           tblptrl	equ	0xFF6
  3077                           tablat	equ	0xFF5
  3078                           prodh	equ	0xFF4
  3079                           prodl	equ	0xFF3
  3080                           intcon	equ	0xFF2
  3081                           intcon2	equ	0xFF1
  3082                           postinc0	equ	0xFEE
  3083                           wreg	equ	0xFE8
  3084                           postdec1	equ	0xFE5
  3085                           plusw1	equ	0xFE3
  3086                           fsr1h	equ	0xFE2
  3087                           fsr1l	equ	0xFE1
  3088                           indf2	equ	0xFDF
  3089                           postinc2	equ	0xFDE
  3090                           plusw2	equ	0xFDB
  3091                           fsr2h	equ	0xFDA
  3092                           fsr2l	equ	0xFD9
  3093                           status	equ	0xFD8
  3094                           
  3095 ;; *************** function _I2C_stop *****************
  3096 ;; Defined at:
  3097 ;;		line 62 in file "I2C.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;		None
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		None
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3115 ;;Total ram usage:        0 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_I2C_Write
  3121 ;;		_I2C_buffClear
  3122 ;;		_RTC_Init
  3123 ;;		_setTime
  3124 ;;		_setDate
  3125 ;;		_setAlarm
  3126 ;;		_I2C_BusSCan
  3127 ;;		_MCP23008_Init
  3128 ;;		_MCP23008_Write
  3129 ;;		_MCP23008_read
  3130 ;;		_MCP9801_Init
  3131 ;;		_MCP9801_TempRead
  3132 ;;		_EEPROM_24AA512_Write
  3133 ;;		_EEPROM_24AA512_Read
  3134 ;;		_EEPROM_24AA512_pageWrite
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text23
  3139  0018D6                     __ptext23:
  3140                           	opt stack 0
  3141  0018D6                     _I2C_stop:
  3142                           	opt stack 29
  3143                           
  3144                           ;I2C.c: 63: SSP2CON2bits.PEN = 1;
  3145                           
  3146                           ;incstack = 0
  3147  0018D6  8471               	bsf	3953,2,c	;volatile
  3148  0018D8  B471               	btfsc	3953,2,c	;volatile
  3149  0018DA  D7FE               	goto	l451
  3150                           
  3151                           ;I2C.c: 65: PIR3bits.SSP2IF = 0;
  3152  0018DC  9EA4               	bcf	4004,7,c	;volatile
  3153  0018DE  0012               	return		;funcret
  3154  0018E0                     __end_of_I2C_stop:
  3155                           	opt stack 0
  3156                           tblptru	equ	0xFF8
  3157                           tblptrh	equ	0xFF7
  3158                           tblptrl	equ	0xFF6
  3159                           tablat	equ	0xFF5
  3160                           prodh	equ	0xFF4
  3161                           prodl	equ	0xFF3
  3162                           intcon	equ	0xFF2
  3163                           intcon2	equ	0xFF1
  3164                           postinc0	equ	0xFEE
  3165                           wreg	equ	0xFE8
  3166                           postdec1	equ	0xFE5
  3167                           plusw1	equ	0xFE3
  3168                           fsr1h	equ	0xFE2
  3169                           fsr1l	equ	0xFE1
  3170                           indf2	equ	0xFDF
  3171                           postinc2	equ	0xFDE
  3172                           plusw2	equ	0xFDB
  3173                           fsr2h	equ	0xFDA
  3174                           fsr2l	equ	0xFD9
  3175                           status	equ	0xFD8
  3176                           
  3177 ;; *************** function _EUSART1_itoa *****************
  3178 ;; Defined at:
  3179 ;;		line 155 in file "mcc_generated_files/eusart1.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  data            4   24[COMRAM] unsigned long 
  3182 ;;  base            2   28[COMRAM] int 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  buf            10   30[COMRAM] unsigned char [10]
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  1    wreg      void 
  3187 ;; Registers used:
  3188 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3194 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3195 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3197 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3198 ;;Total ram usage:       16 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; Hardware stack levels required when called:    3
  3201 ;; This function calls:
  3202 ;;		_EUSART1_Write_Text
  3203 ;;		_itoa
  3204 ;; This function is called by:
  3205 ;;		_main
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text24
  3210  00177C                     __ptext24:
  3211                           	opt stack 0
  3212  00177C                     _EUSART1_itoa:
  3213                           	opt stack 27
  3214                           
  3215                           ;eusart1.c: 156: char buf[10];
  3216                           ;eusart1.c: 157: itoa(buf, data, base);
  3217                           
  3218                           ;incstack = 0
  3219  00177C  0E1F               	movlw	low EUSART1_itoa@buf
  3220  00177E  6E11               	movwf	itoa@buf,c
  3221  001780  0E00               	movlw	high EUSART1_itoa@buf
  3222  001782  6E12               	movwf	itoa@buf+1,c
  3223  001784  C019  F013         	movff	EUSART1_itoa@data,itoa@val
  3224  001788  C01A  F014         	movff	EUSART1_itoa@data+1,itoa@val+1
  3225  00178C  C01D  F015         	movff	EUSART1_itoa@base,itoa@base
  3226  001790  C01E  F016         	movff	EUSART1_itoa@base+1,itoa@base+1
  3227  001794  EC5D  F00B         	call	_itoa	;wreg free
  3228                           
  3229                           ;eusart1.c: 158: EUSART1_Write_Text(buf, sizeof(buf));
  3230  001798  0E1F               	movlw	low EUSART1_itoa@buf
  3231  00179A  6E01               	movwf	EUSART1_Write_Text@pbData,c
  3232  00179C  0E00               	movlw	high EUSART1_itoa@buf
  3233  00179E  6E02               	movwf	EUSART1_Write_Text@pbData+1,c
  3234  0017A0  0E0A               	movlw	10
  3235  0017A2  6E03               	movwf	EUSART1_Write_Text@iSize,c
  3236  0017A4  ECB2  F009         	call	_EUSART1_Write_Text	;wreg free
  3237                           
  3238                           ;eusart1.c: 159: EUSART1_Write_Text("\r",2);
  3239  0017A8  0E3A               	movlw	low STR_1
  3240  0017AA  6E01               	movwf	EUSART1_Write_Text@pbData,c
  3241  0017AC  0E0F               	movlw	high STR_1
  3242  0017AE  6E02               	movwf	EUSART1_Write_Text@pbData+1,c
  3243  0017B0  0E02               	movlw	2
  3244  0017B2  6E03               	movwf	EUSART1_Write_Text@iSize,c
  3245  0017B4  ECB2  F009         	call	_EUSART1_Write_Text	;wreg free
  3246  0017B8  0012               	return		;funcret
  3247  0017BA                     __end_of_EUSART1_itoa:
  3248                           	opt stack 0
  3249                           tblptru	equ	0xFF8
  3250                           tblptrh	equ	0xFF7
  3251                           tblptrl	equ	0xFF6
  3252                           tablat	equ	0xFF5
  3253                           prodh	equ	0xFF4
  3254                           prodl	equ	0xFF3
  3255                           intcon	equ	0xFF2
  3256                           intcon2	equ	0xFF1
  3257                           postinc0	equ	0xFEE
  3258                           wreg	equ	0xFE8
  3259                           postdec1	equ	0xFE5
  3260                           plusw1	equ	0xFE3
  3261                           fsr1h	equ	0xFE2
  3262                           fsr1l	equ	0xFE1
  3263                           indf2	equ	0xFDF
  3264                           postinc2	equ	0xFDE
  3265                           plusw2	equ	0xFDB
  3266                           fsr2h	equ	0xFDA
  3267                           fsr2l	equ	0xFD9
  3268                           status	equ	0xFD8
  3269                           
  3270 ;; *************** function _itoa *****************
  3271 ;; Defined at:
  3272 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;  buf             2   16[COMRAM] PTR unsigned char 
  3275 ;;		 -> EUSART1_itoa@buf(10), 
  3276 ;;  val             2   18[COMRAM] int 
  3277 ;;  base            2   20[COMRAM] int 
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  cp              2   22[COMRAM] PTR unsigned char 
  3280 ;;		 -> EUSART1_itoa@buf(10), 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  2   16[COMRAM] PTR unsigned char 
  3283 ;; Registers used:
  3284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3290 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3293 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3294 ;;Total ram usage:        8 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    2
  3297 ;; This function calls:
  3298 ;;		_utoa
  3299 ;; This function is called by:
  3300 ;;		_EUSART1_itoa
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text25
  3305  0016BA                     __ptext25:
  3306                           	opt stack 0
  3307  0016BA                     _itoa:
  3308                           	opt stack 27
  3309                           
  3310                           ;incstack = 0
  3311  0016BA  C011  F017         	movff	itoa@buf,itoa@cp
  3312  0016BE  C012  F018         	movff	itoa@buf+1,itoa@cp+1
  3313  0016C2  AE14               	btfss	itoa@val+1,7,c
  3314  0016C4  D00C               	goto	l924
  3315  0016C6  C011  FFD9         	movff	itoa@buf,fsr2l
  3316  0016CA  C012  FFDA         	movff	itoa@buf+1,fsr2h
  3317  0016CE  0E2D               	movlw	45
  3318  0016D0  6EDF               	movwf	indf2,c
  3319  0016D2  4A11               	infsnz	itoa@buf,f,c
  3320  0016D4  2A12               	incf	itoa@buf+1,f,c
  3321  0016D6  6C13               	negf	itoa@val,c
  3322  0016D8  1E14               	comf	itoa@val+1,f,c
  3323  0016DA  B0D8               	btfsc	status,0,c
  3324  0016DC  2A14               	incf	itoa@val+1,f,c
  3325  0016DE                     l924:
  3326  0016DE  C011  F008         	movff	itoa@buf,utoa@buf
  3327  0016E2  C012  F009         	movff	itoa@buf+1,utoa@buf+1
  3328  0016E6  C013  F00A         	movff	itoa@val,utoa@val
  3329  0016EA  C014  F00B         	movff	itoa@val+1,utoa@val+1
  3330  0016EE  C015  F00C         	movff	itoa@base,utoa@base
  3331  0016F2  C016  F00D         	movff	itoa@base+1,utoa@base+1
  3332  0016F6  EC60  F009         	call	_utoa	;wreg free
  3333  0016FA  0012               	return	
  3334  0016FC                     __end_of_itoa:
  3335                           	opt stack 0
  3336                           tblptru	equ	0xFF8
  3337                           tblptrh	equ	0xFF7
  3338                           tblptrl	equ	0xFF6
  3339                           tablat	equ	0xFF5
  3340                           prodh	equ	0xFF4
  3341                           prodl	equ	0xFF3
  3342                           intcon	equ	0xFF2
  3343                           intcon2	equ	0xFF1
  3344                           postinc0	equ	0xFEE
  3345                           wreg	equ	0xFE8
  3346                           postdec1	equ	0xFE5
  3347                           plusw1	equ	0xFE3
  3348                           fsr1h	equ	0xFE2
  3349                           fsr1l	equ	0xFE1
  3350                           indf2	equ	0xFDF
  3351                           postinc2	equ	0xFDE
  3352                           plusw2	equ	0xFDB
  3353                           fsr2h	equ	0xFDA
  3354                           fsr2l	equ	0xFD9
  3355                           status	equ	0xFD8
  3356                           
  3357 ;; *************** function _utoa *****************
  3358 ;; Defined at:
  3359 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  buf             2    7[COMRAM] PTR unsigned char 
  3362 ;;		 -> EUSART1_itoa@buf(10), 
  3363 ;;  val             2    9[COMRAM] unsigned int 
  3364 ;;  base            2   11[COMRAM] int 
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;  v               2   13[COMRAM] unsigned int 
  3367 ;;  c               1   15[COMRAM] unsigned char 
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  2    7[COMRAM] PTR unsigned char 
  3370 ;; Registers used:
  3371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3377 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3378 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3380 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3381 ;;Total ram usage:        9 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:    1
  3384 ;; This function calls:
  3385 ;;		___lwdiv
  3386 ;;		___lwmod
  3387 ;; This function is called by:
  3388 ;;		_itoa
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text26
  3393  0012C0                     __ptext26:
  3394                           	opt stack 0
  3395  0012C0                     _utoa:
  3396                           	opt stack 27
  3397                           
  3398                           ;incstack = 0
  3399  0012C0  C00A  F00E         	movff	utoa@val,utoa@v
  3400  0012C4  C00B  F00F         	movff	utoa@val+1,utoa@v+1
  3401  0012C8  C00E  F001         	movff	utoa@v,___lwdiv@dividend
  3402  0012CC  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  3403  0012D0  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  3404  0012D4  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  3405  0012D8  ECC5  F00A         	call	___lwdiv	;wreg free
  3406  0012DC  C001  F00E         	movff	?___lwdiv,utoa@v
  3407  0012E0  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
  3408  0012E4  4A08               	infsnz	utoa@buf,f,c
  3409  0012E6  2A09               	incf	utoa@buf+1,f,c
  3410  0012E8  500E               	movf	utoa@v,w,c
  3411  0012EA  100F               	iorwf	utoa@v+1,w,c
  3412  0012EC  A4D8               	btfss	status,2,c
  3413  0012EE  D7EC               	goto	l928
  3414  0012F0  C008  FFD9         	movff	utoa@buf,fsr2l
  3415  0012F4  C009  FFDA         	movff	utoa@buf+1,fsr2h
  3416  0012F8  0E00               	movlw	0
  3417  0012FA  6EDF               	movwf	indf2,c
  3418  0012FC  0608               	decf	utoa@buf,f,c
  3419  0012FE  A0D8               	btfss	status,0,c
  3420  001300  0609               	decf	utoa@buf+1,f,c
  3421  001302  C00A  F001         	movff	utoa@val,___lwmod@dividend
  3422  001306  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
  3423  00130A  C00C  F003         	movff	utoa@base,___lwmod@divisor
  3424  00130E  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
  3425  001312  EC7E  F00B         	call	___lwmod	;wreg free
  3426  001316  5001               	movf	?___lwmod,w,c
  3427  001318  6E10               	movwf	utoa@c,c
  3428  00131A  C00A  F001         	movff	utoa@val,___lwdiv@dividend
  3429  00131E  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  3430  001322  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  3431  001326  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  3432  00132A  ECC5  F00A         	call	___lwdiv	;wreg free
  3433  00132E  C001  F00A         	movff	?___lwdiv,utoa@val
  3434  001332  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
  3435  001336  0E09               	movlw	9
  3436  001338  6410               	cpfsgt	utoa@c,c
  3437  00133A  D002               	goto	l931
  3438  00133C  0E07               	movlw	7
  3439  00133E  2610               	addwf	utoa@c,f,c
  3440  001340                     l931:
  3441  001340  0E30               	movlw	48
  3442  001342  2610               	addwf	utoa@c,f,c
  3443  001344  C008  FFD9         	movff	utoa@buf,fsr2l
  3444  001348  C009  FFDA         	movff	utoa@buf+1,fsr2h
  3445  00134C  C010  FFDF         	movff	utoa@c,indf2
  3446  001350  0608               	decf	utoa@buf,f,c
  3447  001352  A0D8               	btfss	status,0,c
  3448  001354  0609               	decf	utoa@buf+1,f,c
  3449  001356  500A               	movf	utoa@val,w,c
  3450  001358  100B               	iorwf	utoa@val+1,w,c
  3451  00135A  A4D8               	btfss	status,2,c
  3452  00135C  D7D2               	goto	l930
  3453                           
  3454                           ;	Return value of _utoa is never used
  3455  00135E  4A08               	infsnz	utoa@buf,f,c
  3456  001360  2A09               	incf	utoa@buf+1,f,c
  3457  001362  0012               	return	
  3458  001364                     __end_of_utoa:
  3459                           	opt stack 0
  3460                           tblptru	equ	0xFF8
  3461                           tblptrh	equ	0xFF7
  3462                           tblptrl	equ	0xFF6
  3463                           tablat	equ	0xFF5
  3464                           prodh	equ	0xFF4
  3465                           prodl	equ	0xFF3
  3466                           intcon	equ	0xFF2
  3467                           intcon2	equ	0xFF1
  3468                           postinc0	equ	0xFEE
  3469                           wreg	equ	0xFE8
  3470                           postdec1	equ	0xFE5
  3471                           plusw1	equ	0xFE3
  3472                           fsr1h	equ	0xFE2
  3473                           fsr1l	equ	0xFE1
  3474                           indf2	equ	0xFDF
  3475                           postinc2	equ	0xFDE
  3476                           plusw2	equ	0xFDB
  3477                           fsr2h	equ	0xFDA
  3478                           fsr2l	equ	0xFD9
  3479                           status	equ	0xFD8
  3480                           
  3481 ;; *************** function ___lwmod *****************
  3482 ;; Defined at:
  3483 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  dividend        2    0[COMRAM] unsigned int 
  3486 ;;  divisor         2    2[COMRAM] unsigned int 
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;  counter         1    4[COMRAM] unsigned char 
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  2    0[COMRAM] unsigned int 
  3491 ;; Registers used:
  3492 ;;		wreg, status,2, status,0
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3498 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3501 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3502 ;;Total ram usage:        5 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_utoa
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           	psect	text27
  3512  0016FC                     __ptext27:
  3513                           	opt stack 0
  3514  0016FC                     ___lwmod:
  3515                           	opt stack 27
  3516                           
  3517                           ;incstack = 0
  3518  0016FC  5003               	movf	___lwmod@divisor,w,c
  3519  0016FE  1004               	iorwf	___lwmod@divisor+1,w,c
  3520  001700  B4D8               	btfsc	status,2,c
  3521  001702  D018               	goto	l1026
  3522  001704  0E01               	movlw	1
  3523  001706  6E05               	movwf	___lwmod@counter,c
  3524  001708  D004               	goto	l1021
  3525  00170A  90D8               	bcf	status,0,c
  3526  00170C  3603               	rlcf	___lwmod@divisor,f,c
  3527  00170E  3604               	rlcf	___lwmod@divisor+1,f,c
  3528  001710  2A05               	incf	___lwmod@counter,f,c
  3529  001712                     l1021:
  3530  001712  AE04               	btfss	___lwmod@divisor+1,7,c
  3531  001714  D7FA               	goto	l1022
  3532  001716                     u980:
  3533  001716  5003               	movf	___lwmod@divisor,w,c
  3534  001718  5C01               	subwf	___lwmod@dividend,w,c
  3535  00171A  5004               	movf	___lwmod@divisor+1,w,c
  3536  00171C  5802               	subwfb	___lwmod@dividend+1,w,c
  3537  00171E  A0D8               	btfss	status,0,c
  3538  001720  D004               	goto	l1025
  3539  001722  5003               	movf	___lwmod@divisor,w,c
  3540  001724  5E01               	subwf	___lwmod@dividend,f,c
  3541  001726  5004               	movf	___lwmod@divisor+1,w,c
  3542  001728  5A02               	subwfb	___lwmod@dividend+1,f,c
  3543  00172A                     l1025:
  3544  00172A  90D8               	bcf	status,0,c
  3545  00172C  3204               	rrcf	___lwmod@divisor+1,f,c
  3546  00172E  3203               	rrcf	___lwmod@divisor,f,c
  3547  001730  2E05               	decfsz	___lwmod@counter,f,c
  3548  001732  D7F1               	goto	u980
  3549  001734                     l1026:
  3550  001734  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3551  001738  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3552  00173C  0012               	return		;funcret
  3553  00173E                     __end_of___lwmod:
  3554                           	opt stack 0
  3555                           tblptru	equ	0xFF8
  3556                           tblptrh	equ	0xFF7
  3557                           tblptrl	equ	0xFF6
  3558                           tablat	equ	0xFF5
  3559                           prodh	equ	0xFF4
  3560                           prodl	equ	0xFF3
  3561                           intcon	equ	0xFF2
  3562                           intcon2	equ	0xFF1
  3563                           postinc0	equ	0xFEE
  3564                           wreg	equ	0xFE8
  3565                           postdec1	equ	0xFE5
  3566                           plusw1	equ	0xFE3
  3567                           fsr1h	equ	0xFE2
  3568                           fsr1l	equ	0xFE1
  3569                           indf2	equ	0xFDF
  3570                           postinc2	equ	0xFDE
  3571                           plusw2	equ	0xFDB
  3572                           fsr2h	equ	0xFDA
  3573                           fsr2l	equ	0xFD9
  3574                           status	equ	0xFD8
  3575                           
  3576 ;; *************** function ___lwdiv *****************
  3577 ;; Defined at:
  3578 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;  dividend        2    0[COMRAM] unsigned int 
  3581 ;;  divisor         2    2[COMRAM] unsigned int 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;  quotient        2    4[COMRAM] unsigned int 
  3584 ;;  counter         1    6[COMRAM] unsigned char 
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  2    0[COMRAM] unsigned int 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3594 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3595 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3597 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3598 ;;Total ram usage:        7 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; This function calls:
  3601 ;;		Nothing
  3602 ;; This function is called by:
  3603 ;;		_utoa
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           	psect	text28
  3608  00158A                     __ptext28:
  3609                           	opt stack 0
  3610  00158A                     ___lwdiv:
  3611                           	opt stack 27
  3612                           
  3613                           ;incstack = 0
  3614  00158A  0E00               	movlw	0
  3615  00158C  6E06               	movwf	___lwdiv@quotient+1,c
  3616  00158E  0E00               	movlw	0
  3617  001590  6E05               	movwf	___lwdiv@quotient,c
  3618  001592  5003               	movf	___lwdiv@divisor,w,c
  3619  001594  1004               	iorwf	___lwdiv@divisor+1,w,c
  3620  001596  B4D8               	btfsc	status,2,c
  3621  001598  D01C               	goto	l1016
  3622  00159A  0E01               	movlw	1
  3623  00159C  6E07               	movwf	___lwdiv@counter,c
  3624  00159E  D004               	goto	l1011
  3625  0015A0  90D8               	bcf	status,0,c
  3626  0015A2  3603               	rlcf	___lwdiv@divisor,f,c
  3627  0015A4  3604               	rlcf	___lwdiv@divisor+1,f,c
  3628  0015A6  2A07               	incf	___lwdiv@counter,f,c
  3629  0015A8                     l1011:
  3630  0015A8  AE04               	btfss	___lwdiv@divisor+1,7,c
  3631  0015AA  D7FA               	goto	l1012
  3632  0015AC                     u950:
  3633  0015AC  90D8               	bcf	status,0,c
  3634  0015AE  3605               	rlcf	___lwdiv@quotient,f,c
  3635  0015B0  3606               	rlcf	___lwdiv@quotient+1,f,c
  3636  0015B2  5003               	movf	___lwdiv@divisor,w,c
  3637  0015B4  5C01               	subwf	___lwdiv@dividend,w,c
  3638  0015B6  5004               	movf	___lwdiv@divisor+1,w,c
  3639  0015B8  5802               	subwfb	___lwdiv@dividend+1,w,c
  3640  0015BA  A0D8               	btfss	status,0,c
  3641  0015BC  D005               	goto	l1015
  3642  0015BE  5003               	movf	___lwdiv@divisor,w,c
  3643  0015C0  5E01               	subwf	___lwdiv@dividend,f,c
  3644  0015C2  5004               	movf	___lwdiv@divisor+1,w,c
  3645  0015C4  5A02               	subwfb	___lwdiv@dividend+1,f,c
  3646  0015C6  8005               	bsf	___lwdiv@quotient,0,c
  3647  0015C8                     l1015:
  3648  0015C8  90D8               	bcf	status,0,c
  3649  0015CA  3204               	rrcf	___lwdiv@divisor+1,f,c
  3650  0015CC  3203               	rrcf	___lwdiv@divisor,f,c
  3651  0015CE  2E07               	decfsz	___lwdiv@counter,f,c
  3652  0015D0  D7ED               	goto	u950
  3653  0015D2                     l1016:
  3654  0015D2  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3655  0015D6  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3656  0015DA  0012               	return		;funcret
  3657  0015DC                     __end_of___lwdiv:
  3658                           	opt stack 0
  3659                           tblptru	equ	0xFF8
  3660                           tblptrh	equ	0xFF7
  3661                           tblptrl	equ	0xFF6
  3662                           tablat	equ	0xFF5
  3663                           prodh	equ	0xFF4
  3664                           prodl	equ	0xFF3
  3665                           intcon	equ	0xFF2
  3666                           intcon2	equ	0xFF1
  3667                           postinc0	equ	0xFEE
  3668                           wreg	equ	0xFE8
  3669                           postdec1	equ	0xFE5
  3670                           plusw1	equ	0xFE3
  3671                           fsr1h	equ	0xFE2
  3672                           fsr1l	equ	0xFE1
  3673                           indf2	equ	0xFDF
  3674                           postinc2	equ	0xFDE
  3675                           plusw2	equ	0xFDB
  3676                           fsr2h	equ	0xFDA
  3677                           fsr2l	equ	0xFD9
  3678                           status	equ	0xFD8
  3679                           
  3680 ;; *************** function _EUSART1_Write_Text *****************
  3681 ;; Defined at:
  3682 ;;		line 145 in file "mcc_generated_files/eusart1.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  pbData          2    0[COMRAM] PTR unsigned char 
  3685 ;;		 -> STR_1(2), EUSART1_itoa@buf(10), 
  3686 ;;  iSize           1    2[COMRAM] unsigned char 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  iSizeQueued     1    5[COMRAM] unsigned char 
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      void 
  3691 ;; Registers used:
  3692 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3698 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3699 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3700 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3701 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3702 ;;Total ram usage:        6 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; This function calls:
  3705 ;;		Nothing
  3706 ;; This function is called by:
  3707 ;;		_EUSART1_itoa
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text29
  3712  001364                     __ptext29:
  3713                           	opt stack 0
  3714  001364                     _EUSART1_Write_Text:
  3715                           	opt stack 29
  3716                           
  3717                           ;eusart1.c: 146: for (uint8_t iSizeQueued = 0; iSizeQueued < iSize; iSizeQueued++) {
  3718                           
  3719                           ;incstack = 0
  3720  001364  0E00               	movlw	0
  3721  001366  6E06               	movwf	EUSART1_Write_Text@iSizeQueued,c
  3722  001368  D03B               	goto	l125
  3723  00136A                     
  3724                           ;eusart1.c: 147: TxData[iSizeQueued] = pbData[iSizeQueued];
  3725  00136A  5006               	movf	EUSART1_Write_Text@iSizeQueued,w,c
  3726  00136C  0D01               	mullw	1
  3727  00136E  C001  F004         	movff	EUSART1_Write_Text@pbData,??_EUSART1_Write_Text
  3728  001372  C002  F005         	movff	EUSART1_Write_Text@pbData+1,??_EUSART1_Write_Text+1
  3729  001376  50F3               	movf	prodl,w,c
  3730  001378  2604               	addwf	??_EUSART1_Write_Text,f,c
  3731  00137A  50F4               	movf	prodh,w,c
  3732  00137C  2205               	addwfc	??_EUSART1_Write_Text+1,f,c
  3733  00137E  C004  FFF6         	movff	??_EUSART1_Write_Text,tblptrl
  3734  001382  C005  FFF7         	movff	??_EUSART1_Write_Text+1,tblptrh
  3735  001386  6AF8               	clrf	tblptru,c
  3736  001388  5006               	movf	EUSART1_Write_Text@iSizeQueued,w,c
  3737  00138A  0D01               	mullw	1
  3738  00138C  0E00               	movlw	low _TxData
  3739  00138E  24F3               	addwf	prodl,w,c
  3740  001390  6ED9               	movwf	fsr2l,c
  3741  001392  0E01               	movlw	high _TxData
  3742  001394  20F4               	addwfc	prodh,w,c
  3743  001396  6EDA               	movwf	fsr2h,c
  3744  001398  0E0E               	movlw	(high __ramtop+-1)
  3745  00139A  64F7               	cpfsgt	tblptrh,c
  3746  00139C  D003               	bra	u1217
  3747  00139E  0008               	tblrd		*
  3748  0013A0  50F5               	movf	tablat,w,c
  3749  0013A2  D005               	bra	u1210
  3750  0013A4                     u1217:
  3751  0013A4  CFF6 FFE9          	movff	tblptrl,fsr0l
  3752  0013A8  CFF7 FFEA          	movff	tblptrh,fsr0h
  3753  0013AC  50EF               	movf	indf0,w,c
  3754  0013AE                     u1210:
  3755  0013AE  6EDF               	movwf	indf2,c
  3756                           
  3757                           ;eusart1.c: 148: if (TxData[iSizeQueued] != '\0') {
  3758  0013B0  5006               	movf	EUSART1_Write_Text@iSizeQueued,w,c
  3759  0013B2  0D01               	mullw	1
  3760  0013B4  0E00               	movlw	low _TxData
  3761  0013B6  24F3               	addwf	prodl,w,c
  3762  0013B8  6ED9               	movwf	fsr2l,c
  3763  0013BA  0E01               	movlw	high _TxData
  3764  0013BC  20F4               	addwfc	prodh,w,c
  3765  0013BE  6EDA               	movwf	fsr2h,c
  3766  0013C0  50DF               	movf	indf2,w,c
  3767  0013C2  B4D8               	btfsc	status,2,c
  3768  0013C4  D00C               	goto	l127
  3769  0013C6                     u1220:
  3770                           
  3771                           ;eusart1.c: 149: while (!TXSTA1bits.TRMT);
  3772  0013C6  A2AD               	btfss	4013,1,c	;volatile
  3773  0013C8  D7FE               	goto	u1220
  3774                           
  3775                           ;eusart1.c: 150: TXREG1 = TxData[iSizeQueued];
  3776  0013CA  5006               	movf	EUSART1_Write_Text@iSizeQueued,w,c
  3777  0013CC  0D01               	mullw	1
  3778  0013CE  0E00               	movlw	low _TxData
  3779  0013D0  24F3               	addwf	prodl,w,c
  3780  0013D2  6ED9               	movwf	fsr2l,c
  3781  0013D4  0E01               	movlw	high _TxData
  3782  0013D6  20F4               	addwfc	prodh,w,c
  3783  0013D8  6EDA               	movwf	fsr2h,c
  3784  0013DA  50DF               	movf	indf2,w,c
  3785  0013DC  6EAE               	movwf	4014,c	;volatile
  3786  0013DE                     l127:
  3787  0013DE  2A06               	incf	EUSART1_Write_Text@iSizeQueued,f,c
  3788  0013E0                     l125:
  3789  0013E0  5003               	movf	EUSART1_Write_Text@iSize,w,c
  3790  0013E2  5C06               	subwf	EUSART1_Write_Text@iSizeQueued,w,c
  3791  0013E4  B0D8               	btfsc	status,0,c
  3792  0013E6  0012               	return	
  3793  0013E8  D7C0               	goto	l126
  3794  0013EA                     __end_of_EUSART1_Write_Text:
  3795                           	opt stack 0
  3796                           tblptru	equ	0xFF8
  3797                           tblptrh	equ	0xFF7
  3798                           tblptrl	equ	0xFF6
  3799                           tablat	equ	0xFF5
  3800                           prodh	equ	0xFF4
  3801                           prodl	equ	0xFF3
  3802                           intcon	equ	0xFF2
  3803                           intcon2	equ	0xFF1
  3804                           indf0	equ	0xFEF
  3805                           postinc0	equ	0xFEE
  3806                           fsr0h	equ	0xFEA
  3807                           fsr0l	equ	0xFE9
  3808                           wreg	equ	0xFE8
  3809                           postdec1	equ	0xFE5
  3810                           plusw1	equ	0xFE3
  3811                           fsr1h	equ	0xFE2
  3812                           fsr1l	equ	0xFE1
  3813                           indf2	equ	0xFDF
  3814                           postinc2	equ	0xFDE
  3815                           plusw2	equ	0xFDB
  3816                           fsr2h	equ	0xFDA
  3817                           fsr2l	equ	0xFD9
  3818                           status	equ	0xFD8
  3819                           tblptru	equ	0xFF8
  3820                           tblptrh	equ	0xFF7
  3821                           tblptrl	equ	0xFF6
  3822                           tablat	equ	0xFF5
  3823                           prodh	equ	0xFF4
  3824                           prodl	equ	0xFF3
  3825                           intcon	equ	0xFF2
  3826                           intcon2	equ	0xFF1
  3827                           indf0	equ	0xFEF
  3828                           postinc0	equ	0xFEE
  3829                           fsr0h	equ	0xFEA
  3830                           fsr0l	equ	0xFE9
  3831                           wreg	equ	0xFE8
  3832                           postdec1	equ	0xFE5
  3833                           plusw1	equ	0xFE3
  3834                           fsr1h	equ	0xFE2
  3835                           fsr1l	equ	0xFE1
  3836                           indf2	equ	0xFDF
  3837                           postinc2	equ	0xFDE
  3838                           plusw2	equ	0xFDB
  3839                           fsr2h	equ	0xFDA
  3840                           fsr2l	equ	0xFD9
  3841                           status	equ	0xFD8
  3842                           
  3843                           	psect	rparam
  3844  0000                     tblptru	equ	0xFF8
  3845                           tblptrh	equ	0xFF7
  3846                           tblptrl	equ	0xFF6
  3847                           tablat	equ	0xFF5
  3848                           prodh	equ	0xFF4
  3849                           prodl	equ	0xFF3
  3850                           intcon	equ	0xFF2
  3851                           intcon2	equ	0xFF1
  3852                           indf0	equ	0xFEF
  3853                           postinc0	equ	0xFEE
  3854                           fsr0h	equ	0xFEA
  3855                           fsr0l	equ	0xFE9
  3856                           wreg	equ	0xFE8
  3857                           postdec1	equ	0xFE5
  3858                           plusw1	equ	0xFE3
  3859                           fsr1h	equ	0xFE2
  3860                           fsr1l	equ	0xFE1
  3861                           indf2	equ	0xFDF
  3862                           postinc2	equ	0xFDE
  3863                           plusw2	equ	0xFDB
  3864                           fsr2h	equ	0xFDA
  3865                           fsr2l	equ	0xFD9
  3866                           status	equ	0xFD8


Data Sizes:
    Strings     2
    Constant    57
    Data        18
    BSS         277
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     42      81
    BANK0           160      0       0
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 

    EUSART1_Write_Text@pbData	PTR unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[2]), EUSART1_itoa@buf(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->_EUSART1_itoa
    _setTime->_decimalToBCD
    _setDate->_decimalToBCD
    _decimalToBCD->___awdiv
    _setAlarm->_I2C_Write
    _SYSTEM_Initialize->_I2C_Init
    _I2C_Init->___aldiv
    ___aldiv->___wmul
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _RTC_Init->_I2C_Write
    _I2C_buffClear->_I2C_Write
    _EUSART1_itoa->_itoa
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8188
                                             40 COMRAM     2     2      0
                       _EUSART1_itoa
                      _I2C_buffClear
                           _RTC_Init
                  _SYSTEM_Initialize
                     _interrupt_Init
                           _setAlarm
                            _setDate
                            _setTime
 ---------------------------------------------------------------------------------
 (1) _setTime                                             15    13      2    1936
                                             12 COMRAM    15    13      2
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
                       _decimalToBCD
 ---------------------------------------------------------------------------------
 (1) _setDate                                             18    15      3    2079
                                             12 COMRAM    18    15      3
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
                       _decimalToBCD
 ---------------------------------------------------------------------------------
 (2) _decimalToBCD                                         4     2      2    1476
                                              8 COMRAM     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setAlarm                                             5     1      4     407
                                              1 COMRAM     5     1      4
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (1) _interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1331
                 _EUSART1_Initialize
                           _I2C_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             1     1      0    1037
                                             20 COMRAM     1     1      0
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     563
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              6 COMRAM    14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RTC_Init                                             0     0      0      15
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (1) _I2C_buffClear                                        0     0      0      15
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      15
                                              0 COMRAM     1     1      0
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_itoa                                        16    10      6    2405
                                             24 COMRAM    16    10      6
                 _EUSART1_Write_Text
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    1698
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1307
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write_Text                                   6     3      3     460
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_itoa
     _EUSART1_Write_Text
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
   _I2C_buffClear
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
   _RTC_Init
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _I2C_Init
       ___aldiv
         ___wmul (ARG)
       ___wmul
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   _interrupt_Init
   _setAlarm
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
   _setDate
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
     _decimalToBCD
       ___awdiv
       ___awmod
   _setTime
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
     _decimalToBCD
       ___awdiv
       ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0     100       8      100.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2A      51       1       85.3%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     151       6        0.0%
DATA                 0      0     151       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Apr 05 22:32:11 2020

                              EUSART1_itoa@base 001D                                EUSART1_itoa@data 0019  
                            __size_of_I2C_Write 001A                            __end_of_decimalToBCD 17F2  
                                  ___awdiv@sign 0006                             ___wmul@multiplicand 0003  
                        __end_of_interrupt_Init 18AE                                  setTime@timeReg 001A  
                                  __CFG_CP0$OFF 000000                              __size_of_I2C_start 000A  
                                   __CFG_OSC$HS 000000                                             l125 13E0  
                                           l126 136A                                             l127 13DE  
                                           l420 1848                                             l254 1270  
                                           _ADC 0037                                             l451 18D8  
                                           l439 18CE                                             l561 10E6  
                                           l650 1184                                             l571 0F6E  
                                           l563 1118                                             l652 11B2  
                                           l580 1064                                             l653 11A6  
                                           l573 0FC2                                             l565 1148  
                                           l566 114E                                             l575 0FF4  
                                           l559 1092                                             l656 11E6  
                                           l657 11F4                                             l649 116C  
                                           l761 13FE                                             l577 1026  
                                           l930 1302                                             l658 120A  
                                           l770 1464                                             l762 140E  
                                           l931 1340                                             l579 1056  
                                           l924 16DE                                             l764 142C  
                                           l765 1424                                             l781 14BC  
                                           l782 14C6                                             l774 1482  
                                           l783 14D4                                             l775 148E  
                                           l928 12C8                                             l768 144C  
                                           l769 1456                                             l777 14A4  
                                           l778 149C                                             u350 184C  
                                           u950 15AC                                             u980 1716  
                                  ___awmod@sign 0006                                             prod 000FF3  
                                           wreg 000FE8                                      _TXSTA1bits 000FAD  
                                  __CFG_IESO$ON 000000                                            l1011 15A8  
                                          l1012 15A0                                            l1021 1712  
                                          l1022 170A                                            l1015 15C8  
                                          l1016 15D2                                            l1025 172A  
                                          l1026 1734                                            l2426 1082  
                                          STR_1 0F3A                                            u1030 11B6  
                                          u1210 13AE                                            u1220 13C6  
                                          u1150 14A8                                            u1217 13A4  
                                          u1321 0F4A                                            u1090 1430  
                                          u1330 0F6C                                            u1261 1072  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          u1407 122E                                            _LATC 000F8B  
                                          _LATD 000F8C                                            u1417 12B2  
                                          _LATE 000F8D                                            u1427 180E  
                                          u1390 1294                                            u1396 1296  
                                 __CFG_FCMEN$ON 000000                                            _main 121C  
                                          _itoa 16BA                                __end_of_I2C_Init 158A  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          indf0 000FEF                                            fsr2h 000FDA  
                                          fsr0l 000FE9                                            indf2 000FDF  
                                          fsr1l 000FE1                                            fsr2l 000FD9  
                                          _utoa 12C0                                   ?_EUSART1_itoa 0019  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0000                                __end_of_I2C_stop 18E0  
                                  ___param_bank 000000                                   __CFG_PLLDIV$1 000000  
                __size_of_OSCILLATOR_Initialize 002A                   __end_of_OSCILLATOR_Initialize 181C  
                               ?_interrupt_Init 0001                                 __end_of___aldiv 121C  
                                         ?_main 0001                                           ?_itoa 0011  
                               __end_of___awdiv 146E                                 __end_of___awmod 14DE  
                                         ?_utoa 0008                                 ___awdiv@divisor 0003  
                               __end_of___lwdiv 15DC                                 __end_of___lwmod 173E  
                               ___awdiv@counter 0005                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                                         _sData 002B                                           _errno 0035  
                                __CFG_CLKOEC$ON 000000                                __end_of_RTC_Init 162C  
                               __end_of_setDate 1066                                 __end_of_setTime 1150  
                             __end_of_I2C_Write 185C                                           tablat 000FF5  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         utoa@c 0010                                           utoa@v 000E  
                                         status 000FD8                               __end_of_I2C_start 18D6  
                                ??_EUSART1_itoa 001F              _EUSART1_DefaultFramingErrorHandler 000000  
                      __size_of_SPI1_Initialize 000E                         __CFG_DSWDTOSC$INTOSCREF 000000  
                               __initialization 162C                      __end_of_EUSART1_Initialize 177C  
                                  __end_of_main 12C0                                    __end_of_itoa 16FC  
                                  __end_of_utoa 1364                                          ??_main 0029  
                                        ??_itoa 0017                                          ??_utoa 000E  
                                 __activetblptr 000002                                          _ANCON0 000F48  
                                        _ANCON1 000F49                                ___awdiv@dividend 0001  
                                        _ODCON1 000F42                                          _ODCON2 000F41  
                                        _ODCON3 000F40                                  __CFG_WDTEN$OFF 000000  
                                        _RCREG1 000FAF                                          _RCSTA1 000FAC  
                                        _OSCCON 000FD3                                          _SPBRG1 000FB0  
                                __CFG_WPCFG$OFF 000000                                          _TXREG1 000FAE  
                                        _TXSTA1 000FAD                                  __CFG_WPDIS$OFF 000000  
                         __size_of_decimalToBCD 0038                                  __CFG_XINST$OFF 000000  
                                        _TxData 0100                                       ??___aldiv 000F  
                                        ___wmul 181C                                       ??___awdiv 0005  
                                __CFG_STVREN$ON 000000                                       ??___awmod 0005  
                                     ??___lwdiv 0005                          __size_of_I2C_buffClear 0010  
                                     ??___lwmod 0005                        ?_EUSART1_SetErrorHandler 0001  
                                        clear_0 1654                                          clear_1 1666  
                              ___awdiv@quotient 0007                                 ___awmod@divisor 0003  
                               ___awmod@counter 0005                ??_EUSART1_SetOverrunErrorHandler 0003  
               ?_EUSART1_SetOverrunErrorHandler 0001                                __end_of_setAlarm 1536  
                                        itoa@cp 0017                                    __pdataCOMRAM 0040  
                                     ?_I2C_Init 0001                                       ??_setDate 0010  
                                  __mediumconst 0000                                       ??_setTime 000F  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                       ?_I2C_stop 0001  
                               __CFG_DSBOREN$ON 000000                                    _decimalToBCD 17BA  
                              __end_ofexp@coeff 0F1F                               _SYSTEM_Initialize 185C  
                              __end_oflog@coeff 0F3A                                      __accesstop 0060  
                       __end_of__initialization 166C                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                 __CFG_IOL1WAY$ON 000000  
                          __CFG_WPEND$PAGE_WPFP 000000                      __end_of_EUSART1_Write_Text 13EA  
                                __pcstackCOMRAM 0001                             ??_SYSTEM_Initialize 0016  
                             ??_SPI1_Initialize 0001                                 __CFG_DSWDTEN$ON 000000  
                               __CFG_DSWDTPS$G2 000000                                       ?_RTC_Init 0001  
                          __end_of_EUSART1_itoa 17BA                                      ??_I2C_Init 0015  
                                    ??_I2C_stop 0001                                     setDate@year 000F  
                                   setAlarm@day 0004                       __end_of_SYSTEM_Initialize 1874  
                                 _I2C_buffClear 1886                                      __pbssBANK1 0100  
               __end_of_EUSART1_SetErrorHandler 18CC                               __CFG_PLLSEL$PLL4X 000000  
                              ??_interrupt_Init 0001                                         ?___wmul 0001  
                                    ??_RTC_Init 0002          __end_of_EUSART1_SetFramingErrorHandler 18C2  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 18B8  
                                       _REFOCON 000F3D                                         _OSCCON2 000F87  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000F7F  
                                       _SSP1ADD 000FC8                                         _SSP2ADD 000F74  
                                       _SSP1BUF 000FC9                                         _SSP2BUF 000F75  
                                ?_I2C_buffClear 0001                                     setTime@hour 0019  
                                     ?_setAlarm 0002                                       _I2C_Write 1842  
                       EUSART1_Write_Text@iSize 0003                                         __Hparam 0000  
                                       __Lparam 0000                                       _I2C_start 18CC  
                                setDate@timeReg 001D                                  setDate@weekday 000D  
                                       ___aldiv 1150                                         ___awdiv 13EA  
                                       ___awmod 146E                                 __size_of___wmul 0026  
                                       ___lwdiv 158A                                         ___lwmod 16FC  
                                  __psmallconst 0F00                                         __pcinit 162C  
                                       __ramtop 0F00                                         __ptext0 121C  
                                       __ptext1 1066                                         __ptext2 0F3E  
                                       __ptext3 17BA                                         __ptext4 146E  
                                       __ptext5 13EA                                         __ptext6 14DE  
                                       __ptext7 18A4                                         __ptext8 185C  
                                       __ptext9 1896                                  setAlarm@minute 0002  
                         _OSCILLATOR_Initialize 17F2                                ___awmod@dividend 0001  
                                       _setDate 0F3E                                ___aldiv@dividend 0007  
                            _EUSART1_Initialize 173E                        ??_PIN_MANAGER_Initialize 0001  
                                       _setTime 1066                      __size_of_SYSTEM_Initialize 0018  
                          end_of_initialization 166C                             ?_EUSART1_Initialize 0001  
                                       itoa@buf 0011                                         itoa@val 0013  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 003B  
                                    ??_setAlarm 0006                                      ?_I2C_Write 0001  
                                    ?_I2C_start 0001                                ___aldiv@quotient 0011  
                                       postdec1 000FE5                                         postinc0 000FEE  
                                       postinc2 000FDE                                         utoa@buf 0008  
                         __size_of_EUSART1_itoa 003E                                         utoa@val 000A  
                          ??_EUSART1_Initialize 0003                                       _PORTBbits 000F81  
                               ??_I2C_buffClear 0002                                       _TRISDbits 000F95  
                                     _TRISEbits 000F96                               __size_of_I2C_Init 0054  
                               EUSART1_itoa@buf 001F                __size_of_EUSART1_SetErrorHandler 000A  
                                 setTime@minute 000D                                   setTime@second 000E  
                             __size_of_I2C_stop 000A                                 _SPI1_Initialize 1896  
                             __CFG_WPFP$PAGE_63 000000                                    _EUSART1_itoa 177C  
                           __CFG_MSSP7B_EN$MSK7 000000                                  __end_of___wmul 1842  
                                 __pidataCOMRAM 1874                          ?_OSCILLATOR_Initialize 0001  
                             __size_of_RTC_Init 0050                              _EUSART1_Write_Text 1364  
                           start_initialization 162C                 __size_of_PIN_MANAGER_Initialize 0044  
                                  setDate@F7749 0040                             ?_EUSART1_Write_Text 0001  
                                   ??_I2C_Write 0001                                     ??_I2C_start 0001  
                                  setDate@month 000E                            decimalToBCD@DecValue 0009  
                                  setAlarm@hour 0003                                        ??___wmul 0005  
                          ??_EUSART1_Write_Text 0004                               __CFG_ADCSEL$BIT10 000000  
                               I2C_Init@F_clock 0015                                     __pbssCOMRAM 002B  
                       __end_of_SPI1_Initialize 18A4                                      setDate@day 001C  
              ??_EUSART1_SetFramingErrorHandler 0003                 ?_EUSART1_SetFramingErrorHandler 0001  
                              setAlarm@alarmReg 0006                                ___lwdiv@dividend 0001  
                        _PIN_MANAGER_Initialize 1676                               __size_of_setAlarm 0058  
                                      ?___aldiv 0007                                        ?___awdiv 0001  
                                      ?___awmod 0001                                        ?___lwdiv 0001  
                                      ?___lwmod 0001                                     __smallconst 0F00  
                                      _BAUDCON1 000F7E              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      _I2C_Init 1536                            _EUSART1_ErrorHandler 0039  
                                      ?_setDate 000D                            __CFG_RTCOSC$T1OSCREF 000000  
                                      ?_setTime 000D                                        _I2C_stop 18D6  
                       _EUSART1_SetErrorHandler 18C2                                ___lwdiv@quotient 0005  
                               ___aldiv@divisor 000B                                 ___aldiv@counter 000F  
                                ___wmul@product 0005         EUSART1_SetErrorHandler@interruptHandler 0001  
                                      _LATBbits 000F8A                                        _LATCbits 000F8B  
                                      _PIE3bits 000FA3                                 setDate@Register 0012  
                                  setTime@F7742 004A                                        _PIR1bits 000F9E  
                                      _PIR3bits 000FA4                                __CFG_WDTPS$32768 000000  
                                      _SSP1CON1 000FC6                                        _SSP1STAT 000FC7  
                                      _RTC_Init 15DC                               ___wmul@multiplier 0001  
                              __CFG_SOSCSEL$DIG 000000                         __size_of_interrupt_Init 000A  
                             __CFG_CFGPLLEN$OFF 000000                                ?_SPI1_Initialize 0001  
                                   _INTCON2bits 000FF1                                       copy_data0 1640  
                                 ?_decimalToBCD 0009                        EUSART1_Write_Text@pbData 0001  
                                      __Hrparam 0000                                        __Lrparam 0000  
                                 I2C_Write@data 0001                         ??_OSCILLATOR_Initialize 0001  
                              __size_of___aldiv 00CC                                __size_of___awdiv 0084  
                              __size_of___awmod 0070                     __size_of_EUSART1_Initialize 003E  
                              __size_of___lwdiv 0052                                __size_of___lwmod 0042  
                     ??_EUSART1_SetErrorHandler 0003                     _EUSART1_DefaultErrorHandler 000000  
                               ___lwdiv@divisor 0003                                __size_of_setDate 0128  
                               ___lwdiv@counter 0007                                __size_of_setTime 00EA  
                                      __ptext10 1676                                        __ptext11 17F2  
                                      __ptext20 1886                                        __ptext12 1536  
                                      __ptext21 18CC                                        __ptext13 181C  
                                      __ptext22 1842                                        __ptext14 1150  
                                      __ptext23 18D6                                        __ptext15 173E  
                                      __ptext24 177C                                        __ptext16 18AE  
                                      __ptext25 16BA                                        __ptext17 18B8  
                                      __ptext26 12C0                                        __ptext18 18C2  
                                      __ptext27 16FC                                        __ptext19 15DC  
                                      __ptext28 158A                                        __ptext29 1364  
                         __end_of_I2C_buffClear 1896                                    _SSP1CON1bits 000FC6  
                                ??_decimalToBCD 000B                                    _SSP2CON1bits 000F72  
                                  _SSP2CON2bits 000F71                                 setAlarm@weekDay 0005  
                                 __size_of_main 00A4                                   __size_of_itoa 0042  
                                 __size_of_utoa 00A4                                        _setAlarm 14DE  
EUSART1_SetOverrunErrorHandler@interruptHandler 0001                                    _SSP1STATbits 000FC7  
                   _EUSART1_FramingErrorHandler 003D                                    _SSP2STATbits 000F73  
                                      exp@coeff 0F01                                        log@coeff 0F1F  
                                    _INTCONbits 000FF2                                        itoa@base 0015  
                              ___lwmod@dividend 0001                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 18B8         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 18AE                                      _RCSTA1bits 000FAC  
                 EUSART1_Write_Text@iSizeQueued 0006  EUSART1_SetFramingErrorHandler@interruptHandler 0001  
                   __size_of_EUSART1_Write_Text 0086                              _eusart1RxLastError 003F  
                                      utoa@base 000C                                  _interrupt_Init 18A4  
                               ___lwmod@divisor 0003                                 setTime@Register 0011  
                               ___lwmod@counter 0005                                    ___aldiv@sign 0010  
                __end_of_PIN_MANAGER_Initialize 16BA  
