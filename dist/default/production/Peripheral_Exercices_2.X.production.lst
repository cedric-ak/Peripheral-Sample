

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Apr 23 21:15:48 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46J13
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41  0000                     
    42                           ; Version 1.45
    43                           ; Generated 16/11/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18LF46J13 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    78  0000                     
    79 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    80  0000                     
    81 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    82  0000                     
    83                           	psect	idataCOMRAM
    84  001494                     __pidataCOMRAM:
    85                           	opt stack 0
    86                           
    87                           ;initializer for PCF8523_setTime@F7829
    88  001494  0003               	dw	3
    89  001496  0004               	dw	4
    90  001498  0005               	dw	5
    91  00149A  00                 	db	0
    92  00149B  00                 	db	0
    93                           
    94                           ;initializer for _page
    95  00149C  B0                 	db	176
    96  00149D  B1                 	db	177
    97  00149E  B2                 	db	178
    98  00149F  B3                 	db	179
    99  0014A0  B4                 	db	180
   100  0014A1  B5                 	db	181
   101  0014A2  B6                 	db	182
   102  0014A3  B7                 	db	183
   103                           
   104                           ;initializer for PCF8523_setDate@F7836
   105  0014A4  06                 	db	6
   106  0014A5  07                 	db	7
   107  0014A6  08                 	db	8
   108  0014A7  09                 	db	9
   109  0014A8  00                 	db	0
   110                           
   111                           	psect	idataBANK0
   112  00142A                     __pidataBANK0:
   113                           	opt stack 0
   114                           
   115                           ;initializer for _columm
   116  00142A  00                 	db	0
   117  00142B  01                 	db	1
   118  00142C  02                 	db	2
   119  00142D  03                 	db	3
   120  00142E  04                 	db	4
   121  00142F  05                 	db	5
   122  001430  06                 	db	6
   123  001431  07                 	db	7
   124  001432  08                 	db	8
   125  001433  09                 	db	9
   126  001434  0A                 	db	10
   127  001435  0B                 	db	11
   128  001436  0C                 	db	12
   129  001437  0D                 	db	13
   130  001438  0E                 	db	14
   131  001439  0F                 	db	15
   132  00143A  10                 	db	16
   133  00143B  11                 	db	17
   134  00143C  12                 	db	18
   135  00143D  13                 	db	19
   136  00143E  14                 	db	20
   137  00143F  15                 	db	21
   138  001440  16                 	db	22
   139  001441  17                 	db	23
   140  001442  18                 	db	24
   141  001443  19                 	db	25
   142  001444  1A                 	db	26
   143  001445  1B                 	db	27
   144  001446  1C                 	db	28
   145  001447  1D                 	db	29
   146  001448  1E                 	db	30
   147  001449  1F                 	db	31
   148                           
   149                           	psect	smallconst
   150  000F00                     __psmallconst:
   151                           	opt stack 0
   152  000F00  00                 	db	0
   153  000F01  00                 	db	0
   154  000F02  80                 	db	128
   155  000F03  3F                 	db	63
   156  000F04  72                 	db	114
   157  000F05  31                 	db	49
   158  000F06  3F                 	db	63
   159  000F07  FE                 	db	254
   160  000F08  75                 	db	117
   161  000F09  3E                 	db	62
   162  000F0A  58                 	db	88
   163  000F0B  63                 	db	99
   164  000F0C  3D                 	db	61
   165  000F0D  95                 	db	149
   166  000F0E  1D                 	db	29
   167  000F0F  3C                 	db	60
   168  000F10  C5                 	db	197
   169  000F11  AE                 	db	174
   170  000F12  3A                 	db	58
   171  000F13  79                 	db	121
   172  000F14  21                 	db	33
   173  000F15  39                 	db	57
   174  000F16  94                 	db	148
   175  000F17  80                 	db	128
   176  000F18  37                 	db	55
   177  000F19  93                 	db	147
   178  000F1A  A7                 	db	167
   179  000F1B  35                 	db	53
   180  000F1C  56                 	db	86
   181  000F1D  15                 	db	21
   182  000F1E  34                 	db	52
   183  000F1F                     __end_ofexp@coeff:
   184                           	opt stack 0
   185  000F1F  00                 	db	0
   186  000F20  00                 	db	0
   187  000F21  00                 	db	0
   188  000F22  00                 	db	0
   189  000F23  80                 	db	128
   190  000F24  3F                 	db	63
   191  000F25  F0                 	db	240
   192  000F26  FF                 	db	255
   193  000F27  BE                 	db	190
   194  000F28  E2                 	db	226
   195  000F29  A9                 	db	169
   196  000F2A  3E                 	db	62
   197  000F2B  83                 	db	131
   198  000F2C  76                 	db	118
   199  000F2D  BE                 	db	190
   200  000F2E  AE                 	db	174
   201  000F2F  2B                 	db	43
   202  000F30  3E                 	db	62
   203  000F31  3C                 	db	60
   204  000F32  C3                 	db	195
   205  000F33  BD                 	db	189
   206  000F34  D2                 	db	210
   207  000F35  13                 	db	19
   208  000F36  3D                 	db	61
   209  000F37  78                 	db	120
   210  000F38  D3                 	db	211
   211  000F39  BB                 	db	187
   212  000F3A                     __end_oflog@coeff:
   213                           	opt stack 0
   214  0000                     _ODCON3	set	3904
   215  0000                     _ODCON2	set	3905
   216  0000                     _ODCON1	set	3906
   217  0000                     _ANCON1	set	3913
   218  0000                     _ANCON0	set	3912
   219  0000                     _REFOCON	set	3901
   220  0000                     _LATEbits	set	3981
   221  0000                     _SSP2STATbits	set	3955
   222  0000                     _SSP2BUF	set	3957
   223  0000                     _SSP2ADD	set	3956
   224  0000                     _SSP2CON2bits	set	3953
   225  0000                     _SSP2CON1bits	set	3954
   226  0000                     _TRISDbits	set	3989
   227  0000                     _PIR3bits	set	4004
   228  0000                     _PIE3bits	set	4003
   229  0000                     _PORTBbits	set	3969
   230  0000                     _LATCbits	set	3979
   231  0000                     _TRISCbits	set	3988
   232  0000                     _INTCONbits	set	4082
   233  0000                     _TRISEbits	set	3990
   234  0000                     _INTCON2bits	set	4081
   235  0000                     _TRISD	set	3989
   236  0000                     _TRISC	set	3988
   237  0000                     _TRISB	set	3987
   238  0000                     _TRISA	set	3986
   239  0000                     _TRISE	set	3990
   240  0000                     _LATC	set	3979
   241  0000                     _LATB	set	3978
   242  0000                     _LATA	set	3977
   243  0000                     _LATD	set	3980
   244  0000                     _LATE	set	3981
   245  0000                     _OSCCON2	set	3975
   246  0000                     _OSCTUNE	set	3995
   247  0000                     _OSCCON	set	4051
   248  0000                     _TXREG1	set	4014
   249  0000                     _RCREG1	set	4015
   250  0000                     _RCSTA1bits	set	4012
   251  0000                     _TXSTA1bits	set	4013
   252  0000                     _PIR1bits	set	3998
   253  0000                     _SPBRGH1	set	3967
   254  0000                     _SPBRG1	set	4016
   255  0000                     _TXSTA1	set	4013
   256  0000                     _RCSTA1	set	4012
   257  0000                     _BAUDCON1	set	3966
   258  0000                     _SSP1STATbits	set	4039
   259  0000                     _SSP1BUF	set	4041
   260  0000                     _SSP1CON1bits	set	4038
   261  0000                     _SSP1ADD	set	4040
   262  0000                     _SSP1CON1	set	4038
   263  0000                     _SSP1STAT	set	4039
   264  000F3A  0D                 	db	13
   265  000F3B  00                 	db	0
   266  000F3C  30                 	db	48	;'0'
   267  000F3D  00                 	db	0
   268  000F3E  20                 	db	32
   269  000F3F  00                 	db	0
   270                           
   271                           ; #config settings
   272  000F40  00                 	db	0	; dummy byte at the end
   273  0000                     
   274                           	psect	cinit
   275  0011BA                     __pcinit:
   276                           	opt stack 0
   277  0011BA                     start_initialization:
   278                           	opt stack 0
   279  0011BA                     __initialization:
   280                           	opt stack 0
   281                           
   282                           ; Initialize objects allocated to BANK0 (32 bytes)
   283                           ; load TBLPTR registers with __pidataBANK0
   284  0011BA  0E2A               	movlw	low __pidataBANK0
   285  0011BC  6EF6               	movwf	tblptrl,c
   286  0011BE  0E14               	movlw	high __pidataBANK0
   287  0011C0  6EF7               	movwf	tblptrh,c
   288  0011C2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   289  0011C4  6EF8               	movwf	tblptru,c
   290  0011C6  EE00  F060         	lfsr	0,__pdataBANK0
   291  0011CA  EE10 F020          	lfsr	1,32
   292  0011CE                     copy_data0:
   293  0011CE  0009               	tblrd		*+
   294  0011D0  CFF5 FFEE          	movff	tablat,postinc0
   295  0011D4  50E5               	movf	postdec1,w,c
   296  0011D6  50E1               	movf	fsr1l,w,c
   297  0011D8  E1FA               	bnz	copy_data0
   298                           
   299                           ; Initialize objects allocated to COMRAM (21 bytes)
   300                           ; load TBLPTR registers with __pidataCOMRAM
   301  0011DA  0E94               	movlw	low __pidataCOMRAM
   302  0011DC  6EF6               	movwf	tblptrl,c
   303  0011DE  0E14               	movlw	high __pidataCOMRAM
   304  0011E0  6EF7               	movwf	tblptrh,c
   305  0011E2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   306  0011E4  6EF8               	movwf	tblptru,c
   307  0011E6  EE00  F037         	lfsr	0,__pdataCOMRAM
   308  0011EA  EE10 F015          	lfsr	1,21
   309  0011EE                     copy_data1:
   310  0011EE  0009               	tblrd		*+
   311  0011F0  CFF5 FFEE          	movff	tablat,postinc0
   312  0011F4  50E5               	movf	postdec1,w,c
   313  0011F6  50E1               	movf	fsr1l,w,c
   314  0011F8  E1FA               	bnz	copy_data1
   315                           
   316                           ; Clear objects allocated to BANK1 (256 bytes)
   317  0011FA  EE01  F000         	lfsr	0,__pbssBANK1
   318  0011FE  EE11 F000          	lfsr	1,256
   319  001202                     clear_0:
   320  001202  6AEE               	clrf	postinc0,c
   321  001204  50E5               	movf	postdec1,w,c
   322  001206  50E1               	movf	fsr1l,w,c
   323  001208  E1FC               	bnz	clear_0
   324  00120A  50E2               	movf	fsr1h,w,c
   325  00120C  E1FA               	bnz	clear_0
   326                           
   327                           ; Clear objects allocated to COMRAM (31 bytes)
   328  00120E  EE00  F001         	lfsr	0,__pbssCOMRAM
   329  001212  0E1F               	movlw	31
   330  001214                     clear_1:
   331  001214  6AEE               	clrf	postinc0,c
   332  001216  06E8               	decf	wreg,f,c
   333  001218  E1FD               	bnz	clear_1
   334  00121A                     end_of_initialization:
   335                           	opt stack 0
   336  00121A                     __end_of__initialization:
   337                           	opt stack 0
   338  00121A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   339  00121C  6EF8               	movwf	tblptru,c
   340  00121E  0100               	movlb	0
   341  001220  EF60  F008         	goto	_main	;jump to C main() function
   342                           tblptru	equ	0xFF8
   343                           tblptrh	equ	0xFF7
   344                           tblptrl	equ	0xFF6
   345                           tablat	equ	0xFF5
   346                           postinc0	equ	0xFEE
   347                           wreg	equ	0xFE8
   348                           postdec1	equ	0xFE5
   349                           fsr1h	equ	0xFE2
   350                           fsr1l	equ	0xFE1
   351                           
   352                           	psect	bssCOMRAM
   353  000001                     __pbssCOMRAM:
   354                           	opt stack 0
   355  000001                     _sData:
   356                           	opt stack 0
   357  000001                     	ds	10
   358  00000B                     _bfSize:
   359                           	opt stack 0
   360  00000B                     	ds	4
   361  00000F                     _MAX31_ADC:
   362                           	opt stack 0
   363  00000F                     	ds	4
   364  000013                     _errno:
   365                           	opt stack 0
   366  000013                     	ds	2
   367  000015                     _buffer:
   368                           	opt stack 0
   369  000015                     	ds	2
   370  000017                     _ADC:
   371                           	opt stack 0
   372  000017                     	ds	2
   373  000019                     _EUSART1_ErrorHandler:
   374                           	opt stack 0
   375  000019                     	ds	2
   376  00001B                     _EUSART1_OverrunErrorHandler:
   377                           	opt stack 0
   378  00001B                     	ds	2
   379  00001D                     _EUSART1_FramingErrorHandler:
   380                           	opt stack 0
   381  00001D                     	ds	2
   382  00001F                     _eusart1RxLastError:
   383                           	opt stack 0
   384  00001F                     	ds	1
   385                           tblptru	equ	0xFF8
   386                           tblptrh	equ	0xFF7
   387                           tblptrl	equ	0xFF6
   388                           tablat	equ	0xFF5
   389                           postinc0	equ	0xFEE
   390                           wreg	equ	0xFE8
   391                           postdec1	equ	0xFE5
   392                           fsr1h	equ	0xFE2
   393                           fsr1l	equ	0xFE1
   394                           
   395                           	psect	dataCOMRAM
   396  000037                     __pdataCOMRAM:
   397                           	opt stack 0
   398  000037                     PCF8523_setTime@F7829:
   399                           	opt stack 0
   400  000037                     	ds	8
   401  00003F                     _page:
   402                           	opt stack 0
   403  00003F                     	ds	8
   404  000047                     PCF8523_setDate@F7836:
   405                           	opt stack 0
   406  000047                     	ds	5
   407                           tblptru	equ	0xFF8
   408                           tblptrh	equ	0xFF7
   409                           tblptrl	equ	0xFF6
   410                           tablat	equ	0xFF5
   411                           postinc0	equ	0xFEE
   412                           wreg	equ	0xFE8
   413                           postdec1	equ	0xFE5
   414                           fsr1h	equ	0xFE2
   415                           fsr1l	equ	0xFE1
   416                           
   417                           	psect	dataBANK0
   418  000060                     __pdataBANK0:
   419                           	opt stack 0
   420  000060                     _columm:
   421                           	opt stack 0
   422  000060                     	ds	32
   423                           tblptru	equ	0xFF8
   424                           tblptrh	equ	0xFF7
   425                           tblptrl	equ	0xFF6
   426                           tablat	equ	0xFF5
   427                           postinc0	equ	0xFEE
   428                           wreg	equ	0xFE8
   429                           postdec1	equ	0xFE5
   430                           fsr1h	equ	0xFE2
   431                           fsr1l	equ	0xFE1
   432                           
   433                           	psect	bssBANK1
   434  000100                     __pbssBANK1:
   435                           	opt stack 0
   436  000100                     _TxData:
   437                           	opt stack 0
   438  000100                     	ds	256
   439                           tblptru	equ	0xFF8
   440                           tblptrh	equ	0xFF7
   441                           tblptrl	equ	0xFF6
   442                           tablat	equ	0xFF5
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           postdec1	equ	0xFE5
   446                           fsr1h	equ	0xFE2
   447                           fsr1l	equ	0xFE1
   448                           
   449                           	psect	cstackCOMRAM
   450  000020                     __pcstackCOMRAM:
   451                           	opt stack 0
   452  000020                     ??_OSCILLATOR_Initialize:
   453  000020                     ?___wmul:
   454                           	opt stack 0
   455  000020                     I2C_Write@data:
   456                           	opt stack 0
   457  000020                     EUSART1_SetFramingErrorHandler@interruptHandler:
   458                           	opt stack 0
   459  000020                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   460                           	opt stack 0
   461  000020                     EUSART1_SetErrorHandler@interruptHandler:
   462                           	opt stack 0
   463  000020                     I2C_read@ACK_NACK:
   464                           	opt stack 0
   465  000020                     ___wmul@multiplier:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x0
   469  000020                     	ds	1
   470  000021                     
   471                           ; 1 bytes @ 0x1
   472  000021                     	ds	1
   473  000022                     ?_MCP23008_reagReg:
   474                           	opt stack 0
   475  000022                     MCP23008_reagReg@regAdd:
   476                           	opt stack 0
   477  000022                     ___wmul@multiplicand:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x2
   481  000022                     	ds	2
   482  000024                     MCP23008_reagReg@dataRead:
   483                           	opt stack 0
   484  000024                     ___wmul@product:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x4
   488  000024                     	ds	2
   489  000026                     ?___aldiv:
   490                           	opt stack 0
   491  000026                     MCP23008_pinMode@port:
   492                           	opt stack 0
   493  000026                     MCP23008_pullUp@port:
   494                           	opt stack 0
   495  000026                     MCP23008_ISR_EN@port:
   496                           	opt stack 0
   497  000026                     MCP23008_ISR_polarity@port:
   498                           	opt stack 0
   499  000026                     ___aldiv@dividend:
   500                           	opt stack 0
   501                           
   502                           ; 4 bytes @ 0x6
   503  000026                     	ds	2
   504  000028                     ??_MCP23008_pullUp:
   505  000028                     ??_MCP23008_ISR_EN:
   506  000028                     MCP23008_pinMode@mode:
   507                           	opt stack 0
   508  000028                     MCP23008_ISR_polarity@INTedge:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x8
   512  000028                     	ds	2
   513  00002A                     ??_MCP23008_pinMode:
   514  00002A                     ??_MCP23008_ISR_polarity:
   515  00002A                     MCP23008_pullUp@dataRead:
   516                           	opt stack 0
   517  00002A                     MCP23008_ISR_EN@dataRead:
   518                           	opt stack 0
   519  00002A                     ___aldiv@divisor:
   520                           	opt stack 0
   521                           
   522                           ; 4 bytes @ 0xA
   523  00002A                     	ds	2
   524  00002C                     MCP23008_pinMode@dataRead:
   525                           	opt stack 0
   526  00002C                     MCP23008_ISR_polarity@dataRead:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0xC
   530  00002C                     	ds	2
   531  00002E                     ___aldiv@counter:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0xE
   535  00002E                     	ds	1
   536  00002F                     ___aldiv@sign:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0xF
   540  00002F                     	ds	1
   541  000030                     ___aldiv@quotient:
   542                           	opt stack 0
   543                           
   544                           ; 4 bytes @ 0x10
   545  000030                     	ds	4
   546  000034                     I2C_Init@F_clock:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x14
   550  000034                     	ds	1
   551  000035                     ??_main:
   552                           
   553                           ; 1 bytes @ 0x15
   554  000035                     	ds	2
   555                           tblptru	equ	0xFF8
   556                           tblptrh	equ	0xFF7
   557                           tblptrl	equ	0xFF6
   558                           tablat	equ	0xFF5
   559                           postinc0	equ	0xFEE
   560                           wreg	equ	0xFE8
   561                           postdec1	equ	0xFE5
   562                           fsr1h	equ	0xFE2
   563                           fsr1l	equ	0xFE1
   564                           
   565 ;;
   566 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   567 ;;
   568 ;; *************** function _main *****************
   569 ;; Defined at:
   570 ;;		line 5 in file "main.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;		None
   573 ;; Auto vars:     Size  Location     Type
   574 ;;		None
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   586 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   587 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   588 ;;Total ram usage:        2 bytes
   589 ;; Hardware stack levels required when called:    4
   590 ;; This function calls:
   591 ;;		_I2C_buffClear
   592 ;;		_MCP23008_INTclear
   593 ;;		_MCP23008_ISR_EN
   594 ;;		_MCP23008_ISR_polarity
   595 ;;		_MCP23008_pinMode
   596 ;;		_MCP23008_pullUp
   597 ;;		_SYSTEM_Initialize
   598 ;;		_interrupt_Init
   599 ;; This function is called by:
   600 ;;		Startup code after reset
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text0
   605  0010C0                     __ptext0:
   606                           	opt stack 0
   607  0010C0                     _main:
   608                           	opt stack 27
   609                           
   610                           ;main.c: 7: interrupt_Init();
   611                           
   612                           ;incstack = 0
   613  0010C0  EC6B  F00A         	call	_interrupt_Init	;wreg free
   614                           
   615                           ;main.c: 8: SYSTEM_Initialize();
   616  0010C4  EC32  F00A         	call	_SYSTEM_Initialize	;wreg free
   617                           
   618                           ;main.c: 9: do { TRISCbits.TRISC0 = 0; } while(0);
   619  0010C8  9094               	bcf	3988,0,c	;volatile
   620                           
   621                           ;main.c: 10: I2C_buffClear();
   622  0010CA  EC55  F00A         	call	_I2C_buffClear	;wreg free
   623                           
   624                           ;main.c: 11: _delay((unsigned long)((10)*(16000000/4000.0)));
   625  0010CE  0E34               	movlw	52
   626  0010D0  6E35               	movwf	??_main& (0+255),c
   627  0010D2  0EF2               	movlw	242
   628  0010D4                     u1207:
   629  0010D4  2EE8               	decfsz	wreg,f,c
   630  0010D6  D7FE               	bra	u1207
   631  0010D8  2E35               	decfsz	??_main& (0+255),f,c
   632  0010DA  D7FC               	bra	u1207
   633                           
   634                           ;main.c: 14: MCP23008_pinMode(5, 0x00);
   635  0010DC  0E00               	movlw	0
   636  0010DE  6E27               	movwf	MCP23008_pinMode@port+1,c
   637  0010E0  0E05               	movlw	5
   638  0010E2  6E26               	movwf	MCP23008_pinMode@port,c
   639  0010E4  0E00               	movlw	0
   640  0010E6  6E29               	movwf	MCP23008_pinMode@mode+1,c
   641  0010E8  0E00               	movlw	0
   642  0010EA  6E28               	movwf	MCP23008_pinMode@mode,c
   643  0010EC  ECA6  F008         	call	_MCP23008_pinMode	;wreg free
   644                           
   645                           ;main.c: 15: MCP23008_pullUp(3);
   646  0010F0  0E00               	movlw	0
   647  0010F2  6E27               	movwf	MCP23008_pullUp@port+1,c
   648  0010F4  0E03               	movlw	3
   649  0010F6  6E26               	movwf	MCP23008_pullUp@port,c
   650  0010F8  EC6C  F009         	call	_MCP23008_pullUp	;wreg free
   651                           
   652                           ;main.c: 16: MCP23008_ISR_EN(3);
   653  0010FC  0E00               	movlw	0
   654  0010FE  6E27               	movwf	MCP23008_ISR_EN@port+1,c
   655  001100  0E03               	movlw	3
   656  001102  6E26               	movwf	MCP23008_ISR_EN@port,c
   657  001104  EC12  F009         	call	_MCP23008_ISR_EN	;wreg free
   658                           
   659                           ;main.c: 17: MCP23008_ISR_polarity(3, 0x00);
   660  001108  0E00               	movlw	0
   661  00110A  6E27               	movwf	MCP23008_ISR_polarity@port+1,c
   662  00110C  0E03               	movlw	3
   663  00110E  6E26               	movwf	MCP23008_ISR_polarity@port,c
   664  001110  0E00               	movlw	0
   665  001112  6E29               	movwf	MCP23008_ISR_polarity@INTedge+1,c
   666  001114  0E00               	movlw	0
   667  001116  6E28               	movwf	MCP23008_ISR_polarity@INTedge,c
   668  001118  EC07  F008         	call	_MCP23008_ISR_polarity	;wreg free
   669                           
   670                           ;main.c: 18: MCP23008_pinMode(3, 0x01);
   671  00111C  0E00               	movlw	0
   672  00111E  6E27               	movwf	MCP23008_pinMode@port+1,c
   673  001120  0E03               	movlw	3
   674  001122  6E26               	movwf	MCP23008_pinMode@port,c
   675  001124  0E00               	movlw	0
   676  001126  6E29               	movwf	MCP23008_pinMode@mode+1,c
   677  001128  0E01               	movlw	1
   678  00112A  6E28               	movwf	MCP23008_pinMode@mode,c
   679  00112C  ECA6  F008         	call	_MCP23008_pinMode	;wreg free
   680  001130                     
   681                           ;main.c: 21: MCP23008_INTclear();
   682  001130  EC64  F00A         	call	_MCP23008_INTclear	;wreg free
   683                           
   684                           ;main.c: 22: _delay((unsigned long)((500)*(16000000/4000.0)));
   685  001134  0E0B               	movlw	11
   686  001136  6E36               	movwf	(??_main+1)& (0+255),c
   687  001138  0E26               	movlw	38
   688  00113A  6E35               	movwf	??_main& (0+255),c
   689  00113C  0E5E               	movlw	94
   690  00113E                     u1217:
   691  00113E  2EE8               	decfsz	wreg,f,c
   692  001140  D7FE               	bra	u1217
   693  001142  2E35               	decfsz	??_main& (0+255),f,c
   694  001144  D7FC               	bra	u1217
   695  001146  2E36               	decfsz	(??_main+1)& (0+255),f,c
   696  001148  D7FA               	bra	u1217
   697  00114A  D7F2               	goto	l276
   698  00114C                     __end_of_main:
   699                           	opt stack 0
   700                           tblptru	equ	0xFF8
   701                           tblptrh	equ	0xFF7
   702                           tblptrl	equ	0xFF6
   703                           tablat	equ	0xFF5
   704                           postinc0	equ	0xFEE
   705                           wreg	equ	0xFE8
   706                           postdec1	equ	0xFE5
   707                           fsr1h	equ	0xFE2
   708                           fsr1l	equ	0xFE1
   709                           
   710 ;; *************** function _interrupt_Init *****************
   711 ;; Defined at:
   712 ;;		line 15 in file "Interrupt.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		None
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text1
   740  0014D6                     __ptext1:
   741                           	opt stack 0
   742  0014D6                     _interrupt_Init:
   743                           	opt stack 30
   744                           
   745                           ;Interrupt.c: 16: INTCONbits.GIE = 1;
   746                           
   747                           ;incstack = 0
   748  0014D6  8EF2               	bsf	intcon,7,c	;volatile
   749                           
   750                           ;Interrupt.c: 17: INTCONbits.PEIE = 1;
   751  0014D8  8CF2               	bsf	intcon,6,c	;volatile
   752                           
   753                           ;Interrupt.c: 18: PIE3bits.SSP2IE = 1;
   754  0014DA  8EA3               	bsf	4003,7,c	;volatile
   755                           
   756                           ;Interrupt.c: 19: PIR3bits.SSP2IF = 0;
   757  0014DC  9EA4               	bcf	4004,7,c	;volatile
   758  0014DE  0012               	return		;funcret
   759  0014E0                     __end_of_interrupt_Init:
   760                           	opt stack 0
   761                           tblptru	equ	0xFF8
   762                           tblptrh	equ	0xFF7
   763                           tblptrl	equ	0xFF6
   764                           tablat	equ	0xFF5
   765                           intcon	equ	0xFF2
   766                           postinc0	equ	0xFEE
   767                           wreg	equ	0xFE8
   768                           postdec1	equ	0xFE5
   769                           fsr1h	equ	0xFE2
   770                           fsr1l	equ	0xFE1
   771                           
   772 ;; *************** function _SYSTEM_Initialize *****************
   773 ;; Defined at:
   774 ;;		line 50 in file "mcc_generated_files/mcc.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   792 ;;Total ram usage:        0 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; Hardware stack levels required when called:    2
   795 ;; This function calls:
   796 ;;		_EUSART1_Initialize
   797 ;;		_I2C_Init
   798 ;;		_OSCILLATOR_Initialize
   799 ;;		_PIN_MANAGER_Initialize
   800 ;;		_SPI1_Initialize
   801 ;; This function is called by:
   802 ;;		_main
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	text2
   807  001464                     __ptext2:
   808                           	opt stack 0
   809  001464                     _SYSTEM_Initialize:
   810                           	opt stack 28
   811                           
   812                           ;mcc.c: 52: PIN_MANAGER_Initialize();
   813                           
   814                           ;incstack = 0
   815  001464  EC8F  F009         	call	_PIN_MANAGER_Initialize	;wreg free
   816                           
   817                           ;mcc.c: 53: OSCILLATOR_Initialize();
   818  001468  ECED  F009         	call	_OSCILLATOR_Initialize	;wreg free
   819                           
   820                           ;mcc.c: 54: SPI1_Initialize();
   821  00146C  EC5D  F00A         	call	_SPI1_Initialize	;wreg free
   822                           
   823                           ;mcc.c: 55: EUSART1_Initialize();
   824  001470  ECB1  F009         	call	_EUSART1_Initialize	;wreg free
   825                           
   826                           ;mcc.c: 56: I2C_Init(100);
   827  001474  0E64               	movlw	100
   828  001476  EC42  F009         	call	_I2C_Init
   829  00147A  0012               	return		;funcret
   830  00147C                     __end_of_SYSTEM_Initialize:
   831                           	opt stack 0
   832                           tblptru	equ	0xFF8
   833                           tblptrh	equ	0xFF7
   834                           tblptrl	equ	0xFF6
   835                           tablat	equ	0xFF5
   836                           intcon	equ	0xFF2
   837                           postinc0	equ	0xFEE
   838                           wreg	equ	0xFE8
   839                           postdec1	equ	0xFE5
   840                           fsr1h	equ	0xFE2
   841                           fsr1l	equ	0xFE1
   842                           
   843 ;; *************** function _SPI1_Initialize *****************
   844 ;; Defined at:
   845 ;;		line 65 in file "mcc_generated_files/spi1.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   863 ;;Total ram usage:        0 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_SYSTEM_Initialize
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           	psect	text3
   873  0014BA                     __ptext3:
   874                           	opt stack 0
   875  0014BA                     _SPI1_Initialize:
   876                           	opt stack 29
   877                           
   878                           ;spi1.c: 70: SSP1STAT = 0x80;
   879                           
   880                           ;incstack = 0
   881  0014BA  0E80               	movlw	128
   882  0014BC  6EC7               	movwf	4039,c	;volatile
   883                           
   884                           ;spi1.c: 73: SSP1CON1 = 0x20;
   885  0014BE  0E20               	movlw	32
   886  0014C0  6EC6               	movwf	4038,c	;volatile
   887                           
   888                           ;spi1.c: 76: SSP1ADD = 0x00;
   889  0014C2  0E00               	movlw	0
   890  0014C4  6EC8               	movwf	4040,c	;volatile
   891  0014C6  0012               	return		;funcret
   892  0014C8                     __end_of_SPI1_Initialize:
   893                           	opt stack 0
   894                           tblptru	equ	0xFF8
   895                           tblptrh	equ	0xFF7
   896                           tblptrl	equ	0xFF6
   897                           tablat	equ	0xFF5
   898                           intcon	equ	0xFF2
   899                           postinc0	equ	0xFEE
   900                           wreg	equ	0xFE8
   901                           postdec1	equ	0xFE5
   902                           fsr1h	equ	0xFE2
   903                           fsr1l	equ	0xFE1
   904                           
   905 ;; *************** function _PIN_MANAGER_Initialize *****************
   906 ;; Defined at:
   907 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;		None
   910 ;; Auto vars:     Size  Location     Type
   911 ;;		None
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg, status,2
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   925 ;;Total ram usage:        0 bytes
   926 ;; Hardware stack levels used:    1
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_SYSTEM_Initialize
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text4
   935  00131E                     __ptext4:
   936                           	opt stack 0
   937  00131E                     _PIN_MANAGER_Initialize:
   938                           	opt stack 29
   939                           
   940                           ;pin_manager.c: 57: LATE = 0x04;
   941                           
   942                           ;incstack = 0
   943  00131E  0E04               	movlw	4
   944  001320  6E8D               	movwf	3981,c	;volatile
   945                           
   946                           ;pin_manager.c: 58: LATD = 0x00;
   947  001322  0E00               	movlw	0
   948  001324  6E8C               	movwf	3980,c	;volatile
   949                           
   950                           ;pin_manager.c: 59: LATA = 0x00;
   951  001326  0E00               	movlw	0
   952  001328  6E89               	movwf	3977,c	;volatile
   953                           
   954                           ;pin_manager.c: 60: LATB = 0x00;
   955  00132A  0E00               	movlw	0
   956  00132C  6E8A               	movwf	3978,c	;volatile
   957                           
   958                           ;pin_manager.c: 61: LATC = 0x01;
   959  00132E  0E01               	movlw	1
   960  001330  6E8B               	movwf	3979,c	;volatile
   961                           
   962                           ;pin_manager.c: 66: TRISE = 0xC3;
   963  001332  0EC3               	movlw	195
   964  001334  6E96               	movwf	3990,c	;volatile
   965                           
   966                           ;pin_manager.c: 67: TRISA = 0xEF;
   967  001336  0EEF               	movlw	239
   968  001338  6E92               	movwf	3986,c	;volatile
   969                           
   970                           ;pin_manager.c: 68: TRISB = 0xDF;
   971  00133A  0EDF               	movlw	223
   972  00133C  6E93               	movwf	3987,c	;volatile
   973                           
   974                           ;pin_manager.c: 69: TRISC = 0x96;
   975  00133E  0E96               	movlw	150
   976  001340  6E94               	movwf	3988,c	;volatile
   977                           
   978                           ;pin_manager.c: 70: TRISD = 0xFF;
   979  001342  6895               	setf	3989,c	;volatile
   980                           
   981                           ;pin_manager.c: 75: ANCON0 = 0x80;
   982  001344  0E80               	movlw	128
   983  001346  010F               	movlb	15	; () banked
   984  001348  6F48               	movwf	72,b	;volatile
   985                           
   986                           ;pin_manager.c: 76: ANCON1 = 0x10;
   987  00134A  0E10               	movlw	16
   988  00134C  6F49               	movwf	73,b	;volatile
   989                           
   990                           ; BSR set to: 15
   991                           ;pin_manager.c: 81: INTCON2bits.nRBPU = 1;
   992  00134E  8EF1               	bsf	intcon2,7,c	;volatile
   993                           
   994                           ; BSR set to: 15
   995                           ;pin_manager.c: 82: TRISEbits.RDPU = 1;
   996  001350  8E96               	bsf	3990,7,c	;volatile
   997                           
   998                           ; BSR set to: 15
   999                           ;pin_manager.c: 83: TRISEbits.REPU = 1;
  1000  001352  8C96               	bsf	3990,6,c	;volatile
  1001                           
  1002                           ;pin_manager.c: 88: ODCON1 = 0x00;
  1003  001354  0E00               	movlw	0
  1004  001356  6F42               	movwf	66,b	;volatile
  1005                           
  1006                           ;pin_manager.c: 89: ODCON2 = 0x00;
  1007  001358  0E00               	movlw	0
  1008  00135A  6F41               	movwf	65,b	;volatile
  1009                           
  1010                           ;pin_manager.c: 90: ODCON3 = 0x00;
  1011  00135C  0E00               	movlw	0
  1012  00135E  6F40               	movwf	64,b	;volatile
  1013                           
  1014                           ; BSR set to: 15
  1015  001360  0012               	return		;funcret
  1016  001362                     __end_of_PIN_MANAGER_Initialize:
  1017                           	opt stack 0
  1018                           tblptru	equ	0xFF8
  1019                           tblptrh	equ	0xFF7
  1020                           tblptrl	equ	0xFF6
  1021                           tablat	equ	0xFF5
  1022                           intcon	equ	0xFF2
  1023                           intcon2	equ	0xFF1
  1024                           postinc0	equ	0xFEE
  1025                           wreg	equ	0xFE8
  1026                           postdec1	equ	0xFE5
  1027                           fsr1h	equ	0xFE2
  1028                           fsr1l	equ	0xFE1
  1029                           
  1030 ;; *************** function _OSCILLATOR_Initialize *****************
  1031 ;; Defined at:
  1032 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, status,2
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1048 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1049 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1050 ;;Total ram usage:        2 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_SYSTEM_Initialize
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text5
  1060  0013DA                     __ptext5:
  1061                           	opt stack 0
  1062  0013DA                     _OSCILLATOR_Initialize:
  1063                           	opt stack 29
  1064                           
  1065                           ;mcc.c: 62: OSCCON = 0x70;
  1066                           
  1067                           ; BSR set to: 15
  1068                           ;incstack = 0
  1069  0013DA  0E70               	movlw	112
  1070  0013DC  6ED3               	movwf	4051,c	;volatile
  1071                           
  1072                           ;mcc.c: 64: OSCTUNE = 0x00;
  1073  0013DE  0E00               	movlw	0
  1074  0013E0  6E9B               	movwf	3995,c	;volatile
  1075                           
  1076                           ;mcc.c: 66: REFOCON = 0x00;
  1077  0013E2  0E00               	movlw	0
  1078  0013E4  010F               	movlb	15	; () banked
  1079  0013E6  6F3D               	movwf	61,b	;volatile
  1080                           
  1081                           ;mcc.c: 68: OSCCON2 = 0x14;
  1082  0013E8  0E14               	movlw	20
  1083  0013EA  6E87               	movwf	3975,c	;volatile
  1084                           
  1085                           ; BSR set to: 15
  1086                           ;mcc.c: 69: _delay((unsigned long)((500)*(16000000/4000.0)));
  1087  0013EC  0E0B               	movlw	11
  1088  0013EE  6E21               	movwf	(??_OSCILLATOR_Initialize+1)& (0+255),c
  1089  0013F0  0E26               	movlw	38
  1090  0013F2  6E20               	movwf	??_OSCILLATOR_Initialize& (0+255),c
  1091  0013F4  0E5E               	movlw	94
  1092  0013F6                     u1227:
  1093  0013F6  2EE8               	decfsz	wreg,f,c
  1094  0013F8  D7FE               	bra	u1227
  1095  0013FA  2E20               	decfsz	??_OSCILLATOR_Initialize& (0+255),f,c
  1096  0013FC  D7FC               	bra	u1227
  1097  0013FE  2E21               	decfsz	(??_OSCILLATOR_Initialize+1)& (0+255),f,c
  1098  001400  D7FA               	bra	u1227
  1099  001402  0012               	return		;funcret
  1100  001404                     __end_of_OSCILLATOR_Initialize:
  1101                           	opt stack 0
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           intcon	equ	0xFF2
  1107                           intcon2	equ	0xFF1
  1108                           postinc0	equ	0xFEE
  1109                           wreg	equ	0xFE8
  1110                           postdec1	equ	0xFE5
  1111                           fsr1h	equ	0xFE2
  1112                           fsr1l	equ	0xFE1
  1113                           
  1114 ;; *************** function _I2C_Init *****************
  1115 ;; Defined at:
  1116 ;;		line 20 in file "I2C.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;  F_clock         1    wreg     unsigned char 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  F_clock         1   20[COMRAM] unsigned char 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1134 ;;Total ram usage:        1 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; Hardware stack levels required when called:    1
  1137 ;; This function calls:
  1138 ;;		___aldiv
  1139 ;;		___wmul
  1140 ;; This function is called by:
  1141 ;;		_SYSTEM_Initialize
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text6
  1146  001284                     __ptext6:
  1147                           	opt stack 0
  1148  001284                     _I2C_Init:
  1149                           	opt stack 28
  1150                           
  1151                           ;incstack = 0
  1152                           ;I2C_Init@F_clock stored from wreg
  1153  001284  6E34               	movwf	I2C_Init@F_clock,c
  1154                           
  1155                           ;I2C.c: 21: TRISDbits.TRISD0 = 1;
  1156  001286  8095               	bsf	3989,0,c	;volatile
  1157                           
  1158                           ;I2C.c: 22: TRISDbits.TRISD1 = 1;
  1159  001288  8295               	bsf	3989,1,c	;volatile
  1160                           
  1161                           ;I2C.c: 23: SSP2CON1bits.WCOL = 0;
  1162  00128A  9E72               	bcf	3954,7,c	;volatile
  1163                           
  1164                           ;I2C.c: 24: SSP2CON1bits.SSPEN = 1;
  1165  00128C  8A72               	bsf	3954,5,c	;volatile
  1166                           
  1167                           ;I2C.c: 25: SSP2CON1bits.SSPM = 0x08;
  1168  00128E  5072               	movf	3954,w,c	;volatile
  1169  001290  0BF0               	andlw	-16
  1170  001292  0908               	iorlw	8
  1171  001294  6E72               	movwf	3954,c	;volatile
  1172                           
  1173                           ;I2C.c: 26: SSP2CON2bits.ACKDT = 0;
  1174  001296  9A71               	bcf	3953,5,c	;volatile
  1175                           
  1176                           ;I2C.c: 27: SSP2CON2bits.ACKEN = 1;
  1177  001298  8871               	bsf	3953,4,c	;volatile
  1178                           
  1179                           ;I2C.c: 28: SSP2ADD = (16000000 / ((F_clock * 1000) * 4)) - 1;
  1180  00129A  0E00               	movlw	0
  1181  00129C  6E26               	movwf	___aldiv@dividend,c
  1182  00129E  0E24               	movlw	36
  1183  0012A0  6E27               	movwf	___aldiv@dividend+1,c
  1184  0012A2  0EF4               	movlw	244
  1185  0012A4  6E28               	movwf	___aldiv@dividend+2,c
  1186  0012A6  0E00               	movlw	0
  1187  0012A8  6E29               	movwf	___aldiv@dividend+3,c
  1188  0012AA  C034  F020         	movff	I2C_Init@F_clock,___wmul@multiplier
  1189  0012AE  6A21               	clrf	___wmul@multiplier+1,c
  1190  0012B0  0E0F               	movlw	15
  1191  0012B2  6E23               	movwf	___wmul@multiplicand+1,c
  1192  0012B4  0EA0               	movlw	160
  1193  0012B6  6E22               	movwf	___wmul@multiplicand,c
  1194  0012B8  EC02  F00A         	call	___wmul	;wreg free
  1195  0012BC  C020  F02A         	movff	?___wmul,___aldiv@divisor
  1196  0012C0  C021  F02B         	movff	?___wmul+1,___aldiv@divisor+1
  1197  0012C4  0E00               	movlw	0
  1198  0012C6  BE2B               	btfsc	___aldiv@divisor+1,7,c
  1199  0012C8  0EFF               	movlw	-1
  1200  0012CA  6E2C               	movwf	___aldiv@divisor+2,c
  1201  0012CC  6E2D               	movwf	___aldiv@divisor+3,c
  1202  0012CE  ECA1  F007         	call	___aldiv	;wreg free
  1203  0012D2  0426               	decf	?___aldiv,w,c
  1204  0012D4  6E74               	movwf	3956,c	;volatile
  1205  0012D6  0012               	return		;funcret
  1206  0012D8                     __end_of_I2C_Init:
  1207                           	opt stack 0
  1208                           tblptru	equ	0xFF8
  1209                           tblptrh	equ	0xFF7
  1210                           tblptrl	equ	0xFF6
  1211                           tablat	equ	0xFF5
  1212                           intcon	equ	0xFF2
  1213                           intcon2	equ	0xFF1
  1214                           postinc0	equ	0xFEE
  1215                           wreg	equ	0xFE8
  1216                           postdec1	equ	0xFE5
  1217                           fsr1h	equ	0xFE2
  1218                           fsr1l	equ	0xFE1
  1219                           
  1220 ;; *************** function ___wmul *****************
  1221 ;; Defined at:
  1222 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  multiplier      2    0[COMRAM] unsigned int 
  1225 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;  product         2    4[COMRAM] unsigned int 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  2    0[COMRAM] unsigned int 
  1230 ;; Registers used:
  1231 ;;		wreg, status,2, status,0, prodl, prodh
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1237 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1238 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1240 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1241 ;;Total ram usage:        6 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_I2C_Init
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text7
  1251  001404                     __ptext7:
  1252                           	opt stack 0
  1253  001404                     ___wmul:
  1254                           	opt stack 28
  1255                           
  1256                           ;incstack = 0
  1257  001404  5020               	movf	___wmul@multiplier,w,c
  1258  001406  0222               	mulwf	___wmul@multiplicand,c
  1259  001408  CFF3 F024          	movff	prodl,___wmul@product
  1260  00140C  CFF4 F025          	movff	prodh,___wmul@product+1
  1261  001410  5020               	movf	___wmul@multiplier,w,c
  1262  001412  0223               	mulwf	___wmul@multiplicand+1,c
  1263  001414  50F3               	movf	prodl,w,c
  1264  001416  2625               	addwf	___wmul@product+1,f,c
  1265  001418  5021               	movf	___wmul@multiplier+1,w,c
  1266  00141A  0222               	mulwf	___wmul@multiplicand,c
  1267  00141C  50F3               	movf	prodl,w,c
  1268  00141E  2625               	addwf	___wmul@product+1,f,c
  1269  001420  C024  F020         	movff	___wmul@product,?___wmul
  1270  001424  C025  F021         	movff	___wmul@product+1,?___wmul+1
  1271  001428  0012               	return	
  1272  00142A                     __end_of___wmul:
  1273                           	opt stack 0
  1274                           tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           tblptrl	equ	0xFF6
  1277                           tablat	equ	0xFF5
  1278                           prodh	equ	0xFF4
  1279                           prodl	equ	0xFF3
  1280                           intcon	equ	0xFF2
  1281                           intcon2	equ	0xFF1
  1282                           postinc0	equ	0xFEE
  1283                           wreg	equ	0xFE8
  1284                           postdec1	equ	0xFE5
  1285                           fsr1h	equ	0xFE2
  1286                           fsr1l	equ	0xFE1
  1287                           
  1288 ;; *************** function ___aldiv *****************
  1289 ;; Defined at:
  1290 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  dividend        4    6[COMRAM] long 
  1293 ;;  divisor         4   10[COMRAM] long 
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;  quotient        4   16[COMRAM] long 
  1296 ;;  sign            1   15[COMRAM] unsigned char 
  1297 ;;  counter         1   14[COMRAM] unsigned char 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  4    6[COMRAM] long 
  1300 ;; Registers used:
  1301 ;;		wreg, status,2, status,0
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1307 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1308 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1310 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1311 ;;Total ram usage:       14 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; This function calls:
  1314 ;;		Nothing
  1315 ;; This function is called by:
  1316 ;;		_I2C_Init
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text8
  1321  000F42                     __ptext8:
  1322                           	opt stack 0
  1323  000F42                     ___aldiv:
  1324                           	opt stack 28
  1325                           
  1326                           ;incstack = 0
  1327  000F42  0E00               	movlw	0
  1328  000F44  6E2F               	movwf	___aldiv@sign,c
  1329  000F46  AE2D               	btfss	___aldiv@divisor+3,7,c
  1330  000F48  D00A               	goto	l954
  1331  000F4A  1E2D               	comf	___aldiv@divisor+3,f,c
  1332  000F4C  1E2C               	comf	___aldiv@divisor+2,f,c
  1333  000F4E  1E2B               	comf	___aldiv@divisor+1,f,c
  1334  000F50  6C2A               	negf	___aldiv@divisor,c
  1335  000F52  0E00               	movlw	0
  1336  000F54  222B               	addwfc	___aldiv@divisor+1,f,c
  1337  000F56  222C               	addwfc	___aldiv@divisor+2,f,c
  1338  000F58  222D               	addwfc	___aldiv@divisor+3,f,c
  1339  000F5A  0E01               	movlw	1
  1340  000F5C  6E2F               	movwf	___aldiv@sign,c
  1341  000F5E                     l954:
  1342  000F5E  AE29               	btfss	___aldiv@dividend+3,7,c
  1343  000F60  D00A               	goto	l955
  1344  000F62  1E29               	comf	___aldiv@dividend+3,f,c
  1345  000F64  1E28               	comf	___aldiv@dividend+2,f,c
  1346  000F66  1E27               	comf	___aldiv@dividend+1,f,c
  1347  000F68  6C26               	negf	___aldiv@dividend,c
  1348  000F6A  0E00               	movlw	0
  1349  000F6C  2227               	addwfc	___aldiv@dividend+1,f,c
  1350  000F6E  2228               	addwfc	___aldiv@dividend+2,f,c
  1351  000F70  2229               	addwfc	___aldiv@dividend+3,f,c
  1352  000F72  0E01               	movlw	1
  1353  000F74  1A2F               	xorwf	___aldiv@sign,f,c
  1354  000F76                     l955:
  1355  000F76  0E00               	movlw	0
  1356  000F78  6E30               	movwf	___aldiv@quotient,c
  1357  000F7A  0E00               	movlw	0
  1358  000F7C  6E31               	movwf	___aldiv@quotient+1,c
  1359  000F7E  0E00               	movlw	0
  1360  000F80  6E32               	movwf	___aldiv@quotient+2,c
  1361  000F82  0E00               	movlw	0
  1362  000F84  6E33               	movwf	___aldiv@quotient+3,c
  1363  000F86  502A               	movf	___aldiv@divisor,w,c
  1364  000F88  102B               	iorwf	___aldiv@divisor+1,w,c
  1365  000F8A  102C               	iorwf	___aldiv@divisor+2,w,c
  1366  000F8C  102D               	iorwf	___aldiv@divisor+3,w,c
  1367  000F8E  B4D8               	btfsc	status,2,c
  1368  000F90  D02A               	goto	l962
  1369  000F92  0E01               	movlw	1
  1370  000F94  6E2E               	movwf	___aldiv@counter,c
  1371  000F96  D006               	goto	l957
  1372  000F98  90D8               	bcf	status,0,c
  1373  000F9A  362A               	rlcf	___aldiv@divisor,f,c
  1374  000F9C  362B               	rlcf	___aldiv@divisor+1,f,c
  1375  000F9E  362C               	rlcf	___aldiv@divisor+2,f,c
  1376  000FA0  362D               	rlcf	___aldiv@divisor+3,f,c
  1377  000FA2  2A2E               	incf	___aldiv@counter,f,c
  1378  000FA4                     l957:
  1379  000FA4  AE2D               	btfss	___aldiv@divisor+3,7,c
  1380  000FA6  D7F8               	goto	l958
  1381  000FA8                     u980:
  1382  000FA8  90D8               	bcf	status,0,c
  1383  000FAA  3630               	rlcf	___aldiv@quotient,f,c
  1384  000FAC  3631               	rlcf	___aldiv@quotient+1,f,c
  1385  000FAE  3632               	rlcf	___aldiv@quotient+2,f,c
  1386  000FB0  3633               	rlcf	___aldiv@quotient+3,f,c
  1387  000FB2  502A               	movf	___aldiv@divisor,w,c
  1388  000FB4  5C26               	subwf	___aldiv@dividend,w,c
  1389  000FB6  502B               	movf	___aldiv@divisor+1,w,c
  1390  000FB8  5827               	subwfb	___aldiv@dividend+1,w,c
  1391  000FBA  502C               	movf	___aldiv@divisor+2,w,c
  1392  000FBC  5828               	subwfb	___aldiv@dividend+2,w,c
  1393  000FBE  502D               	movf	___aldiv@divisor+3,w,c
  1394  000FC0  5829               	subwfb	___aldiv@dividend+3,w,c
  1395  000FC2  A0D8               	btfss	status,0,c
  1396  000FC4  D009               	goto	l961
  1397  000FC6  502A               	movf	___aldiv@divisor,w,c
  1398  000FC8  5E26               	subwf	___aldiv@dividend,f,c
  1399  000FCA  502B               	movf	___aldiv@divisor+1,w,c
  1400  000FCC  5A27               	subwfb	___aldiv@dividend+1,f,c
  1401  000FCE  502C               	movf	___aldiv@divisor+2,w,c
  1402  000FD0  5A28               	subwfb	___aldiv@dividend+2,f,c
  1403  000FD2  502D               	movf	___aldiv@divisor+3,w,c
  1404  000FD4  5A29               	subwfb	___aldiv@dividend+3,f,c
  1405  000FD6  8030               	bsf	___aldiv@quotient,0,c
  1406  000FD8                     l961:
  1407  000FD8  90D8               	bcf	status,0,c
  1408  000FDA  322D               	rrcf	___aldiv@divisor+3,f,c
  1409  000FDC  322C               	rrcf	___aldiv@divisor+2,f,c
  1410  000FDE  322B               	rrcf	___aldiv@divisor+1,f,c
  1411  000FE0  322A               	rrcf	___aldiv@divisor,f,c
  1412  000FE2  2E2E               	decfsz	___aldiv@counter,f,c
  1413  000FE4  D7E1               	goto	u980
  1414  000FE6                     l962:
  1415  000FE6  502F               	movf	___aldiv@sign,w,c
  1416  000FE8  B4D8               	btfsc	status,2,c
  1417  000FEA  D008               	goto	l963
  1418  000FEC  1E33               	comf	___aldiv@quotient+3,f,c
  1419  000FEE  1E32               	comf	___aldiv@quotient+2,f,c
  1420  000FF0  1E31               	comf	___aldiv@quotient+1,f,c
  1421  000FF2  6C30               	negf	___aldiv@quotient,c
  1422  000FF4  0E00               	movlw	0
  1423  000FF6  2231               	addwfc	___aldiv@quotient+1,f,c
  1424  000FF8  2232               	addwfc	___aldiv@quotient+2,f,c
  1425  000FFA  2233               	addwfc	___aldiv@quotient+3,f,c
  1426  000FFC                     l963:
  1427  000FFC  C030  F026         	movff	___aldiv@quotient,?___aldiv
  1428  001000  C031  F027         	movff	___aldiv@quotient+1,?___aldiv+1
  1429  001004  C032  F028         	movff	___aldiv@quotient+2,?___aldiv+2
  1430  001008  C033  F029         	movff	___aldiv@quotient+3,?___aldiv+3
  1431  00100C  0012               	return	
  1432  00100E                     __end_of___aldiv:
  1433                           	opt stack 0
  1434                           tblptru	equ	0xFF8
  1435                           tblptrh	equ	0xFF7
  1436                           tblptrl	equ	0xFF6
  1437                           tablat	equ	0xFF5
  1438                           prodh	equ	0xFF4
  1439                           prodl	equ	0xFF3
  1440                           intcon	equ	0xFF2
  1441                           intcon2	equ	0xFF1
  1442                           postinc0	equ	0xFEE
  1443                           wreg	equ	0xFE8
  1444                           postdec1	equ	0xFE5
  1445                           fsr1h	equ	0xFE2
  1446                           fsr1l	equ	0xFE1
  1447                           status	equ	0xFD8
  1448                           
  1449 ;; *************** function _EUSART1_Initialize *****************
  1450 ;; Defined at:
  1451 ;;		line 68 in file "mcc_generated_files/eusart1.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0, cstack
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1469 ;;Total ram usage:        0 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; Hardware stack levels required when called:    1
  1472 ;; This function calls:
  1473 ;;		_EUSART1_SetErrorHandler
  1474 ;;		_EUSART1_SetFramingErrorHandler
  1475 ;;		_EUSART1_SetOverrunErrorHandler
  1476 ;; This function is called by:
  1477 ;;		_SYSTEM_Initialize
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text9
  1482  001362                     __ptext9:
  1483                           	opt stack 0
  1484  001362                     _EUSART1_Initialize:
  1485                           	opt stack 28
  1486                           
  1487                           ;eusart1.c: 72: BAUDCON1 = 0x18;
  1488                           
  1489                           ;incstack = 0
  1490  001362  0E18               	movlw	24
  1491  001364  6E7E               	movwf	3966,c	;volatile
  1492                           
  1493                           ;eusart1.c: 75: RCSTA1 = 0x98;
  1494  001366  0E98               	movlw	152
  1495  001368  6EAC               	movwf	4012,c	;volatile
  1496                           
  1497                           ;eusart1.c: 78: TXSTA1 = 0x24;
  1498  00136A  0E24               	movlw	36
  1499  00136C  6EAD               	movwf	4013,c	;volatile
  1500                           
  1501                           ;eusart1.c: 81: SPBRG1 = 0xCF;
  1502  00136E  0ECF               	movlw	207
  1503  001370  6EB0               	movwf	4016,c	;volatile
  1504                           
  1505                           ;eusart1.c: 84: SPBRGH1 = 0x00;
  1506  001372  0E00               	movlw	0
  1507  001374  6E7F               	movwf	3967,c	;volatile
  1508                           
  1509                           ;eusart1.c: 87: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  1510  001376  0E00               	movlw	0
  1511  001378  6E20               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  1512  00137A  0E00               	movlw	0
  1513  00137C  6E21               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  1514  00137E  EC75  F00A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1515                           
  1516                           ;eusart1.c: 88: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  1517  001382  0E00               	movlw	0
  1518  001384  6E20               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  1519  001386  0E00               	movlw	0
  1520  001388  6E21               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  1521  00138A  EC70  F00A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1522                           
  1523                           ;eusart1.c: 89: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  1524  00138E  0E00               	movlw	0
  1525  001390  6E20               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  1526  001392  0E00               	movlw	0
  1527  001394  6E21               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  1528  001396  EC7A  F00A         	call	_EUSART1_SetErrorHandler	;wreg free
  1529                           
  1530                           ;eusart1.c: 91: eusart1RxLastError.status = 0;
  1531  00139A  0E00               	movlw	0
  1532  00139C  6E1F               	movwf	_eusart1RxLastError,c	;volatile
  1533  00139E  0012               	return		;funcret
  1534  0013A0                     __end_of_EUSART1_Initialize:
  1535                           	opt stack 0
  1536                           tblptru	equ	0xFF8
  1537                           tblptrh	equ	0xFF7
  1538                           tblptrl	equ	0xFF6
  1539                           tablat	equ	0xFF5
  1540                           prodh	equ	0xFF4
  1541                           prodl	equ	0xFF3
  1542                           intcon	equ	0xFF2
  1543                           intcon2	equ	0xFF1
  1544                           postinc0	equ	0xFEE
  1545                           wreg	equ	0xFE8
  1546                           postdec1	equ	0xFE5
  1547                           fsr1h	equ	0xFE2
  1548                           fsr1l	equ	0xFE1
  1549                           status	equ	0xFD8
  1550                           
  1551 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1552 ;; Defined at:
  1553 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1556 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;		None
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2, status,0
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1572 ;;Total ram usage:        2 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		_EUSART1_Initialize
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text10
  1582  0014E0                     __ptext10:
  1583                           	opt stack 0
  1584  0014E0                     _EUSART1_SetOverrunErrorHandler:
  1585                           	opt stack 28
  1586                           
  1587                           ;eusart1.c: 171: EUSART1_OverrunErrorHandler = interruptHandler;
  1588                           
  1589                           ;incstack = 0
  1590  0014E0  C020  F01B         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1591  0014E4  C021  F01C         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1592  0014E8  0012               	return		;funcret
  1593  0014EA                     __end_of_EUSART1_SetOverrunErrorHandler:
  1594                           	opt stack 0
  1595                           tblptru	equ	0xFF8
  1596                           tblptrh	equ	0xFF7
  1597                           tblptrl	equ	0xFF6
  1598                           tablat	equ	0xFF5
  1599                           prodh	equ	0xFF4
  1600                           prodl	equ	0xFF3
  1601                           intcon	equ	0xFF2
  1602                           intcon2	equ	0xFF1
  1603                           postinc0	equ	0xFEE
  1604                           wreg	equ	0xFE8
  1605                           postdec1	equ	0xFE5
  1606                           fsr1h	equ	0xFE2
  1607                           fsr1l	equ	0xFE1
  1608                           status	equ	0xFD8
  1609                           
  1610 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1611 ;; Defined at:
  1612 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1615 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1631 ;;Total ram usage:        2 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; This function calls:
  1634 ;;		Nothing
  1635 ;; This function is called by:
  1636 ;;		_EUSART1_Initialize
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text11
  1641  0014EA                     __ptext11:
  1642                           	opt stack 0
  1643  0014EA                     _EUSART1_SetFramingErrorHandler:
  1644                           	opt stack 28
  1645                           
  1646                           ;eusart1.c: 167: EUSART1_FramingErrorHandler = interruptHandler;
  1647                           
  1648                           ;incstack = 0
  1649  0014EA  C020  F01D         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1650  0014EE  C021  F01E         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1651  0014F2  0012               	return		;funcret
  1652  0014F4                     __end_of_EUSART1_SetFramingErrorHandler:
  1653                           	opt stack 0
  1654                           tblptru	equ	0xFF8
  1655                           tblptrh	equ	0xFF7
  1656                           tblptrl	equ	0xFF6
  1657                           tablat	equ	0xFF5
  1658                           prodh	equ	0xFF4
  1659                           prodl	equ	0xFF3
  1660                           intcon	equ	0xFF2
  1661                           intcon2	equ	0xFF1
  1662                           postinc0	equ	0xFEE
  1663                           wreg	equ	0xFE8
  1664                           postdec1	equ	0xFE5
  1665                           fsr1h	equ	0xFE2
  1666                           fsr1l	equ	0xFE1
  1667                           status	equ	0xFD8
  1668                           
  1669 ;; *************** function _EUSART1_SetErrorHandler *****************
  1670 ;; Defined at:
  1671 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1674 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;		None
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		wreg, status,2, status,0
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1689 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1690 ;;Total ram usage:        2 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_EUSART1_Initialize
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text12
  1700  0014F4                     __ptext12:
  1701                           	opt stack 0
  1702  0014F4                     _EUSART1_SetErrorHandler:
  1703                           	opt stack 28
  1704                           
  1705                           ;eusart1.c: 175: EUSART1_ErrorHandler = interruptHandler;
  1706                           
  1707                           ;incstack = 0
  1708  0014F4  C020  F019         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1709  0014F8  C021  F01A         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1710  0014FC  0012               	return		;funcret
  1711  0014FE                     __end_of_EUSART1_SetErrorHandler:
  1712                           	opt stack 0
  1713                           tblptru	equ	0xFF8
  1714                           tblptrh	equ	0xFF7
  1715                           tblptrl	equ	0xFF6
  1716                           tablat	equ	0xFF5
  1717                           prodh	equ	0xFF4
  1718                           prodl	equ	0xFF3
  1719                           intcon	equ	0xFF2
  1720                           intcon2	equ	0xFF1
  1721                           postinc0	equ	0xFEE
  1722                           wreg	equ	0xFE8
  1723                           postdec1	equ	0xFE5
  1724                           fsr1h	equ	0xFE2
  1725                           fsr1l	equ	0xFE1
  1726                           status	equ	0xFD8
  1727                           
  1728 ;; *************** function _MCP23008_pullUp *****************
  1729 ;; Defined at:
  1730 ;;		line 58 in file "MCP23008_IO_expender.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  port            2    6[COMRAM] int 
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  dataRead        2   10[COMRAM] int 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		wreg, status,2, status,0, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1744 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1745 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1746 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1747 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1748 ;;Total ram usage:        6 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    3
  1751 ;; This function calls:
  1752 ;;		_I2C_Write
  1753 ;;		_I2C_start
  1754 ;;		_I2C_stop
  1755 ;;		_MCP23008_reagReg
  1756 ;; This function is called by:
  1757 ;;		_main
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	text13
  1762  0012D8                     __ptext13:
  1763                           	opt stack 0
  1764  0012D8                     _MCP23008_pullUp:
  1765                           	opt stack 27
  1766                           
  1767                           ;MCP23008_IO_expender.c: 59: int dataRead;
  1768                           ;MCP23008_IO_expender.c: 60: dataRead = MCP23008_reagReg(0x06);
  1769                           
  1770                           ;incstack = 0
  1771  0012D8  0E00               	movlw	0
  1772  0012DA  6E23               	movwf	MCP23008_reagReg@regAdd+1,c
  1773  0012DC  0E06               	movlw	6
  1774  0012DE  6E22               	movwf	MCP23008_reagReg@regAdd,c
  1775  0012E0  ECD0  F009         	call	_MCP23008_reagReg	;wreg free
  1776  0012E4  C022  F02A         	movff	?_MCP23008_reagReg,MCP23008_pullUp@dataRead
  1777  0012E8  C023  F02B         	movff	?_MCP23008_reagReg+1,MCP23008_pullUp@dataRead+1
  1778                           
  1779                           ;MCP23008_IO_expender.c: 62: I2C_start();
  1780  0012EC  EC84  F00A         	call	_I2C_start	;wreg free
  1781                           
  1782                           ;MCP23008_IO_expender.c: 63: I2C_Write(0x40);
  1783  0012F0  0E40               	movlw	64
  1784  0012F2  EC25  F00A         	call	_I2C_Write
  1785                           
  1786                           ;MCP23008_IO_expender.c: 64: I2C_Write(0x06);
  1787  0012F6  0E06               	movlw	6
  1788  0012F8  EC25  F00A         	call	_I2C_Write
  1789                           
  1790                           ;MCP23008_IO_expender.c: 65: I2C_Write(dataRead | (0x01 << port));
  1791  0012FC  C026  F028         	movff	MCP23008_pullUp@port,??_MCP23008_pullUp
  1792  001300  0E01               	movlw	1
  1793  001302  6E29               	movwf	(??_MCP23008_pullUp+1)& (0+255),c
  1794  001304  2A28               	incf	??_MCP23008_pullUp,f,c
  1795  001306  D002               	goto	u1044
  1796  001308                     u1045:
  1797  001308  90D8               	bcf	status,0,c
  1798  00130A  3629               	rlcf	??_MCP23008_pullUp+1,f,c
  1799  00130C                     u1044:
  1800  00130C  2E28               	decfsz	??_MCP23008_pullUp,f,c
  1801  00130E  D7FC               	goto	u1045
  1802  001310  5029               	movf	??_MCP23008_pullUp+1,w,c
  1803  001312  102A               	iorwf	MCP23008_pullUp@dataRead,w,c
  1804  001314  EC25  F00A         	call	_I2C_Write
  1805                           
  1806                           ;MCP23008_IO_expender.c: 66: I2C_stop();
  1807  001318  EC89  F00A         	call	_I2C_stop	;wreg free
  1808  00131C  0012               	return		;funcret
  1809  00131E                     __end_of_MCP23008_pullUp:
  1810                           	opt stack 0
  1811                           tblptru	equ	0xFF8
  1812                           tblptrh	equ	0xFF7
  1813                           tblptrl	equ	0xFF6
  1814                           tablat	equ	0xFF5
  1815                           prodh	equ	0xFF4
  1816                           prodl	equ	0xFF3
  1817                           intcon	equ	0xFF2
  1818                           intcon2	equ	0xFF1
  1819                           postinc0	equ	0xFEE
  1820                           wreg	equ	0xFE8
  1821                           postdec1	equ	0xFE5
  1822                           fsr1h	equ	0xFE2
  1823                           fsr1l	equ	0xFE1
  1824                           status	equ	0xFD8
  1825                           
  1826 ;; *************** function _MCP23008_pinMode *****************
  1827 ;; Defined at:
  1828 ;;		line 11 in file "MCP23008_IO_expender.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  port            2    6[COMRAM] int 
  1831 ;;  mode            2    8[COMRAM] int 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  dataRead        2   12[COMRAM] int 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1844 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1846 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1847 ;;Total ram usage:        8 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    3
  1850 ;; This function calls:
  1851 ;;		_I2C_Write
  1852 ;;		_I2C_start
  1853 ;;		_I2C_stop
  1854 ;;		_MCP23008_reagReg
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text14
  1861  00114C                     __ptext14:
  1862                           	opt stack 0
  1863  00114C                     _MCP23008_pinMode:
  1864                           	opt stack 27
  1865                           
  1866                           ;MCP23008_IO_expender.c: 12: int dataRead;
  1867                           ;MCP23008_IO_expender.c: 13: dataRead = MCP23008_reagReg(0x00);
  1868                           
  1869                           ;incstack = 0
  1870  00114C  0E00               	movlw	0
  1871  00114E  6E23               	movwf	MCP23008_reagReg@regAdd+1,c
  1872  001150  0E00               	movlw	0
  1873  001152  6E22               	movwf	MCP23008_reagReg@regAdd,c
  1874  001154  ECD0  F009         	call	_MCP23008_reagReg	;wreg free
  1875  001158  C022  F02C         	movff	?_MCP23008_reagReg,MCP23008_pinMode@dataRead
  1876  00115C  C023  F02D         	movff	?_MCP23008_reagReg+1,MCP23008_pinMode@dataRead+1
  1877                           
  1878                           ;MCP23008_IO_expender.c: 15: I2C_start();
  1879  001160  EC84  F00A         	call	_I2C_start	;wreg free
  1880                           
  1881                           ;MCP23008_IO_expender.c: 16: I2C_Write(0x40);
  1882  001164  0E40               	movlw	64
  1883  001166  EC25  F00A         	call	_I2C_Write
  1884                           
  1885                           ;MCP23008_IO_expender.c: 17: I2C_Write(0x00);
  1886  00116A  0E00               	movlw	0
  1887  00116C  EC25  F00A         	call	_I2C_Write
  1888                           
  1889                           ;MCP23008_IO_expender.c: 18: if (mode == 0x01) {
  1890  001170  0428               	decf	MCP23008_pinMode@mode,w,c
  1891  001172  1029               	iorwf	MCP23008_pinMode@mode+1,w,c
  1892  001174  A4D8               	btfss	status,2,c
  1893  001176  D00F               	goto	l543
  1894                           
  1895                           ;MCP23008_IO_expender.c: 19: I2C_Write(dataRead | (0x01 << port));
  1896  001178  C026  F02A         	movff	MCP23008_pinMode@port,??_MCP23008_pinMode
  1897  00117C  0E01               	movlw	1
  1898  00117E  6E2B               	movwf	(??_MCP23008_pinMode+1)& (0+255),c
  1899  001180  2A2A               	incf	??_MCP23008_pinMode,f,c
  1900  001182  D002               	goto	u1024
  1901  001184                     u1025:
  1902  001184  90D8               	bcf	status,0,c
  1903  001186  362B               	rlcf	??_MCP23008_pinMode+1,f,c
  1904  001188                     u1024:
  1905  001188  2E2A               	decfsz	??_MCP23008_pinMode,f,c
  1906  00118A  D7FC               	goto	u1025
  1907  00118C  502B               	movf	??_MCP23008_pinMode+1,w,c
  1908  00118E  102C               	iorwf	MCP23008_pinMode@dataRead,w,c
  1909  001190  EC25  F00A         	call	_I2C_Write
  1910                           
  1911                           ;MCP23008_IO_expender.c: 20: } else {
  1912  001194  D00F               	goto	l544
  1913  001196                     l543:
  1914                           
  1915                           ;MCP23008_IO_expender.c: 21: I2C_Write(dataRead & ~(0x01 << port));
  1916  001196  C026  F02A         	movff	MCP23008_pinMode@port,??_MCP23008_pinMode
  1917  00119A  0E01               	movlw	1
  1918  00119C  6E2B               	movwf	(??_MCP23008_pinMode+1)& (0+255),c
  1919  00119E  2A2A               	incf	??_MCP23008_pinMode,f,c
  1920  0011A0  D002               	goto	u1034
  1921  0011A2                     u1035:
  1922  0011A2  90D8               	bcf	status,0,c
  1923  0011A4  362B               	rlcf	??_MCP23008_pinMode+1,f,c
  1924  0011A6                     u1034:
  1925  0011A6  2E2A               	decfsz	??_MCP23008_pinMode,f,c
  1926  0011A8  D7FC               	goto	u1035
  1927  0011AA  502B               	movf	??_MCP23008_pinMode+1,w,c
  1928  0011AC  0AFF               	xorlw	255
  1929  0011AE  142C               	andwf	MCP23008_pinMode@dataRead,w,c
  1930  0011B0  EC25  F00A         	call	_I2C_Write
  1931  0011B4                     l544:
  1932                           
  1933                           ;MCP23008_IO_expender.c: 22: }
  1934                           ;MCP23008_IO_expender.c: 23: I2C_stop();
  1935  0011B4  EC89  F00A         	call	_I2C_stop	;wreg free
  1936  0011B8  0012               	return		;funcret
  1937  0011BA                     __end_of_MCP23008_pinMode:
  1938                           	opt stack 0
  1939                           tblptru	equ	0xFF8
  1940                           tblptrh	equ	0xFF7
  1941                           tblptrl	equ	0xFF6
  1942                           tablat	equ	0xFF5
  1943                           prodh	equ	0xFF4
  1944                           prodl	equ	0xFF3
  1945                           intcon	equ	0xFF2
  1946                           intcon2	equ	0xFF1
  1947                           postinc0	equ	0xFEE
  1948                           wreg	equ	0xFE8
  1949                           postdec1	equ	0xFE5
  1950                           fsr1h	equ	0xFE2
  1951                           fsr1l	equ	0xFE1
  1952                           status	equ	0xFD8
  1953                           
  1954 ;; *************** function _MCP23008_ISR_polarity *****************
  1955 ;; Defined at:
  1956 ;;		line 88 in file "MCP23008_IO_expender.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  port            2    6[COMRAM] int 
  1959 ;;  INTedge         2    8[COMRAM] int 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  dataRead        2   12[COMRAM] int 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg, status,2, status,0, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1971 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1972 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1973 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1974 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1975 ;;Total ram usage:        8 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; Hardware stack levels required when called:    3
  1978 ;; This function calls:
  1979 ;;		_I2C_Write
  1980 ;;		_I2C_start
  1981 ;;		_I2C_stop
  1982 ;;		_MCP23008_reagReg
  1983 ;; This function is called by:
  1984 ;;		_main
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text15
  1989  00100E                     __ptext15:
  1990                           	opt stack 0
  1991  00100E                     _MCP23008_ISR_polarity:
  1992                           	opt stack 27
  1993                           
  1994                           ;MCP23008_IO_expender.c: 89: int dataRead;
  1995                           ;MCP23008_IO_expender.c: 91: dataRead = MCP23008_reagReg(0x03);
  1996                           
  1997                           ;incstack = 0
  1998  00100E  0E00               	movlw	0
  1999  001010  6E23               	movwf	MCP23008_reagReg@regAdd+1,c
  2000  001012  0E03               	movlw	3
  2001  001014  6E22               	movwf	MCP23008_reagReg@regAdd,c
  2002  001016  ECD0  F009         	call	_MCP23008_reagReg	;wreg free
  2003  00101A  C022  F02C         	movff	?_MCP23008_reagReg,MCP23008_ISR_polarity@dataRead
  2004  00101E  C023  F02D         	movff	?_MCP23008_reagReg+1,MCP23008_ISR_polarity@dataRead+1
  2005                           
  2006                           ;MCP23008_IO_expender.c: 92: I2C_start();
  2007  001022  EC84  F00A         	call	_I2C_start	;wreg free
  2008                           
  2009                           ;MCP23008_IO_expender.c: 93: I2C_Write(0x40);
  2010  001026  0E40               	movlw	64
  2011  001028  EC25  F00A         	call	_I2C_Write
  2012                           
  2013                           ;MCP23008_IO_expender.c: 94: I2C_Write(0x03);
  2014  00102C  0E03               	movlw	3
  2015  00102E  EC25  F00A         	call	_I2C_Write
  2016                           
  2017                           ;MCP23008_IO_expender.c: 95: if (INTedge == 0x00) {
  2018  001032  5028               	movf	MCP23008_ISR_polarity@INTedge,w,c
  2019  001034  1029               	iorwf	MCP23008_ISR_polarity@INTedge+1,w,c
  2020  001036  A4D8               	btfss	status,2,c
  2021  001038  D00F               	goto	l564
  2022                           
  2023                           ;MCP23008_IO_expender.c: 96: I2C_Write(dataRead |(0x01 << port));
  2024  00103A  C026  F02A         	movff	MCP23008_ISR_polarity@port,??_MCP23008_ISR_polarity
  2025  00103E  0E01               	movlw	1
  2026  001040  6E2B               	movwf	(??_MCP23008_ISR_polarity+1)& (0+255),c
  2027  001042  2A2A               	incf	??_MCP23008_ISR_polarity,f,c
  2028  001044  D002               	goto	u1074
  2029  001046                     u1075:
  2030  001046  90D8               	bcf	status,0,c
  2031  001048  362B               	rlcf	??_MCP23008_ISR_polarity+1,f,c
  2032  00104A                     u1074:
  2033  00104A  2E2A               	decfsz	??_MCP23008_ISR_polarity,f,c
  2034  00104C  D7FC               	goto	u1075
  2035  00104E  502B               	movf	??_MCP23008_ISR_polarity+1,w,c
  2036  001050  102C               	iorwf	MCP23008_ISR_polarity@dataRead,w,c
  2037  001052  EC25  F00A         	call	_I2C_Write
  2038                           
  2039                           ;MCP23008_IO_expender.c: 97: } else {
  2040  001056  D00F               	goto	l565
  2041  001058                     l564:
  2042                           
  2043                           ;MCP23008_IO_expender.c: 98: I2C_Write(dataRead & ~(0x01 << port));
  2044  001058  C026  F02A         	movff	MCP23008_ISR_polarity@port,??_MCP23008_ISR_polarity
  2045  00105C  0E01               	movlw	1
  2046  00105E  6E2B               	movwf	(??_MCP23008_ISR_polarity+1)& (0+255),c
  2047  001060  2A2A               	incf	??_MCP23008_ISR_polarity,f,c
  2048  001062  D002               	goto	u1084
  2049  001064                     u1085:
  2050  001064  90D8               	bcf	status,0,c
  2051  001066  362B               	rlcf	??_MCP23008_ISR_polarity+1,f,c
  2052  001068                     u1084:
  2053  001068  2E2A               	decfsz	??_MCP23008_ISR_polarity,f,c
  2054  00106A  D7FC               	goto	u1085
  2055  00106C  502B               	movf	??_MCP23008_ISR_polarity+1,w,c
  2056  00106E  0AFF               	xorlw	255
  2057  001070  142C               	andwf	MCP23008_ISR_polarity@dataRead,w,c
  2058  001072  EC25  F00A         	call	_I2C_Write
  2059  001076                     l565:
  2060                           
  2061                           ;MCP23008_IO_expender.c: 99: }
  2062                           ;MCP23008_IO_expender.c: 100: I2C_stop();
  2063  001076  EC89  F00A         	call	_I2C_stop	;wreg free
  2064                           
  2065                           ;MCP23008_IO_expender.c: 103: dataRead = MCP23008_reagReg(0x04);
  2066  00107A  0E00               	movlw	0
  2067  00107C  6E23               	movwf	MCP23008_reagReg@regAdd+1,c
  2068  00107E  0E04               	movlw	4
  2069  001080  6E22               	movwf	MCP23008_reagReg@regAdd,c
  2070  001082  ECD0  F009         	call	_MCP23008_reagReg	;wreg free
  2071  001086  C022  F02C         	movff	?_MCP23008_reagReg,MCP23008_ISR_polarity@dataRead
  2072  00108A  C023  F02D         	movff	?_MCP23008_reagReg+1,MCP23008_ISR_polarity@dataRead+1
  2073                           
  2074                           ;MCP23008_IO_expender.c: 104: I2C_start();
  2075  00108E  EC84  F00A         	call	_I2C_start	;wreg free
  2076                           
  2077                           ;MCP23008_IO_expender.c: 105: I2C_Write(0x40);
  2078  001092  0E40               	movlw	64
  2079  001094  EC25  F00A         	call	_I2C_Write
  2080                           
  2081                           ;MCP23008_IO_expender.c: 106: I2C_Write(0x04);
  2082  001098  0E04               	movlw	4
  2083  00109A  EC25  F00A         	call	_I2C_Write
  2084                           
  2085                           ;MCP23008_IO_expender.c: 107: I2C_Write(dataRead |(0x01 << port));
  2086  00109E  C026  F02A         	movff	MCP23008_ISR_polarity@port,??_MCP23008_ISR_polarity
  2087  0010A2  0E01               	movlw	1
  2088  0010A4  6E2B               	movwf	(??_MCP23008_ISR_polarity+1)& (0+255),c
  2089  0010A6  2A2A               	incf	??_MCP23008_ISR_polarity,f,c
  2090  0010A8  D002               	goto	u1094
  2091  0010AA                     u1095:
  2092  0010AA  90D8               	bcf	status,0,c
  2093  0010AC  362B               	rlcf	??_MCP23008_ISR_polarity+1,f,c
  2094  0010AE                     u1094:
  2095  0010AE  2E2A               	decfsz	??_MCP23008_ISR_polarity,f,c
  2096  0010B0  D7FC               	goto	u1095
  2097  0010B2  502B               	movf	??_MCP23008_ISR_polarity+1,w,c
  2098  0010B4  102C               	iorwf	MCP23008_ISR_polarity@dataRead,w,c
  2099  0010B6  EC25  F00A         	call	_I2C_Write
  2100                           
  2101                           ;MCP23008_IO_expender.c: 108: I2C_stop();
  2102  0010BA  EC89  F00A         	call	_I2C_stop	;wreg free
  2103  0010BE  0012               	return		;funcret
  2104  0010C0                     __end_of_MCP23008_ISR_polarity:
  2105                           	opt stack 0
  2106                           tblptru	equ	0xFF8
  2107                           tblptrh	equ	0xFF7
  2108                           tblptrl	equ	0xFF6
  2109                           tablat	equ	0xFF5
  2110                           prodh	equ	0xFF4
  2111                           prodl	equ	0xFF3
  2112                           intcon	equ	0xFF2
  2113                           intcon2	equ	0xFF1
  2114                           postinc0	equ	0xFEE
  2115                           wreg	equ	0xFE8
  2116                           postdec1	equ	0xFE5
  2117                           fsr1h	equ	0xFE2
  2118                           fsr1l	equ	0xFE1
  2119                           status	equ	0xFD8
  2120                           
  2121 ;; *************** function _MCP23008_ISR_EN *****************
  2122 ;; Defined at:
  2123 ;;		line 69 in file "MCP23008_IO_expender.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  port            2    6[COMRAM] int 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  dataRead        2   10[COMRAM] int 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      unsigned char 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2139 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2140 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2141 ;;Total ram usage:        6 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:    3
  2144 ;; This function calls:
  2145 ;;		_I2C_Write
  2146 ;;		_I2C_start
  2147 ;;		_I2C_stop
  2148 ;;		_MCP23008_reagReg
  2149 ;; This function is called by:
  2150 ;;		_main
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text16
  2155  001224                     __ptext16:
  2156                           	opt stack 0
  2157  001224                     _MCP23008_ISR_EN:
  2158                           	opt stack 27
  2159                           
  2160                           ;MCP23008_IO_expender.c: 70: int dataRead;
  2161                           ;MCP23008_IO_expender.c: 72: dataRead = MCP23008_reagReg(0x02);
  2162                           
  2163                           ;incstack = 0
  2164  001224  0E00               	movlw	0
  2165  001226  6E23               	movwf	MCP23008_reagReg@regAdd+1,c
  2166  001228  0E02               	movlw	2
  2167  00122A  6E22               	movwf	MCP23008_reagReg@regAdd,c
  2168  00122C  ECD0  F009         	call	_MCP23008_reagReg	;wreg free
  2169  001230  C022  F02A         	movff	?_MCP23008_reagReg,MCP23008_ISR_EN@dataRead
  2170  001234  C023  F02B         	movff	?_MCP23008_reagReg+1,MCP23008_ISR_EN@dataRead+1
  2171                           
  2172                           ;MCP23008_IO_expender.c: 74: I2C_start();
  2173  001238  EC84  F00A         	call	_I2C_start	;wreg free
  2174                           
  2175                           ;MCP23008_IO_expender.c: 75: I2C_Write(0x40);
  2176  00123C  0E40               	movlw	64
  2177  00123E  EC25  F00A         	call	_I2C_Write
  2178                           
  2179                           ;MCP23008_IO_expender.c: 76: I2C_Write(0x02);
  2180  001242  0E02               	movlw	2
  2181  001244  EC25  F00A         	call	_I2C_Write
  2182                           
  2183                           ;MCP23008_IO_expender.c: 77: I2C_Write(dataRead | (0x01 << port));
  2184  001248  C026  F028         	movff	MCP23008_ISR_EN@port,??_MCP23008_ISR_EN
  2185  00124C  0E01               	movlw	1
  2186  00124E  6E29               	movwf	(??_MCP23008_ISR_EN+1)& (0+255),c
  2187  001250  2A28               	incf	??_MCP23008_ISR_EN,f,c
  2188  001252  D002               	goto	u1054
  2189  001254                     u1055:
  2190  001254  90D8               	bcf	status,0,c
  2191  001256  3629               	rlcf	??_MCP23008_ISR_EN+1,f,c
  2192  001258                     u1054:
  2193  001258  2E28               	decfsz	??_MCP23008_ISR_EN,f,c
  2194  00125A  D7FC               	goto	u1055
  2195  00125C  5029               	movf	??_MCP23008_ISR_EN+1,w,c
  2196  00125E  102A               	iorwf	MCP23008_ISR_EN@dataRead,w,c
  2197  001260  EC25  F00A         	call	_I2C_Write
  2198                           
  2199                           ;MCP23008_IO_expender.c: 78: I2C_stop();
  2200  001264  EC89  F00A         	call	_I2C_stop	;wreg free
  2201                           
  2202                           ;MCP23008_IO_expender.c: 81: I2C_start();
  2203  001268  EC84  F00A         	call	_I2C_start	;wreg free
  2204                           
  2205                           ;MCP23008_IO_expender.c: 82: I2C_Write(0x40);
  2206  00126C  0E40               	movlw	64
  2207  00126E  EC25  F00A         	call	_I2C_Write
  2208                           
  2209                           ;MCP23008_IO_expender.c: 83: I2C_Write(0x05);
  2210  001272  0E05               	movlw	5
  2211  001274  EC25  F00A         	call	_I2C_Write
  2212                           
  2213                           ;MCP23008_IO_expender.c: 84: I2C_Write(0x04);
  2214  001278  0E04               	movlw	4
  2215  00127A  EC25  F00A         	call	_I2C_Write
  2216                           
  2217                           ;MCP23008_IO_expender.c: 85: I2C_stop();
  2218  00127E  EC89  F00A         	call	_I2C_stop	;wreg free
  2219  001282  0012               	return		;funcret
  2220  001284                     __end_of_MCP23008_ISR_EN:
  2221                           	opt stack 0
  2222                           tblptru	equ	0xFF8
  2223                           tblptrh	equ	0xFF7
  2224                           tblptrl	equ	0xFF6
  2225                           tablat	equ	0xFF5
  2226                           prodh	equ	0xFF4
  2227                           prodl	equ	0xFF3
  2228                           intcon	equ	0xFF2
  2229                           intcon2	equ	0xFF1
  2230                           postinc0	equ	0xFEE
  2231                           wreg	equ	0xFE8
  2232                           postdec1	equ	0xFE5
  2233                           fsr1h	equ	0xFE2
  2234                           fsr1l	equ	0xFE1
  2235                           status	equ	0xFD8
  2236                           
  2237 ;; *************** function _MCP23008_INTclear *****************
  2238 ;; Defined at:
  2239 ;;		line 142 in file "MCP23008_IO_expender.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;		None
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;		None
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		wreg, status,2, cstack
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2257 ;;Total ram usage:        0 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; Hardware stack levels required when called:    3
  2260 ;; This function calls:
  2261 ;;		_MCP23008_reagReg
  2262 ;; This function is called by:
  2263 ;;		_main
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           	psect	text17
  2268  0014C8                     __ptext17:
  2269                           	opt stack 0
  2270  0014C8                     _MCP23008_INTclear:
  2271                           	opt stack 27
  2272                           
  2273                           ;MCP23008_IO_expender.c: 143: MCP23008_reagReg(0x08);
  2274                           
  2275                           ;incstack = 0
  2276  0014C8  0E00               	movlw	0
  2277  0014CA  6E23               	movwf	MCP23008_reagReg@regAdd+1,c
  2278  0014CC  0E08               	movlw	8
  2279  0014CE  6E22               	movwf	MCP23008_reagReg@regAdd,c
  2280  0014D0  ECD0  F009         	call	_MCP23008_reagReg	;wreg free
  2281  0014D4  0012               	return		;funcret
  2282  0014D6                     __end_of_MCP23008_INTclear:
  2283                           	opt stack 0
  2284                           tblptru	equ	0xFF8
  2285                           tblptrh	equ	0xFF7
  2286                           tblptrl	equ	0xFF6
  2287                           tablat	equ	0xFF5
  2288                           prodh	equ	0xFF4
  2289                           prodl	equ	0xFF3
  2290                           intcon	equ	0xFF2
  2291                           intcon2	equ	0xFF1
  2292                           postinc0	equ	0xFEE
  2293                           wreg	equ	0xFE8
  2294                           postdec1	equ	0xFE5
  2295                           fsr1h	equ	0xFE2
  2296                           fsr1l	equ	0xFE1
  2297                           status	equ	0xFD8
  2298                           
  2299 ;; *************** function _MCP23008_reagReg *****************
  2300 ;; Defined at:
  2301 ;;		line 129 in file "MCP23008_IO_expender.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;  regAdd          2    2[COMRAM] int 
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;  dataRead        2    4[COMRAM] int 
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  2    2[COMRAM] int 
  2308 ;; Registers used:
  2309 ;;		wreg, status,2, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2315 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2316 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2318 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2319 ;;Total ram usage:        4 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    2
  2322 ;; This function calls:
  2323 ;;		_I2C_Write
  2324 ;;		_I2C_read
  2325 ;;		_I2C_repeated_Start
  2326 ;;		_I2C_start
  2327 ;;		_I2C_stop
  2328 ;; This function is called by:
  2329 ;;		_MCP23008_pinMode
  2330 ;;		_MCP23008_pullUp
  2331 ;;		_MCP23008_ISR_EN
  2332 ;;		_MCP23008_ISR_polarity
  2333 ;;		_MCP23008_INTclear
  2334 ;;		_MCP23008_Write
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text18
  2339  0013A0                     __ptext18:
  2340                           	opt stack 0
  2341  0013A0                     _MCP23008_reagReg:
  2342                           	opt stack 27
  2343                           
  2344                           ;MCP23008_IO_expender.c: 130: int dataRead;
  2345                           ;MCP23008_IO_expender.c: 131: I2C_start();
  2346                           
  2347                           ;incstack = 0
  2348  0013A0  EC84  F00A         	call	_I2C_start	;wreg free
  2349                           
  2350                           ;MCP23008_IO_expender.c: 132: I2C_Write(0x40);
  2351  0013A4  0E40               	movlw	64
  2352  0013A6  EC25  F00A         	call	_I2C_Write
  2353                           
  2354                           ;MCP23008_IO_expender.c: 133: I2C_Write(regAdd);
  2355  0013AA  5022               	movf	MCP23008_reagReg@regAdd,w,c
  2356  0013AC  EC25  F00A         	call	_I2C_Write
  2357                           
  2358                           ;MCP23008_IO_expender.c: 134: I2C_repeated_Start();
  2359  0013B0  EC7F  F00A         	call	_I2C_repeated_Start	;wreg free
  2360                           
  2361                           ;MCP23008_IO_expender.c: 135: I2C_Write(0x40 | 0x01);
  2362  0013B4  0E41               	movlw	65
  2363  0013B6  EC25  F00A         	call	_I2C_Write
  2364                           
  2365                           ;MCP23008_IO_expender.c: 136: I2C_read(1);
  2366  0013BA  0E00               	movlw	0
  2367  0013BC  6E21               	movwf	I2C_read@ACK_NACK+1,c
  2368  0013BE  0E01               	movlw	1
  2369  0013C0  6E20               	movwf	I2C_read@ACK_NACK,c
  2370  0013C2  EC3E  F00A         	call	_I2C_read	;wreg free
  2371                           
  2372                           ;MCP23008_IO_expender.c: 137: dataRead = SSP2BUF;
  2373  0013C6  CF75 F024          	movff	3957,MCP23008_reagReg@dataRead	;volatile
  2374  0013CA  6A25               	clrf	MCP23008_reagReg@dataRead+1,c
  2375                           
  2376                           ;MCP23008_IO_expender.c: 138: I2C_stop();
  2377  0013CC  EC89  F00A         	call	_I2C_stop	;wreg free
  2378                           
  2379                           ;MCP23008_IO_expender.c: 139: return dataRead;
  2380  0013D0  C024  F022         	movff	MCP23008_reagReg@dataRead,?_MCP23008_reagReg
  2381  0013D4  C025  F023         	movff	MCP23008_reagReg@dataRead+1,?_MCP23008_reagReg+1
  2382  0013D8  0012               	return	
  2383  0013DA                     __end_of_MCP23008_reagReg:
  2384                           	opt stack 0
  2385                           tblptru	equ	0xFF8
  2386                           tblptrh	equ	0xFF7
  2387                           tblptrl	equ	0xFF6
  2388                           tablat	equ	0xFF5
  2389                           prodh	equ	0xFF4
  2390                           prodl	equ	0xFF3
  2391                           intcon	equ	0xFF2
  2392                           intcon2	equ	0xFF1
  2393                           postinc0	equ	0xFEE
  2394                           wreg	equ	0xFE8
  2395                           postdec1	equ	0xFE5
  2396                           fsr1h	equ	0xFE2
  2397                           fsr1l	equ	0xFE1
  2398                           status	equ	0xFD8
  2399                           
  2400 ;; *************** function _I2C_repeated_Start *****************
  2401 ;; Defined at:
  2402 ;;		line 57 in file "I2C.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		None
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2420 ;;Total ram usage:        0 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; This function calls:
  2423 ;;		Nothing
  2424 ;; This function is called by:
  2425 ;;		_MCP23008_reagReg
  2426 ;;		_MCP23008_read
  2427 ;;		_portINT_status
  2428 ;;		_MCP9801_TempRead
  2429 ;;		_EEPROM_24AA512_Read
  2430 ;;		_EEPROM_24AA512_pageRead
  2431 ;;		_MCP794x_readEEPROM
  2432 ;;		_MCP794x_getID
  2433 ;;		_MCP7941x_read
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text19
  2438  0014FE                     __ptext19:
  2439                           	opt stack 0
  2440  0014FE                     _I2C_repeated_Start:
  2441                           	opt stack 28
  2442                           
  2443                           ;I2C.c: 58: SSP2CON2bits.RSEN = 1;
  2444                           
  2445                           ;incstack = 0
  2446  0014FE  8271               	bsf	3953,1,c	;volatile
  2447  001500  B271               	btfsc	3953,1,c	;volatile
  2448  001502  D7FE               	goto	l495
  2449                           
  2450                           ;I2C.c: 60: PIR3bits.SSP2IF = 0;
  2451  001504  9EA4               	bcf	4004,7,c	;volatile
  2452  001506  0012               	return		;funcret
  2453  001508                     __end_of_I2C_repeated_Start:
  2454                           	opt stack 0
  2455                           tblptru	equ	0xFF8
  2456                           tblptrh	equ	0xFF7
  2457                           tblptrl	equ	0xFF6
  2458                           tablat	equ	0xFF5
  2459                           prodh	equ	0xFF4
  2460                           prodl	equ	0xFF3
  2461                           intcon	equ	0xFF2
  2462                           intcon2	equ	0xFF1
  2463                           postinc0	equ	0xFEE
  2464                           wreg	equ	0xFE8
  2465                           postdec1	equ	0xFE5
  2466                           fsr1h	equ	0xFE2
  2467                           fsr1l	equ	0xFE1
  2468                           status	equ	0xFD8
  2469                           
  2470 ;; *************** function _I2C_read *****************
  2471 ;; Defined at:
  2472 ;;		line 42 in file "I2C.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  ACK_NACK        2    0[COMRAM] int 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;		None
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  2    0[COMRAM] int 
  2479 ;; Registers used:
  2480 ;;		None
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2486 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2489 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2490 ;;Total ram usage:        2 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_MCP23008_reagReg
  2496 ;;		_MCP23008_read
  2497 ;;		_portINT_status
  2498 ;;		_MCP9801_TempRead
  2499 ;;		_EEPROM_24AA512_Read
  2500 ;;		_EEPROM_24AA512_pageRead
  2501 ;;		_PCF8523_rtcRead
  2502 ;;		_MCP794x_readEEPROM
  2503 ;;		_MCP794x_getID
  2504 ;;		_MCP7941x_read
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text20
  2509  00147C                     __ptext20:
  2510                           	opt stack 0
  2511  00147C                     _I2C_read:
  2512                           	opt stack 28
  2513                           
  2514                           ;I2C.c: 43: SSP2CON2bits.RCEN = 1;
  2515                           
  2516                           ;incstack = 0
  2517  00147C  8671               	bsf	3953,3,c	;volatile
  2518  00147E  A073               	btfss	3955,0,c	;volatile
  2519  001480  D7FE               	goto	l480
  2520                           
  2521                           ;I2C.c: 45: SSP2CON2bits.ACKDT = ACK_NACK;
  2522  001482  B020               	btfsc	I2C_read@ACK_NACK,0,c
  2523  001484  D002               	bra	u935
  2524  001486  9A71               	bcf	3953,5,c	;volatile
  2525  001488  D001               	bra	u936
  2526  00148A                     u935:
  2527  00148A  8A71               	bsf	3953,5,c	;volatile
  2528  00148C                     u936:
  2529                           
  2530                           ;I2C.c: 46: SSP2CON2bits.ACKEN = 1;
  2531  00148C  8871               	bsf	3953,4,c	;volatile
  2532  00148E  A871               	btfss	3953,4,c	;volatile
  2533  001490  0012               	return	
  2534  001492  D7FD               	goto	l483
  2535  001494                     __end_of_I2C_read:
  2536                           	opt stack 0
  2537                           tblptru	equ	0xFF8
  2538                           tblptrh	equ	0xFF7
  2539                           tblptrl	equ	0xFF6
  2540                           tablat	equ	0xFF5
  2541                           prodh	equ	0xFF4
  2542                           prodl	equ	0xFF3
  2543                           intcon	equ	0xFF2
  2544                           intcon2	equ	0xFF1
  2545                           postinc0	equ	0xFEE
  2546                           wreg	equ	0xFE8
  2547                           postdec1	equ	0xFE5
  2548                           fsr1h	equ	0xFE2
  2549                           fsr1l	equ	0xFE1
  2550                           status	equ	0xFD8
  2551                           
  2552 ;; *************** function _I2C_buffClear *****************
  2553 ;; Defined at:
  2554 ;;		line 81 in file "I2C.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;		None
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;		None
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		wreg, cstack
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2572 ;;Total ram usage:        0 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; Hardware stack levels required when called:    2
  2575 ;; This function calls:
  2576 ;;		_I2C_Write
  2577 ;;		_I2C_start
  2578 ;;		_I2C_stop
  2579 ;; This function is called by:
  2580 ;;		_main
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           	psect	text21
  2585  0014AA                     __ptext21:
  2586                           	opt stack 0
  2587  0014AA                     _I2C_buffClear:
  2588                           	opt stack 28
  2589                           
  2590                           ;I2C.c: 82: I2C_start();
  2591                           
  2592                           ;incstack = 0
  2593  0014AA  EC84  F00A         	call	_I2C_start	;wreg free
  2594                           
  2595                           ;I2C.c: 83: I2C_Write(0x00);
  2596  0014AE  0E00               	movlw	0
  2597  0014B0  EC25  F00A         	call	_I2C_Write
  2598                           
  2599                           ;I2C.c: 84: I2C_stop();
  2600  0014B4  EC89  F00A         	call	_I2C_stop	;wreg free
  2601  0014B8  0012               	return		;funcret
  2602  0014BA                     __end_of_I2C_buffClear:
  2603                           	opt stack 0
  2604                           tblptru	equ	0xFF8
  2605                           tblptrh	equ	0xFF7
  2606                           tblptrl	equ	0xFF6
  2607                           tablat	equ	0xFF5
  2608                           prodh	equ	0xFF4
  2609                           prodl	equ	0xFF3
  2610                           intcon	equ	0xFF2
  2611                           intcon2	equ	0xFF1
  2612                           postinc0	equ	0xFEE
  2613                           wreg	equ	0xFE8
  2614                           postdec1	equ	0xFE5
  2615                           fsr1h	equ	0xFE2
  2616                           fsr1l	equ	0xFE1
  2617                           status	equ	0xFD8
  2618                           
  2619 ;; *************** function _I2C_start *****************
  2620 ;; Defined at:
  2621 ;;		line 51 in file "I2C.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		None
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2639 ;;Total ram usage:        0 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_I2C_buffClear
  2645 ;;		_MCP23008_pinMode
  2646 ;;		_MCP23008_pullUp
  2647 ;;		_MCP23008_ISR_EN
  2648 ;;		_MCP23008_ISR_polarity
  2649 ;;		_MCP23008_reagReg
  2650 ;;		_I2C_BusSCan
  2651 ;;		_MCP23008_Write
  2652 ;;		_MCP23008_read
  2653 ;;		_portINT_status
  2654 ;;		_MCP9801_Init
  2655 ;;		_MCP9801_TempRead
  2656 ;;		_EEPROM_24AA512_Write
  2657 ;;		_EEPROM_24AA512_Read
  2658 ;;		_EEPROM_24AA512_pageWrite
  2659 ;;		_EEPROM_24AA512_pageRead
  2660 ;;		_PCF8523_rtcRead
  2661 ;;		_PCF8523_write
  2662 ;;		_MCP794x_setTime
  2663 ;;		_MCP794x_setDate
  2664 ;;		_MCP794x_writeRtcc
  2665 ;;		_MCP794x_writeEEPROM
  2666 ;;		_MCP794x_readEEPROM
  2667 ;;		_MCP794x_getID
  2668 ;;		_MCP7941x_read
  2669 ;;		_SSD1306_writeCMD
  2670 ;;		_displaySetCursor
  2671 ;;		_displayWrite
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text22
  2676  001508                     __ptext22:
  2677                           	opt stack 0
  2678  001508                     _I2C_start:
  2679                           	opt stack 28
  2680                           
  2681                           ;I2C.c: 52: SSP2CON2bits.SEN = 1;
  2682                           
  2683                           ;incstack = 0
  2684  001508  8071               	bsf	3953,0,c	;volatile
  2685  00150A  B071               	btfsc	3953,0,c	;volatile
  2686  00150C  D7FE               	goto	l489
  2687                           
  2688                           ;I2C.c: 54: PIR3bits.SSP2IF = 0;
  2689  00150E  9EA4               	bcf	4004,7,c	;volatile
  2690  001510  0012               	return		;funcret
  2691  001512                     __end_of_I2C_start:
  2692                           	opt stack 0
  2693                           tblptru	equ	0xFF8
  2694                           tblptrh	equ	0xFF7
  2695                           tblptrl	equ	0xFF6
  2696                           tablat	equ	0xFF5
  2697                           prodh	equ	0xFF4
  2698                           prodl	equ	0xFF3
  2699                           intcon	equ	0xFF2
  2700                           intcon2	equ	0xFF1
  2701                           postinc0	equ	0xFEE
  2702                           wreg	equ	0xFE8
  2703                           postdec1	equ	0xFE5
  2704                           fsr1h	equ	0xFE2
  2705                           fsr1l	equ	0xFE1
  2706                           status	equ	0xFD8
  2707                           
  2708 ;; *************** function _I2C_Write *****************
  2709 ;; Defined at:
  2710 ;;		line 31 in file "I2C.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  data            1    wreg     unsigned char 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  data            1    0[COMRAM] unsigned char 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2728 ;;Total ram usage:        1 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    1
  2731 ;; This function calls:
  2732 ;;		_I2C_stop
  2733 ;; This function is called by:
  2734 ;;		_I2C_buffClear
  2735 ;;		_MCP23008_pinMode
  2736 ;;		_MCP23008_pullUp
  2737 ;;		_MCP23008_ISR_EN
  2738 ;;		_MCP23008_ISR_polarity
  2739 ;;		_MCP23008_reagReg
  2740 ;;		_I2C_BusSCan
  2741 ;;		_MCP23008_Write
  2742 ;;		_MCP23008_read
  2743 ;;		_portINT_status
  2744 ;;		_MCP9801_Init
  2745 ;;		_MCP9801_TempRead
  2746 ;;		_EEPROM_24AA512_Write
  2747 ;;		_EEPROM_24AA512_Read
  2748 ;;		_EEPROM_24AA512_pageWrite
  2749 ;;		_EEPROM_24AA512_pageRead
  2750 ;;		_PCF8523_rtcRead
  2751 ;;		_PCF8523_write
  2752 ;;		_MCP794x_setTime
  2753 ;;		_MCP794x_setDate
  2754 ;;		_MCP794x_writeRtcc
  2755 ;;		_MCP794x_writeEEPROM
  2756 ;;		_MCP794x_readEEPROM
  2757 ;;		_MCP794x_getID
  2758 ;;		_MCP7941x_read
  2759 ;;		_SSD1306_writeCMD
  2760 ;;		_displaySetCursor
  2761 ;;		_displayWrite
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text23
  2766  00144A                     __ptext23:
  2767                           	opt stack 0
  2768  00144A                     _I2C_Write:
  2769                           	opt stack 27
  2770                           
  2771                           ;incstack = 0
  2772                           ;I2C_Write@data stored from wreg
  2773  00144A  6E20               	movwf	I2C_Write@data,c
  2774                           
  2775                           ;I2C.c: 32: SSP2BUF = data;
  2776  00144C  C020  FF75         	movff	I2C_Write@data,3957	;volatile
  2777  001450  A073               	btfss	3955,0,c	;volatile
  2778  001452  D7FE               	goto	l470
  2779  001454                     u20:
  2780                           
  2781                           ;I2C.c: 34: while (!PIR3bits.SSP2IF);
  2782  001454  AEA4               	btfss	4004,7,c	;volatile
  2783  001456  D7FE               	goto	u20
  2784                           
  2785                           ;I2C.c: 35: PIR3bits.SSP2IF = 0;
  2786  001458  9EA4               	bcf	4004,7,c	;volatile
  2787                           
  2788                           ;I2C.c: 36: if (SSP2CON2bits.ACKSTAT) {
  2789  00145A  AC71               	btfss	3953,6,c	;volatile
  2790  00145C  0012               	return	
  2791                           
  2792                           ;I2C.c: 37: I2C_stop();
  2793  00145E  EC89  F00A         	call	_I2C_stop	;wreg free
  2794                           
  2795                           ;I2C.c: 38: return;
  2796  001462  0012               	return	
  2797  001464                     __end_of_I2C_Write:
  2798                           	opt stack 0
  2799                           tblptru	equ	0xFF8
  2800                           tblptrh	equ	0xFF7
  2801                           tblptrl	equ	0xFF6
  2802                           tablat	equ	0xFF5
  2803                           prodh	equ	0xFF4
  2804                           prodl	equ	0xFF3
  2805                           intcon	equ	0xFF2
  2806                           intcon2	equ	0xFF1
  2807                           postinc0	equ	0xFEE
  2808                           wreg	equ	0xFE8
  2809                           postdec1	equ	0xFE5
  2810                           fsr1h	equ	0xFE2
  2811                           fsr1l	equ	0xFE1
  2812                           status	equ	0xFD8
  2813                           
  2814 ;; *************** function _I2C_stop *****************
  2815 ;; Defined at:
  2816 ;;		line 63 in file "I2C.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;		None
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;		None
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      void 
  2823 ;; Registers used:
  2824 ;;		None
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2834 ;;Total ram usage:        0 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		_I2C_Write
  2840 ;;		_I2C_buffClear
  2841 ;;		_MCP23008_pinMode
  2842 ;;		_MCP23008_pullUp
  2843 ;;		_MCP23008_ISR_EN
  2844 ;;		_MCP23008_ISR_polarity
  2845 ;;		_MCP23008_reagReg
  2846 ;;		_I2C_BusSCan
  2847 ;;		_MCP23008_Write
  2848 ;;		_MCP23008_read
  2849 ;;		_portINT_status
  2850 ;;		_MCP9801_Init
  2851 ;;		_MCP9801_TempRead
  2852 ;;		_EEPROM_24AA512_Write
  2853 ;;		_EEPROM_24AA512_Read
  2854 ;;		_EEPROM_24AA512_pageWrite
  2855 ;;		_EEPROM_24AA512_pageRead
  2856 ;;		_PCF8523_rtcRead
  2857 ;;		_PCF8523_write
  2858 ;;		_MCP794x_setTime
  2859 ;;		_MCP794x_setDate
  2860 ;;		_MCP794x_writeRtcc
  2861 ;;		_MCP794x_writeEEPROM
  2862 ;;		_MCP794x_readEEPROM
  2863 ;;		_MCP794x_getID
  2864 ;;		_SSD1306_writeCMD
  2865 ;;		_displaySetCursor
  2866 ;;		_displayWrite
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text24
  2871  001512                     __ptext24:
  2872                           	opt stack 0
  2873  001512                     _I2C_stop:
  2874                           	opt stack 28
  2875                           
  2876                           ;I2C.c: 64: SSP2CON2bits.PEN = 1;
  2877                           
  2878                           ;incstack = 0
  2879  001512  8471               	bsf	3953,2,c	;volatile
  2880  001514  B471               	btfsc	3953,2,c	;volatile
  2881  001516  D7FE               	goto	l501
  2882                           
  2883                           ;I2C.c: 66: PIR3bits.SSP2IF = 0;
  2884  001518  9EA4               	bcf	4004,7,c	;volatile
  2885  00151A  0012               	return		;funcret
  2886  00151C                     __end_of_I2C_stop:
  2887                           	opt stack 0
  2888                           tblptru	equ	0xFF8
  2889                           tblptrh	equ	0xFF7
  2890                           tblptrl	equ	0xFF6
  2891                           tablat	equ	0xFF5
  2892                           prodh	equ	0xFF4
  2893                           prodl	equ	0xFF3
  2894                           intcon	equ	0xFF2
  2895                           intcon2	equ	0xFF1
  2896                           postinc0	equ	0xFEE
  2897                           wreg	equ	0xFE8
  2898                           postdec1	equ	0xFE5
  2899                           fsr1h	equ	0xFE2
  2900                           fsr1l	equ	0xFE1
  2901                           status	equ	0xFD8
  2902                           tblptru	equ	0xFF8
  2903                           tblptrh	equ	0xFF7
  2904                           tblptrl	equ	0xFF6
  2905                           tablat	equ	0xFF5
  2906                           prodh	equ	0xFF4
  2907                           prodl	equ	0xFF3
  2908                           intcon	equ	0xFF2
  2909                           intcon2	equ	0xFF1
  2910                           postinc0	equ	0xFEE
  2911                           wreg	equ	0xFE8
  2912                           postdec1	equ	0xFE5
  2913                           fsr1h	equ	0xFE2
  2914                           fsr1l	equ	0xFE1
  2915                           status	equ	0xFD8
  2916                           
  2917                           	psect	rparam
  2918  0000                     tblptru	equ	0xFF8
  2919                           tblptrh	equ	0xFF7
  2920                           tblptrl	equ	0xFF6
  2921                           tablat	equ	0xFF5
  2922                           prodh	equ	0xFF4
  2923                           prodl	equ	0xFF3
  2924                           intcon	equ	0xFF2
  2925                           intcon2	equ	0xFF1
  2926                           postinc0	equ	0xFEE
  2927                           wreg	equ	0xFE8
  2928                           postdec1	equ	0xFE5
  2929                           fsr1h	equ	0xFE2
  2930                           fsr1l	equ	0xFE1
  2931                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    57
    Data        53
    BSS         287
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      75
    BANK0           160      0      32
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 

    sp__memset	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    buffer	PTR unsigned int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_I2C_Init
    _I2C_Init->___aldiv
    ___aldiv->___wmul
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _MCP23008_pullUp->_MCP23008_reagReg
    _MCP23008_pinMode->_MCP23008_reagReg
    _MCP23008_ISR_polarity->_MCP23008_reagReg
    _MCP23008_ISR_EN->_MCP23008_reagReg
    _MCP23008_INTclear->_MCP23008_reagReg
    _MCP23008_reagReg->_I2C_read
    _I2C_buffClear->_I2C_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10381
                                             21 COMRAM     2     2      0
                      _I2C_buffClear
                  _MCP23008_INTclear
                    _MCP23008_ISR_EN
              _MCP23008_ISR_polarity
                   _MCP23008_pinMode
                    _MCP23008_pullUp
                  _SYSTEM_Initialize
                     _interrupt_Init
 ---------------------------------------------------------------------------------
 (1) _interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1331
                 _EUSART1_Initialize
                           _I2C_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             1     1      0    1037
                                             20 COMRAM     1     1      0
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     563
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              6 COMRAM    14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MCP23008_pullUp                                      6     4      2    1738
                                              6 COMRAM     6     4      2
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
                   _MCP23008_reagReg
 ---------------------------------------------------------------------------------
 (1) _MCP23008_pinMode                                     8     4      4    2032
                                              6 COMRAM     8     4      4
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
                   _MCP23008_reagReg
 ---------------------------------------------------------------------------------
 (1) _MCP23008_ISR_polarity                                8     4      4    1925
                                              6 COMRAM     8     4      4
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
                   _MCP23008_reagReg
 ---------------------------------------------------------------------------------
 (1) _MCP23008_ISR_EN                                      6     4      2    1738
                                              6 COMRAM     6     4      2
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
                   _MCP23008_reagReg
 ---------------------------------------------------------------------------------
 (1) _MCP23008_INTclear                                    0     0      0    1602
                   _MCP23008_reagReg
 ---------------------------------------------------------------------------------
 (2) _MCP23008_reagReg                                     4     2      2    1602
                                              2 COMRAM     4     2      2
                          _I2C_Write
                           _I2C_read
                 _I2C_repeated_Start
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (3) _I2C_repeated_Start                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_read                                             2     0      2    1010
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_buffClear                                        0     0      0      15
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (3) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      15
                                              0 COMRAM     1     1      0
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (3) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_buffClear
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
   _MCP23008_INTclear
     _MCP23008_reagReg
       _I2C_Write
         _I2C_stop
       _I2C_read
       _I2C_repeated_Start
       _I2C_start
       _I2C_stop
   _MCP23008_ISR_EN
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
     _MCP23008_reagReg
       _I2C_Write
         _I2C_stop
       _I2C_read
       _I2C_repeated_Start
       _I2C_start
       _I2C_stop
   _MCP23008_ISR_polarity
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
     _MCP23008_reagReg
       _I2C_Write
         _I2C_stop
       _I2C_read
       _I2C_repeated_Start
       _I2C_start
       _I2C_stop
   _MCP23008_pinMode
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
     _MCP23008_reagReg
       _I2C_Write
         _I2C_stop
       _I2C_read
       _I2C_repeated_Start
       _I2C_start
       _I2C_stop
   _MCP23008_pullUp
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
     _MCP23008_reagReg
       _I2C_Write
         _I2C_stop
       _I2C_read
       _I2C_repeated_Start
       _I2C_start
       _I2C_stop
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _I2C_Init
       ___aldiv
         ___wmul (ARG)
       ___wmul
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   _interrupt_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0     100       8      100.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     17      4B       1       78.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16B       6        0.0%
DATA                 0      0     16B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Apr 23 21:15:48 2020

                            __size_of_I2C_Write 001A                                              u20 1454  
                      MCP23008_reagReg@dataRead 0024                             ___wmul@multiplicand 0022  
                        __end_of_interrupt_Init 14E0                                    __CFG_CP0$OFF 000000  
                            __size_of_I2C_start 000A                                     __CFG_OSC$HS 000000  
                                           l501 1514                                             _ADC 0017  
                                           l276 1130                                             l470 1450  
                                           l543 1196                                             l480 147E  
                                           l544 11B4                                             l483 148E  
                                           l564 1058                                             l565 1076  
                                           l495 1500                                             l489 150A  
                                           l961 0FD8                                             l962 0FE6  
                                           l954 0F5E                                             l963 0FFC  
                                           l955 0F76                                             l957 0FA4  
                                           l958 0F98                                             u935 148A  
                                           u936 148C                                             u980 0FA8  
                             ??_MCP23008_ISR_EN 0028                                             wreg 000FE8  
                                    _TXSTA1bits 000FAD                                    __CFG_IESO$ON 000000  
                                          STR_1 0F3E                                            STR_2 0F3C  
                                          STR_3 0F3A                                            u1024 1188  
                                          u1025 1184                                            u1034 11A6  
                                          u1035 11A2                                            u1044 130C  
                                          u1045 1308                                            u1054 1258  
                                          u1055 1254                                            u1207 10D4  
                                          u1217 113E                                            u1074 104A  
                                          u1075 1046                                            u1227 13F6  
                                          u1084 1068                                            u1085 1064  
                                          _LATA 000F89                                            u1094 10AE  
                                          _LATB 000F8A                                            u1095 10AA  
                                          _LATC 000F8B                                            _LATD 000F8C  
                                          _LATE 000F8D                                   __CFG_FCMEN$ON 000000  
                                          _main 10C0                                            _page 003F  
                              __end_of_I2C_Init 12D8                                            fsr1h 000FE2  
                                          fsr1l 000FE1                                __end_of_I2C_read 1494  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0000                                __end_of_I2C_stop 151C  
                             ??_MCP23008_pullUp 0028                                    ___param_bank 000000  
                                 __CFG_PLLDIV$1 000000                  __size_of_OSCILLATOR_Initialize 002A  
                 __end_of_OSCILLATOR_Initialize 1404                                 ?_interrupt_Init 0020  
                               __end_of___aldiv 100E                                           ?_main 0020  
                             _MCP23008_INTclear 14C8                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                            ?_MCP23008_INTclear 0020                             MCP23008_pullUp@port 0026  
                                         _sData 0001                                           _errno 0013  
                             ?_MCP23008_reagReg 0022                                  __CFG_CLKOEC$ON 000000  
                             ?_MCP23008_pinMode 0026                               __end_of_I2C_Write 1464  
                                         tablat 000FF5                              ??_MCP23008_reagReg 0024  
                           ??_MCP23008_INTclear 0026                              ??_MCP23008_pinMode 002A  
                                         status 000FD8                               __end_of_I2C_start 1512  
            _EUSART1_DefaultFramingErrorHandler 000000                       MCP23008_ISR_polarity@port 0026  
                      __size_of_SPI1_Initialize 000E                         __CFG_DSWDTOSC$INTOSCREF 000000  
                               __initialization 11BA                      __end_of_EUSART1_Initialize 13A0  
                                  __end_of_main 114C                       __end_of_MCP23008_INTclear 14D6  
                                        ??_main 0035                                   __activetblptr 000002  
                                        _ANCON0 000F48                                          _ANCON1 000F49  
                                        _ODCON1 000F42                                          _ODCON2 000F41  
                                        _ODCON3 000F40                                  __CFG_WDTEN$OFF 000000  
                                        _RCREG1 000FAF                                          _RCSTA1 000FAC  
                                        _OSCCON 000FD3                                          _SPBRG1 000FB0  
                                __CFG_WPCFG$OFF 000000                                          _TXREG1 000FAE  
                                        _TXSTA1 000FAD                                  __CFG_WPDIS$OFF 000000  
                __size_of_MCP23008_ISR_polarity 00B2                                  __CFG_XINST$OFF 000000  
                 __end_of_MCP23008_ISR_polarity 10C0                                          _TxData 0100  
                                        _bfSize 000B                                       ??___aldiv 002E  
                                        ___wmul 1404                                  __CFG_STVREN$ON 000000  
                        __size_of_I2C_buffClear 0010                                          _buffer 0015  
                                        _columm 0060                        ?_EUSART1_SetErrorHandler 0020  
                                        clear_0 1202                                          clear_1 1214  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                  __pdataCOMRAM 0037                                       ?_I2C_Init 0020  
                                  __mediumconst 0000                                       ?_I2C_read 0020  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                       ?_I2C_stop 0020  
                               __CFG_DSBOREN$ON 000000                                __end_ofexp@coeff 0F1F  
                             _SYSTEM_Initialize 1464                                __end_oflog@coeff 0F3A  
                                    __accesstop 0060                         __end_of__initialization 121A  
                            ?_SYSTEM_Initialize 0020                                   ___rparam_used 000001  
                    __end_of_I2C_repeated_Start 1508                                 __CFG_IOL1WAY$ON 000000  
                          __CFG_WPEND$PAGE_WPFP 000000                                  __pcstackCOMRAM 0020  
                                  __pidataBANK0 142A                                 _MCP23008_ISR_EN 1224  
                           ??_SYSTEM_Initialize 0035                               ??_SPI1_Initialize 0020  
                               __CFG_DSWDTEN$ON 000000                                 __CFG_DSWDTPS$G2 000000  
                    __size_of_MCP23008_INTclear 000E                                      ??_I2C_Init 0034  
                                    ??_I2C_read 0022                                      ??_I2C_stop 0020  
                               _MCP23008_pullUp 12D8                       __end_of_SYSTEM_Initialize 147C  
                                 _I2C_buffClear 14AA                                      __pbssBANK1 0100  
               __end_of_EUSART1_SetErrorHandler 14FE                               __CFG_PLLSEL$PLL4X 000000  
                              ??_interrupt_Init 0020                                         ?___wmul 0020  
        __end_of_EUSART1_SetFramingErrorHandler 14F4         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 14EA                                         _REFOCON 000F3D  
                                       _OSCCON2 000F87                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000F7F                                         _SSP1ADD 000FC8  
                                       _SSP2ADD 000F74                                         _SSP1BUF 000FC9  
                                       _SSP2BUF 000F75                                  ?_I2C_buffClear 0020  
                              I2C_read@ACK_NACK 0020                         __end_of_MCP23008_ISR_EN 1284  
                                     _I2C_Write 144A                                         __Hparam 0000  
                                       __Lparam 0000                                       _I2C_start 1508  
                     __size_of_MCP23008_reagReg 003A                                         ___aldiv 0F42  
                     __size_of_MCP23008_pinMode 006E                                 __size_of___wmul 0026  
                                  __psmallconst 0F00                                         __pcinit 11BA  
                                       __ramtop 0F00                                         __ptext0 10C0  
                                       __ptext1 14D6                                         __ptext2 1464  
                                       __ptext3 14BA                                         __ptext4 131E  
                                       __ptext5 13DA                                         __ptext6 1284  
                                       __ptext7 1404                                         __ptext8 0F42  
                                       __ptext9 1362                                       _MAX31_ADC 000F  
                       __end_of_MCP23008_pullUp 131E                           _OSCILLATOR_Initialize 13DA  
                              ___aldiv@dividend 0026                              _EUSART1_Initialize 1362  
                      ??_PIN_MANAGER_Initialize 0020                      __size_of_SYSTEM_Initialize 0018  
                          end_of_initialization 121A                             ?_EUSART1_Initialize 0020  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 001B  
                                    ?_I2C_Write 0020                                      ?_I2C_start 0020  
                              ___aldiv@quotient 0030                                         postdec1 000FE5  
                                       postinc0 000FEE                            ??_EUSART1_Initialize 0022  
                                     _PORTBbits 000F81                                 ??_I2C_buffClear 0021  
                                     _TRISCbits 000F94                                       _TRISDbits 000F95  
                                     _TRISEbits 000F96                               __size_of_I2C_Init 0054  
              __size_of_EUSART1_SetErrorHandler 000A                               __size_of_I2C_read 0018  
                        MCP23008_reagReg@regAdd 0022                               __size_of_I2C_stop 000A  
                               _SPI1_Initialize 14BA                               __CFG_WPFP$PAGE_63 000000  
                              ?_MCP23008_ISR_EN 0026                   MCP23008_ISR_polarity@dataRead 002C  
                           __CFG_MSSP7B_EN$MSK7 000000                           _MCP23008_ISR_polarity 100E  
                                __end_of___wmul 142A                                   __pidataCOMRAM 1494  
                            _I2C_repeated_Start 14FE                          ?_OSCILLATOR_Initialize 0020  
                              ?_MCP23008_pullUp 0026                             start_initialization 11BA  
               __size_of_PIN_MANAGER_Initialize 0044                             ?_I2C_repeated_Start 0020  
                                   ??_I2C_Write 0020                                     ??_I2C_start 0020  
                          ??_I2C_repeated_Start 0020                         MCP23008_pullUp@dataRead 002A  
                              _MCP23008_reagReg 13A0                                _MCP23008_pinMode 114C  
                                      ??___wmul 0024                               __CFG_ADCSEL$BIT10 000000  
                                   __pdataBANK0 0060                                 I2C_Init@F_clock 0034  
                                   __pbssCOMRAM 0001                         __end_of_SPI1_Initialize 14C8  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                        _PIN_MANAGER_Initialize 131E                          ?_MCP23008_ISR_polarity 0026  
                                      ?___aldiv 0026                         MCP23008_ISR_EN@dataRead 002A  
                                   __smallconst 0F00                                        _BAUDCON1 000F7E  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        _I2C_Init 1284  
                          _EUSART1_ErrorHandler 0019                            __CFG_RTCOSC$T1OSCREF 000000  
                                      _I2C_read 147C                                        _I2C_stop 1512  
                       _EUSART1_SetErrorHandler 14F4                                 ___aldiv@divisor 002A  
                               ___aldiv@counter 002E                                  ___wmul@product 0024  
       EUSART1_SetErrorHandler@interruptHandler 0020                                        _LATCbits 000F8B  
                                      _LATEbits 000F8D                                        _PIE3bits 000FA3  
                                      _PIR1bits 000F9E                                        _PIR3bits 000FA4  
                              __CFG_WDTPS$32768 000000                                        _SSP1CON1 000FC6  
                                      _SSP1STAT 000FC7                               ___wmul@multiplier 0020  
                              __CFG_SOSCSEL$DIG 000000                         __size_of_interrupt_Init 000A  
                             __CFG_CFGPLLEN$OFF 000000                                ?_SPI1_Initialize 0020  
                                   _INTCON2bits 000FF1                                       copy_data0 11CE  
                                     copy_data1 11EE                                        __Hrparam 0000  
                                      __Lrparam 0000                                   I2C_Write@data 0020  
                       ??_OSCILLATOR_Initialize 0020                                __size_of___aldiv 00CC  
                   __size_of_EUSART1_Initialize 003E                       ??_EUSART1_SetErrorHandler 0022  
                   _EUSART1_DefaultErrorHandler 000000                            PCF8523_setDate@F7836 0047  
                                      __ptext10 14E0                                        __ptext11 14EA  
                                      __ptext20 147C                                        __ptext12 14F4  
                                      __ptext21 14AA                                        __ptext13 12D8  
                                      __ptext22 1508                                        __ptext14 114C  
                                      __ptext23 144A                                        __ptext15 100E  
                                      __ptext24 1512                                        __ptext16 1224  
                                      __ptext17 14C8                                        __ptext18 13A0  
                                      __ptext19 14FE                           __end_of_I2C_buffClear 14BA  
                      __end_of_MCP23008_reagReg 13DA                                    _SSP1CON1bits 000FC6  
                      __end_of_MCP23008_pinMode 11BA                                    _SSP2CON1bits 000F72  
                                  _SSP2CON2bits 000F71                                   __size_of_main 008C  
EUSART1_SetOverrunErrorHandler@interruptHandler 0020                        __size_of_MCP23008_ISR_EN 0060  
                                  _SSP1STATbits 000FC7                     _EUSART1_FramingErrorHandler 001D  
                                  _SSP2STATbits 000F73                                        exp@coeff 0F01  
                                      log@coeff 0F1F                                      _INTCONbits 000FF2  
                      __size_of_MCP23008_pullUp 0046                         ?_PIN_MANAGER_Initialize 0020  
                       ??_MCP23008_ISR_polarity 002A          __end_of_EUSART1_SetOverrunErrorHandler 14EA  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 14E0  
                                    _RCSTA1bits 000FAC                    MCP23008_ISR_polarity@INTedge 0028  
                   __size_of_I2C_repeated_Start 000A                            MCP23008_pinMode@mode 0028  
                          MCP23008_pinMode@port 0026  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                            _eusart1RxLastError 001F                                  _interrupt_Init 14D6  
                      MCP23008_pinMode@dataRead 002C                                    ___aldiv@sign 002F  
                __end_of_PIN_MANAGER_Initialize 1362                            PCF8523_setTime@F7829 0037  
                           MCP23008_ISR_EN@port 0026  
