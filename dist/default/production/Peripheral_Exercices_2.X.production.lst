

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr 06 23:06:58 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46J13
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36  0000                     
    37                           ; Version 1.45
    38                           ; Generated 16/11/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18LF46J13 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    73  0000                     
    74 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    75  0000                     
    76 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    77  0000                     
    78                           	psect	idataCOMRAM
    79  0013E0                     __pidataCOMRAM:
    80                           	opt stack 0
    81                           
    82                           ;initializer for PCF8523_setTime@F7769
    83  0013E0  0003               	dw	3
    84  0013E2  0004               	dw	4
    85  0013E4  0005               	dw	5
    86  0013E6  00                 	db	0
    87  0013E7  00                 	db	0
    88                           
    89                           ;initializer for PCF8523_setDate@F7776
    90  0013E8  06                 	db	6
    91  0013E9  07                 	db	7
    92  0013EA  08                 	db	8
    93  0013EB  09                 	db	9
    94  0013EC  00                 	db	0
    95                           
    96                           	psect	smallconst
    97  000F00                     __psmallconst:
    98                           	opt stack 0
    99  000F00  00                 	db	0
   100  000F01  00                 	db	0
   101  000F02  80                 	db	128
   102  000F03  3F                 	db	63
   103  000F04  72                 	db	114
   104  000F05  31                 	db	49
   105  000F06  3F                 	db	63
   106  000F07  FE                 	db	254
   107  000F08  75                 	db	117
   108  000F09  3E                 	db	62
   109  000F0A  58                 	db	88
   110  000F0B  63                 	db	99
   111  000F0C  3D                 	db	61
   112  000F0D  95                 	db	149
   113  000F0E  1D                 	db	29
   114  000F0F  3C                 	db	60
   115  000F10  C5                 	db	197
   116  000F11  AE                 	db	174
   117  000F12  3A                 	db	58
   118  000F13  79                 	db	121
   119  000F14  21                 	db	33
   120  000F15  39                 	db	57
   121  000F16  94                 	db	148
   122  000F17  80                 	db	128
   123  000F18  37                 	db	55
   124  000F19  93                 	db	147
   125  000F1A  A7                 	db	167
   126  000F1B  35                 	db	53
   127  000F1C  56                 	db	86
   128  000F1D  15                 	db	21
   129  000F1E  34                 	db	52
   130  000F1F                     __end_ofexp@coeff:
   131                           	opt stack 0
   132  000F1F  00                 	db	0
   133  000F20  00                 	db	0
   134  000F21  00                 	db	0
   135  000F22  00                 	db	0
   136  000F23  80                 	db	128
   137  000F24  3F                 	db	63
   138  000F25  F0                 	db	240
   139  000F26  FF                 	db	255
   140  000F27  BE                 	db	190
   141  000F28  E2                 	db	226
   142  000F29  A9                 	db	169
   143  000F2A  3E                 	db	62
   144  000F2B  83                 	db	131
   145  000F2C  76                 	db	118
   146  000F2D  BE                 	db	190
   147  000F2E  AE                 	db	174
   148  000F2F  2B                 	db	43
   149  000F30  3E                 	db	62
   150  000F31  3C                 	db	60
   151  000F32  C3                 	db	195
   152  000F33  BD                 	db	189
   153  000F34  D2                 	db	210
   154  000F35  13                 	db	19
   155  000F36  3D                 	db	61
   156  000F37  78                 	db	120
   157  000F38  D3                 	db	211
   158  000F39  BB                 	db	187
   159  000F3A                     __end_oflog@coeff:
   160                           	opt stack 0
   161  0000                     _ODCON3	set	3904
   162  0000                     _ODCON2	set	3905
   163  0000                     _ODCON1	set	3906
   164  0000                     _ANCON1	set	3913
   165  0000                     _ANCON0	set	3912
   166  0000                     _REFOCON	set	3901
   167  0000                     _SSP2STATbits	set	3955
   168  0000                     _SSP2BUF	set	3957
   169  0000                     _SSP2ADD	set	3956
   170  0000                     _SSP2CON2bits	set	3953
   171  0000                     _SSP2CON1bits	set	3954
   172  0000                     _TRISDbits	set	3989
   173  0000                     _PIR3bits	set	4004
   174  0000                     _PIE3bits	set	4003
   175  0000                     _PORTBbits	set	3969
   176  0000                     _LATCbits	set	3979
   177  0000                     _INTCONbits	set	4082
   178  0000                     _TRISEbits	set	3990
   179  0000                     _INTCON2bits	set	4081
   180  0000                     _TRISD	set	3989
   181  0000                     _TRISC	set	3988
   182  0000                     _TRISB	set	3987
   183  0000                     _TRISA	set	3986
   184  0000                     _TRISE	set	3990
   185  0000                     _LATC	set	3979
   186  0000                     _LATB	set	3978
   187  0000                     _LATA	set	3977
   188  0000                     _LATD	set	3980
   189  0000                     _LATE	set	3981
   190  0000                     _OSCCON2	set	3975
   191  0000                     _OSCTUNE	set	3995
   192  0000                     _OSCCON	set	4051
   193  0000                     _TXREG1	set	4014
   194  0000                     _RCREG1	set	4015
   195  0000                     _RCSTA1bits	set	4012
   196  0000                     _TXSTA1bits	set	4013
   197  0000                     _PIR1bits	set	3998
   198  0000                     _SPBRGH1	set	3967
   199  0000                     _SPBRG1	set	4016
   200  0000                     _TXSTA1	set	4013
   201  0000                     _RCSTA1	set	4012
   202  0000                     _BAUDCON1	set	3966
   203  0000                     _SSP1STATbits	set	4039
   204  0000                     _SSP1BUF	set	4041
   205  0000                     _SSP1CON1bits	set	4038
   206  0000                     _SSP1ADD	set	4040
   207  0000                     _SSP1CON1	set	4038
   208  0000                     _SSP1STAT	set	4039
   209  000F3A  0D                 	db	13
   210  000F3B  00                 	db	0
   211                           
   212                           ; #config settings
   213  000F3C  00                 	db	0	; dummy byte at the end
   214  0000                     
   215                           	psect	cinit
   216  001200                     __pcinit:
   217                           	opt stack 0
   218  001200                     start_initialization:
   219                           	opt stack 0
   220  001200                     __initialization:
   221                           	opt stack 0
   222                           
   223                           ; Initialize objects allocated to COMRAM (13 bytes)
   224                           ; load TBLPTR registers with __pidataCOMRAM
   225  001200  0EE0               	movlw	low __pidataCOMRAM
   226  001202  6EF6               	movwf	tblptrl,c
   227  001204  0E13               	movlw	high __pidataCOMRAM
   228  001206  6EF7               	movwf	tblptrh,c
   229  001208  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   230  00120A  6EF8               	movwf	tblptru,c
   231  00120C  EE00  F02C         	lfsr	0,__pdataCOMRAM
   232  001210  EE10 F00D          	lfsr	1,13
   233  001214                     copy_data0:
   234  001214  0009               	tblrd		*+
   235  001216  CFF5 FFEE          	movff	tablat,postinc0
   236  00121A  50E5               	movf	postdec1,w,c
   237  00121C  50E1               	movf	fsr1l,w,c
   238  00121E  E1FA               	bnz	copy_data0
   239                           
   240                           ; Clear objects allocated to BANK1 (256 bytes)
   241  001220  EE01  F000         	lfsr	0,__pbssBANK1
   242  001224  EE11 F000          	lfsr	1,256
   243  001228                     clear_0:
   244  001228  6AEE               	clrf	postinc0,c
   245  00122A  50E5               	movf	postdec1,w,c
   246  00122C  50E1               	movf	fsr1l,w,c
   247  00122E  E1FC               	bnz	clear_0
   248  001230  50E2               	movf	fsr1h,w,c
   249  001232  E1FA               	bnz	clear_0
   250                           
   251                           ; Clear objects allocated to COMRAM (21 bytes)
   252  001234  EE00  F017         	lfsr	0,__pbssCOMRAM
   253  001238  0E15               	movlw	21
   254  00123A                     clear_1:
   255  00123A  6AEE               	clrf	postinc0,c
   256  00123C  06E8               	decf	wreg,f,c
   257  00123E  E1FD               	bnz	clear_1
   258  001240                     end_of_initialization:
   259                           	opt stack 0
   260  001240                     __end_of__initialization:
   261                           	opt stack 0
   262  001240  0E00               	movlw	low (__Lmediumconst shr (0+16))
   263  001242  6EF8               	movwf	tblptru,c
   264  001244  0100               	movlb	0
   265  001246  EF66  F009         	goto	_main	;jump to C main() function
   266                           tblptru	equ	0xFF8
   267                           tblptrh	equ	0xFF7
   268                           tblptrl	equ	0xFF6
   269                           tablat	equ	0xFF5
   270                           postinc0	equ	0xFEE
   271                           wreg	equ	0xFE8
   272                           postdec1	equ	0xFE5
   273                           fsr1h	equ	0xFE2
   274                           fsr1l	equ	0xFE1
   275                           
   276                           	psect	bssCOMRAM
   277  000017                     __pbssCOMRAM:
   278                           	opt stack 0
   279  000017                     _sData:
   280                           	opt stack 0
   281  000017                     	ds	10
   282  000021                     _errno:
   283                           	opt stack 0
   284  000021                     	ds	2
   285  000023                     _ADC:
   286                           	opt stack 0
   287  000023                     	ds	2
   288  000025                     _EUSART1_ErrorHandler:
   289                           	opt stack 0
   290  000025                     	ds	2
   291  000027                     _EUSART1_OverrunErrorHandler:
   292                           	opt stack 0
   293  000027                     	ds	2
   294  000029                     _EUSART1_FramingErrorHandler:
   295                           	opt stack 0
   296  000029                     	ds	2
   297  00002B                     _eusart1RxLastError:
   298                           	opt stack 0
   299  00002B                     	ds	1
   300                           tblptru	equ	0xFF8
   301                           tblptrh	equ	0xFF7
   302                           tblptrl	equ	0xFF6
   303                           tablat	equ	0xFF5
   304                           postinc0	equ	0xFEE
   305                           wreg	equ	0xFE8
   306                           postdec1	equ	0xFE5
   307                           fsr1h	equ	0xFE2
   308                           fsr1l	equ	0xFE1
   309                           
   310                           	psect	dataCOMRAM
   311  00002C                     __pdataCOMRAM:
   312                           	opt stack 0
   313  00002C                     PCF8523_setTime@F7769:
   314                           	opt stack 0
   315  00002C                     	ds	8
   316  000034                     PCF8523_setDate@F7776:
   317                           	opt stack 0
   318  000034                     	ds	5
   319                           tblptru	equ	0xFF8
   320                           tblptrh	equ	0xFF7
   321                           tblptrl	equ	0xFF6
   322                           tablat	equ	0xFF5
   323                           postinc0	equ	0xFEE
   324                           wreg	equ	0xFE8
   325                           postdec1	equ	0xFE5
   326                           fsr1h	equ	0xFE2
   327                           fsr1l	equ	0xFE1
   328                           
   329                           	psect	bssBANK1
   330  000100                     __pbssBANK1:
   331                           	opt stack 0
   332  000100                     _TxData:
   333                           	opt stack 0
   334  000100                     	ds	256
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           postdec1	equ	0xFE5
   342                           fsr1h	equ	0xFE2
   343                           fsr1l	equ	0xFE1
   344                           
   345                           	psect	cstackCOMRAM
   346  000001                     __pcstackCOMRAM:
   347                           	opt stack 0
   348  000001                     ??_OSCILLATOR_Initialize:
   349  000001                     ?___wmul:
   350                           	opt stack 0
   351  000001                     ?___awdiv:
   352                           	opt stack 0
   353  000001                     ?___awmod:
   354                           	opt stack 0
   355  000001                     I2C_Write@data:
   356                           	opt stack 0
   357  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
   358                           	opt stack 0
   359  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   360                           	opt stack 0
   361  000001                     EUSART1_SetErrorHandler@interruptHandler:
   362                           	opt stack 0
   363  000001                     ___wmul@multiplier:
   364                           	opt stack 0
   365  000001                     ___awdiv@dividend:
   366                           	opt stack 0
   367  000001                     ___awmod@dividend:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x0
   371  000001                     	ds	1
   372  000002                     
   373                           ; 1 bytes @ 0x1
   374  000002                     	ds	1
   375  000003                     ___wmul@multiplicand:
   376                           	opt stack 0
   377  000003                     ___awdiv@divisor:
   378                           	opt stack 0
   379  000003                     ___awmod@divisor:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x2
   383  000003                     	ds	2
   384  000005                     ___awdiv@counter:
   385                           	opt stack 0
   386  000005                     ___awmod@counter:
   387                           	opt stack 0
   388  000005                     ___wmul@product:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x4
   392  000005                     	ds	1
   393  000006                     ___awdiv@sign:
   394                           	opt stack 0
   395  000006                     ___awmod@sign:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x5
   399  000006                     	ds	1
   400  000007                     ?___aldiv:
   401                           	opt stack 0
   402  000007                     ___awdiv@quotient:
   403                           	opt stack 0
   404  000007                     ___aldiv@dividend:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0x6
   408  000007                     	ds	2
   409  000009                     decimalToBCD@DecValue:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0x8
   413  000009                     	ds	2
   414  00000B                     ??_decimalToBCD:
   415  00000B                     ___aldiv@divisor:
   416                           	opt stack 0
   417                           
   418                           ; 4 bytes @ 0xA
   419  00000B                     	ds	2
   420  00000D                     MCP794x_setTime@minute:
   421                           	opt stack 0
   422  00000D                     MCP794x_setDate@weekDay:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0xC
   426  00000D                     	ds	1
   427  00000E                     MCP794x_setTime@second:
   428                           	opt stack 0
   429  00000E                     MCP794x_setDate@month:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0xD
   433  00000E                     	ds	1
   434  00000F                     ??_MCP794x_setTime:
   435  00000F                     MCP794x_setDate@year:
   436                           	opt stack 0
   437  00000F                     ___aldiv@counter:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0xE
   441  00000F                     	ds	1
   442  000010                     ??_MCP794x_setDate:
   443  000010                     ___aldiv@sign:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0xF
   447  000010                     	ds	1
   448  000011                     MCP794x_setTime@hour:
   449                           	opt stack 0
   450  000011                     ___aldiv@quotient:
   451                           	opt stack 0
   452                           
   453                           ; 4 bytes @ 0x10
   454  000011                     	ds	1
   455  000012                     MCP794x_setDate@date:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0x11
   459  000012                     	ds	3
   460  000015                     I2C_Init@F_clock:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0x14
   464  000015                     	ds	1
   465  000016                     ??_main:
   466                           
   467                           ; 1 bytes @ 0x15
   468  000016                     	ds	1
   469                           tblptru	equ	0xFF8
   470                           tblptrh	equ	0xFF7
   471                           tblptrl	equ	0xFF6
   472                           tablat	equ	0xFF5
   473                           postinc0	equ	0xFEE
   474                           wreg	equ	0xFE8
   475                           postdec1	equ	0xFE5
   476                           fsr1h	equ	0xFE2
   477                           fsr1l	equ	0xFE1
   478                           
   479 ;;
   480 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   481 ;;
   482 ;; *************** function _main *****************
   483 ;; Defined at:
   484 ;;		line 5 in file "main.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   500 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   502 ;;Total ram usage:        1 bytes
   503 ;; Hardware stack levels required when called:    3
   504 ;; This function calls:
   505 ;;		_I2C_buffClear
   506 ;;		_MCP794x_setDate
   507 ;;		_MCP794x_setTime
   508 ;;		_SYSTEM_Initialize
   509 ;;		_interrupt_Init
   510 ;; This function is called by:
   511 ;;		Startup code after reset
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           	psect	text0
   516  0012CC                     __ptext0:
   517                           	opt stack 0
   518  0012CC                     _main:
   519                           	opt stack 28
   520                           
   521                           ;main.c: 7: interrupt_Init();
   522                           
   523                           ;incstack = 0
   524  0012CC  ECF7  F009         	call	_interrupt_Init	;wreg free
   525                           
   526                           ;main.c: 8: SYSTEM_Initialize();
   527  0012D0  ECD5  F009         	call	_SYSTEM_Initialize	;wreg free
   528                           
   529                           ;main.c: 9: I2C_buffClear();
   530  0012D4  ECE1  F009         	call	_I2C_buffClear	;wreg free
   531                           
   532                           ;main.c: 10: _delay((unsigned long)((10)*(16000000/4000.0)));
   533  0012D8  0E34               	movlw	52
   534  0012DA  6E16               	movwf	??_main& (0+255),c
   535  0012DC  0EF2               	movlw	242
   536  0012DE                     u1077:
   537  0012DE  2EE8               	decfsz	wreg,f,c
   538  0012E0  D7FE               	bra	u1077
   539  0012E2  2E16               	decfsz	??_main& (0+255),f,c
   540  0012E4  D7FC               	bra	u1077
   541                           
   542                           ;main.c: 12: MCP794x_setTime(13,52,1);
   543  0012E6  0E34               	movlw	52
   544  0012E8  6E0D               	movwf	MCP794x_setTime@minute,c
   545  0012EA  0E01               	movlw	1
   546  0012EC  6E0E               	movwf	MCP794x_setTime@second,c
   547  0012EE  0E0D               	movlw	13
   548  0012F0  ECD6  F008         	call	_MCP794x_setTime
   549                           
   550                           ;main.c: 13: MCP794x_setDate(18,Fri,Nov,21);
   551  0012F4  0E05               	movlw	5
   552  0012F6  6E0D               	movwf	MCP794x_setDate@weekDay,c
   553  0012F8  0E0B               	movlw	11
   554  0012FA  6E0E               	movwf	MCP794x_setDate@month,c
   555  0012FC  0E15               	movlw	21
   556  0012FE  6E0F               	movwf	MCP794x_setDate@year,c
   557  001300  0E12               	movlw	18
   558  001302  EC7F  F008         	call	_MCP794x_setDate
   559  001306                     l246:
   560  001306  D7FF               	goto	l246
   561  001308                     __end_of_main:
   562                           	opt stack 0
   563                           tblptru	equ	0xFF8
   564                           tblptrh	equ	0xFF7
   565                           tblptrl	equ	0xFF6
   566                           tablat	equ	0xFF5
   567                           postinc0	equ	0xFEE
   568                           wreg	equ	0xFE8
   569                           postdec1	equ	0xFE5
   570                           fsr1h	equ	0xFE2
   571                           fsr1l	equ	0xFE1
   572                           
   573 ;; *************** function _interrupt_Init *****************
   574 ;; Defined at:
   575 ;;		line 15 in file "Interrupt.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		None
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   593 ;;Total ram usage:        0 bytes
   594 ;; Hardware stack levels used:    1
   595 ;; This function calls:
   596 ;;		Nothing
   597 ;; This function is called by:
   598 ;;		_main
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           	psect	text1
   603  0013EE                     __ptext1:
   604                           	opt stack 0
   605  0013EE                     _interrupt_Init:
   606                           	opt stack 30
   607                           
   608                           ;Interrupt.c: 16: INTCONbits.GIE = 1;
   609                           
   610                           ;incstack = 0
   611  0013EE  8EF2               	bsf	intcon,7,c	;volatile
   612                           
   613                           ;Interrupt.c: 17: INTCONbits.PEIE = 1;
   614  0013F0  8CF2               	bsf	intcon,6,c	;volatile
   615                           
   616                           ;Interrupt.c: 18: PIE3bits.SSP2IE = 1;
   617  0013F2  8EA3               	bsf	4003,7,c	;volatile
   618                           
   619                           ;Interrupt.c: 19: PIR3bits.SSP2IF = 0;
   620  0013F4  9EA4               	bcf	4004,7,c	;volatile
   621  0013F6  0012               	return		;funcret
   622  0013F8                     __end_of_interrupt_Init:
   623                           	opt stack 0
   624                           tblptru	equ	0xFF8
   625                           tblptrh	equ	0xFF7
   626                           tblptrl	equ	0xFF6
   627                           tablat	equ	0xFF5
   628                           intcon	equ	0xFF2
   629                           postinc0	equ	0xFEE
   630                           wreg	equ	0xFE8
   631                           postdec1	equ	0xFE5
   632                           fsr1h	equ	0xFE2
   633                           fsr1l	equ	0xFE1
   634                           
   635 ;; *************** function _SYSTEM_Initialize *****************
   636 ;; Defined at:
   637 ;;		line 50 in file "mcc_generated_files/mcc.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   655 ;;Total ram usage:        0 bytes
   656 ;; Hardware stack levels used:    1
   657 ;; Hardware stack levels required when called:    2
   658 ;; This function calls:
   659 ;;		_EUSART1_Initialize
   660 ;;		_I2C_Init
   661 ;;		_OSCILLATOR_Initialize
   662 ;;		_PIN_MANAGER_Initialize
   663 ;;		_SPI1_Initialize
   664 ;; This function is called by:
   665 ;;		_main
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text2
   670  0013AA                     __ptext2:
   671                           	opt stack 0
   672  0013AA                     _SYSTEM_Initialize:
   673                           	opt stack 28
   674                           
   675                           ;mcc.c: 52: PIN_MANAGER_Initialize();
   676                           
   677                           ;incstack = 0
   678  0013AA  EC25  F009         	call	_PIN_MANAGER_Initialize	;wreg free
   679                           
   680                           ;mcc.c: 53: OSCILLATOR_Initialize();
   681  0013AE  ECA0  F009         	call	_OSCILLATOR_Initialize	;wreg free
   682                           
   683                           ;mcc.c: 54: SPI1_Initialize();
   684  0013B2  ECE9  F009         	call	_SPI1_Initialize	;wreg free
   685                           
   686                           ;mcc.c: 55: EUSART1_Initialize();
   687  0013B6  EC47  F009         	call	_EUSART1_Initialize	;wreg free
   688                           
   689                           ;mcc.c: 56: I2C_Init(100);
   690  0013BA  0E64               	movlw	100
   691  0013BC  ECAC  F008         	call	_I2C_Init
   692  0013C0  0012               	return		;funcret
   693  0013C2                     __end_of_SYSTEM_Initialize:
   694                           	opt stack 0
   695                           tblptru	equ	0xFF8
   696                           tblptrh	equ	0xFF7
   697                           tblptrl	equ	0xFF6
   698                           tablat	equ	0xFF5
   699                           intcon	equ	0xFF2
   700                           postinc0	equ	0xFEE
   701                           wreg	equ	0xFE8
   702                           postdec1	equ	0xFE5
   703                           fsr1h	equ	0xFE2
   704                           fsr1l	equ	0xFE1
   705                           
   706 ;; *************** function _SPI1_Initialize *****************
   707 ;; Defined at:
   708 ;;		line 65 in file "mcc_generated_files/spi1.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;		None
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, status,2
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   726 ;;Total ram usage:        0 bytes
   727 ;; Hardware stack levels used:    1
   728 ;; This function calls:
   729 ;;		Nothing
   730 ;; This function is called by:
   731 ;;		_SYSTEM_Initialize
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           	psect	text3
   736  0013D2                     __ptext3:
   737                           	opt stack 0
   738  0013D2                     _SPI1_Initialize:
   739                           	opt stack 29
   740                           
   741                           ;spi1.c: 70: SSP1STAT = 0x80;
   742                           
   743                           ;incstack = 0
   744  0013D2  0E80               	movlw	128
   745  0013D4  6EC7               	movwf	4039,c	;volatile
   746                           
   747                           ;spi1.c: 73: SSP1CON1 = 0x20;
   748  0013D6  0E20               	movlw	32
   749  0013D8  6EC6               	movwf	4038,c	;volatile
   750                           
   751                           ;spi1.c: 76: SSP1ADD = 0x00;
   752  0013DA  0E00               	movlw	0
   753  0013DC  6EC8               	movwf	4040,c	;volatile
   754  0013DE  0012               	return		;funcret
   755  0013E0                     __end_of_SPI1_Initialize:
   756                           	opt stack 0
   757                           tblptru	equ	0xFF8
   758                           tblptrh	equ	0xFF7
   759                           tblptrl	equ	0xFF6
   760                           tablat	equ	0xFF5
   761                           intcon	equ	0xFF2
   762                           postinc0	equ	0xFEE
   763                           wreg	equ	0xFE8
   764                           postdec1	equ	0xFE5
   765                           fsr1h	equ	0xFE2
   766                           fsr1l	equ	0xFE1
   767                           
   768 ;; *************** function _PIN_MANAGER_Initialize *****************
   769 ;; Defined at:
   770 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, status,2
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   788 ;;Total ram usage:        0 bytes
   789 ;; Hardware stack levels used:    1
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_SYSTEM_Initialize
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text4
   798  00124A                     __ptext4:
   799                           	opt stack 0
   800  00124A                     _PIN_MANAGER_Initialize:
   801                           	opt stack 29
   802                           
   803                           ;pin_manager.c: 57: LATE = 0x00;
   804                           
   805                           ;incstack = 0
   806  00124A  0E00               	movlw	0
   807  00124C  6E8D               	movwf	3981,c	;volatile
   808                           
   809                           ;pin_manager.c: 58: LATD = 0x00;
   810  00124E  0E00               	movlw	0
   811  001250  6E8C               	movwf	3980,c	;volatile
   812                           
   813                           ;pin_manager.c: 59: LATA = 0x00;
   814  001252  0E00               	movlw	0
   815  001254  6E89               	movwf	3977,c	;volatile
   816                           
   817                           ;pin_manager.c: 60: LATB = 0x00;
   818  001256  0E00               	movlw	0
   819  001258  6E8A               	movwf	3978,c	;volatile
   820                           
   821                           ;pin_manager.c: 61: LATC = 0x01;
   822  00125A  0E01               	movlw	1
   823  00125C  6E8B               	movwf	3979,c	;volatile
   824                           
   825                           ;pin_manager.c: 66: TRISE = 0xC7;
   826  00125E  0EC7               	movlw	199
   827  001260  6E96               	movwf	3990,c	;volatile
   828                           
   829                           ;pin_manager.c: 67: TRISA = 0xEF;
   830  001262  0EEF               	movlw	239
   831  001264  6E92               	movwf	3986,c	;volatile
   832                           
   833                           ;pin_manager.c: 68: TRISB = 0xDF;
   834  001266  0EDF               	movlw	223
   835  001268  6E93               	movwf	3987,c	;volatile
   836                           
   837                           ;pin_manager.c: 69: TRISC = 0x96;
   838  00126A  0E96               	movlw	150
   839  00126C  6E94               	movwf	3988,c	;volatile
   840                           
   841                           ;pin_manager.c: 70: TRISD = 0xFF;
   842  00126E  6895               	setf	3989,c	;volatile
   843                           
   844                           ;pin_manager.c: 75: ANCON0 = 0x00;
   845  001270  0E00               	movlw	0
   846  001272  010F               	movlb	15	; () banked
   847  001274  6F48               	movwf	72,b	;volatile
   848                           
   849                           ;pin_manager.c: 76: ANCON1 = 0x10;
   850  001276  0E10               	movlw	16
   851  001278  6F49               	movwf	73,b	;volatile
   852                           
   853                           ; BSR set to: 15
   854                           ;pin_manager.c: 81: INTCON2bits.nRBPU = 1;
   855  00127A  8EF1               	bsf	intcon2,7,c	;volatile
   856                           
   857                           ; BSR set to: 15
   858                           ;pin_manager.c: 82: TRISEbits.RDPU = 1;
   859  00127C  8E96               	bsf	3990,7,c	;volatile
   860                           
   861                           ; BSR set to: 15
   862                           ;pin_manager.c: 83: TRISEbits.REPU = 1;
   863  00127E  8C96               	bsf	3990,6,c	;volatile
   864                           
   865                           ;pin_manager.c: 88: ODCON1 = 0x00;
   866  001280  0E00               	movlw	0
   867  001282  6F42               	movwf	66,b	;volatile
   868                           
   869                           ;pin_manager.c: 89: ODCON2 = 0x00;
   870  001284  0E00               	movlw	0
   871  001286  6F41               	movwf	65,b	;volatile
   872                           
   873                           ;pin_manager.c: 90: ODCON3 = 0x00;
   874  001288  0E00               	movlw	0
   875  00128A  6F40               	movwf	64,b	;volatile
   876                           
   877                           ; BSR set to: 15
   878  00128C  0012               	return		;funcret
   879  00128E                     __end_of_PIN_MANAGER_Initialize:
   880                           	opt stack 0
   881                           tblptru	equ	0xFF8
   882                           tblptrh	equ	0xFF7
   883                           tblptrl	equ	0xFF6
   884                           tablat	equ	0xFF5
   885                           intcon	equ	0xFF2
   886                           intcon2	equ	0xFF1
   887                           postinc0	equ	0xFEE
   888                           wreg	equ	0xFE8
   889                           postdec1	equ	0xFE5
   890                           fsr1h	equ	0xFE2
   891                           fsr1l	equ	0xFE1
   892                           
   893 ;; *************** function _OSCILLATOR_Initialize *****************
   894 ;; Defined at:
   895 ;;		line 59 in file "mcc_generated_files/mcc.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, status,2
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   911 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   912 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   913 ;;Total ram usage:        2 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_SYSTEM_Initialize
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text5
   923  001340                     __ptext5:
   924                           	opt stack 0
   925  001340                     _OSCILLATOR_Initialize:
   926                           	opt stack 29
   927                           
   928                           ;mcc.c: 62: OSCCON = 0x70;
   929                           
   930                           ; BSR set to: 15
   931                           ;incstack = 0
   932  001340  0E70               	movlw	112
   933  001342  6ED3               	movwf	4051,c	;volatile
   934                           
   935                           ;mcc.c: 64: OSCTUNE = 0x00;
   936  001344  0E00               	movlw	0
   937  001346  6E9B               	movwf	3995,c	;volatile
   938                           
   939                           ;mcc.c: 66: REFOCON = 0x00;
   940  001348  0E00               	movlw	0
   941  00134A  010F               	movlb	15	; () banked
   942  00134C  6F3D               	movwf	61,b	;volatile
   943                           
   944                           ;mcc.c: 68: OSCCON2 = 0x14;
   945  00134E  0E14               	movlw	20
   946  001350  6E87               	movwf	3975,c	;volatile
   947                           
   948                           ; BSR set to: 15
   949                           ;mcc.c: 69: _delay((unsigned long)((500)*(16000000/4000.0)));
   950  001352  0E0B               	movlw	11
   951  001354  6E02               	movwf	(??_OSCILLATOR_Initialize+1)& (0+255),c
   952  001356  0E26               	movlw	38
   953  001358  6E01               	movwf	??_OSCILLATOR_Initialize& (0+255),c
   954  00135A  0E5E               	movlw	94
   955  00135C                     u1087:
   956  00135C  2EE8               	decfsz	wreg,f,c
   957  00135E  D7FE               	bra	u1087
   958  001360  2E01               	decfsz	??_OSCILLATOR_Initialize& (0+255),f,c
   959  001362  D7FC               	bra	u1087
   960  001364  2E02               	decfsz	(??_OSCILLATOR_Initialize+1)& (0+255),f,c
   961  001366  D7FA               	bra	u1087
   962  001368  0012               	return		;funcret
   963  00136A                     __end_of_OSCILLATOR_Initialize:
   964                           	opt stack 0
   965                           tblptru	equ	0xFF8
   966                           tblptrh	equ	0xFF7
   967                           tblptrl	equ	0xFF6
   968                           tablat	equ	0xFF5
   969                           intcon	equ	0xFF2
   970                           intcon2	equ	0xFF1
   971                           postinc0	equ	0xFEE
   972                           wreg	equ	0xFE8
   973                           postdec1	equ	0xFE5
   974                           fsr1h	equ	0xFE2
   975                           fsr1l	equ	0xFE1
   976                           
   977 ;; *************** function _I2C_Init *****************
   978 ;; Defined at:
   979 ;;		line 20 in file "I2C.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  F_clock         1    wreg     unsigned char 
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  F_clock         1   20[COMRAM] unsigned char 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   994 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   996 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   997 ;;Total ram usage:        1 bytes
   998 ;; Hardware stack levels used:    1
   999 ;; Hardware stack levels required when called:    1
  1000 ;; This function calls:
  1001 ;;		___aldiv
  1002 ;;		___wmul
  1003 ;; This function is called by:
  1004 ;;		_SYSTEM_Initialize
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           	psect	text6
  1009  001158                     __ptext6:
  1010                           	opt stack 0
  1011  001158                     _I2C_Init:
  1012                           	opt stack 28
  1013                           
  1014                           ;incstack = 0
  1015                           ;I2C_Init@F_clock stored from wreg
  1016  001158  6E15               	movwf	I2C_Init@F_clock,c
  1017                           
  1018                           ;I2C.c: 21: TRISDbits.TRISD0 = 1;
  1019  00115A  8095               	bsf	3989,0,c	;volatile
  1020                           
  1021                           ;I2C.c: 22: TRISDbits.TRISD1 = 1;
  1022  00115C  8295               	bsf	3989,1,c	;volatile
  1023                           
  1024                           ;I2C.c: 23: SSP2CON1bits.WCOL = 0;
  1025  00115E  9E72               	bcf	3954,7,c	;volatile
  1026                           
  1027                           ;I2C.c: 24: SSP2CON1bits.SSPEN = 1;
  1028  001160  8A72               	bsf	3954,5,c	;volatile
  1029                           
  1030                           ;I2C.c: 25: SSP2CON1bits.SSPM = 0x08;
  1031  001162  5072               	movf	3954,w,c	;volatile
  1032  001164  0BF0               	andlw	-16
  1033  001166  0908               	iorlw	8
  1034  001168  6E72               	movwf	3954,c	;volatile
  1035                           
  1036                           ;I2C.c: 26: SSP2CON2bits.ACKDT = 0;
  1037  00116A  9A71               	bcf	3953,5,c	;volatile
  1038                           
  1039                           ;I2C.c: 27: SSP2CON2bits.ACKEN = 1;
  1040  00116C  8871               	bsf	3953,4,c	;volatile
  1041                           
  1042                           ;I2C.c: 28: SSP2ADD = (16000000 / ((F_clock * 1000) * 4)) - 1;
  1043  00116E  0E00               	movlw	0
  1044  001170  6E07               	movwf	___aldiv@dividend,c
  1045  001172  0E24               	movlw	36
  1046  001174  6E08               	movwf	___aldiv@dividend+1,c
  1047  001176  0EF4               	movlw	244
  1048  001178  6E09               	movwf	___aldiv@dividend+2,c
  1049  00117A  0E00               	movlw	0
  1050  00117C  6E0A               	movwf	___aldiv@dividend+3,c
  1051  00117E  C015  F001         	movff	I2C_Init@F_clock,___wmul@multiplier
  1052  001182  6A02               	clrf	___wmul@multiplier+1,c
  1053  001184  0E0F               	movlw	15
  1054  001186  6E04               	movwf	___wmul@multiplicand+1,c
  1055  001188  0EA0               	movlw	160
  1056  00118A  6E03               	movwf	___wmul@multiplicand,c
  1057  00118C  ECB5  F009         	call	___wmul	;wreg free
  1058  001190  C001  F00B         	movff	?___wmul,___aldiv@divisor
  1059  001194  C002  F00C         	movff	?___wmul+1,___aldiv@divisor+1
  1060  001198  0E00               	movlw	0
  1061  00119A  BE0C               	btfsc	___aldiv@divisor+1,7,c
  1062  00119C  0EFF               	movlw	-1
  1063  00119E  6E0D               	movwf	___aldiv@divisor+2,c
  1064  0011A0  6E0E               	movwf	___aldiv@divisor+3,c
  1065  0011A2  EC9F  F007         	call	___aldiv	;wreg free
  1066  0011A6  0407               	decf	?___aldiv,w,c
  1067  0011A8  6E74               	movwf	3956,c	;volatile
  1068  0011AA  0012               	return		;funcret
  1069  0011AC                     __end_of_I2C_Init:
  1070                           	opt stack 0
  1071                           tblptru	equ	0xFF8
  1072                           tblptrh	equ	0xFF7
  1073                           tblptrl	equ	0xFF6
  1074                           tablat	equ	0xFF5
  1075                           intcon	equ	0xFF2
  1076                           intcon2	equ	0xFF1
  1077                           postinc0	equ	0xFEE
  1078                           wreg	equ	0xFE8
  1079                           postdec1	equ	0xFE5
  1080                           fsr1h	equ	0xFE2
  1081                           fsr1l	equ	0xFE1
  1082                           
  1083 ;; *************** function ___wmul *****************
  1084 ;; Defined at:
  1085 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;  multiplier      2    0[COMRAM] unsigned int 
  1088 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  product         2    4[COMRAM] unsigned int 
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  2    0[COMRAM] unsigned int 
  1093 ;; Registers used:
  1094 ;;		wreg, status,2, status,0, prodl, prodh
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1100 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1101 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1103 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1104 ;;Total ram usage:        6 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_I2C_Init
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text7
  1114  00136A                     __ptext7:
  1115                           	opt stack 0
  1116  00136A                     ___wmul:
  1117                           	opt stack 28
  1118                           
  1119                           ;incstack = 0
  1120  00136A  5001               	movf	___wmul@multiplier,w,c
  1121  00136C  0203               	mulwf	___wmul@multiplicand,c
  1122  00136E  CFF3 F005          	movff	prodl,___wmul@product
  1123  001372  CFF4 F006          	movff	prodh,___wmul@product+1
  1124  001376  5001               	movf	___wmul@multiplier,w,c
  1125  001378  0204               	mulwf	___wmul@multiplicand+1,c
  1126  00137A  50F3               	movf	prodl,w,c
  1127  00137C  2606               	addwf	___wmul@product+1,f,c
  1128  00137E  5002               	movf	___wmul@multiplier+1,w,c
  1129  001380  0203               	mulwf	___wmul@multiplicand,c
  1130  001382  50F3               	movf	prodl,w,c
  1131  001384  2606               	addwf	___wmul@product+1,f,c
  1132  001386  C005  F001         	movff	___wmul@product,?___wmul
  1133  00138A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1134  00138E  0012               	return	
  1135  001390                     __end_of___wmul:
  1136                           	opt stack 0
  1137                           tblptru	equ	0xFF8
  1138                           tblptrh	equ	0xFF7
  1139                           tblptrl	equ	0xFF6
  1140                           tablat	equ	0xFF5
  1141                           prodh	equ	0xFF4
  1142                           prodl	equ	0xFF3
  1143                           intcon	equ	0xFF2
  1144                           intcon2	equ	0xFF1
  1145                           postinc0	equ	0xFEE
  1146                           wreg	equ	0xFE8
  1147                           postdec1	equ	0xFE5
  1148                           fsr1h	equ	0xFE2
  1149                           fsr1l	equ	0xFE1
  1150                           
  1151 ;; *************** function ___aldiv *****************
  1152 ;; Defined at:
  1153 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  dividend        4    6[COMRAM] long 
  1156 ;;  divisor         4   10[COMRAM] long 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  quotient        4   16[COMRAM] long 
  1159 ;;  sign            1   15[COMRAM] unsigned char 
  1160 ;;  counter         1   14[COMRAM] unsigned char 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  4    6[COMRAM] long 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2, status,0
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1170 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1171 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1173 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1174 ;;Total ram usage:       14 bytes
  1175 ;; Hardware stack levels used:    1
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		_I2C_Init
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           	psect	text8
  1184  000F3E                     __ptext8:
  1185                           	opt stack 0
  1186  000F3E                     ___aldiv:
  1187                           	opt stack 28
  1188                           
  1189                           ;incstack = 0
  1190  000F3E  0E00               	movlw	0
  1191  000F40  6E10               	movwf	___aldiv@sign,c
  1192  000F42  AE0E               	btfss	___aldiv@divisor+3,7,c
  1193  000F44  D00A               	goto	l681
  1194  000F46  1E0E               	comf	___aldiv@divisor+3,f,c
  1195  000F48  1E0D               	comf	___aldiv@divisor+2,f,c
  1196  000F4A  1E0C               	comf	___aldiv@divisor+1,f,c
  1197  000F4C  6C0B               	negf	___aldiv@divisor,c
  1198  000F4E  0E00               	movlw	0
  1199  000F50  220C               	addwfc	___aldiv@divisor+1,f,c
  1200  000F52  220D               	addwfc	___aldiv@divisor+2,f,c
  1201  000F54  220E               	addwfc	___aldiv@divisor+3,f,c
  1202  000F56  0E01               	movlw	1
  1203  000F58  6E10               	movwf	___aldiv@sign,c
  1204  000F5A                     l681:
  1205  000F5A  AE0A               	btfss	___aldiv@dividend+3,7,c
  1206  000F5C  D00A               	goto	l682
  1207  000F5E  1E0A               	comf	___aldiv@dividend+3,f,c
  1208  000F60  1E09               	comf	___aldiv@dividend+2,f,c
  1209  000F62  1E08               	comf	___aldiv@dividend+1,f,c
  1210  000F64  6C07               	negf	___aldiv@dividend,c
  1211  000F66  0E00               	movlw	0
  1212  000F68  2208               	addwfc	___aldiv@dividend+1,f,c
  1213  000F6A  2209               	addwfc	___aldiv@dividend+2,f,c
  1214  000F6C  220A               	addwfc	___aldiv@dividend+3,f,c
  1215  000F6E  0E01               	movlw	1
  1216  000F70  1A10               	xorwf	___aldiv@sign,f,c
  1217  000F72                     l682:
  1218  000F72  0E00               	movlw	0
  1219  000F74  6E11               	movwf	___aldiv@quotient,c
  1220  000F76  0E00               	movlw	0
  1221  000F78  6E12               	movwf	___aldiv@quotient+1,c
  1222  000F7A  0E00               	movlw	0
  1223  000F7C  6E13               	movwf	___aldiv@quotient+2,c
  1224  000F7E  0E00               	movlw	0
  1225  000F80  6E14               	movwf	___aldiv@quotient+3,c
  1226  000F82  500B               	movf	___aldiv@divisor,w,c
  1227  000F84  100C               	iorwf	___aldiv@divisor+1,w,c
  1228  000F86  100D               	iorwf	___aldiv@divisor+2,w,c
  1229  000F88  100E               	iorwf	___aldiv@divisor+3,w,c
  1230  000F8A  B4D8               	btfsc	status,2,c
  1231  000F8C  D02A               	goto	l689
  1232  000F8E  0E01               	movlw	1
  1233  000F90  6E0F               	movwf	___aldiv@counter,c
  1234  000F92  D006               	goto	l684
  1235  000F94  90D8               	bcf	status,0,c
  1236  000F96  360B               	rlcf	___aldiv@divisor,f,c
  1237  000F98  360C               	rlcf	___aldiv@divisor+1,f,c
  1238  000F9A  360D               	rlcf	___aldiv@divisor+2,f,c
  1239  000F9C  360E               	rlcf	___aldiv@divisor+3,f,c
  1240  000F9E  2A0F               	incf	___aldiv@counter,f,c
  1241  000FA0                     l684:
  1242  000FA0  AE0E               	btfss	___aldiv@divisor+3,7,c
  1243  000FA2  D7F8               	goto	l685
  1244  000FA4                     u830:
  1245  000FA4  90D8               	bcf	status,0,c
  1246  000FA6  3611               	rlcf	___aldiv@quotient,f,c
  1247  000FA8  3612               	rlcf	___aldiv@quotient+1,f,c
  1248  000FAA  3613               	rlcf	___aldiv@quotient+2,f,c
  1249  000FAC  3614               	rlcf	___aldiv@quotient+3,f,c
  1250  000FAE  500B               	movf	___aldiv@divisor,w,c
  1251  000FB0  5C07               	subwf	___aldiv@dividend,w,c
  1252  000FB2  500C               	movf	___aldiv@divisor+1,w,c
  1253  000FB4  5808               	subwfb	___aldiv@dividend+1,w,c
  1254  000FB6  500D               	movf	___aldiv@divisor+2,w,c
  1255  000FB8  5809               	subwfb	___aldiv@dividend+2,w,c
  1256  000FBA  500E               	movf	___aldiv@divisor+3,w,c
  1257  000FBC  580A               	subwfb	___aldiv@dividend+3,w,c
  1258  000FBE  A0D8               	btfss	status,0,c
  1259  000FC0  D009               	goto	l688
  1260  000FC2  500B               	movf	___aldiv@divisor,w,c
  1261  000FC4  5E07               	subwf	___aldiv@dividend,f,c
  1262  000FC6  500C               	movf	___aldiv@divisor+1,w,c
  1263  000FC8  5A08               	subwfb	___aldiv@dividend+1,f,c
  1264  000FCA  500D               	movf	___aldiv@divisor+2,w,c
  1265  000FCC  5A09               	subwfb	___aldiv@dividend+2,f,c
  1266  000FCE  500E               	movf	___aldiv@divisor+3,w,c
  1267  000FD0  5A0A               	subwfb	___aldiv@dividend+3,f,c
  1268  000FD2  8011               	bsf	___aldiv@quotient,0,c
  1269  000FD4                     l688:
  1270  000FD4  90D8               	bcf	status,0,c
  1271  000FD6  320E               	rrcf	___aldiv@divisor+3,f,c
  1272  000FD8  320D               	rrcf	___aldiv@divisor+2,f,c
  1273  000FDA  320C               	rrcf	___aldiv@divisor+1,f,c
  1274  000FDC  320B               	rrcf	___aldiv@divisor,f,c
  1275  000FDE  2E0F               	decfsz	___aldiv@counter,f,c
  1276  000FE0  D7E1               	goto	u830
  1277  000FE2                     l689:
  1278  000FE2  5010               	movf	___aldiv@sign,w,c
  1279  000FE4  B4D8               	btfsc	status,2,c
  1280  000FE6  D008               	goto	l690
  1281  000FE8  1E14               	comf	___aldiv@quotient+3,f,c
  1282  000FEA  1E13               	comf	___aldiv@quotient+2,f,c
  1283  000FEC  1E12               	comf	___aldiv@quotient+1,f,c
  1284  000FEE  6C11               	negf	___aldiv@quotient,c
  1285  000FF0  0E00               	movlw	0
  1286  000FF2  2212               	addwfc	___aldiv@quotient+1,f,c
  1287  000FF4  2213               	addwfc	___aldiv@quotient+2,f,c
  1288  000FF6  2214               	addwfc	___aldiv@quotient+3,f,c
  1289  000FF8                     l690:
  1290  000FF8  C011  F007         	movff	___aldiv@quotient,?___aldiv
  1291  000FFC  C012  F008         	movff	___aldiv@quotient+1,?___aldiv+1
  1292  001000  C013  F009         	movff	___aldiv@quotient+2,?___aldiv+2
  1293  001004  C014  F00A         	movff	___aldiv@quotient+3,?___aldiv+3
  1294  001008  0012               	return	
  1295  00100A                     __end_of___aldiv:
  1296                           	opt stack 0
  1297                           tblptru	equ	0xFF8
  1298                           tblptrh	equ	0xFF7
  1299                           tblptrl	equ	0xFF6
  1300                           tablat	equ	0xFF5
  1301                           prodh	equ	0xFF4
  1302                           prodl	equ	0xFF3
  1303                           intcon	equ	0xFF2
  1304                           intcon2	equ	0xFF1
  1305                           postinc0	equ	0xFEE
  1306                           wreg	equ	0xFE8
  1307                           postdec1	equ	0xFE5
  1308                           fsr1h	equ	0xFE2
  1309                           fsr1l	equ	0xFE1
  1310                           status	equ	0xFD8
  1311                           
  1312 ;; *************** function _EUSART1_Initialize *****************
  1313 ;; Defined at:
  1314 ;;		line 68 in file "mcc_generated_files/eusart1.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2, status,0, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1332 ;;Total ram usage:        0 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    1
  1335 ;; This function calls:
  1336 ;;		_EUSART1_SetErrorHandler
  1337 ;;		_EUSART1_SetFramingErrorHandler
  1338 ;;		_EUSART1_SetOverrunErrorHandler
  1339 ;; This function is called by:
  1340 ;;		_SYSTEM_Initialize
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           	psect	text9
  1345  00128E                     __ptext9:
  1346                           	opt stack 0
  1347  00128E                     _EUSART1_Initialize:
  1348                           	opt stack 28
  1349                           
  1350                           ;eusart1.c: 72: BAUDCON1 = 0x18;
  1351                           
  1352                           ;incstack = 0
  1353  00128E  0E18               	movlw	24
  1354  001290  6E7E               	movwf	3966,c	;volatile
  1355                           
  1356                           ;eusart1.c: 75: RCSTA1 = 0x98;
  1357  001292  0E98               	movlw	152
  1358  001294  6EAC               	movwf	4012,c	;volatile
  1359                           
  1360                           ;eusart1.c: 78: TXSTA1 = 0x24;
  1361  001296  0E24               	movlw	36
  1362  001298  6EAD               	movwf	4013,c	;volatile
  1363                           
  1364                           ;eusart1.c: 81: SPBRG1 = 0xCF;
  1365  00129A  0ECF               	movlw	207
  1366  00129C  6EB0               	movwf	4016,c	;volatile
  1367                           
  1368                           ;eusart1.c: 84: SPBRGH1 = 0x00;
  1369  00129E  0E00               	movlw	0
  1370  0012A0  6E7F               	movwf	3967,c	;volatile
  1371                           
  1372                           ;eusart1.c: 87: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  1373  0012A2  0E00               	movlw	0
  1374  0012A4  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  1375  0012A6  0E00               	movlw	0
  1376  0012A8  6E02               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  1377  0012AA  EC01  F00A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1378                           
  1379                           ;eusart1.c: 88: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  1380  0012AE  0E00               	movlw	0
  1381  0012B0  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  1382  0012B2  0E00               	movlw	0
  1383  0012B4  6E02               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  1384  0012B6  ECFC  F009         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1385                           
  1386                           ;eusart1.c: 89: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  1387  0012BA  0E00               	movlw	0
  1388  0012BC  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  1389  0012BE  0E00               	movlw	0
  1390  0012C0  6E02               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  1391  0012C2  EC06  F00A         	call	_EUSART1_SetErrorHandler	;wreg free
  1392                           
  1393                           ;eusart1.c: 91: eusart1RxLastError.status = 0;
  1394  0012C6  0E00               	movlw	0
  1395  0012C8  6E2B               	movwf	_eusart1RxLastError,c	;volatile
  1396  0012CA  0012               	return		;funcret
  1397  0012CC                     __end_of_EUSART1_Initialize:
  1398                           	opt stack 0
  1399                           tblptru	equ	0xFF8
  1400                           tblptrh	equ	0xFF7
  1401                           tblptrl	equ	0xFF6
  1402                           tablat	equ	0xFF5
  1403                           prodh	equ	0xFF4
  1404                           prodl	equ	0xFF3
  1405                           intcon	equ	0xFF2
  1406                           intcon2	equ	0xFF1
  1407                           postinc0	equ	0xFEE
  1408                           wreg	equ	0xFE8
  1409                           postdec1	equ	0xFE5
  1410                           fsr1h	equ	0xFE2
  1411                           fsr1l	equ	0xFE1
  1412                           status	equ	0xFD8
  1413                           
  1414 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1415 ;; Defined at:
  1416 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1419 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;		None
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1435 ;;Total ram usage:        2 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; This function calls:
  1438 ;;		Nothing
  1439 ;; This function is called by:
  1440 ;;		_EUSART1_Initialize
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           	psect	text10
  1445  0013F8                     __ptext10:
  1446                           	opt stack 0
  1447  0013F8                     _EUSART1_SetOverrunErrorHandler:
  1448                           	opt stack 28
  1449                           
  1450                           ;eusart1.c: 171: EUSART1_OverrunErrorHandler = interruptHandler;
  1451                           
  1452                           ;incstack = 0
  1453  0013F8  C001  F027         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1454  0013FC  C002  F028         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1455  001400  0012               	return		;funcret
  1456  001402                     __end_of_EUSART1_SetOverrunErrorHandler:
  1457                           	opt stack 0
  1458                           tblptru	equ	0xFF8
  1459                           tblptrh	equ	0xFF7
  1460                           tblptrl	equ	0xFF6
  1461                           tablat	equ	0xFF5
  1462                           prodh	equ	0xFF4
  1463                           prodl	equ	0xFF3
  1464                           intcon	equ	0xFF2
  1465                           intcon2	equ	0xFF1
  1466                           postinc0	equ	0xFEE
  1467                           wreg	equ	0xFE8
  1468                           postdec1	equ	0xFE5
  1469                           fsr1h	equ	0xFE2
  1470                           fsr1l	equ	0xFE1
  1471                           status	equ	0xFD8
  1472                           
  1473 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1474 ;; Defined at:
  1475 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1478 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1494 ;;Total ram usage:        2 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; This function calls:
  1497 ;;		Nothing
  1498 ;; This function is called by:
  1499 ;;		_EUSART1_Initialize
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text11
  1504  001402                     __ptext11:
  1505                           	opt stack 0
  1506  001402                     _EUSART1_SetFramingErrorHandler:
  1507                           	opt stack 28
  1508                           
  1509                           ;eusart1.c: 167: EUSART1_FramingErrorHandler = interruptHandler;
  1510                           
  1511                           ;incstack = 0
  1512  001402  C001  F029         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1513  001406  C002  F02A         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1514  00140A  0012               	return		;funcret
  1515  00140C                     __end_of_EUSART1_SetFramingErrorHandler:
  1516                           	opt stack 0
  1517                           tblptru	equ	0xFF8
  1518                           tblptrh	equ	0xFF7
  1519                           tblptrl	equ	0xFF6
  1520                           tablat	equ	0xFF5
  1521                           prodh	equ	0xFF4
  1522                           prodl	equ	0xFF3
  1523                           intcon	equ	0xFF2
  1524                           intcon2	equ	0xFF1
  1525                           postinc0	equ	0xFEE
  1526                           wreg	equ	0xFE8
  1527                           postdec1	equ	0xFE5
  1528                           fsr1h	equ	0xFE2
  1529                           fsr1l	equ	0xFE1
  1530                           status	equ	0xFD8
  1531                           
  1532 ;; *************** function _EUSART1_SetErrorHandler *****************
  1533 ;; Defined at:
  1534 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1537 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2, status,0
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1552 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1553 ;;Total ram usage:        2 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_EUSART1_Initialize
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text12
  1563  00140C                     __ptext12:
  1564                           	opt stack 0
  1565  00140C                     _EUSART1_SetErrorHandler:
  1566                           	opt stack 28
  1567                           
  1568                           ;eusart1.c: 175: EUSART1_ErrorHandler = interruptHandler;
  1569                           
  1570                           ;incstack = 0
  1571  00140C  C001  F025         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1572  001410  C002  F026         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1573  001414  0012               	return		;funcret
  1574  001416                     __end_of_EUSART1_SetErrorHandler:
  1575                           	opt stack 0
  1576                           tblptru	equ	0xFF8
  1577                           tblptrh	equ	0xFF7
  1578                           tblptrl	equ	0xFF6
  1579                           tablat	equ	0xFF5
  1580                           prodh	equ	0xFF4
  1581                           prodl	equ	0xFF3
  1582                           intcon	equ	0xFF2
  1583                           intcon2	equ	0xFF1
  1584                           postinc0	equ	0xFEE
  1585                           wreg	equ	0xFE8
  1586                           postdec1	equ	0xFE5
  1587                           fsr1h	equ	0xFE2
  1588                           fsr1l	equ	0xFE1
  1589                           status	equ	0xFD8
  1590                           
  1591 ;; *************** function _MCP794x_setTime *****************
  1592 ;; Defined at:
  1593 ;;		line 10 in file "RTC_MCP79411.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  hour            1    wreg     unsigned char 
  1596 ;;  minute          1   12[COMRAM] unsigned char 
  1597 ;;  second          1   13[COMRAM] unsigned char 
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;  hour            1   16[COMRAM] unsigned char 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1611 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1612 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1613 ;;Total ram usage:        5 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:    2
  1616 ;; This function calls:
  1617 ;;		_I2C_Write
  1618 ;;		_I2C_start
  1619 ;;		_I2C_stop
  1620 ;;		_decimalToBCD
  1621 ;; This function is called by:
  1622 ;;		_main
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text13
  1627  0011AC                     __ptext13:
  1628                           	opt stack 0
  1629  0011AC                     _MCP794x_setTime:
  1630                           	opt stack 28
  1631                           
  1632                           ;incstack = 0
  1633                           ;MCP794x_setTime@hour stored from wreg
  1634  0011AC  6E11               	movwf	MCP794x_setTime@hour,c
  1635                           
  1636                           ;RTC_MCP79411.c: 11: I2C_start();
  1637  0011AE  EC0B  F00A         	call	_I2C_start	;wreg free
  1638                           
  1639                           ;RTC_MCP79411.c: 12: I2C_Write(0xDE);
  1640  0011B2  0EDE               	movlw	222
  1641  0011B4  ECC8  F009         	call	_I2C_Write
  1642                           
  1643                           ;RTC_MCP79411.c: 13: I2C_Write(0x00);
  1644  0011B8  0E00               	movlw	0
  1645  0011BA  ECC8  F009         	call	_I2C_Write
  1646                           
  1647                           ;RTC_MCP79411.c: 14: I2C_Write(decimalToBCD(second |0x80));
  1648  0011BE  0E80               	movlw	128
  1649  0011C0  C00E  F00F         	movff	MCP794x_setTime@second,??_MCP794x_setTime
  1650  0011C4  6A10               	clrf	(??_MCP794x_setTime+1)& (0+255),c
  1651  0011C6  100F               	iorwf	??_MCP794x_setTime,w,c
  1652  0011C8  6E09               	movwf	decimalToBCD@DecValue,c
  1653  0011CA  5010               	movf	??_MCP794x_setTime+1,w,c
  1654  0011CC  6E0A               	movwf	decimalToBCD@DecValue+1,c
  1655  0011CE  EC84  F009         	call	_decimalToBCD	;wreg free
  1656  0011D2  ECC8  F009         	call	_I2C_Write
  1657                           
  1658                           ;RTC_MCP79411.c: 15: I2C_Write(decimalToBCD(minute));
  1659  0011D6  C00D  F009         	movff	MCP794x_setTime@minute,decimalToBCD@DecValue
  1660  0011DA  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1661  0011DC  EC84  F009         	call	_decimalToBCD	;wreg free
  1662  0011E0  ECC8  F009         	call	_I2C_Write
  1663                           
  1664                           ;RTC_MCP79411.c: 16: I2C_Write(decimalToBCD(hour &0x1F));
  1665  0011E4  C011  F00F         	movff	MCP794x_setTime@hour,??_MCP794x_setTime
  1666  0011E8  0E1F               	movlw	31
  1667  0011EA  160F               	andwf	??_MCP794x_setTime,f,c
  1668  0011EC  500F               	movf	??_MCP794x_setTime,w,c
  1669  0011EE  6E09               	movwf	decimalToBCD@DecValue,c
  1670  0011F0  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1671  0011F2  EC84  F009         	call	_decimalToBCD	;wreg free
  1672  0011F6  ECC8  F009         	call	_I2C_Write
  1673                           
  1674                           ;RTC_MCP79411.c: 17: I2C_stop();
  1675  0011FA  EC10  F00A         	call	_I2C_stop	;wreg free
  1676  0011FE  0012               	return		;funcret
  1677  001200                     __end_of_MCP794x_setTime:
  1678                           	opt stack 0
  1679                           tblptru	equ	0xFF8
  1680                           tblptrh	equ	0xFF7
  1681                           tblptrl	equ	0xFF6
  1682                           tablat	equ	0xFF5
  1683                           prodh	equ	0xFF4
  1684                           prodl	equ	0xFF3
  1685                           intcon	equ	0xFF2
  1686                           intcon2	equ	0xFF1
  1687                           postinc0	equ	0xFEE
  1688                           wreg	equ	0xFE8
  1689                           postdec1	equ	0xFE5
  1690                           fsr1h	equ	0xFE2
  1691                           fsr1l	equ	0xFE1
  1692                           status	equ	0xFD8
  1693                           
  1694 ;; *************** function _MCP794x_setDate *****************
  1695 ;; Defined at:
  1696 ;;		line 20 in file "RTC_MCP79411.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  date            1    wreg     unsigned char 
  1699 ;;  weekDay         1   12[COMRAM] unsigned char 
  1700 ;;  month           1   13[COMRAM] unsigned char 
  1701 ;;  year            1   14[COMRAM] unsigned char 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  date            1   17[COMRAM] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1713 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1715 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1716 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1717 ;;Total ram usage:        6 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    2
  1720 ;; This function calls:
  1721 ;;		_I2C_Write
  1722 ;;		_I2C_start
  1723 ;;		_I2C_stop
  1724 ;;		_decimalToBCD
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text14
  1731  0010FE                     __ptext14:
  1732                           	opt stack 0
  1733  0010FE                     _MCP794x_setDate:
  1734                           	opt stack 28
  1735                           
  1736                           ;incstack = 0
  1737                           ;MCP794x_setDate@date stored from wreg
  1738  0010FE  6E12               	movwf	MCP794x_setDate@date,c
  1739                           
  1740                           ;RTC_MCP79411.c: 21: I2C_start();
  1741  001100  EC0B  F00A         	call	_I2C_start	;wreg free
  1742                           
  1743                           ;RTC_MCP79411.c: 22: I2C_Write(0xDE);
  1744  001104  0EDE               	movlw	222
  1745  001106  ECC8  F009         	call	_I2C_Write
  1746                           
  1747                           ;RTC_MCP79411.c: 23: I2C_Write(0x03);
  1748  00110A  0E03               	movlw	3
  1749  00110C  ECC8  F009         	call	_I2C_Write
  1750                           
  1751                           ;RTC_MCP79411.c: 24: I2C_Write(decimalToBCD(weekDay |0x28));
  1752  001110  0E28               	movlw	40
  1753  001112  C00D  F010         	movff	MCP794x_setDate@weekDay,??_MCP794x_setDate
  1754  001116  6A11               	clrf	(??_MCP794x_setDate+1)& (0+255),c
  1755  001118  1010               	iorwf	??_MCP794x_setDate,w,c
  1756  00111A  6E09               	movwf	decimalToBCD@DecValue,c
  1757  00111C  5011               	movf	??_MCP794x_setDate+1,w,c
  1758  00111E  6E0A               	movwf	decimalToBCD@DecValue+1,c
  1759  001120  EC84  F009         	call	_decimalToBCD	;wreg free
  1760  001124  ECC8  F009         	call	_I2C_Write
  1761                           
  1762                           ;RTC_MCP79411.c: 25: I2C_Write(decimalToBCD(date));
  1763  001128  C012  F009         	movff	MCP794x_setDate@date,decimalToBCD@DecValue
  1764  00112C  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1765  00112E  EC84  F009         	call	_decimalToBCD	;wreg free
  1766  001132  ECC8  F009         	call	_I2C_Write
  1767                           
  1768                           ;RTC_MCP79411.c: 26: I2C_Write(decimalToBCD(month));
  1769  001136  C00E  F009         	movff	MCP794x_setDate@month,decimalToBCD@DecValue
  1770  00113A  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1771  00113C  EC84  F009         	call	_decimalToBCD	;wreg free
  1772  001140  ECC8  F009         	call	_I2C_Write
  1773                           
  1774                           ;RTC_MCP79411.c: 27: I2C_Write(decimalToBCD(year));
  1775  001144  C00F  F009         	movff	MCP794x_setDate@year,decimalToBCD@DecValue
  1776  001148  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1777  00114A  EC84  F009         	call	_decimalToBCD	;wreg free
  1778  00114E  ECC8  F009         	call	_I2C_Write
  1779                           
  1780                           ;RTC_MCP79411.c: 28: I2C_stop();
  1781  001152  EC10  F00A         	call	_I2C_stop	;wreg free
  1782  001156  0012               	return		;funcret
  1783  001158                     __end_of_MCP794x_setDate:
  1784                           	opt stack 0
  1785                           tblptru	equ	0xFF8
  1786                           tblptrh	equ	0xFF7
  1787                           tblptrl	equ	0xFF6
  1788                           tablat	equ	0xFF5
  1789                           prodh	equ	0xFF4
  1790                           prodl	equ	0xFF3
  1791                           intcon	equ	0xFF2
  1792                           intcon2	equ	0xFF1
  1793                           postinc0	equ	0xFEE
  1794                           wreg	equ	0xFE8
  1795                           postdec1	equ	0xFE5
  1796                           fsr1h	equ	0xFE2
  1797                           fsr1l	equ	0xFE1
  1798                           status	equ	0xFD8
  1799                           
  1800 ;; *************** function _decimalToBCD *****************
  1801 ;; Defined at:
  1802 ;;		line 94 in file "RTC_PCF8523.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  DecValue        2    8[COMRAM] int 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;		None
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      unsigned char 
  1809 ;; Registers used:
  1810 ;;		wreg, status,2, status,0, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1818 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1819 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1820 ;;Total ram usage:        4 bytes
  1821 ;; Hardware stack levels used:    1
  1822 ;; Hardware stack levels required when called:    1
  1823 ;; This function calls:
  1824 ;;		___awdiv
  1825 ;;		___awmod
  1826 ;; This function is called by:
  1827 ;;		_MCP794x_setTime
  1828 ;;		_MCP794x_setDate
  1829 ;;		_PCF8523_setTime
  1830 ;;		_PCF8523_setDate
  1831 ;;		_PCF8523_setAlarm
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           	psect	text15
  1836  001308                     __ptext15:
  1837                           	opt stack 0
  1838  001308                     _decimalToBCD:
  1839                           	opt stack 28
  1840                           
  1841                           ;RTC_PCF8523.c: 95: return (((DecValue / 10) << 4) | (DecValue % 10));
  1842                           
  1843                           ;incstack = 0
  1844  001308  C009  F001         	movff	decimalToBCD@DecValue,___awmod@dividend
  1845  00130C  C00A  F002         	movff	decimalToBCD@DecValue+1,___awmod@dividend+1
  1846  001310  0E00               	movlw	0
  1847  001312  6E04               	movwf	___awmod@divisor+1,c
  1848  001314  0E0A               	movlw	10
  1849  001316  6E03               	movwf	___awmod@divisor,c
  1850  001318  EC47  F008         	call	___awmod	;wreg free
  1851  00131C  C001  F00B         	movff	?___awmod,??_decimalToBCD
  1852  001320  C002  F00C         	movff	?___awmod+1,??_decimalToBCD+1
  1853  001324  C009  F001         	movff	decimalToBCD@DecValue,___awdiv@dividend
  1854  001328  C00A  F002         	movff	decimalToBCD@DecValue+1,___awdiv@dividend+1
  1855  00132C  0E00               	movlw	0
  1856  00132E  6E04               	movwf	___awdiv@divisor+1,c
  1857  001330  0E0A               	movlw	10
  1858  001332  6E03               	movwf	___awdiv@divisor,c
  1859  001334  EC05  F008         	call	___awdiv	;wreg free
  1860  001338  3801               	swapf	?___awdiv,w,c
  1861  00133A  0BF0               	andlw	240
  1862  00133C  100B               	iorwf	??_decimalToBCD,w,c
  1863  00133E  0012               	return	
  1864  001340                     __end_of_decimalToBCD:
  1865                           	opt stack 0
  1866                           tblptru	equ	0xFF8
  1867                           tblptrh	equ	0xFF7
  1868                           tblptrl	equ	0xFF6
  1869                           tablat	equ	0xFF5
  1870                           prodh	equ	0xFF4
  1871                           prodl	equ	0xFF3
  1872                           intcon	equ	0xFF2
  1873                           intcon2	equ	0xFF1
  1874                           postinc0	equ	0xFEE
  1875                           wreg	equ	0xFE8
  1876                           postdec1	equ	0xFE5
  1877                           fsr1h	equ	0xFE2
  1878                           fsr1l	equ	0xFE1
  1879                           status	equ	0xFD8
  1880                           
  1881 ;; *************** function ___awmod *****************
  1882 ;; Defined at:
  1883 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  dividend        2    0[COMRAM] int 
  1886 ;;  divisor         2    2[COMRAM] int 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  sign            1    5[COMRAM] unsigned char 
  1889 ;;  counter         1    4[COMRAM] unsigned char 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  2    0[COMRAM] int 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1899 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1900 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1902 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1903 ;;Total ram usage:        6 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_decimalToBCD
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text16
  1913  00108E                     __ptext16:
  1914                           	opt stack 0
  1915  00108E                     ___awmod:
  1916                           	opt stack 28
  1917                           
  1918                           ;incstack = 0
  1919  00108E  0E00               	movlw	0
  1920  001090  6E06               	movwf	___awmod@sign,c
  1921  001092  AE02               	btfss	___awmod@dividend+1,7,c
  1922  001094  D006               	goto	l806
  1923  001096  6C01               	negf	___awmod@dividend,c
  1924  001098  1E02               	comf	___awmod@dividend+1,f,c
  1925  00109A  B0D8               	btfsc	status,0,c
  1926  00109C  2A02               	incf	___awmod@dividend+1,f,c
  1927  00109E  0E01               	movlw	1
  1928  0010A0  6E06               	movwf	___awmod@sign,c
  1929  0010A2                     l806:
  1930  0010A2  AE04               	btfss	___awmod@divisor+1,7,c
  1931  0010A4  D004               	goto	l807
  1932  0010A6  6C03               	negf	___awmod@divisor,c
  1933  0010A8  1E04               	comf	___awmod@divisor+1,f,c
  1934  0010AA  B0D8               	btfsc	status,0,c
  1935  0010AC  2A04               	incf	___awmod@divisor+1,f,c
  1936  0010AE                     l807:
  1937  0010AE  5003               	movf	___awmod@divisor,w,c
  1938  0010B0  1004               	iorwf	___awmod@divisor+1,w,c
  1939  0010B2  B4D8               	btfsc	status,2,c
  1940  0010B4  D018               	goto	l814
  1941  0010B6  0E01               	movlw	1
  1942  0010B8  6E05               	movwf	___awmod@counter,c
  1943  0010BA  D004               	goto	l809
  1944  0010BC  90D8               	bcf	status,0,c
  1945  0010BE  3603               	rlcf	___awmod@divisor,f,c
  1946  0010C0  3604               	rlcf	___awmod@divisor+1,f,c
  1947  0010C2  2A05               	incf	___awmod@counter,f,c
  1948  0010C4                     l809:
  1949  0010C4  AE04               	btfss	___awmod@divisor+1,7,c
  1950  0010C6  D7FA               	goto	l810
  1951  0010C8                     u950:
  1952  0010C8  5003               	movf	___awmod@divisor,w,c
  1953  0010CA  5C01               	subwf	___awmod@dividend,w,c
  1954  0010CC  5004               	movf	___awmod@divisor+1,w,c
  1955  0010CE  5802               	subwfb	___awmod@dividend+1,w,c
  1956  0010D0  A0D8               	btfss	status,0,c
  1957  0010D2  D004               	goto	l813
  1958  0010D4  5003               	movf	___awmod@divisor,w,c
  1959  0010D6  5E01               	subwf	___awmod@dividend,f,c
  1960  0010D8  5004               	movf	___awmod@divisor+1,w,c
  1961  0010DA  5A02               	subwfb	___awmod@dividend+1,f,c
  1962  0010DC                     l813:
  1963  0010DC  90D8               	bcf	status,0,c
  1964  0010DE  3204               	rrcf	___awmod@divisor+1,f,c
  1965  0010E0  3203               	rrcf	___awmod@divisor,f,c
  1966  0010E2  2E05               	decfsz	___awmod@counter,f,c
  1967  0010E4  D7F1               	goto	u950
  1968  0010E6                     l814:
  1969  0010E6  5006               	movf	___awmod@sign,w,c
  1970  0010E8  B4D8               	btfsc	status,2,c
  1971  0010EA  D004               	goto	l815
  1972  0010EC  6C01               	negf	___awmod@dividend,c
  1973  0010EE  1E02               	comf	___awmod@dividend+1,f,c
  1974  0010F0  B0D8               	btfsc	status,0,c
  1975  0010F2  2A02               	incf	___awmod@dividend+1,f,c
  1976  0010F4                     l815:
  1977  0010F4  C001  F001         	movff	___awmod@dividend,?___awmod
  1978  0010F8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1979  0010FC  0012               	return	
  1980  0010FE                     __end_of___awmod:
  1981                           	opt stack 0
  1982                           tblptru	equ	0xFF8
  1983                           tblptrh	equ	0xFF7
  1984                           tblptrl	equ	0xFF6
  1985                           tablat	equ	0xFF5
  1986                           prodh	equ	0xFF4
  1987                           prodl	equ	0xFF3
  1988                           intcon	equ	0xFF2
  1989                           intcon2	equ	0xFF1
  1990                           postinc0	equ	0xFEE
  1991                           wreg	equ	0xFE8
  1992                           postdec1	equ	0xFE5
  1993                           fsr1h	equ	0xFE2
  1994                           fsr1l	equ	0xFE1
  1995                           status	equ	0xFD8
  1996                           
  1997 ;; *************** function ___awdiv *****************
  1998 ;; Defined at:
  1999 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;  dividend        2    0[COMRAM] int 
  2002 ;;  divisor         2    2[COMRAM] int 
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;  quotient        2    6[COMRAM] int 
  2005 ;;  sign            1    5[COMRAM] unsigned char 
  2006 ;;  counter         1    4[COMRAM] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  2    0[COMRAM] int 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2016 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2017 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2019 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2020 ;;Total ram usage:        8 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; This function calls:
  2023 ;;		Nothing
  2024 ;; This function is called by:
  2025 ;;		_decimalToBCD
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           	psect	text17
  2030  00100A                     __ptext17:
  2031                           	opt stack 0
  2032  00100A                     ___awdiv:
  2033                           	opt stack 28
  2034                           
  2035                           ;incstack = 0
  2036  00100A  0E00               	movlw	0
  2037  00100C  6E06               	movwf	___awdiv@sign,c
  2038  00100E  AE04               	btfss	___awdiv@divisor+1,7,c
  2039  001010  D006               	goto	l793
  2040  001012  6C03               	negf	___awdiv@divisor,c
  2041  001014  1E04               	comf	___awdiv@divisor+1,f,c
  2042  001016  B0D8               	btfsc	status,0,c
  2043  001018  2A04               	incf	___awdiv@divisor+1,f,c
  2044  00101A  0E01               	movlw	1
  2045  00101C  6E06               	movwf	___awdiv@sign,c
  2046  00101E                     l793:
  2047  00101E  AE02               	btfss	___awdiv@dividend+1,7,c
  2048  001020  D006               	goto	l794
  2049  001022  6C01               	negf	___awdiv@dividend,c
  2050  001024  1E02               	comf	___awdiv@dividend+1,f,c
  2051  001026  B0D8               	btfsc	status,0,c
  2052  001028  2A02               	incf	___awdiv@dividend+1,f,c
  2053  00102A  0E01               	movlw	1
  2054  00102C  1A06               	xorwf	___awdiv@sign,f,c
  2055  00102E                     l794:
  2056  00102E  0E00               	movlw	0
  2057  001030  6E08               	movwf	___awdiv@quotient+1,c
  2058  001032  0E00               	movlw	0
  2059  001034  6E07               	movwf	___awdiv@quotient,c
  2060  001036  5003               	movf	___awdiv@divisor,w,c
  2061  001038  1004               	iorwf	___awdiv@divisor+1,w,c
  2062  00103A  B4D8               	btfsc	status,2,c
  2063  00103C  D01C               	goto	l801
  2064  00103E  0E01               	movlw	1
  2065  001040  6E05               	movwf	___awdiv@counter,c
  2066  001042  D004               	goto	l796
  2067  001044  90D8               	bcf	status,0,c
  2068  001046  3603               	rlcf	___awdiv@divisor,f,c
  2069  001048  3604               	rlcf	___awdiv@divisor+1,f,c
  2070  00104A  2A05               	incf	___awdiv@counter,f,c
  2071  00104C                     l796:
  2072  00104C  AE04               	btfss	___awdiv@divisor+1,7,c
  2073  00104E  D7FA               	goto	l797
  2074  001050                     u890:
  2075  001050  90D8               	bcf	status,0,c
  2076  001052  3607               	rlcf	___awdiv@quotient,f,c
  2077  001054  3608               	rlcf	___awdiv@quotient+1,f,c
  2078  001056  5003               	movf	___awdiv@divisor,w,c
  2079  001058  5C01               	subwf	___awdiv@dividend,w,c
  2080  00105A  5004               	movf	___awdiv@divisor+1,w,c
  2081  00105C  5802               	subwfb	___awdiv@dividend+1,w,c
  2082  00105E  A0D8               	btfss	status,0,c
  2083  001060  D005               	goto	l800
  2084  001062  5003               	movf	___awdiv@divisor,w,c
  2085  001064  5E01               	subwf	___awdiv@dividend,f,c
  2086  001066  5004               	movf	___awdiv@divisor+1,w,c
  2087  001068  5A02               	subwfb	___awdiv@dividend+1,f,c
  2088  00106A  8007               	bsf	___awdiv@quotient,0,c
  2089  00106C                     l800:
  2090  00106C  90D8               	bcf	status,0,c
  2091  00106E  3204               	rrcf	___awdiv@divisor+1,f,c
  2092  001070  3203               	rrcf	___awdiv@divisor,f,c
  2093  001072  2E05               	decfsz	___awdiv@counter,f,c
  2094  001074  D7ED               	goto	u890
  2095  001076                     l801:
  2096  001076  5006               	movf	___awdiv@sign,w,c
  2097  001078  B4D8               	btfsc	status,2,c
  2098  00107A  D004               	goto	l802
  2099  00107C  6C07               	negf	___awdiv@quotient,c
  2100  00107E  1E08               	comf	___awdiv@quotient+1,f,c
  2101  001080  B0D8               	btfsc	status,0,c
  2102  001082  2A08               	incf	___awdiv@quotient+1,f,c
  2103  001084                     l802:
  2104  001084  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2105  001088  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2106  00108C  0012               	return	
  2107  00108E                     __end_of___awdiv:
  2108                           	opt stack 0
  2109                           tblptru	equ	0xFF8
  2110                           tblptrh	equ	0xFF7
  2111                           tblptrl	equ	0xFF6
  2112                           tablat	equ	0xFF5
  2113                           prodh	equ	0xFF4
  2114                           prodl	equ	0xFF3
  2115                           intcon	equ	0xFF2
  2116                           intcon2	equ	0xFF1
  2117                           postinc0	equ	0xFEE
  2118                           wreg	equ	0xFE8
  2119                           postdec1	equ	0xFE5
  2120                           fsr1h	equ	0xFE2
  2121                           fsr1l	equ	0xFE1
  2122                           status	equ	0xFD8
  2123                           
  2124 ;; *************** function _I2C_buffClear *****************
  2125 ;; Defined at:
  2126 ;;		line 80 in file "I2C.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2144 ;;Total ram usage:        0 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; Hardware stack levels required when called:    2
  2147 ;; This function calls:
  2148 ;;		_I2C_Write
  2149 ;;		_I2C_start
  2150 ;;		_I2C_stop
  2151 ;; This function is called by:
  2152 ;;		_main
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text18
  2157  0013C2                     __ptext18:
  2158                           	opt stack 0
  2159  0013C2                     _I2C_buffClear:
  2160                           	opt stack 28
  2161                           
  2162                           ;I2C.c: 81: I2C_start();
  2163                           
  2164                           ;incstack = 0
  2165  0013C2  EC0B  F00A         	call	_I2C_start	;wreg free
  2166                           
  2167                           ;I2C.c: 82: I2C_Write(0x00);
  2168  0013C6  0E00               	movlw	0
  2169  0013C8  ECC8  F009         	call	_I2C_Write
  2170                           
  2171                           ;I2C.c: 83: I2C_stop();
  2172  0013CC  EC10  F00A         	call	_I2C_stop	;wreg free
  2173  0013D0  0012               	return		;funcret
  2174  0013D2                     __end_of_I2C_buffClear:
  2175                           	opt stack 0
  2176                           tblptru	equ	0xFF8
  2177                           tblptrh	equ	0xFF7
  2178                           tblptrl	equ	0xFF6
  2179                           tablat	equ	0xFF5
  2180                           prodh	equ	0xFF4
  2181                           prodl	equ	0xFF3
  2182                           intcon	equ	0xFF2
  2183                           intcon2	equ	0xFF1
  2184                           postinc0	equ	0xFEE
  2185                           wreg	equ	0xFE8
  2186                           postdec1	equ	0xFE5
  2187                           fsr1h	equ	0xFE2
  2188                           fsr1l	equ	0xFE1
  2189                           status	equ	0xFD8
  2190                           
  2191 ;; *************** function _I2C_start *****************
  2192 ;; Defined at:
  2193 ;;		line 50 in file "I2C.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;		None
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		None
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2211 ;;Total ram usage:        0 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_I2C_buffClear
  2217 ;;		_MCP794x_setTime
  2218 ;;		_MCP794x_setDate
  2219 ;;		_I2C_BusSCan
  2220 ;;		_MCP23008_Init
  2221 ;;		_MCP23008_Write
  2222 ;;		_MCP23008_read
  2223 ;;		_MCP9801_Init
  2224 ;;		_MCP9801_TempRead
  2225 ;;		_EEPROM_24AA512_Write
  2226 ;;		_EEPROM_24AA512_Read
  2227 ;;		_EEPROM_24AA512_pageWrite
  2228 ;;		_PCF8523_rtcRead
  2229 ;;		_PCF8523_write
  2230 ;;		_MCP794x_writeRtcc
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text19
  2235  001416                     __ptext19:
  2236                           	opt stack 0
  2237  001416                     _I2C_start:
  2238                           	opt stack 29
  2239                           
  2240                           ;I2C.c: 51: SSP2CON2bits.SEN = 1;
  2241                           
  2242                           ;incstack = 0
  2243  001416  8071               	bsf	3953,0,c	;volatile
  2244  001418  B071               	btfsc	3953,0,c	;volatile
  2245  00141A  D7FE               	goto	l429
  2246                           
  2247                           ;I2C.c: 53: PIR3bits.SSP2IF = 0;
  2248  00141C  9EA4               	bcf	4004,7,c	;volatile
  2249  00141E  0012               	return		;funcret
  2250  001420                     __end_of_I2C_start:
  2251                           	opt stack 0
  2252                           tblptru	equ	0xFF8
  2253                           tblptrh	equ	0xFF7
  2254                           tblptrl	equ	0xFF6
  2255                           tablat	equ	0xFF5
  2256                           prodh	equ	0xFF4
  2257                           prodl	equ	0xFF3
  2258                           intcon	equ	0xFF2
  2259                           intcon2	equ	0xFF1
  2260                           postinc0	equ	0xFEE
  2261                           wreg	equ	0xFE8
  2262                           postdec1	equ	0xFE5
  2263                           fsr1h	equ	0xFE2
  2264                           fsr1l	equ	0xFE1
  2265                           status	equ	0xFD8
  2266                           
  2267 ;; *************** function _I2C_Write *****************
  2268 ;; Defined at:
  2269 ;;		line 31 in file "I2C.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  data            1    wreg     unsigned char 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  data            1    0[COMRAM] unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      void 
  2276 ;; Registers used:
  2277 ;;		wreg, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2286 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2287 ;;Total ram usage:        1 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    1
  2290 ;; This function calls:
  2291 ;;		_I2C_stop
  2292 ;; This function is called by:
  2293 ;;		_I2C_buffClear
  2294 ;;		_MCP794x_setTime
  2295 ;;		_MCP794x_setDate
  2296 ;;		_I2C_BusSCan
  2297 ;;		_MCP23008_Init
  2298 ;;		_MCP23008_Write
  2299 ;;		_MCP23008_read
  2300 ;;		_MCP9801_Init
  2301 ;;		_MCP9801_TempRead
  2302 ;;		_EEPROM_24AA512_Write
  2303 ;;		_EEPROM_24AA512_Read
  2304 ;;		_EEPROM_24AA512_pageWrite
  2305 ;;		_PCF8523_rtcRead
  2306 ;;		_PCF8523_write
  2307 ;;		_MCP794x_writeRtcc
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text20
  2312  001390                     __ptext20:
  2313                           	opt stack 0
  2314  001390                     _I2C_Write:
  2315                           	opt stack 28
  2316                           
  2317                           ;incstack = 0
  2318                           ;I2C_Write@data stored from wreg
  2319  001390  6E01               	movwf	I2C_Write@data,c
  2320                           
  2321                           ;I2C.c: 32: SSP2BUF = data;
  2322  001392  C001  FF75         	movff	I2C_Write@data,3957	;volatile
  2323  001396  A073               	btfss	3955,0,c	;volatile
  2324  001398  D7FE               	goto	l410
  2325  00139A                     u210:
  2326                           
  2327                           ;I2C.c: 34: while (!PIR3bits.SSP2IF);
  2328  00139A  AEA4               	btfss	4004,7,c	;volatile
  2329  00139C  D7FE               	goto	u210
  2330                           
  2331                           ;I2C.c: 35: PIR3bits.SSP2IF = 0;
  2332  00139E  9EA4               	bcf	4004,7,c	;volatile
  2333                           
  2334                           ;I2C.c: 36: if (SSP2CON2bits.ACKSTAT) {
  2335  0013A0  AC71               	btfss	3953,6,c	;volatile
  2336  0013A2  0012               	return	
  2337                           
  2338                           ;I2C.c: 37: I2C_stop();
  2339  0013A4  EC10  F00A         	call	_I2C_stop	;wreg free
  2340                           
  2341                           ;I2C.c: 38: return;
  2342  0013A8  0012               	return	
  2343  0013AA                     __end_of_I2C_Write:
  2344                           	opt stack 0
  2345                           tblptru	equ	0xFF8
  2346                           tblptrh	equ	0xFF7
  2347                           tblptrl	equ	0xFF6
  2348                           tablat	equ	0xFF5
  2349                           prodh	equ	0xFF4
  2350                           prodl	equ	0xFF3
  2351                           intcon	equ	0xFF2
  2352                           intcon2	equ	0xFF1
  2353                           postinc0	equ	0xFEE
  2354                           wreg	equ	0xFE8
  2355                           postdec1	equ	0xFE5
  2356                           fsr1h	equ	0xFE2
  2357                           fsr1l	equ	0xFE1
  2358                           status	equ	0xFD8
  2359                           
  2360 ;; *************** function _I2C_stop *****************
  2361 ;; Defined at:
  2362 ;;		line 62 in file "I2C.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;		None
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;		None
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      void 
  2369 ;; Registers used:
  2370 ;;		None
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2380 ;;Total ram usage:        0 bytes
  2381 ;; Hardware stack levels used:    1
  2382 ;; This function calls:
  2383 ;;		Nothing
  2384 ;; This function is called by:
  2385 ;;		_I2C_Write
  2386 ;;		_I2C_buffClear
  2387 ;;		_MCP794x_setTime
  2388 ;;		_MCP794x_setDate
  2389 ;;		_I2C_BusSCan
  2390 ;;		_MCP23008_Init
  2391 ;;		_MCP23008_Write
  2392 ;;		_MCP23008_read
  2393 ;;		_MCP9801_Init
  2394 ;;		_MCP9801_TempRead
  2395 ;;		_EEPROM_24AA512_Write
  2396 ;;		_EEPROM_24AA512_Read
  2397 ;;		_EEPROM_24AA512_pageWrite
  2398 ;;		_PCF8523_rtcRead
  2399 ;;		_PCF8523_write
  2400 ;;		_MCP794x_writeRtcc
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           	psect	text21
  2405  001420                     __ptext21:
  2406                           	opt stack 0
  2407  001420                     _I2C_stop:
  2408                           	opt stack 29
  2409                           
  2410                           ;I2C.c: 63: SSP2CON2bits.PEN = 1;
  2411                           
  2412                           ;incstack = 0
  2413  001420  8471               	bsf	3953,2,c	;volatile
  2414  001422  B471               	btfsc	3953,2,c	;volatile
  2415  001424  D7FE               	goto	l441
  2416                           
  2417                           ;I2C.c: 65: PIR3bits.SSP2IF = 0;
  2418  001426  9EA4               	bcf	4004,7,c	;volatile
  2419  001428  0012               	return		;funcret
  2420  00142A                     __end_of_I2C_stop:
  2421                           	opt stack 0
  2422                           tblptru	equ	0xFF8
  2423                           tblptrh	equ	0xFF7
  2424                           tblptrl	equ	0xFF6
  2425                           tablat	equ	0xFF5
  2426                           prodh	equ	0xFF4
  2427                           prodl	equ	0xFF3
  2428                           intcon	equ	0xFF2
  2429                           intcon2	equ	0xFF1
  2430                           postinc0	equ	0xFEE
  2431                           wreg	equ	0xFE8
  2432                           postdec1	equ	0xFE5
  2433                           fsr1h	equ	0xFE2
  2434                           fsr1l	equ	0xFE1
  2435                           status	equ	0xFD8
  2436                           tblptru	equ	0xFF8
  2437                           tblptrh	equ	0xFF7
  2438                           tblptrl	equ	0xFF6
  2439                           tablat	equ	0xFF5
  2440                           prodh	equ	0xFF4
  2441                           prodl	equ	0xFF3
  2442                           intcon	equ	0xFF2
  2443                           intcon2	equ	0xFF1
  2444                           postinc0	equ	0xFEE
  2445                           wreg	equ	0xFE8
  2446                           postdec1	equ	0xFE5
  2447                           fsr1h	equ	0xFE2
  2448                           fsr1l	equ	0xFE1
  2449                           status	equ	0xFD8
  2450                           
  2451                           	psect	rparam
  2452  0000                     tblptru	equ	0xFF8
  2453                           tblptrh	equ	0xFF7
  2454                           tblptrl	equ	0xFF6
  2455                           tablat	equ	0xFF5
  2456                           prodh	equ	0xFF4
  2457                           prodl	equ	0xFF3
  2458                           intcon	equ	0xFF2
  2459                           intcon2	equ	0xFF1
  2460                           postinc0	equ	0xFEE
  2461                           wreg	equ	0xFE8
  2462                           postdec1	equ	0xFE5
  2463                           fsr1h	equ	0xFE2
  2464                           fsr1l	equ	0xFE1
  2465                           status	equ	0xFD8


Data Sizes:
    Strings     2
    Constant    57
    Data        13
    BSS         277
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      56
    BANK0           160      0       0
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_I2C_Init
    _I2C_Init->___aldiv
    ___aldiv->___wmul
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _MCP794x_setTime->_decimalToBCD
    _MCP794x_setDate->_decimalToBCD
    _decimalToBCD->___awdiv
    _I2C_buffClear->_I2C_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6078
                                             21 COMRAM     1     1      0
                      _I2C_buffClear
                    _MCP794x_setDate
                    _MCP794x_setTime
                  _SYSTEM_Initialize
                     _interrupt_Init
 ---------------------------------------------------------------------------------
 (1) _interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1331
                 _EUSART1_Initialize
                           _I2C_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             1     1      0    1037
                                             20 COMRAM     1     1      0
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     563
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              6 COMRAM    14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MCP794x_setTime                                      5     3      2    2317
                                             12 COMRAM     5     3      2
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
                       _decimalToBCD
 ---------------------------------------------------------------------------------
 (1) _MCP794x_setDate                                      6     3      3    2415
                                             12 COMRAM     6     3      3
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
                       _decimalToBCD
 ---------------------------------------------------------------------------------
 (2) _decimalToBCD                                         4     2      2    2084
                                              8 COMRAM     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _I2C_buffClear                                        0     0      0      15
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      15
                                              0 COMRAM     1     1      0
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_buffClear
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
   _MCP794x_setDate
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
     _decimalToBCD
       ___awdiv
       ___awmod
   _MCP794x_setTime
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
     _decimalToBCD
       ___awdiv
       ___awmod
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _I2C_Init
       ___aldiv
         ___wmul (ARG)
       ___wmul
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   _interrupt_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0     100       8      100.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     16      38       1       58.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     138       6        0.0%
DATA                 0      0     138       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr 06 23:06:58 2020

                               _MCP794x_setDate 10FE                              __size_of_I2C_Write 001A  
                          __end_of_decimalToBCD 1340                                 _MCP794x_setTime 11AC  
                                  ___awdiv@sign 0006                             ___wmul@multiplicand 0003  
                        __end_of_interrupt_Init 13F8                                    __CFG_CP0$OFF 000000  
                            __size_of_I2C_start 000A                                     __CFG_OSC$HS 000000  
                                           l410 1396                                             l246 1306  
                                           _ADC 0023                                             l441 1422  
                                           l429 1418                                             l800 106C  
                                           l801 1076                                             l802 1084  
                                           l810 10BC                                             l813 10DC  
                                           l814 10E6                                             l806 10A2  
                                           l815 10F4                                             l807 10AE  
                                           l809 10C4                                             l681 0F5A  
                                           l690 0FF8                                             l682 0F72  
                                           l684 0FA0                                             l685 0F94  
                                           l688 0FD4                                             l793 101E  
                                           l689 0FE2                                             l794 102E  
                                           l796 104C                                             l797 1044  
                                           u210 139A                                             u830 0FA4  
                                           u950 10C8                                             u890 1050  
                                  ___awmod@sign 0006                                             wreg 000FE8  
                                    _TXSTA1bits 000FAD                                    __CFG_IESO$ON 000000  
                                          STR_1 0F3A                                            u1077 12DE  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          u1087 135C                                            _LATC 000F8B  
                                          _LATD 000F8C                                            _LATE 000F8D  
                                 __CFG_FCMEN$ON 000000                                            _main 12CC  
                              __end_of_I2C_Init 11AC                                            fsr1h 000FE2  
                                          fsr1l 000FE1                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0000  
                              __end_of_I2C_stop 142A                                    ___param_bank 000000  
                                 __CFG_PLLDIV$1 000000                  __size_of_OSCILLATOR_Initialize 002A  
                 __end_of_OSCILLATOR_Initialize 136A                                 ?_interrupt_Init 0001  
                               __end_of___aldiv 100A                                           ?_main 0001  
                               __end_of___awdiv 108E                                 __end_of___awmod 10FE  
                               ___awdiv@divisor 0003                                 ___awdiv@counter 0005  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                                           _sData 0017  
                                         _errno 0021                                  __CFG_CLKOEC$ON 000000  
                             __end_of_I2C_Write 13AA                                           tablat 000FF5  
                                         status 000FD8                               __end_of_I2C_start 1420  
                          MCP794x_setDate@month 000E              _EUSART1_DefaultFramingErrorHandler 000000  
                       __end_of_MCP794x_setDate 1158                        __size_of_SPI1_Initialize 000E  
                       __end_of_MCP794x_setTime 1200                         __CFG_DSWDTOSC$INTOSCREF 000000  
                               __initialization 1200                      __end_of_EUSART1_Initialize 12CC  
                                  __end_of_main 1308                                          ??_main 0016  
                                 __activetblptr 000002                                          _ANCON0 000F48  
                                        _ANCON1 000F49                                ___awdiv@dividend 0001  
                                        _ODCON1 000F42                                          _ODCON2 000F41  
                                        _ODCON3 000F40                                  __CFG_WDTEN$OFF 000000  
                                        _RCREG1 000FAF                                          _RCSTA1 000FAC  
                                        _OSCCON 000FD3                                          _SPBRG1 000FB0  
                                __CFG_WPCFG$OFF 000000                                          _TXREG1 000FAE  
                                        _TXSTA1 000FAD                                  __CFG_WPDIS$OFF 000000  
                         __size_of_decimalToBCD 0038                                  __CFG_XINST$OFF 000000  
                                        _TxData 0100                                       ??___aldiv 000F  
                                        ___wmul 136A                                       ??___awdiv 0005  
                                __CFG_STVREN$ON 000000                                       ??___awmod 0005  
                        __size_of_I2C_buffClear 0010                        ?_EUSART1_SetErrorHandler 0001  
                                        clear_0 1228                                          clear_1 123A  
                              ___awdiv@quotient 0007                                 ___awmod@divisor 0003  
                               ___awmod@counter 0005                ??_EUSART1_SetOverrunErrorHandler 0003  
               ?_EUSART1_SetOverrunErrorHandler 0001                                    __pdataCOMRAM 002C  
                                     ?_I2C_Init 0001                                    __mediumconst 0000  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                       ?_I2C_stop 0001  
                               __CFG_DSBOREN$ON 000000                                    _decimalToBCD 1308  
                              __end_ofexp@coeff 0F1F                               _SYSTEM_Initialize 13AA  
                              __end_oflog@coeff 0F3A                                      __accesstop 0060  
                       __end_of__initialization 1240                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                ?_MCP794x_setDate 000D  
                               __CFG_IOL1WAY$ON 000000                                ?_MCP794x_setTime 000D  
                          __CFG_WPEND$PAGE_WPFP 000000                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 0016                               ??_SPI1_Initialize 0001  
                               __CFG_DSWDTEN$ON 000000                                 __CFG_DSWDTPS$G2 000000  
                                    ??_I2C_Init 0015                                      ??_I2C_stop 0001  
                     __end_of_SYSTEM_Initialize 13C2                                   _I2C_buffClear 13C2  
                                    __pbssBANK1 0100                 __end_of_EUSART1_SetErrorHandler 1416  
                             __CFG_PLLSEL$PLL4X 000000                                ??_interrupt_Init 0001  
                                       ?___wmul 0001          __end_of_EUSART1_SetFramingErrorHandler 140C  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 1402  
                                       _REFOCON 000F3D                                         _OSCCON2 000F87  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000F7F  
                                       _SSP1ADD 000FC8                                         _SSP2ADD 000F74  
                                       _SSP1BUF 000FC9                                         _SSP2BUF 000F75  
                                ?_I2C_buffClear 0001                                       _I2C_Write 1390  
                                       __Hparam 0000                                         __Lparam 0000  
                                     _I2C_start 1416                                         ___aldiv 0F3E  
                                       ___awdiv 100A                                         ___awmod 108E  
                               __size_of___wmul 0026                                    __psmallconst 0F00  
                                       __pcinit 1200                                         __ramtop 0F00  
                                       __ptext0 12CC                                         __ptext1 13EE  
                                       __ptext2 13AA                                         __ptext3 13D2  
                                       __ptext4 124A                                         __ptext5 1340  
                                       __ptext6 1158                                         __ptext7 136A  
                                       __ptext8 0F3E                                         __ptext9 128E  
                         _OSCILLATOR_Initialize 1340                                ___awmod@dividend 0001  
                              ___aldiv@dividend 0007                              _EUSART1_Initialize 128E  
                      ??_PIN_MANAGER_Initialize 0001                      __size_of_SYSTEM_Initialize 0018  
                          end_of_initialization 1240                             ?_EUSART1_Initialize 0001  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 0027  
                                    ?_I2C_Write 0001                                      ?_I2C_start 0001  
                              ___aldiv@quotient 0011                                         postdec1 000FE5  
                                       postinc0 000FEE                            ??_EUSART1_Initialize 0003  
                        MCP794x_setDate@weekDay 000D                                       _PORTBbits 000F81  
                               ??_I2C_buffClear 0002                                       _TRISDbits 000F95  
                                     _TRISEbits 000F96                               __size_of_I2C_Init 0054  
              __size_of_EUSART1_SetErrorHandler 000A                               __size_of_I2C_stop 000A  
                               _SPI1_Initialize 13D2                               __CFG_WPFP$PAGE_63 000000  
                           __CFG_MSSP7B_EN$MSK7 000000                                  __end_of___wmul 1390  
                                 __pidataCOMRAM 13E0                           MCP794x_setTime@minute 000D  
                         MCP794x_setTime@second 000E                          ?_OSCILLATOR_Initialize 0001  
                           MCP794x_setDate@date 0012                             MCP794x_setDate@year 000F  
                           start_initialization 1200                 __size_of_PIN_MANAGER_Initialize 0044  
                                   ??_I2C_Write 0001                                     ??_I2C_start 0001  
                          decimalToBCD@DecValue 0009                                        ??___wmul 0005  
                             __CFG_ADCSEL$BIT10 000000                        __size_of_MCP794x_setDate 005A  
                      __size_of_MCP794x_setTime 0054                                 I2C_Init@F_clock 0015  
                                   __pbssCOMRAM 0017                             MCP794x_setTime@hour 0011  
                       __end_of_SPI1_Initialize 13E0                ??_EUSART1_SetFramingErrorHandler 0003  
               ?_EUSART1_SetFramingErrorHandler 0001                          _PIN_MANAGER_Initialize 124A  
                                      ?___aldiv 0007                                        ?___awdiv 0001  
                                      ?___awmod 0001                                     __smallconst 0F00  
                                      _BAUDCON1 000F7E              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      _I2C_Init 1158                            _EUSART1_ErrorHandler 0025  
                          __CFG_RTCOSC$T1OSCREF 000000                                        _I2C_stop 1420  
                       _EUSART1_SetErrorHandler 140C                                 ___aldiv@divisor 000B  
                               ___aldiv@counter 000F                                  ___wmul@product 0005  
       EUSART1_SetErrorHandler@interruptHandler 0001                                        _LATCbits 000F8B  
                                      _PIE3bits 000FA3                                        _PIR1bits 000F9E  
                                      _PIR3bits 000FA4                                __CFG_WDTPS$32768 000000  
                                      _SSP1CON1 000FC6                                        _SSP1STAT 000FC7  
                             ___wmul@multiplier 0001                                __CFG_SOSCSEL$DIG 000000  
                       __size_of_interrupt_Init 000A                               __CFG_CFGPLLEN$OFF 000000  
                             ??_MCP794x_setDate 0010                               ??_MCP794x_setTime 000F  
                              ?_SPI1_Initialize 0001                                     _INTCON2bits 000FF1  
                                     copy_data0 1214                                   ?_decimalToBCD 0009  
                                      __Hrparam 0000                                        __Lrparam 0000  
                                 I2C_Write@data 0001                         ??_OSCILLATOR_Initialize 0001  
                              __size_of___aldiv 00CC                                __size_of___awdiv 0084  
                              __size_of___awmod 0070                     __size_of_EUSART1_Initialize 003E  
                     ??_EUSART1_SetErrorHandler 0003                     _EUSART1_DefaultErrorHandler 000000  
                          PCF8523_setDate@F7776 0034                                        __ptext10 13F8  
                                      __ptext11 1402                                        __ptext20 1390  
                                      __ptext12 140C                                        __ptext21 1420  
                                      __ptext13 11AC                                        __ptext14 10FE  
                                      __ptext15 1308                                        __ptext16 108E  
                                      __ptext17 100A                                        __ptext18 13C2  
                                      __ptext19 1416                           __end_of_I2C_buffClear 13D2  
                                  _SSP1CON1bits 000FC6                                  ??_decimalToBCD 000B  
                                  _SSP2CON1bits 000F72                                    _SSP2CON2bits 000F71  
                                 __size_of_main 003C  EUSART1_SetOverrunErrorHandler@interruptHandler 0001  
                                  _SSP1STATbits 000FC7                     _EUSART1_FramingErrorHandler 0029  
                                  _SSP2STATbits 000F73                                        exp@coeff 0F01  
                                      log@coeff 0F1F                                      _INTCONbits 000FF2  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 1402  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 13F8  
                                    _RCSTA1bits 000FAC  EUSART1_SetFramingErrorHandler@interruptHandler 0001  
                            _eusart1RxLastError 002B                                  _interrupt_Init 13EE  
                                  ___aldiv@sign 0010                  __end_of_PIN_MANAGER_Initialize 128E  
                          PCF8523_setTime@F7769 002C  
