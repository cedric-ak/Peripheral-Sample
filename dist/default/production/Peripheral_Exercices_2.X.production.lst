

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat May 02 13:31:54 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46J13
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52  0000                     
    53                           ; Version 1.45
    54                           ; Generated 16/11/2017 GMT
    55                           ; 
    56                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18LF46J13 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    89  0000                     
    90 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    91  0000                     
    92 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    93  0000                     
    94                           	psect	idataBANK0
    95  002196                     __pidataBANK0:
    96                           	opt stack 0
    97                           
    98                           ;initializer for _columm
    99  002196  00                 	db	0
   100  002197  01                 	db	1
   101  002198  02                 	db	2
   102  002199  03                 	db	3
   103  00219A  04                 	db	4
   104  00219B  05                 	db	5
   105  00219C  06                 	db	6
   106  00219D  07                 	db	7
   107  00219E  08                 	db	8
   108  00219F  09                 	db	9
   109  0021A0  0A                 	db	10
   110  0021A1  0B                 	db	11
   111  0021A2  0C                 	db	12
   112  0021A3  0D                 	db	13
   113  0021A4  0E                 	db	14
   114  0021A5  0F                 	db	15
   115  0021A6  10                 	db	16
   116  0021A7  11                 	db	17
   117  0021A8  12                 	db	18
   118  0021A9  13                 	db	19
   119  0021AA  14                 	db	20
   120  0021AB  15                 	db	21
   121  0021AC  16                 	db	22
   122  0021AD  17                 	db	23
   123  0021AE  18                 	db	24
   124  0021AF  19                 	db	25
   125  0021B0  1A                 	db	26
   126  0021B1  1B                 	db	27
   127  0021B2  1C                 	db	28
   128  0021B3  1D                 	db	29
   129  0021B4  1E                 	db	30
   130  0021B5  1F                 	db	31
   131                           
   132                           ;initializer for PCF8523_setTime@F7836
   133  0021B6  0003               	dw	3
   134  0021B8  0004               	dw	4
   135  0021BA  0005               	dw	5
   136  0021BC  00                 	db	0
   137  0021BD  00                 	db	0
   138                           
   139                           ;initializer for _page
   140  0021BE  B0                 	db	176
   141  0021BF  B1                 	db	177
   142  0021C0  B2                 	db	178
   143  0021C1  B3                 	db	179
   144  0021C2  B4                 	db	180
   145  0021C3  B5                 	db	181
   146  0021C4  B6                 	db	182
   147  0021C5  B7                 	db	183
   148                           
   149                           ;initializer for PCF8523_setDate@F7843
   150  0021C6  06                 	db	6
   151  0021C7  07                 	db	7
   152  0021C8  08                 	db	8
   153  0021C9  09                 	db	9
   154  0021CA  00                 	db	0
   155                           
   156                           	psect	smallconst
   157  000F00                     __psmallconst:
   158                           	opt stack 0
   159  000F00  00                 	db	0
   160  000F01                     exp@coeff:
   161                           	opt stack 0
   162  000F01  00                 	db	0
   163  000F02  80                 	db	128
   164  000F03  3F                 	db	63
   165  000F04  72                 	db	114
   166  000F05  31                 	db	49
   167  000F06  3F                 	db	63
   168  000F07  FE                 	db	254
   169  000F08  75                 	db	117
   170  000F09  3E                 	db	62
   171  000F0A  58                 	db	88
   172  000F0B  63                 	db	99
   173  000F0C  3D                 	db	61
   174  000F0D  95                 	db	149
   175  000F0E  1D                 	db	29
   176  000F0F  3C                 	db	60
   177  000F10  C5                 	db	197
   178  000F11  AE                 	db	174
   179  000F12  3A                 	db	58
   180  000F13  79                 	db	121
   181  000F14  21                 	db	33
   182  000F15  39                 	db	57
   183  000F16  94                 	db	148
   184  000F17  80                 	db	128
   185  000F18  37                 	db	55
   186  000F19  93                 	db	147
   187  000F1A  A7                 	db	167
   188  000F1B  35                 	db	53
   189  000F1C  56                 	db	86
   190  000F1D  15                 	db	21
   191  000F1E  34                 	db	52
   192  000F1F                     __end_ofexp@coeff:
   193                           	opt stack 0
   194  000F1F                     log@coeff:
   195                           	opt stack 0
   196  000F1F  00                 	db	0
   197  000F20  00                 	db	0
   198  000F21  00                 	db	0
   199  000F22  00                 	db	0
   200  000F23  80                 	db	128
   201  000F24  3F                 	db	63
   202  000F25  F0                 	db	240
   203  000F26  FF                 	db	255
   204  000F27  BE                 	db	190
   205  000F28  E2                 	db	226
   206  000F29  A9                 	db	169
   207  000F2A  3E                 	db	62
   208  000F2B  83                 	db	131
   209  000F2C  76                 	db	118
   210  000F2D  BE                 	db	190
   211  000F2E  AE                 	db	174
   212  000F2F  2B                 	db	43
   213  000F30  3E                 	db	62
   214  000F31  3C                 	db	60
   215  000F32  C3                 	db	195
   216  000F33  BD                 	db	189
   217  000F34  D2                 	db	210
   218  000F35  13                 	db	19
   219  000F36  3D                 	db	61
   220  000F37  78                 	db	120
   221  000F38  D3                 	db	211
   222  000F39  BB                 	db	187
   223  000F3A                     __end_oflog@coeff:
   224                           	opt stack 0
   225  0000                     _ODCON3	set	3904
   226  0000                     _ODCON2	set	3905
   227  0000                     _ODCON1	set	3906
   228  0000                     _ANCON1	set	3913
   229  0000                     _ANCON0	set	3912
   230  0000                     _REFOCON	set	3901
   231  0000                     _LATEbits	set	3981
   232  0000                     _SSP2STATbits	set	3955
   233  0000                     _SSP2BUF	set	3957
   234  0000                     _SSP2ADD	set	3956
   235  0000                     _SSP2CON2bits	set	3953
   236  0000                     _SSP2CON1bits	set	3954
   237  0000                     _TRISDbits	set	3989
   238  0000                     _PIR3bits	set	4004
   239  0000                     _PIE3bits	set	4003
   240  0000                     _PORTBbits	set	3969
   241  0000                     _LATCbits	set	3979
   242  0000                     _TRISCbits	set	3988
   243  0000                     _INTCONbits	set	4082
   244  0000                     _TRISEbits	set	3990
   245  0000                     _INTCON2bits	set	4081
   246  0000                     _TRISD	set	3989
   247  0000                     _TRISC	set	3988
   248  0000                     _TRISB	set	3987
   249  0000                     _TRISA	set	3986
   250  0000                     _TRISE	set	3990
   251  0000                     _LATC	set	3979
   252  0000                     _LATB	set	3978
   253  0000                     _LATA	set	3977
   254  0000                     _LATD	set	3980
   255  0000                     _LATE	set	3981
   256  0000                     _OSCCON2	set	3975
   257  0000                     _OSCTUNE	set	3995
   258  0000                     _OSCCON	set	4051
   259  0000                     _TXREG1	set	4014
   260  0000                     _RCREG1	set	4015
   261  0000                     _RCSTA1bits	set	4012
   262  0000                     _TXSTA1bits	set	4013
   263  0000                     _PIR1bits	set	3998
   264  0000                     _SPBRGH1	set	3967
   265  0000                     _SPBRG1	set	4016
   266  0000                     _TXSTA1	set	4013
   267  0000                     _RCSTA1	set	4012
   268  0000                     _BAUDCON1	set	3966
   269  0000                     _SSP1STATbits	set	4039
   270  0000                     _SSP1BUF	set	4041
   271  0000                     _SSP1CON1bits	set	4038
   272  0000                     _SSP1ADD	set	4040
   273  0000                     _SSP1CON1	set	4038
   274  0000                     _SSP1STAT	set	4039
   275  000F3A  20                 	db	32
   276  000F3B  00                 	db	0
   277                           
   278                           ; #config settings
   279  000F3C  00                 	db	0	; dummy byte at the end
   280  0000                     
   281                           	psect	cinit
   282  00209C                     __pcinit:
   283                           	opt stack 0
   284  00209C                     start_initialization:
   285                           	opt stack 0
   286  00209C                     __initialization:
   287                           	opt stack 0
   288                           
   289                           ; Initialize objects allocated to BANK0 (53 bytes)
   290                           ; load TBLPTR registers with __pidataBANK0
   291  00209C  0E96               	movlw	low __pidataBANK0
   292  00209E  6EF6               	movwf	tblptrl,c
   293  0020A0  0E21               	movlw	high __pidataBANK0
   294  0020A2  6EF7               	movwf	tblptrh,c
   295  0020A4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   296  0020A6  6EF8               	movwf	tblptru,c
   297  0020A8  EE00  F060         	lfsr	0,__pdataBANK0
   298  0020AC  EE10 F035          	lfsr	1,53
   299  0020B0                     copy_data0:
   300  0020B0  0009               	tblrd		*+
   301  0020B2  CFF5 FFEE          	movff	tablat,postinc0
   302  0020B6  50E5               	movf	postdec1,w,c
   303  0020B8  50E1               	movf	fsr1l,w,c
   304  0020BA  E1FA               	bnz	copy_data0
   305                           
   306                           ; Clear objects allocated to BANK1 (100 bytes)
   307  0020BC  EE01  F000         	lfsr	0,__pbssBANK1
   308  0020C0  0E64               	movlw	100
   309  0020C2                     clear_0:
   310  0020C2  6AEE               	clrf	postinc0,c
   311  0020C4  06E8               	decf	wreg,f,c
   312  0020C6  E1FD               	bnz	clear_0
   313                           
   314                           ; Clear objects allocated to BANK0 (35 bytes)
   315  0020C8  EE00  F095         	lfsr	0,__pbssBANK0
   316  0020CC  0E23               	movlw	35
   317  0020CE                     clear_1:
   318  0020CE  6AEE               	clrf	postinc0,c
   319  0020D0  06E8               	decf	wreg,f,c
   320  0020D2  E1FD               	bnz	clear_1
   321  0020D4                     end_of_initialization:
   322                           	opt stack 0
   323  0020D4                     __end_of__initialization:
   324                           	opt stack 0
   325  0020D4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   326  0020D6  6EF8               	movwf	tblptru,c
   327  0020D8  0100               	movlb	0
   328  0020DA  EFD5  F00F         	goto	_main	;jump to C main() function
   329                           tblptru	equ	0xFF8
   330                           tblptrh	equ	0xFF7
   331                           tblptrl	equ	0xFF6
   332                           tablat	equ	0xFF5
   333                           postinc0	equ	0xFEE
   334                           wreg	equ	0xFE8
   335                           postdec1	equ	0xFE5
   336                           fsr1l	equ	0xFE1
   337                           
   338                           	psect	bssBANK0
   339  000095                     __pbssBANK0:
   340                           	opt stack 0
   341  000095                     _sData:
   342                           	opt stack 0
   343  000095                     	ds	10
   344  00009F                     _MCP342x_ADC:
   345                           	opt stack 0
   346  00009F                     	ds	4
   347  0000A3                     _bfSize:
   348                           	opt stack 0
   349  0000A3                     	ds	4
   350  0000A7                     _MAX31_ADC:
   351                           	opt stack 0
   352  0000A7                     	ds	4
   353  0000AB                     _errno:
   354                           	opt stack 0
   355  0000AB                     	ds	2
   356  0000AD                     _buffer:
   357                           	opt stack 0
   358  0000AD                     	ds	2
   359  0000AF                     _ADC:
   360                           	opt stack 0
   361  0000AF                     	ds	2
   362  0000B1                     _EUSART1_ErrorHandler:
   363                           	opt stack 0
   364  0000B1                     	ds	2
   365  0000B3                     _EUSART1_OverrunErrorHandler:
   366                           	opt stack 0
   367  0000B3                     	ds	2
   368  0000B5                     _EUSART1_FramingErrorHandler:
   369                           	opt stack 0
   370  0000B5                     	ds	2
   371  0000B7                     _eusart1RxLastError:
   372                           	opt stack 0
   373  0000B7                     	ds	1
   374                           tblptru	equ	0xFF8
   375                           tblptrh	equ	0xFF7
   376                           tblptrl	equ	0xFF6
   377                           tablat	equ	0xFF5
   378                           postinc0	equ	0xFEE
   379                           wreg	equ	0xFE8
   380                           postdec1	equ	0xFE5
   381                           fsr1l	equ	0xFE1
   382                           
   383                           	psect	dataBANK0
   384  000060                     __pdataBANK0:
   385                           	opt stack 0
   386  000060                     _columm:
   387                           	opt stack 0
   388  000060                     	ds	32
   389  000080                     PCF8523_setTime@F7836:
   390                           	opt stack 0
   391  000080                     	ds	8
   392  000088                     _page:
   393                           	opt stack 0
   394  000088                     	ds	8
   395  000090                     PCF8523_setDate@F7843:
   396                           	opt stack 0
   397  000090                     	ds	5
   398                           tblptru	equ	0xFF8
   399                           tblptrh	equ	0xFF7
   400                           tblptrl	equ	0xFF6
   401                           tablat	equ	0xFF5
   402                           postinc0	equ	0xFEE
   403                           wreg	equ	0xFE8
   404                           postdec1	equ	0xFE5
   405                           fsr1l	equ	0xFE1
   406                           
   407                           	psect	bssBANK1
   408  000100                     __pbssBANK1:
   409                           	opt stack 0
   410  000100                     _TxData:
   411                           	opt stack 0
   412  000100                     	ds	100
   413                           tblptru	equ	0xFF8
   414                           tblptrh	equ	0xFF7
   415                           tblptrl	equ	0xFF6
   416                           tablat	equ	0xFF5
   417                           postinc0	equ	0xFEE
   418                           wreg	equ	0xFE8
   419                           postdec1	equ	0xFE5
   420                           fsr1l	equ	0xFE1
   421                           
   422                           	psect	cstackBANK0
   423  0000B8                     __pcstackBANK0:
   424                           	opt stack 0
   425  0000B8                     _pow$2927:
   426                           	opt stack 0
   427                           
   428                           ; 3 bytes @ 0x0
   429  0000B8                     	ds	3
   430  0000BB                     _pow$2928:
   431                           	opt stack 0
   432                           
   433                           ; 3 bytes @ 0x3
   434  0000BB                     	ds	3
   435  0000BE                     pow@sign:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x6
   439  0000BE                     	ds	1
   440  0000BF                     pow@yi:
   441                           	opt stack 0
   442                           
   443                           ; 4 bytes @ 0x7
   444  0000BF                     	ds	4
   445  0000C3                     MCP342x_read@channel:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0xB
   449  0000C3                     	ds	2
   450  0000C5                     ??_MCP342x_read:
   451                           
   452                           ; 1 bytes @ 0xD
   453  0000C5                     	ds	4
   454  0000C9                     _MCP342x_read$2925:
   455                           	opt stack 0
   456                           
   457                           ; 3 bytes @ 0x11
   458  0000C9                     	ds	3
   459  0000CC                     _MCP342x_read$2926:
   460                           	opt stack 0
   461                           
   462                           ; 3 bytes @ 0x14
   463  0000CC                     	ds	3
   464  0000CF                     MCP342x_read@dataIndex:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x17
   468  0000CF                     	ds	2
   469  0000D1                     ??_main:
   470                           
   471                           ; 1 bytes @ 0x19
   472  0000D1                     	ds	2
   473                           tblptru	equ	0xFF8
   474                           tblptrh	equ	0xFF7
   475                           tblptrl	equ	0xFF6
   476                           tablat	equ	0xFF5
   477                           postinc0	equ	0xFEE
   478                           wreg	equ	0xFE8
   479                           postdec1	equ	0xFE5
   480                           fsr1l	equ	0xFE1
   481                           
   482                           	psect	cstackCOMRAM
   483  000001                     __pcstackCOMRAM:
   484                           	opt stack 0
   485  000001                     ??_OSCILLATOR_Initialize:
   486  000001                     ?___wmul:
   487                           	opt stack 0
   488  000001                     ?___ftpack:
   489                           	opt stack 0
   490  000001                     ?_frexp:
   491                           	opt stack 0
   492  000001                     ?___ftneg:
   493                           	opt stack 0
   494  000001                     I2C_Write@data:
   495                           	opt stack 0
   496  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
   497                           	opt stack 0
   498  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   499                           	opt stack 0
   500  000001                     EUSART1_SetErrorHandler@interruptHandler:
   501                           	opt stack 0
   502  000001                     I2C_read@ACK_NACK:
   503                           	opt stack 0
   504  000001                     ___wmul@multiplier:
   505                           	opt stack 0
   506  000001                     ___ftpack@arg:
   507                           	opt stack 0
   508  000001                     ___ftge@ff1:
   509                           	opt stack 0
   510  000001                     ___ftneg@f1:
   511                           	opt stack 0
   512  000001                     frexp@value:
   513                           	opt stack 0
   514                           
   515                           ; 3 bytes @ 0x0
   516  000001                     	ds	1
   517  000002                     
   518                           ; 1 bytes @ 0x1
   519  000002                     	ds	1
   520  000003                     ___wmul@multiplicand:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x2
   524  000003                     	ds	1
   525  000004                     ___ftpack@exp:
   526                           	opt stack 0
   527  000004                     frexp@eptr:
   528                           	opt stack 0
   529  000004                     ___ftge@ff2:
   530                           	opt stack 0
   531                           
   532                           ; 3 bytes @ 0x3
   533  000004                     	ds	1
   534  000005                     ___ftpack@sign:
   535                           	opt stack 0
   536  000005                     ___wmul@product:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x4
   540  000005                     	ds	1
   541  000006                     ??___ftpack:
   542  000006                     ??_frexp:
   543                           
   544                           ; 1 bytes @ 0x5
   545  000006                     	ds	1
   546  000007                     ??___ftge:
   547  000007                     ?___aldiv:
   548                           	opt stack 0
   549  000007                     ___aldiv@dividend:
   550                           	opt stack 0
   551                           
   552                           ; 4 bytes @ 0x6
   553  000007                     	ds	2
   554  000009                     ?___awtoft:
   555                           	opt stack 0
   556  000009                     ?___lltoft:
   557                           	opt stack 0
   558  000009                     ___awtoft@c:
   559                           	opt stack 0
   560  000009                     ___lltoft@c:
   561                           	opt stack 0
   562                           
   563                           ; 4 bytes @ 0x8
   564  000009                     	ds	2
   565  00000B                     ___aldiv@divisor:
   566                           	opt stack 0
   567                           
   568                           ; 4 bytes @ 0xA
   569  00000B                     	ds	1
   570  00000C                     ___awtoft@sign:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0xB
   574  00000C                     	ds	1
   575  00000D                     ??___lltoft:
   576                           
   577                           ; 1 bytes @ 0xC
   578  00000D                     	ds	2
   579  00000F                     ___aldiv@counter:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0xE
   583  00000F                     	ds	1
   584  000010                     ___aldiv@sign:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0xF
   588  000010                     	ds	1
   589  000011                     ___lltoft@exp:
   590                           	opt stack 0
   591  000011                     ___aldiv@quotient:
   592                           	opt stack 0
   593                           
   594                           ; 4 bytes @ 0x10
   595  000011                     	ds	1
   596  000012                     ?___ftmul:
   597                           	opt stack 0
   598  000012                     ___ftmul@f1:
   599                           	opt stack 0
   600                           
   601                           ; 3 bytes @ 0x11
   602  000012                     	ds	3
   603  000015                     I2C_Init@F_clock:
   604                           	opt stack 0
   605  000015                     ___ftmul@f2:
   606                           	opt stack 0
   607                           
   608                           ; 3 bytes @ 0x14
   609  000015                     	ds	1
   610  000016                     
   611                           ; 1 bytes @ 0x15
   612  000016                     	ds	2
   613  000018                     ??___ftmul:
   614                           
   615                           ; 1 bytes @ 0x17
   616  000018                     	ds	3
   617  00001B                     ___ftmul@exp:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x1A
   621  00001B                     	ds	1
   622  00001C                     ___ftmul@f3_as_product:
   623                           	opt stack 0
   624                           
   625                           ; 3 bytes @ 0x1B
   626  00001C                     	ds	3
   627  00001F                     ___ftmul@cntr:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x1E
   631  00001F                     	ds	1
   632  000020                     ___ftmul@sign:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x1F
   636  000020                     	ds	1
   637  000021                     ?___ftadd:
   638                           	opt stack 0
   639  000021                     ?___ftdiv:
   640                           	opt stack 0
   641  000021                     ___ftadd@f1:
   642                           	opt stack 0
   643  000021                     ___ftdiv@f1:
   644                           	opt stack 0
   645                           
   646                           ; 3 bytes @ 0x20
   647  000021                     	ds	3
   648  000024                     ___ftadd@f2:
   649                           	opt stack 0
   650  000024                     ___ftdiv@f2:
   651                           	opt stack 0
   652                           
   653                           ; 3 bytes @ 0x23
   654  000024                     	ds	3
   655  000027                     ??___ftadd:
   656  000027                     ??___ftdiv:
   657                           
   658                           ; 1 bytes @ 0x26
   659  000027                     	ds	3
   660  00002A                     ___ftadd@sign:
   661                           	opt stack 0
   662  00002A                     ___ftdiv@cntr:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x29
   666  00002A                     	ds	1
   667  00002B                     ___ftadd@exp2:
   668                           	opt stack 0
   669  00002B                     ___ftdiv@f3:
   670                           	opt stack 0
   671                           
   672                           ; 3 bytes @ 0x2A
   673  00002B                     	ds	1
   674  00002C                     ___ftadd@exp1:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x2B
   678  00002C                     	ds	1
   679  00002D                     ?___ftsub:
   680                           	opt stack 0
   681  00002D                     ?_eval_poly:
   682                           	opt stack 0
   683  00002D                     ___ftsub@f1:
   684                           	opt stack 0
   685  00002D                     eval_poly@x:
   686                           	opt stack 0
   687                           
   688                           ; 3 bytes @ 0x2C
   689  00002D                     	ds	1
   690  00002E                     ___ftdiv@exp:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x2D
   694  00002E                     	ds	1
   695  00002F                     ___ftdiv@sign:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0x2E
   699  00002F                     	ds	1
   700  000030                     ?___fttol:
   701                           	opt stack 0
   702  000030                     eval_poly@d:
   703                           	opt stack 0
   704  000030                     ___ftsub@f2:
   705                           	opt stack 0
   706  000030                     ___fttol@f1:
   707                           	opt stack 0
   708                           
   709                           ; 3 bytes @ 0x2F
   710  000030                     	ds	2
   711  000032                     eval_poly@n:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x31
   715  000032                     	ds	1
   716  000033                     
   717                           ; 1 bytes @ 0x32
   718  000033                     	ds	1
   719  000034                     ??_eval_poly:
   720  000034                     ??___fttol:
   721                           
   722                           ; 1 bytes @ 0x33
   723  000034                     	ds	2
   724  000036                     eval_poly@res:
   725                           	opt stack 0
   726                           
   727                           ; 3 bytes @ 0x35
   728  000036                     	ds	3
   729  000039                     ?_log:
   730                           	opt stack 0
   731  000039                     ?_ldexp:
   732                           	opt stack 0
   733  000039                     ___fttol@sign1:
   734                           	opt stack 0
   735  000039                     ldexp@value:
   736                           	opt stack 0
   737  000039                     log@x:
   738                           	opt stack 0
   739                           
   740                           ; 3 bytes @ 0x38
   741  000039                     	ds	1
   742  00003A                     ___fttol@lval:
   743                           	opt stack 0
   744                           
   745                           ; 4 bytes @ 0x39
   746  00003A                     	ds	2
   747  00003C                     ldexp@newexp:
   748                           	opt stack 0
   749  00003C                     log@exponent:
   750                           	opt stack 0
   751                           
   752                           ; 2 bytes @ 0x3B
   753  00003C                     	ds	2
   754  00003E                     ??_ldexp:
   755  00003E                     ___fttol@exp1:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x3D
   759  00003E                     	ds	1
   760  00003F                     ?___altoft:
   761                           	opt stack 0
   762  00003F                     ___altoft@c:
   763                           	opt stack 0
   764                           
   765                           ; 4 bytes @ 0x3E
   766  00003F                     	ds	4
   767  000043                     ??___altoft:
   768                           
   769                           ; 1 bytes @ 0x42
   770  000043                     	ds	4
   771  000047                     ___altoft@exp:
   772                           	opt stack 0
   773                           
   774                           ; 1 bytes @ 0x46
   775  000047                     	ds	1
   776  000048                     ___altoft@sign:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x47
   780  000048                     	ds	1
   781  000049                     ?_floor:
   782                           	opt stack 0
   783  000049                     floor@x:
   784                           	opt stack 0
   785                           
   786                           ; 3 bytes @ 0x48
   787  000049                     	ds	3
   788  00004C                     floor@i:
   789                           	opt stack 0
   790                           
   791                           ; 3 bytes @ 0x4B
   792  00004C                     	ds	3
   793  00004F                     floor@expon:
   794                           	opt stack 0
   795                           
   796                           ; 2 bytes @ 0x4E
   797  00004F                     	ds	2
   798  000051                     ?_exp:
   799                           	opt stack 0
   800  000051                     exp@x:
   801                           	opt stack 0
   802                           
   803                           ; 3 bytes @ 0x50
   804  000051                     	ds	3
   805  000054                     _exp$2929:
   806                           	opt stack 0
   807                           
   808                           ; 3 bytes @ 0x53
   809  000054                     	ds	3
   810  000057                     exp@exponent:
   811                           	opt stack 0
   812                           
   813                           ; 2 bytes @ 0x56
   814  000057                     	ds	2
   815  000059                     exp@sign:
   816                           	opt stack 0
   817                           
   818                           ; 1 bytes @ 0x58
   819  000059                     	ds	1
   820  00005A                     ?_pow:
   821                           	opt stack 0
   822  00005A                     pow@x:
   823                           	opt stack 0
   824                           
   825                           ; 3 bytes @ 0x59
   826  00005A                     	ds	3
   827  00005D                     pow@y:
   828                           	opt stack 0
   829                           
   830                           ; 3 bytes @ 0x5C
   831  00005D                     	ds	3
   832  000060                     tblptru	equ	0xFF8
   833                           tblptrh	equ	0xFF7
   834                           tblptrl	equ	0xFF6
   835                           tablat	equ	0xFF5
   836                           postinc0	equ	0xFEE
   837                           wreg	equ	0xFE8
   838                           postdec1	equ	0xFE5
   839                           fsr1l	equ	0xFE1
   840                           
   841                           ; 1 bytes @ 0x5F
   842 ;;
   843 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   844 ;;
   845 ;; *************** function _main *****************
   846 ;; Defined at:
   847 ;;		line 5 in file "main.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   863 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   864 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   865 ;;Total ram usage:        2 bytes
   866 ;; Hardware stack levels required when called:    6
   867 ;; This function calls:
   868 ;;		_I2C_buffClear
   869 ;;		_MCP342x_read
   870 ;;		_SYSTEM_Initialize
   871 ;;		_interrupt_Init
   872 ;; This function is called by:
   873 ;;		Startup code after reset
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	text0
   878  001FAA                     __ptext0:
   879                           	opt stack 0
   880  001FAA                     _main:
   881                           	opt stack 25
   882                           
   883                           ;main.c: 7: interrupt_Init();
   884                           
   885                           ;incstack = 0
   886  001FAA  EC54  F011         	call	_interrupt_Init	;wreg free
   887                           
   888                           ;main.c: 8: SYSTEM_Initialize();
   889  001FAE  EC2D  F011         	call	_SYSTEM_Initialize	;wreg free
   890                           
   891                           ;main.c: 9: do { TRISCbits.TRISC0 = 0; } while(0);
   892  001FB2  9094               	bcf	3988,0,c	;volatile
   893                           
   894                           ;main.c: 10: I2C_buffClear();
   895  001FB4  EC45  F011         	call	_I2C_buffClear	;wreg free
   896                           
   897                           ;main.c: 11: _delay((unsigned long)((10)*(16000000/4000.0)));
   898  001FB8  0E34               	movlw	52
   899  001FBA  0100               	movlb	0	; () banked
   900  001FBC  6FD1               	movwf	??_main& (0+255),b
   901  001FBE  0EF1               	movlw	241
   902  001FC0                     u3777:
   903  001FC0  2EE8               	decfsz	wreg,f,c
   904  001FC2  D7FE               	bra	u3777
   905  001FC4  2FD1               	decfsz	??_main& (0+255),f,b
   906  001FC6  D7FC               	bra	u3777
   907  001FC8  D000               	nop2	
   908                           
   909                           ;main.c: 13: _delay((unsigned long)((300)*(16000000/4000000.0)));
   910  001FCA  0EF0               	movlw	240
   911  001FCC                     u3787:
   912  001FCC  D000               	nop2	
   913  001FCE  2EE8               	decfsz	wreg,f,c
   914  001FD0  D7FD               	bra	u3787
   915                           
   916                           ;main.c: 15: _delay((unsigned long)((300)*(16000000/4000000.0)));
   917  001FD2  0EF0               	movlw	240
   918  001FD4                     u3797:
   919  001FD4  D000               	nop2	
   920  001FD6  2EE8               	decfsz	wreg,f,c
   921  001FD8  D7FD               	bra	u3797
   922  001FDA                     
   923                           ;main.c: 18: MCP342x_read(0x01);
   924  001FDA  0E00               	movlw	0
   925  001FDC  0100               	movlb	0	; () banked
   926  001FDE  6FC4               	movwf	(MCP342x_read@channel+1)& (0+255),b
   927  001FE0  0E01               	movlw	1
   928  001FE2  6FC3               	movwf	MCP342x_read@channel& (0+255),b
   929  001FE4  EC69  F009         	call	_MCP342x_read	;wreg free
   930                           
   931                           ;main.c: 19: _delay((unsigned long)((500)*(16000000/4000.0)));
   932  001FE8  0E0B               	movlw	11
   933  001FEA  0100               	movlb	0	; () banked
   934  001FEC  6FD2               	movwf	(??_main+1)& (0+255),b
   935  001FEE  0E26               	movlw	38
   936  001FF0  6FD1               	movwf	??_main& (0+255),b
   937  001FF2  0E5D               	movlw	93
   938  001FF4                     u3807:
   939  001FF4  2EE8               	decfsz	wreg,f,c
   940  001FF6  D7FE               	bra	u3807
   941  001FF8  2FD1               	decfsz	??_main& (0+255),f,b
   942  001FFA  D7FC               	bra	u3807
   943  001FFC  2FD2               	decfsz	(??_main+1)& (0+255),f,b
   944  001FFE  D7FA               	bra	u3807
   945  002000  D000               	nop2	
   946  002002  D7EB               	goto	l272
   947  002004                     __end_of_main:
   948                           	opt stack 0
   949                           tblptru	equ	0xFF8
   950                           tblptrh	equ	0xFF7
   951                           tblptrl	equ	0xFF6
   952                           tablat	equ	0xFF5
   953                           postinc0	equ	0xFEE
   954                           wreg	equ	0xFE8
   955                           postdec1	equ	0xFE5
   956                           fsr1l	equ	0xFE1
   957                           
   958 ;; *************** function _interrupt_Init *****************
   959 ;; Defined at:
   960 ;;		line 15 in file "Interrupt.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;		None
   963 ;; Auto vars:     Size  Location     Type
   964 ;;		None
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		None
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   978 ;;Total ram usage:        0 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text1
   988  0022A8                     __ptext1:
   989                           	opt stack 0
   990  0022A8                     _interrupt_Init:
   991                           	opt stack 30
   992                           
   993                           ;Interrupt.c: 16: INTCONbits.GIE = 1;
   994                           
   995                           ;incstack = 0
   996  0022A8  8EF2               	bsf	intcon,7,c	;volatile
   997                           
   998                           ;Interrupt.c: 17: INTCONbits.PEIE = 1;
   999  0022AA  8CF2               	bsf	intcon,6,c	;volatile
  1000                           
  1001                           ;Interrupt.c: 18: PIE3bits.SSP2IE = 1;
  1002  0022AC  8EA3               	bsf	4003,7,c	;volatile
  1003                           
  1004                           ;Interrupt.c: 19: PIR3bits.SSP2IF = 0;
  1005  0022AE  9EA4               	bcf	4004,7,c	;volatile
  1006  0022B0  0012               	return		;funcret
  1007  0022B2                     __end_of_interrupt_Init:
  1008                           	opt stack 0
  1009                           tblptru	equ	0xFF8
  1010                           tblptrh	equ	0xFF7
  1011                           tblptrl	equ	0xFF6
  1012                           tablat	equ	0xFF5
  1013                           intcon	equ	0xFF2
  1014                           postinc0	equ	0xFEE
  1015                           wreg	equ	0xFE8
  1016                           postdec1	equ	0xFE5
  1017                           fsr1l	equ	0xFE1
  1018                           
  1019 ;; *************** function _SYSTEM_Initialize *****************
  1020 ;; Defined at:
  1021 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1039 ;;Total ram usage:        0 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    2
  1042 ;; This function calls:
  1043 ;;		_EUSART1_Initialize
  1044 ;;		_I2C_Init
  1045 ;;		_OSCILLATOR_Initialize
  1046 ;;		_PIN_MANAGER_Initialize
  1047 ;;		_SPI1_Initialize
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text2
  1054  00225A                     __ptext2:
  1055                           	opt stack 0
  1056  00225A                     _SYSTEM_Initialize:
  1057                           	opt stack 28
  1058                           
  1059                           ;mcc.c: 52: PIN_MANAGER_Initialize();
  1060                           
  1061                           ;incstack = 0
  1062  00225A  EC2C  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  1063                           
  1064                           ;mcc.c: 53: OSCILLATOR_Initialize();
  1065  00225E  ECE6  F010         	call	_OSCILLATOR_Initialize	;wreg free
  1066                           
  1067                           ;mcc.c: 54: SPI1_Initialize();
  1068  002262  EC4D  F011         	call	_SPI1_Initialize	;wreg free
  1069                           
  1070                           ;mcc.c: 55: EUSART1_Initialize();
  1071  002266  EC6F  F010         	call	_EUSART1_Initialize	;wreg free
  1072                           
  1073                           ;mcc.c: 56: I2C_Init(100);
  1074  00226A  0E64               	movlw	100
  1075  00226C  EC02  F010         	call	_I2C_Init
  1076  002270  0012               	return		;funcret
  1077  002272                     __end_of_SYSTEM_Initialize:
  1078                           	opt stack 0
  1079                           tblptru	equ	0xFF8
  1080                           tblptrh	equ	0xFF7
  1081                           tblptrl	equ	0xFF6
  1082                           tablat	equ	0xFF5
  1083                           intcon	equ	0xFF2
  1084                           postinc0	equ	0xFEE
  1085                           wreg	equ	0xFE8
  1086                           postdec1	equ	0xFE5
  1087                           fsr1l	equ	0xFE1
  1088                           
  1089 ;; *************** function _SPI1_Initialize *****************
  1090 ;; Defined at:
  1091 ;;		line 65 in file "mcc_generated_files/spi1.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;		None
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg, status,2
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1109 ;;Total ram usage:        0 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; This function calls:
  1112 ;;		Nothing
  1113 ;; This function is called by:
  1114 ;;		_SYSTEM_Initialize
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text3
  1119  00229A                     __ptext3:
  1120                           	opt stack 0
  1121  00229A                     _SPI1_Initialize:
  1122                           	opt stack 29
  1123                           
  1124                           ;spi1.c: 70: SSP1STAT = 0x80;
  1125                           
  1126                           ;incstack = 0
  1127  00229A  0E80               	movlw	128
  1128  00229C  6EC7               	movwf	4039,c	;volatile
  1129                           
  1130                           ;spi1.c: 73: SSP1CON1 = 0x20;
  1131  00229E  0E20               	movlw	32
  1132  0022A0  6EC6               	movwf	4038,c	;volatile
  1133                           
  1134                           ;spi1.c: 76: SSP1ADD = 0x00;
  1135  0022A2  0E00               	movlw	0
  1136  0022A4  6EC8               	movwf	4040,c	;volatile
  1137  0022A6  0012               	return		;funcret
  1138  0022A8                     __end_of_SPI1_Initialize:
  1139                           	opt stack 0
  1140                           tblptru	equ	0xFF8
  1141                           tblptrh	equ	0xFF7
  1142                           tblptrl	equ	0xFF6
  1143                           tablat	equ	0xFF5
  1144                           intcon	equ	0xFF2
  1145                           postinc0	equ	0xFEE
  1146                           wreg	equ	0xFE8
  1147                           postdec1	equ	0xFE5
  1148                           fsr1l	equ	0xFE1
  1149                           
  1150 ;; *************** function _PIN_MANAGER_Initialize *****************
  1151 ;; Defined at:
  1152 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1170 ;;Total ram usage:        0 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; This function calls:
  1173 ;;		Nothing
  1174 ;; This function is called by:
  1175 ;;		_SYSTEM_Initialize
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           	psect	text4
  1180  002058                     __ptext4:
  1181                           	opt stack 0
  1182  002058                     _PIN_MANAGER_Initialize:
  1183                           	opt stack 29
  1184                           
  1185                           ;pin_manager.c: 57: LATE = 0x04;
  1186                           
  1187                           ;incstack = 0
  1188  002058  0E04               	movlw	4
  1189  00205A  6E8D               	movwf	3981,c	;volatile
  1190                           
  1191                           ;pin_manager.c: 58: LATD = 0x00;
  1192  00205C  0E00               	movlw	0
  1193  00205E  6E8C               	movwf	3980,c	;volatile
  1194                           
  1195                           ;pin_manager.c: 59: LATA = 0x00;
  1196  002060  0E00               	movlw	0
  1197  002062  6E89               	movwf	3977,c	;volatile
  1198                           
  1199                           ;pin_manager.c: 60: LATB = 0x00;
  1200  002064  0E00               	movlw	0
  1201  002066  6E8A               	movwf	3978,c	;volatile
  1202                           
  1203                           ;pin_manager.c: 61: LATC = 0x01;
  1204  002068  0E01               	movlw	1
  1205  00206A  6E8B               	movwf	3979,c	;volatile
  1206                           
  1207                           ;pin_manager.c: 66: TRISE = 0xC3;
  1208  00206C  0EC3               	movlw	195
  1209  00206E  6E96               	movwf	3990,c	;volatile
  1210                           
  1211                           ;pin_manager.c: 67: TRISA = 0xEF;
  1212  002070  0EEF               	movlw	239
  1213  002072  6E92               	movwf	3986,c	;volatile
  1214                           
  1215                           ;pin_manager.c: 68: TRISB = 0xDF;
  1216  002074  0EDF               	movlw	223
  1217  002076  6E93               	movwf	3987,c	;volatile
  1218                           
  1219                           ;pin_manager.c: 69: TRISC = 0x96;
  1220  002078  0E96               	movlw	150
  1221  00207A  6E94               	movwf	3988,c	;volatile
  1222                           
  1223                           ;pin_manager.c: 70: TRISD = 0xFF;
  1224  00207C  6895               	setf	3989,c	;volatile
  1225                           
  1226                           ;pin_manager.c: 75: ANCON0 = 0x80;
  1227  00207E  0E80               	movlw	128
  1228  002080  010F               	movlb	15	; () banked
  1229  002082  6F48               	movwf	72,b	;volatile
  1230                           
  1231                           ;pin_manager.c: 76: ANCON1 = 0x10;
  1232  002084  0E10               	movlw	16
  1233  002086  6F49               	movwf	73,b	;volatile
  1234                           
  1235                           ; BSR set to: 15
  1236                           ;pin_manager.c: 81: INTCON2bits.nRBPU = 1;
  1237  002088  8EF1               	bsf	intcon2,7,c	;volatile
  1238                           
  1239                           ; BSR set to: 15
  1240                           ;pin_manager.c: 82: TRISEbits.RDPU = 1;
  1241  00208A  8E96               	bsf	3990,7,c	;volatile
  1242                           
  1243                           ; BSR set to: 15
  1244                           ;pin_manager.c: 83: TRISEbits.REPU = 1;
  1245  00208C  8C96               	bsf	3990,6,c	;volatile
  1246                           
  1247                           ;pin_manager.c: 88: ODCON1 = 0x00;
  1248  00208E  0E00               	movlw	0
  1249  002090  6F42               	movwf	66,b	;volatile
  1250                           
  1251                           ;pin_manager.c: 89: ODCON2 = 0x00;
  1252  002092  0E00               	movlw	0
  1253  002094  6F41               	movwf	65,b	;volatile
  1254                           
  1255                           ;pin_manager.c: 90: ODCON3 = 0x00;
  1256  002096  0E00               	movlw	0
  1257  002098  6F40               	movwf	64,b	;volatile
  1258                           
  1259                           ; BSR set to: 15
  1260  00209A  0012               	return		;funcret
  1261  00209C                     __end_of_PIN_MANAGER_Initialize:
  1262                           	opt stack 0
  1263                           tblptru	equ	0xFF8
  1264                           tblptrh	equ	0xFF7
  1265                           tblptrl	equ	0xFF6
  1266                           tablat	equ	0xFF5
  1267                           intcon	equ	0xFF2
  1268                           intcon2	equ	0xFF1
  1269                           postinc0	equ	0xFEE
  1270                           wreg	equ	0xFE8
  1271                           postdec1	equ	0xFE5
  1272                           fsr1l	equ	0xFE1
  1273                           
  1274 ;; *************** function _OSCILLATOR_Initialize *****************
  1275 ;; Defined at:
  1276 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, status,2
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1292 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1293 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1294 ;;Total ram usage:        2 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; This function calls:
  1297 ;;		Nothing
  1298 ;; This function is called by:
  1299 ;;		_SYSTEM_Initialize
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text5
  1304  0021CC                     __ptext5:
  1305                           	opt stack 0
  1306  0021CC                     _OSCILLATOR_Initialize:
  1307                           	opt stack 29
  1308                           
  1309                           ;mcc.c: 62: OSCCON = 0x70;
  1310                           
  1311                           ; BSR set to: 15
  1312                           ;incstack = 0
  1313  0021CC  0E70               	movlw	112
  1314  0021CE  6ED3               	movwf	4051,c	;volatile
  1315                           
  1316                           ;mcc.c: 64: OSCTUNE = 0x00;
  1317  0021D0  0E00               	movlw	0
  1318  0021D2  6E9B               	movwf	3995,c	;volatile
  1319                           
  1320                           ;mcc.c: 66: REFOCON = 0x00;
  1321  0021D4  0E00               	movlw	0
  1322  0021D6  010F               	movlb	15	; () banked
  1323  0021D8  6F3D               	movwf	61,b	;volatile
  1324                           
  1325                           ;mcc.c: 68: OSCCON2 = 0x14;
  1326  0021DA  0E14               	movlw	20
  1327  0021DC  6E87               	movwf	3975,c	;volatile
  1328                           
  1329                           ; BSR set to: 15
  1330                           ;mcc.c: 69: _delay((unsigned long)((500)*(16000000/4000.0)));
  1331  0021DE  0E0B               	movlw	11
  1332  0021E0  6E02               	movwf	(??_OSCILLATOR_Initialize+1)& (0+255),c
  1333  0021E2  0E26               	movlw	38
  1334  0021E4  6E01               	movwf	??_OSCILLATOR_Initialize& (0+255),c
  1335  0021E6  0E5E               	movlw	94
  1336  0021E8                     u3817:
  1337  0021E8  2EE8               	decfsz	wreg,f,c
  1338  0021EA  D7FE               	bra	u3817
  1339  0021EC  2E01               	decfsz	??_OSCILLATOR_Initialize& (0+255),f,c
  1340  0021EE  D7FC               	bra	u3817
  1341  0021F0  2E02               	decfsz	(??_OSCILLATOR_Initialize+1)& (0+255),f,c
  1342  0021F2  D7FA               	bra	u3817
  1343  0021F4  0012               	return		;funcret
  1344  0021F6                     __end_of_OSCILLATOR_Initialize:
  1345                           	opt stack 0
  1346                           tblptru	equ	0xFF8
  1347                           tblptrh	equ	0xFF7
  1348                           tblptrl	equ	0xFF6
  1349                           tablat	equ	0xFF5
  1350                           intcon	equ	0xFF2
  1351                           intcon2	equ	0xFF1
  1352                           postinc0	equ	0xFEE
  1353                           wreg	equ	0xFE8
  1354                           postdec1	equ	0xFE5
  1355                           fsr1l	equ	0xFE1
  1356                           
  1357 ;; *************** function _I2C_Init *****************
  1358 ;; Defined at:
  1359 ;;		line 20 in file "I2C.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;  F_clock         1    wreg     unsigned char 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  F_clock         1   20[COMRAM] unsigned char 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      void 
  1366 ;; Registers used:
  1367 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1376 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1377 ;;Total ram usage:        1 bytes
  1378 ;; Hardware stack levels used:    1
  1379 ;; Hardware stack levels required when called:    1
  1380 ;; This function calls:
  1381 ;;		___aldiv
  1382 ;;		___wmul
  1383 ;; This function is called by:
  1384 ;;		_SYSTEM_Initialize
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text6
  1389  002004                     __ptext6:
  1390                           	opt stack 0
  1391  002004                     _I2C_Init:
  1392                           	opt stack 28
  1393                           
  1394                           ;incstack = 0
  1395                           ;I2C_Init@F_clock stored from wreg
  1396  002004  6E15               	movwf	I2C_Init@F_clock,c
  1397                           
  1398                           ;I2C.c: 21: TRISDbits.TRISD0 = 1;
  1399  002006  8095               	bsf	3989,0,c	;volatile
  1400                           
  1401                           ;I2C.c: 22: TRISDbits.TRISD1 = 1;
  1402  002008  8295               	bsf	3989,1,c	;volatile
  1403                           
  1404                           ;I2C.c: 23: SSP2CON1bits.WCOL = 0;
  1405  00200A  9E72               	bcf	3954,7,c	;volatile
  1406                           
  1407                           ;I2C.c: 24: SSP2CON1bits.SSPEN = 1;
  1408  00200C  8A72               	bsf	3954,5,c	;volatile
  1409                           
  1410                           ;I2C.c: 25: SSP2CON1bits.SSPM = 0x08;
  1411  00200E  5072               	movf	3954,w,c	;volatile
  1412  002010  0BF0               	andlw	-16
  1413  002012  0908               	iorlw	8
  1414  002014  6E72               	movwf	3954,c	;volatile
  1415                           
  1416                           ;I2C.c: 26: SSP2CON2bits.ACKDT = 0;
  1417  002016  9A71               	bcf	3953,5,c	;volatile
  1418                           
  1419                           ;I2C.c: 27: SSP2CON2bits.ACKEN = 1;
  1420  002018  8871               	bsf	3953,4,c	;volatile
  1421                           
  1422                           ;I2C.c: 28: SSP2ADD = (16000000 / ((F_clock * 1000) * 4)) - 1;
  1423  00201A  0E00               	movlw	0
  1424  00201C  6E07               	movwf	___aldiv@dividend,c
  1425  00201E  0E24               	movlw	36
  1426  002020  6E08               	movwf	___aldiv@dividend+1,c
  1427  002022  0EF4               	movlw	244
  1428  002024  6E09               	movwf	___aldiv@dividend+2,c
  1429  002026  0E00               	movlw	0
  1430  002028  6E0A               	movwf	___aldiv@dividend+3,c
  1431  00202A  C015  F001         	movff	I2C_Init@F_clock,___wmul@multiplier
  1432  00202E  6A02               	clrf	___wmul@multiplier+1,c
  1433  002030  0E0F               	movlw	15
  1434  002032  6E04               	movwf	___wmul@multiplicand+1,c
  1435  002034  0EA0               	movlw	160
  1436  002036  6E03               	movwf	___wmul@multiplicand,c
  1437  002038  ECFB  F010         	call	___wmul	;wreg free
  1438  00203C  C001  F00B         	movff	?___wmul,___aldiv@divisor
  1439  002040  C002  F00C         	movff	?___wmul+1,___aldiv@divisor+1
  1440  002044  0E00               	movlw	0
  1441  002046  BE0C               	btfsc	___aldiv@divisor+1,7,c
  1442  002048  0EFF               	movlw	-1
  1443  00204A  6E0D               	movwf	___aldiv@divisor+2,c
  1444  00204C  6E0E               	movwf	___aldiv@divisor+3,c
  1445  00204E  ECBB  F00D         	call	___aldiv	;wreg free
  1446  002052  0407               	decf	?___aldiv,w,c
  1447  002054  6E74               	movwf	3956,c	;volatile
  1448  002056  0012               	return		;funcret
  1449  002058                     __end_of_I2C_Init:
  1450                           	opt stack 0
  1451                           tblptru	equ	0xFF8
  1452                           tblptrh	equ	0xFF7
  1453                           tblptrl	equ	0xFF6
  1454                           tablat	equ	0xFF5
  1455                           intcon	equ	0xFF2
  1456                           intcon2	equ	0xFF1
  1457                           postinc0	equ	0xFEE
  1458                           wreg	equ	0xFE8
  1459                           postdec1	equ	0xFE5
  1460                           fsr1l	equ	0xFE1
  1461                           
  1462 ;; *************** function ___aldiv *****************
  1463 ;; Defined at:
  1464 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  dividend        4    6[COMRAM] long 
  1467 ;;  divisor         4   10[COMRAM] long 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  quotient        4   16[COMRAM] long 
  1470 ;;  sign            1   15[COMRAM] unsigned char 
  1471 ;;  counter         1   14[COMRAM] unsigned char 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  4    6[COMRAM] long 
  1474 ;; Registers used:
  1475 ;;		wreg, status,2, status,0
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1481 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1482 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1484 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1485 ;;Total ram usage:       14 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_I2C_Init
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text7
  1495  001B76                     __ptext7:
  1496                           	opt stack 0
  1497  001B76                     ___aldiv:
  1498                           	opt stack 28
  1499                           
  1500                           ;incstack = 0
  1501  001B76  0E00               	movlw	0
  1502  001B78  6E10               	movwf	___aldiv@sign,c
  1503  001B7A  AE0E               	btfss	___aldiv@divisor+3,7,c
  1504  001B7C  D00A               	goto	l1006
  1505  001B7E  1E0E               	comf	___aldiv@divisor+3,f,c
  1506  001B80  1E0D               	comf	___aldiv@divisor+2,f,c
  1507  001B82  1E0C               	comf	___aldiv@divisor+1,f,c
  1508  001B84  6C0B               	negf	___aldiv@divisor,c
  1509  001B86  0E00               	movlw	0
  1510  001B88  220C               	addwfc	___aldiv@divisor+1,f,c
  1511  001B8A  220D               	addwfc	___aldiv@divisor+2,f,c
  1512  001B8C  220E               	addwfc	___aldiv@divisor+3,f,c
  1513  001B8E  0E01               	movlw	1
  1514  001B90  6E10               	movwf	___aldiv@sign,c
  1515  001B92                     l1006:
  1516  001B92  AE0A               	btfss	___aldiv@dividend+3,7,c
  1517  001B94  D00A               	goto	l1007
  1518  001B96  1E0A               	comf	___aldiv@dividend+3,f,c
  1519  001B98  1E09               	comf	___aldiv@dividend+2,f,c
  1520  001B9A  1E08               	comf	___aldiv@dividend+1,f,c
  1521  001B9C  6C07               	negf	___aldiv@dividend,c
  1522  001B9E  0E00               	movlw	0
  1523  001BA0  2208               	addwfc	___aldiv@dividend+1,f,c
  1524  001BA2  2209               	addwfc	___aldiv@dividend+2,f,c
  1525  001BA4  220A               	addwfc	___aldiv@dividend+3,f,c
  1526  001BA6  0E01               	movlw	1
  1527  001BA8  1A10               	xorwf	___aldiv@sign,f,c
  1528  001BAA                     l1007:
  1529  001BAA  0E00               	movlw	0
  1530  001BAC  6E11               	movwf	___aldiv@quotient,c
  1531  001BAE  0E00               	movlw	0
  1532  001BB0  6E12               	movwf	___aldiv@quotient+1,c
  1533  001BB2  0E00               	movlw	0
  1534  001BB4  6E13               	movwf	___aldiv@quotient+2,c
  1535  001BB6  0E00               	movlw	0
  1536  001BB8  6E14               	movwf	___aldiv@quotient+3,c
  1537  001BBA  500B               	movf	___aldiv@divisor,w,c
  1538  001BBC  100C               	iorwf	___aldiv@divisor+1,w,c
  1539  001BBE  100D               	iorwf	___aldiv@divisor+2,w,c
  1540  001BC0  100E               	iorwf	___aldiv@divisor+3,w,c
  1541  001BC2  B4D8               	btfsc	status,2,c
  1542  001BC4  D02A               	goto	l1014
  1543  001BC6  0E01               	movlw	1
  1544  001BC8  6E0F               	movwf	___aldiv@counter,c
  1545  001BCA  D006               	goto	l1009
  1546  001BCC  90D8               	bcf	status,0,c
  1547  001BCE  360B               	rlcf	___aldiv@divisor,f,c
  1548  001BD0  360C               	rlcf	___aldiv@divisor+1,f,c
  1549  001BD2  360D               	rlcf	___aldiv@divisor+2,f,c
  1550  001BD4  360E               	rlcf	___aldiv@divisor+3,f,c
  1551  001BD6  2A0F               	incf	___aldiv@counter,f,c
  1552  001BD8                     l1009:
  1553  001BD8  AE0E               	btfss	___aldiv@divisor+3,7,c
  1554  001BDA  D7F8               	goto	l1010
  1555  001BDC                     u2520:
  1556  001BDC  90D8               	bcf	status,0,c
  1557  001BDE  3611               	rlcf	___aldiv@quotient,f,c
  1558  001BE0  3612               	rlcf	___aldiv@quotient+1,f,c
  1559  001BE2  3613               	rlcf	___aldiv@quotient+2,f,c
  1560  001BE4  3614               	rlcf	___aldiv@quotient+3,f,c
  1561  001BE6  500B               	movf	___aldiv@divisor,w,c
  1562  001BE8  5C07               	subwf	___aldiv@dividend,w,c
  1563  001BEA  500C               	movf	___aldiv@divisor+1,w,c
  1564  001BEC  5808               	subwfb	___aldiv@dividend+1,w,c
  1565  001BEE  500D               	movf	___aldiv@divisor+2,w,c
  1566  001BF0  5809               	subwfb	___aldiv@dividend+2,w,c
  1567  001BF2  500E               	movf	___aldiv@divisor+3,w,c
  1568  001BF4  580A               	subwfb	___aldiv@dividend+3,w,c
  1569  001BF6  A0D8               	btfss	status,0,c
  1570  001BF8  D009               	goto	l1013
  1571  001BFA  500B               	movf	___aldiv@divisor,w,c
  1572  001BFC  5E07               	subwf	___aldiv@dividend,f,c
  1573  001BFE  500C               	movf	___aldiv@divisor+1,w,c
  1574  001C00  5A08               	subwfb	___aldiv@dividend+1,f,c
  1575  001C02  500D               	movf	___aldiv@divisor+2,w,c
  1576  001C04  5A09               	subwfb	___aldiv@dividend+2,f,c
  1577  001C06  500E               	movf	___aldiv@divisor+3,w,c
  1578  001C08  5A0A               	subwfb	___aldiv@dividend+3,f,c
  1579  001C0A  8011               	bsf	___aldiv@quotient,0,c
  1580  001C0C                     l1013:
  1581  001C0C  90D8               	bcf	status,0,c
  1582  001C0E  320E               	rrcf	___aldiv@divisor+3,f,c
  1583  001C10  320D               	rrcf	___aldiv@divisor+2,f,c
  1584  001C12  320C               	rrcf	___aldiv@divisor+1,f,c
  1585  001C14  320B               	rrcf	___aldiv@divisor,f,c
  1586  001C16  2E0F               	decfsz	___aldiv@counter,f,c
  1587  001C18  D7E1               	goto	u2520
  1588  001C1A                     l1014:
  1589  001C1A  5010               	movf	___aldiv@sign,w,c
  1590  001C1C  B4D8               	btfsc	status,2,c
  1591  001C1E  D008               	goto	l1015
  1592  001C20  1E14               	comf	___aldiv@quotient+3,f,c
  1593  001C22  1E13               	comf	___aldiv@quotient+2,f,c
  1594  001C24  1E12               	comf	___aldiv@quotient+1,f,c
  1595  001C26  6C11               	negf	___aldiv@quotient,c
  1596  001C28  0E00               	movlw	0
  1597  001C2A  2212               	addwfc	___aldiv@quotient+1,f,c
  1598  001C2C  2213               	addwfc	___aldiv@quotient+2,f,c
  1599  001C2E  2214               	addwfc	___aldiv@quotient+3,f,c
  1600  001C30                     l1015:
  1601  001C30  C011  F007         	movff	___aldiv@quotient,?___aldiv
  1602  001C34  C012  F008         	movff	___aldiv@quotient+1,?___aldiv+1
  1603  001C38  C013  F009         	movff	___aldiv@quotient+2,?___aldiv+2
  1604  001C3C  C014  F00A         	movff	___aldiv@quotient+3,?___aldiv+3
  1605  001C40  0012               	return	
  1606  001C42                     __end_of___aldiv:
  1607                           	opt stack 0
  1608                           tblptru	equ	0xFF8
  1609                           tblptrh	equ	0xFF7
  1610                           tblptrl	equ	0xFF6
  1611                           tablat	equ	0xFF5
  1612                           intcon	equ	0xFF2
  1613                           intcon2	equ	0xFF1
  1614                           postinc0	equ	0xFEE
  1615                           wreg	equ	0xFE8
  1616                           postdec1	equ	0xFE5
  1617                           fsr1l	equ	0xFE1
  1618                           status	equ	0xFD8
  1619                           
  1620 ;; *************** function _EUSART1_Initialize *****************
  1621 ;; Defined at:
  1622 ;;		line 68 in file "mcc_generated_files/eusart1.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;		None
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;		None
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      void 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0, cstack
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1640 ;;Total ram usage:        0 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; Hardware stack levels required when called:    1
  1643 ;; This function calls:
  1644 ;;		_EUSART1_SetErrorHandler
  1645 ;;		_EUSART1_SetFramingErrorHandler
  1646 ;;		_EUSART1_SetOverrunErrorHandler
  1647 ;; This function is called by:
  1648 ;;		_SYSTEM_Initialize
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text8
  1653  0020DE                     __ptext8:
  1654                           	opt stack 0
  1655  0020DE                     _EUSART1_Initialize:
  1656                           	opt stack 28
  1657                           
  1658                           ;eusart1.c: 72: BAUDCON1 = 0x18;
  1659                           
  1660                           ;incstack = 0
  1661  0020DE  0E18               	movlw	24
  1662  0020E0  6E7E               	movwf	3966,c	;volatile
  1663                           
  1664                           ;eusart1.c: 75: RCSTA1 = 0x98;
  1665  0020E2  0E98               	movlw	152
  1666  0020E4  6EAC               	movwf	4012,c	;volatile
  1667                           
  1668                           ;eusart1.c: 78: TXSTA1 = 0x24;
  1669  0020E6  0E24               	movlw	36
  1670  0020E8  6EAD               	movwf	4013,c	;volatile
  1671                           
  1672                           ;eusart1.c: 81: SPBRG1 = 0xCF;
  1673  0020EA  0ECF               	movlw	207
  1674  0020EC  6EB0               	movwf	4016,c	;volatile
  1675                           
  1676                           ;eusart1.c: 84: SPBRGH1 = 0x00;
  1677  0020EE  0E00               	movlw	0
  1678  0020F0  6E7F               	movwf	3967,c	;volatile
  1679                           
  1680                           ;eusart1.c: 87: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  1681  0020F2  0E00               	movlw	0
  1682  0020F4  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  1683  0020F6  0E00               	movlw	0
  1684  0020F8  6E02               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  1685  0020FA  EC5E  F011         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1686                           
  1687                           ;eusart1.c: 88: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  1688  0020FE  0E00               	movlw	0
  1689  002100  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  1690  002102  0E00               	movlw	0
  1691  002104  6E02               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  1692  002106  EC59  F011         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1693                           
  1694                           ;eusart1.c: 89: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  1695  00210A  0E00               	movlw	0
  1696  00210C  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  1697  00210E  0E00               	movlw	0
  1698  002110  6E02               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  1699  002112  EC63  F011         	call	_EUSART1_SetErrorHandler	;wreg free
  1700                           
  1701                           ;eusart1.c: 91: eusart1RxLastError.status = 0;
  1702  002116  0E00               	movlw	0
  1703  002118  0100               	movlb	0	; () banked
  1704  00211A  6FB7               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  1705                           
  1706                           ; BSR set to: 0
  1707  00211C  0012               	return		;funcret
  1708  00211E                     __end_of_EUSART1_Initialize:
  1709                           	opt stack 0
  1710                           tblptru	equ	0xFF8
  1711                           tblptrh	equ	0xFF7
  1712                           tblptrl	equ	0xFF6
  1713                           tablat	equ	0xFF5
  1714                           intcon	equ	0xFF2
  1715                           intcon2	equ	0xFF1
  1716                           postinc0	equ	0xFEE
  1717                           wreg	equ	0xFE8
  1718                           postdec1	equ	0xFE5
  1719                           fsr1l	equ	0xFE1
  1720                           status	equ	0xFD8
  1721                           
  1722 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1723 ;; Defined at:
  1724 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1727 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;		None
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1742 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1743 ;;Total ram usage:        2 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; This function calls:
  1746 ;;		Nothing
  1747 ;; This function is called by:
  1748 ;;		_EUSART1_Initialize
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text9
  1753  0022B2                     __ptext9:
  1754                           	opt stack 0
  1755  0022B2                     _EUSART1_SetOverrunErrorHandler:
  1756                           	opt stack 28
  1757                           
  1758                           ;eusart1.c: 171: EUSART1_OverrunErrorHandler = interruptHandler;
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;incstack = 0
  1762  0022B2  C001  F0B3         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1763  0022B6  C002  F0B4         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1764  0022BA  0012               	return		;funcret
  1765  0022BC                     __end_of_EUSART1_SetOverrunErrorHandler:
  1766                           	opt stack 0
  1767                           tblptru	equ	0xFF8
  1768                           tblptrh	equ	0xFF7
  1769                           tblptrl	equ	0xFF6
  1770                           tablat	equ	0xFF5
  1771                           intcon	equ	0xFF2
  1772                           intcon2	equ	0xFF1
  1773                           postinc0	equ	0xFEE
  1774                           wreg	equ	0xFE8
  1775                           postdec1	equ	0xFE5
  1776                           fsr1l	equ	0xFE1
  1777                           status	equ	0xFD8
  1778                           
  1779 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1780 ;; Defined at:
  1781 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1784 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;		None
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1796 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1799 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1800 ;;Total ram usage:        2 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; This function calls:
  1803 ;;		Nothing
  1804 ;; This function is called by:
  1805 ;;		_EUSART1_Initialize
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text10
  1810  0022BC                     __ptext10:
  1811                           	opt stack 0
  1812  0022BC                     _EUSART1_SetFramingErrorHandler:
  1813                           	opt stack 28
  1814                           
  1815                           ;eusart1.c: 167: EUSART1_FramingErrorHandler = interruptHandler;
  1816                           
  1817                           ;incstack = 0
  1818  0022BC  C001  F0B5         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1819  0022C0  C002  F0B6         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1820  0022C4  0012               	return		;funcret
  1821  0022C6                     __end_of_EUSART1_SetFramingErrorHandler:
  1822                           	opt stack 0
  1823                           tblptru	equ	0xFF8
  1824                           tblptrh	equ	0xFF7
  1825                           tblptrl	equ	0xFF6
  1826                           tablat	equ	0xFF5
  1827                           intcon	equ	0xFF2
  1828                           intcon2	equ	0xFF1
  1829                           postinc0	equ	0xFEE
  1830                           wreg	equ	0xFE8
  1831                           postdec1	equ	0xFE5
  1832                           fsr1l	equ	0xFE1
  1833                           status	equ	0xFD8
  1834                           
  1835 ;; *************** function _EUSART1_SetErrorHandler *****************
  1836 ;; Defined at:
  1837 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1840 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, status,2, status,0
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1856 ;;Total ram usage:        2 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_EUSART1_Initialize
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text11
  1866  0022C6                     __ptext11:
  1867                           	opt stack 0
  1868  0022C6                     _EUSART1_SetErrorHandler:
  1869                           	opt stack 28
  1870                           
  1871                           ;eusart1.c: 175: EUSART1_ErrorHandler = interruptHandler;
  1872                           
  1873                           ;incstack = 0
  1874  0022C6  C001  F0B1         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1875  0022CA  C002  F0B2         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1876  0022CE  0012               	return		;funcret
  1877  0022D0                     __end_of_EUSART1_SetErrorHandler:
  1878                           	opt stack 0
  1879                           tblptru	equ	0xFF8
  1880                           tblptrh	equ	0xFF7
  1881                           tblptrl	equ	0xFF6
  1882                           tablat	equ	0xFF5
  1883                           intcon	equ	0xFF2
  1884                           intcon2	equ	0xFF1
  1885                           postinc0	equ	0xFEE
  1886                           wreg	equ	0xFE8
  1887                           postdec1	equ	0xFE5
  1888                           fsr1l	equ	0xFE1
  1889                           status	equ	0xFD8
  1890                           
  1891 ;; *************** function _MCP342x_read *****************
  1892 ;; Defined at:
  1893 ;;		line 11 in file "MCP3423.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  channel         2   11[BANK0 ] int 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  dataIndex       2   23[BANK0 ] int 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  4   11[BANK0 ] unsigned long 
  1900 ;; Registers used:
  1901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1907 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1908 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1909 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1910 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1911 ;;Total ram usage:       14 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    5
  1914 ;; This function calls:
  1915 ;;		_I2C_Write
  1916 ;;		_I2C_read
  1917 ;;		_I2C_start
  1918 ;;		_I2C_stop
  1919 ;;		___ftdiv
  1920 ;;		___ftmul
  1921 ;;		___fttol
  1922 ;;		___lltoft
  1923 ;;		_pow
  1924 ;; This function is called by:
  1925 ;;		_main
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text12
  1930  0012D2                     __ptext12:
  1931                           	opt stack 0
  1932  0012D2                     _MCP342x_read:
  1933                           	opt stack 25
  1934                           
  1935                           ;MCP3423.c: 13: I2C_start();
  1936                           
  1937                           ;incstack = 0
  1938  0012D2  EC68  F011         	call	_I2C_start	;wreg free
  1939                           
  1940                           ;MCP3423.c: 14: I2C_Write(0xD0);
  1941  0012D6  0ED0               	movlw	208
  1942  0012D8  EC20  F011         	call	_I2C_Write
  1943                           
  1944                           ;MCP3423.c: 15: I2C_Write(0x8C | (channel << 5));
  1945  0012DC  0100               	movlb	0	; () banked
  1946  0012DE  39C3               	swapf	MCP342x_read@channel& (0+255),w,b
  1947  0012E0  46E8               	rlncf	wreg,f,c
  1948  0012E2  0BE0               	andlw	224
  1949  0012E4  098C               	iorlw	140
  1950  0012E6  EC20  F011         	call	_I2C_Write
  1951                           
  1952                           ;MCP3423.c: 16: I2C_stop();
  1953  0012EA  EC6D  F011         	call	_I2C_stop	;wreg free
  1954                           
  1955                           ;MCP3423.c: 18: _delay((unsigned long)((300)*(16000000/4000000.0)));
  1956  0012EE  0EF0               	movlw	240
  1957  0012F0                     u3827:
  1958  0012F0  D000               	nop2	
  1959  0012F2  2EE8               	decfsz	wreg,f,c
  1960  0012F4  D7FD               	bra	u3827
  1961                           
  1962                           ;MCP3423.c: 19: I2C_start();
  1963  0012F6  EC68  F011         	call	_I2C_start	;wreg free
  1964                           
  1965                           ;MCP3423.c: 20: I2C_Write(0xD0 | 0x01);
  1966  0012FA  0ED1               	movlw	209
  1967  0012FC  EC20  F011         	call	_I2C_Write
  1968                           
  1969                           ;MCP3423.c: 21: for (int dataIndex = 3; dataIndex > 0; dataIndex--) {
  1970  001300  0E00               	movlw	0
  1971  001302  0100               	movlb	0	; () banked
  1972  001304  6FD0               	movwf	(MCP342x_read@dataIndex+1)& (0+255),b
  1973  001306  0E03               	movlw	3
  1974  001308  6FCF               	movwf	MCP342x_read@dataIndex& (0+255),b
  1975  00130A                     l3941:
  1976                           
  1977                           ; BSR set to: 0
  1978  00130A  BFD0               	btfsc	(MCP342x_read@dataIndex+1)& (0+255),7,b
  1979  00130C  D02F               	goto	u2860
  1980  00130E  51D0               	movf	(MCP342x_read@dataIndex+1)& (0+255),w,b
  1981  001310  E103               	bnz	l3945
  1982  001312  05CF               	decf	MCP342x_read@dataIndex& (0+255),w,b
  1983  001314  A0D8               	btfss	status,0,c
  1984  001316  D02A               	goto	u2860
  1985  001318                     l3945:
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;MCP3423.c: 22: dataIndex == 1 ? I2C_read(1) : I2C_read(0);
  1989  001318  05CF               	decf	MCP342x_read@dataIndex& (0+255),w,b
  1990  00131A  11D0               	iorwf	(MCP342x_read@dataIndex+1)& (0+255),w,b
  1991  00131C  A4D8               	btfss	status,2,c
  1992  00131E  D007               	goto	l947
  1993                           
  1994                           ; BSR set to: 0
  1995  001320  0E00               	movlw	0
  1996  001322  6E02               	movwf	I2C_read@ACK_NACK+1,c
  1997  001324  0E01               	movlw	1
  1998  001326  6E01               	movwf	I2C_read@ACK_NACK,c
  1999  001328  EC39  F011         	call	_I2C_read	;wreg free
  2000  00132C  D006               	goto	l949
  2001  00132E                     l947:
  2002  00132E  0E00               	movlw	0
  2003  001330  6E02               	movwf	I2C_read@ACK_NACK+1,c
  2004  001332  0E00               	movlw	0
  2005  001334  6E01               	movwf	I2C_read@ACK_NACK,c
  2006  001336  EC39  F011         	call	_I2C_read	;wreg free
  2007  00133A                     l949:
  2008                           
  2009                           ;MCP3423.c: 23: MCP342x_ADC.Byte[dataIndex-1] = SSP2BUF;
  2010  00133A  0EFF               	movlw	255
  2011  00133C  0100               	movlb	0	; () banked
  2012  00133E  6FC5               	movwf	??_MCP342x_read& (0+255),b
  2013  001340  0EFF               	movlw	255
  2014  001342  6FC6               	movwf	(??_MCP342x_read+1)& (0+255),b
  2015  001344  C0CF  F0C7         	movff	MCP342x_read@dataIndex,??_MCP342x_read+2
  2016  001348  C0D0  F0C8         	movff	MCP342x_read@dataIndex+1,??_MCP342x_read+3
  2017  00134C  51C5               	movf	??_MCP342x_read& (0+255),w,b
  2018  00134E  27C7               	addwf	(??_MCP342x_read+2)& (0+255),f,b
  2019  001350  51C6               	movf	(??_MCP342x_read+1)& (0+255),w,b
  2020  001352  23C8               	addwfc	(??_MCP342x_read+3)& (0+255),f,b
  2021  001354  0E9F               	movlw	low _MCP342x_ADC
  2022  001356  25C7               	addwf	(??_MCP342x_read+2)& (0+255),w,b
  2023  001358  6ED9               	movwf	fsr2l,c
  2024  00135A  0E00               	movlw	high _MCP342x_ADC
  2025  00135C  21C8               	addwfc	(??_MCP342x_read+3)& (0+255),w,b
  2026  00135E  6EDA               	movwf	fsr2h,c
  2027  001360  CF75 FFDF          	movff	3957,indf2	;volatile
  2028                           
  2029                           ; BSR set to: 0
  2030  001364  07CF               	decf	MCP342x_read@dataIndex& (0+255),f,b
  2031  001366  A0D8               	btfss	status,0,c
  2032  001368  07D0               	decf	(MCP342x_read@dataIndex+1)& (0+255),f,b
  2033  00136A  D7CF               	goto	l3941
  2034  00136C                     u2860:
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;MCP3423.c: 24: }
  2038                           ;MCP3423.c: 25: MCP342x_ADC.Byte[2] = MCP342x_ADC.Byte[2] >> 6;
  2039                           
  2040                           ; BSR set to: 0
  2041  00136C  45A1               	rlncf	(_MCP342x_ADC+2)& (0+255),w,b
  2042  00136E  46E8               	rlncf	wreg,f,c
  2043  001370  0B03               	andlw	3
  2044  001372  6FA1               	movwf	(_MCP342x_ADC+2)& (0+255),b
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;MCP3423.c: 26: I2C_stop();
  2048  001374  EC6D  F011         	call	_I2C_stop	;wreg free
  2049                           
  2050                           ;MCP3423.c: 28: I2C_start();
  2051  001378  EC68  F011         	call	_I2C_start	;wreg free
  2052                           
  2053                           ;MCP3423.c: 29: I2C_Write(0xD0);
  2054  00137C  0ED0               	movlw	208
  2055  00137E  EC20  F011         	call	_I2C_Write
  2056                           
  2057                           ;MCP3423.c: 30: I2C_Write(0x00);
  2058  001382  0E00               	movlw	0
  2059  001384  EC20  F011         	call	_I2C_Write
  2060                           
  2061                           ;MCP3423.c: 31: I2C_stop();
  2062  001388  EC6D  F011         	call	_I2C_stop	;wreg free
  2063                           
  2064                           ;MCP3423.c: 32: return ( (MCP342x_ADC.dataRead >> 2)* (15.25 * pow(10, -6))) / 1;
  2065                           ;	Return value of _MCP342x_read is never used
  2066  00138C  0E00               	movlw	0
  2067  00138E  6E5D               	movwf	pow@y,c
  2068  001390  0EC0               	movlw	192
  2069  001392  6E5E               	movwf	pow@y+1,c
  2070  001394  0EC0               	movlw	192
  2071  001396  6E5F               	movwf	pow@y+2,c
  2072  001398  0E00               	movlw	0
  2073  00139A  6E5A               	movwf	pow@x,c
  2074  00139C  0E20               	movlw	32
  2075  00139E  6E5B               	movwf	pow@x+1,c
  2076  0013A0  0E41               	movlw	65
  2077  0013A2  6E5C               	movwf	pow@x+2,c
  2078  0013A4  EC2F  F00A         	call	_pow	;wreg free
  2079  0013A8  C05A  F0C9         	movff	?_pow,_MCP342x_read$2925
  2080  0013AC  C05B  F0CA         	movff	?_pow+1,_MCP342x_read$2925+1
  2081  0013B0  C05C  F0CB         	movff	?_pow+2,_MCP342x_read$2925+2
  2082                           
  2083                           ;MCP3423.c: 32: return ( (MCP342x_ADC.dataRead >> 2)* (15.25 * pow(10, -6))) / 1;
  2084                           ;	Return value of _MCP342x_read is never used
  2085  0013B4  0E00               	movlw	0
  2086  0013B6  6E15               	movwf	___ftmul@f2,c
  2087  0013B8  0E74               	movlw	116
  2088  0013BA  6E16               	movwf	___ftmul@f2+1,c
  2089  0013BC  0E41               	movlw	65
  2090  0013BE  6E17               	movwf	___ftmul@f2+2,c
  2091  0013C0  C0C9  F012         	movff	_MCP342x_read$2925,___ftmul@f1
  2092  0013C4  C0CA  F013         	movff	_MCP342x_read$2925+1,___ftmul@f1+1
  2093  0013C8  C0CB  F014         	movff	_MCP342x_read$2925+2,___ftmul@f1+2
  2094  0013CC  ECF6  F00B         	call	___ftmul	;wreg free
  2095  0013D0  C012  F0CC         	movff	?___ftmul,_MCP342x_read$2926
  2096  0013D4  C013  F0CD         	movff	?___ftmul+1,_MCP342x_read$2926+1
  2097  0013D8  C014  F0CE         	movff	?___ftmul+2,_MCP342x_read$2926+2
  2098                           
  2099                           ;MCP3423.c: 32: return ( (MCP342x_ADC.dataRead >> 2)* (15.25 * pow(10, -6))) / 1;
  2100                           ;	Return value of _MCP342x_read is never used
  2101  0013DC  0E00               	movlw	0
  2102  0013DE  6E24               	movwf	___ftdiv@f2,c
  2103  0013E0  0E80               	movlw	128
  2104  0013E2  6E25               	movwf	___ftdiv@f2+1,c
  2105  0013E4  0E3F               	movlw	63
  2106  0013E6  6E26               	movwf	___ftdiv@f2+2,c
  2107  0013E8  C0CC  F015         	movff	_MCP342x_read$2926,___ftmul@f2
  2108  0013EC  C0CD  F016         	movff	_MCP342x_read$2926+1,___ftmul@f2+1
  2109  0013F0  C0CE  F017         	movff	_MCP342x_read$2926+2,___ftmul@f2+2
  2110  0013F4  C09F  F0C5         	movff	_MCP342x_ADC,??_MCP342x_read
  2111  0013F8  C0A0  F0C6         	movff	_MCP342x_ADC+1,??_MCP342x_read+1
  2112  0013FC  C0A1  F0C7         	movff	_MCP342x_ADC+2,??_MCP342x_read+2
  2113  001400  C0A2  F0C8         	movff	_MCP342x_ADC+3,??_MCP342x_read+3
  2114  001404  0E03               	movlw	3
  2115  001406  D006               	goto	u2870
  2116  001408                     u2875:
  2117  001408  0100               	movlb	0	; () banked
  2118  00140A  90D8               	bcf	status,0,c
  2119  00140C  33C8               	rrcf	(??_MCP342x_read+3)& (0+255),f,b
  2120  00140E  33C7               	rrcf	(??_MCP342x_read+2)& (0+255),f,b
  2121  001410  33C6               	rrcf	(??_MCP342x_read+1)& (0+255),f,b
  2122  001412  33C5               	rrcf	??_MCP342x_read& (0+255),f,b
  2123  001414                     u2870:
  2124  001414  2EE8               	decfsz	wreg,f,c
  2125  001416  D7F8               	goto	u2875
  2126  001418  C0C5  F009         	movff	??_MCP342x_read,___lltoft@c
  2127  00141C  C0C6  F00A         	movff	??_MCP342x_read+1,___lltoft@c+1
  2128  001420  C0C7  F00B         	movff	??_MCP342x_read+2,___lltoft@c+2
  2129  001424  C0C8  F00C         	movff	??_MCP342x_read+3,___lltoft@c+3
  2130  001428  ECA7  F00F         	call	___lltoft	;wreg free
  2131  00142C  C009  F012         	movff	?___lltoft,___ftmul@f1
  2132  001430  C00A  F013         	movff	?___lltoft+1,___ftmul@f1+1
  2133  001434  C00B  F014         	movff	?___lltoft+2,___ftmul@f1+2
  2134  001438  ECF6  F00B         	call	___ftmul	;wreg free
  2135  00143C  C012  F021         	movff	?___ftmul,___ftdiv@f1
  2136  001440  C013  F022         	movff	?___ftmul+1,___ftdiv@f1+1
  2137  001444  C014  F023         	movff	?___ftmul+2,___ftdiv@f1+2
  2138  001448  EC70  F00C         	call	___ftdiv	;wreg free
  2139  00144C  C021  F030         	movff	?___ftdiv,___fttol@f1
  2140  001450  C022  F031         	movff	?___ftdiv+1,___fttol@f1+1
  2141  001454  C023  F032         	movff	?___ftdiv+2,___fttol@f1+2
  2142  001458  EC7C  F00B         	call	___fttol	;wreg free
  2143  00145C  0012               	return	
  2144  00145E                     __end_of_MCP342x_read:
  2145                           	opt stack 0
  2146                           tblptru	equ	0xFF8
  2147                           tblptrh	equ	0xFF7
  2148                           tblptrl	equ	0xFF6
  2149                           tablat	equ	0xFF5
  2150                           intcon	equ	0xFF2
  2151                           intcon2	equ	0xFF1
  2152                           postinc0	equ	0xFEE
  2153                           wreg	equ	0xFE8
  2154                           postdec1	equ	0xFE5
  2155                           fsr1l	equ	0xFE1
  2156                           indf2	equ	0xFDF
  2157                           fsr2h	equ	0xFDA
  2158                           fsr2l	equ	0xFD9
  2159                           status	equ	0xFD8
  2160                           
  2161 ;; *************** function _pow *****************
  2162 ;; Defined at:
  2163 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\pow.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  x               3   89[COMRAM] unsigned long 
  2166 ;;  y               3   92[COMRAM] unsigned long 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  yi              4    7[BANK0 ] unsigned long 
  2169 ;;  sign            1    6[BANK0 ] unsigned char 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  3   89[COMRAM] unsigned char 
  2172 ;; Registers used:
  2173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2179 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2180 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2182 ;;      Totals:         6      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2183 ;;Total ram usage:       17 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    4
  2186 ;; This function calls:
  2187 ;;		___ftge
  2188 ;;		___ftmul
  2189 ;;		___ftneg
  2190 ;;		___fttol
  2191 ;;		___lltoft
  2192 ;;		_exp
  2193 ;;		_log
  2194 ;; This function is called by:
  2195 ;;		_MCP342x_read
  2196 ;;		_MCP9801_TempRead
  2197 ;;		_EEPROM_24AA512_pageWrite
  2198 ;;		_EEPROM_24AA512_pageRead
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text13
  2203  00145E                     __ptext13:
  2204                           	opt stack 0
  2205  00145E                     _pow:
  2206                           	opt stack 25
  2207                           
  2208                           ;incstack = 0
  2209  00145E  0E00               	movlw	0
  2210  001460  0100               	movlb	0	; () banked
  2211  001462  6FBE               	movwf	pow@sign& (0+255),b
  2212                           
  2213                           ; BSR set to: 0
  2214  001464  505A               	movf	pow@x,w,c
  2215  001466  105B               	iorwf	pow@x+1,w,c
  2216  001468  105C               	iorwf	pow@x+2,w,c
  2217  00146A  A4D8               	btfss	status,2,c
  2218  00146C  D01C               	goto	l1404
  2219                           
  2220                           ; BSR set to: 0
  2221  00146E  0E00               	movlw	0
  2222  001470  6E01               	movwf	___ftge@ff1,c
  2223  001472  0E00               	movlw	0
  2224  001474  6E02               	movwf	___ftge@ff1+1,c
  2225  001476  0E00               	movlw	0
  2226  001478  6E03               	movwf	___ftge@ff1+2,c
  2227  00147A  C05D  F004         	movff	pow@y,___ftge@ff2
  2228  00147E  C05E  F005         	movff	pow@y+1,___ftge@ff2+1
  2229  001482  C05F  F006         	movff	pow@y+2,___ftge@ff2+2
  2230  001486  EC23  F00F         	call	___ftge	;wreg free
  2231  00148A  A0D8               	btfss	status,0,c
  2232  00148C  D005               	goto	l1405
  2233  00148E  0E00               	movlw	0
  2234  001490  0100               	movlb	0	; () banked
  2235  001492  6FAC               	movwf	(_errno+1)& (0+255),b
  2236  001494  0E21               	movlw	33
  2237  001496  6FAB               	movwf	_errno& (0+255),b
  2238  001498                     l1405:
  2239  001498  0E00               	movlw	0
  2240  00149A  6E5A               	movwf	?_pow,c
  2241  00149C  0E00               	movlw	0
  2242  00149E  6E5B               	movwf	?_pow+1,c
  2243  0014A0  0E00               	movlw	0
  2244  0014A2  6E5C               	movwf	?_pow+2,c
  2245  0014A4  0012               	return	
  2246  0014A6                     l1404:
  2247  0014A6  505D               	movf	pow@y,w,c
  2248  0014A8  105E               	iorwf	pow@y+1,w,c
  2249  0014AA  105F               	iorwf	pow@y+2,w,c
  2250  0014AC  A4D8               	btfss	status,2,c
  2251  0014AE  D007               	goto	l1407
  2252  0014B0  0E00               	movlw	0
  2253  0014B2  6E5A               	movwf	?_pow,c
  2254  0014B4  0E80               	movlw	128
  2255  0014B6  6E5B               	movwf	?_pow+1,c
  2256  0014B8  0E3F               	movlw	63
  2257  0014BA  6E5C               	movwf	?_pow+2,c
  2258  0014BC  0012               	return	
  2259  0014BE                     l1407:
  2260  0014BE  AE5C               	btfss	pow@x+2,7,c
  2261  0014C0  D042               	goto	l1408
  2262  0014C2  C05D  F030         	movff	pow@y,___fttol@f1
  2263  0014C6  C05E  F031         	movff	pow@y+1,___fttol@f1+1
  2264  0014CA  C05F  F032         	movff	pow@y+2,___fttol@f1+2
  2265  0014CE  EC7C  F00B         	call	___fttol	;wreg free
  2266  0014D2  C030  F0BF         	movff	?___fttol,pow@yi
  2267  0014D6  C031  F0C0         	movff	?___fttol+1,pow@yi+1
  2268  0014DA  C032  F0C1         	movff	?___fttol+2,pow@yi+2
  2269  0014DE  C033  F0C2         	movff	?___fttol+3,pow@yi+3
  2270  0014E2  C0BF  F009         	movff	pow@yi,___lltoft@c
  2271  0014E6  C0C0  F00A         	movff	pow@yi+1,___lltoft@c+1
  2272  0014EA  C0C1  F00B         	movff	pow@yi+2,___lltoft@c+2
  2273  0014EE  C0C2  F00C         	movff	pow@yi+3,___lltoft@c+3
  2274  0014F2  ECA7  F00F         	call	___lltoft	;wreg free
  2275  0014F6  505D               	movf	pow@y,w,c
  2276  0014F8  1809               	xorwf	?___lltoft,w,c
  2277  0014FA  E107               	bnz	u2810
  2278  0014FC  505E               	movf	pow@y+1,w,c
  2279  0014FE  180A               	xorwf	?___lltoft+1,w,c
  2280  001500  E104               	bnz	u2810
  2281  001502  505F               	movf	pow@y+2,w,c
  2282  001504  180B               	xorwf	?___lltoft+2,w,c
  2283  001506  B4D8               	btfsc	status,2,c
  2284  001508  D00C               	goto	l1409
  2285  00150A                     u2810:
  2286  00150A  0E00               	movlw	0
  2287  00150C  0100               	movlb	0	; () banked
  2288  00150E  6FAC               	movwf	(_errno+1)& (0+255),b
  2289  001510  0E21               	movlw	33
  2290  001512  6FAB               	movwf	_errno& (0+255),b
  2291  001514  0E00               	movlw	0
  2292  001516  6E5A               	movwf	?_pow,c
  2293  001518  0E00               	movlw	0
  2294  00151A  6E5B               	movwf	?_pow+1,c
  2295  00151C  0E00               	movlw	0
  2296  00151E  6E5C               	movwf	?_pow+2,c
  2297                           
  2298                           ; BSR set to: 0
  2299  001520  0012               	return	
  2300  001522                     l1409:
  2301                           
  2302                           ; BSR set to: 0
  2303  001522  0100               	movlb	0	; () banked
  2304  001524  51BF               	movf	pow@yi& (0+255),w,b
  2305  001526  0B01               	andlw	1
  2306  001528  6FBE               	movwf	pow@sign& (0+255),b
  2307                           
  2308                           ; BSR set to: 0
  2309  00152A  C05A  F001         	movff	pow@x,___ftneg@f1
  2310  00152E  C05B  F002         	movff	pow@x+1,___ftneg@f1+1
  2311  001532  C05C  F003         	movff	pow@x+2,___ftneg@f1+2
  2312  001536  EC0E  F011         	call	___ftneg	;wreg free
  2313  00153A  C001  F05A         	movff	?___ftneg,pow@x
  2314  00153E  C002  F05B         	movff	?___ftneg+1,pow@x+1
  2315  001542  C003  F05C         	movff	?___ftneg+2,pow@x+2
  2316  001546                     l1408:
  2317  001546  C05A  F039         	movff	pow@x,log@x
  2318  00154A  C05B  F03A         	movff	pow@x+1,log@x+1
  2319  00154E  C05C  F03B         	movff	pow@x+2,log@x+2
  2320  001552  ECED  F00A         	call	_log	;wreg free
  2321  001556  C039  F0B8         	movff	?_log,_pow$2927
  2322  00155A  C03A  F0B9         	movff	?_log+1,_pow$2927+1
  2323  00155E  C03B  F0BA         	movff	?_log+2,_pow$2927+2
  2324  001562  C0B8  F012         	movff	_pow$2927,___ftmul@f1
  2325  001566  C0B9  F013         	movff	_pow$2927+1,___ftmul@f1+1
  2326  00156A  C0BA  F014         	movff	_pow$2927+2,___ftmul@f1+2
  2327  00156E  C05D  F015         	movff	pow@y,___ftmul@f2
  2328  001572  C05E  F016         	movff	pow@y+1,___ftmul@f2+1
  2329  001576  C05F  F017         	movff	pow@y+2,___ftmul@f2+2
  2330  00157A  ECF6  F00B         	call	___ftmul	;wreg free
  2331  00157E  C012  F0BB         	movff	?___ftmul,_pow$2928
  2332  001582  C013  F0BC         	movff	?___ftmul+1,_pow$2928+1
  2333  001586  C014  F0BD         	movff	?___ftmul+2,_pow$2928+2
  2334  00158A  C0BB  F051         	movff	_pow$2928,exp@x
  2335  00158E  C0BC  F052         	movff	_pow$2928+1,exp@x+1
  2336  001592  C0BD  F053         	movff	_pow$2928+2,exp@x+2
  2337  001596  EC9F  F007         	call	_exp	;wreg free
  2338  00159A  C051  F05A         	movff	?_exp,pow@x
  2339  00159E  C052  F05B         	movff	?_exp+1,pow@x+1
  2340  0015A2  C053  F05C         	movff	?_exp+2,pow@x+2
  2341  0015A6  0100               	movlb	0	; () banked
  2342  0015A8  51BE               	movf	pow@sign& (0+255),w,b
  2343  0015AA  B4D8               	btfsc	status,2,c
  2344  0015AC  D00F               	goto	l1410
  2345                           
  2346                           ; BSR set to: 0
  2347  0015AE  C05A  F001         	movff	pow@x,___ftneg@f1
  2348  0015B2  C05B  F002         	movff	pow@x+1,___ftneg@f1+1
  2349  0015B6  C05C  F003         	movff	pow@x+2,___ftneg@f1+2
  2350  0015BA  EC0E  F011         	call	___ftneg	;wreg free
  2351  0015BE  C001  F05A         	movff	?___ftneg,?_pow
  2352  0015C2  C002  F05B         	movff	?___ftneg+1,?_pow+1
  2353  0015C6  C003  F05C         	movff	?___ftneg+2,?_pow+2
  2354  0015CA  0012               	return	
  2355  0015CC                     l1410:
  2356                           
  2357                           ; BSR set to: 0
  2358  0015CC  C05A  F05A         	movff	pow@x,?_pow
  2359  0015D0  C05B  F05B         	movff	pow@x+1,?_pow+1
  2360  0015D4  C05C  F05C         	movff	pow@x+2,?_pow+2
  2361  0015D8  0012               	return		;funcret
  2362  0015DA                     __end_of_pow:
  2363                           	opt stack 0
  2364                           tblptru	equ	0xFF8
  2365                           tblptrh	equ	0xFF7
  2366                           tblptrl	equ	0xFF6
  2367                           tablat	equ	0xFF5
  2368                           intcon	equ	0xFF2
  2369                           intcon2	equ	0xFF1
  2370                           postinc0	equ	0xFEE
  2371                           wreg	equ	0xFE8
  2372                           postdec1	equ	0xFE5
  2373                           fsr1l	equ	0xFE1
  2374                           indf2	equ	0xFDF
  2375                           fsr2h	equ	0xFDA
  2376                           fsr2l	equ	0xFD9
  2377                           status	equ	0xFD8
  2378                           
  2379 ;; *************** function _log *****************
  2380 ;; Defined at:
  2381 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  x               3   56[COMRAM] unsigned char 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;  exponent        2   59[COMRAM] int 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  3   56[COMRAM] int 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2395 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2396 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2398 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2399 ;;Total ram usage:        5 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:    3
  2402 ;; This function calls:
  2403 ;;		___awtoft
  2404 ;;		___ftadd
  2405 ;;		___ftmul
  2406 ;;		_eval_poly
  2407 ;;		_frexp
  2408 ;; This function is called by:
  2409 ;;		_pow
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text14
  2414  0015DA                     __ptext14:
  2415                           	opt stack 0
  2416  0015DA                     _log:
  2417                           	opt stack 25
  2418                           
  2419                           ;incstack = 0
  2420  0015DA  AE3B               	btfss	log@x+2,7,c
  2421  0015DC  D00C               	goto	l1606
  2422  0015DE  0E00               	movlw	0
  2423  0015E0  0100               	movlb	0	; () banked
  2424  0015E2  6FAC               	movwf	(_errno+1)& (0+255),b
  2425  0015E4  0E21               	movlw	33
  2426  0015E6  6FAB               	movwf	_errno& (0+255),b
  2427  0015E8  0E00               	movlw	0
  2428  0015EA  6E39               	movwf	?_log,c
  2429  0015EC  0E00               	movlw	0
  2430  0015EE  6E3A               	movwf	?_log+1,c
  2431  0015F0  0E00               	movlw	0
  2432  0015F2  6E3B               	movwf	?_log+2,c
  2433                           
  2434                           ; BSR set to: 0
  2435  0015F4  0012               	return	
  2436  0015F6                     l1606:
  2437                           
  2438                           ; BSR set to: 0
  2439  0015F6  5039               	movf	log@x,w,c
  2440  0015F8  103A               	iorwf	log@x+1,w,c
  2441  0015FA  103B               	iorwf	log@x+2,w,c
  2442  0015FC  A4D8               	btfss	status,2,c
  2443  0015FE  D00C               	goto	l1608
  2444  001600  0E00               	movlw	0
  2445  001602  0100               	movlb	0	; () banked
  2446  001604  6FAC               	movwf	(_errno+1)& (0+255),b
  2447  001606  0E22               	movlw	34
  2448  001608  6FAB               	movwf	_errno& (0+255),b
  2449  00160A  0E00               	movlw	0
  2450  00160C  6E39               	movwf	?_log,c
  2451  00160E  0E00               	movlw	0
  2452  001610  6E3A               	movwf	?_log+1,c
  2453  001612  0E00               	movlw	0
  2454  001614  6E3B               	movwf	?_log+2,c
  2455                           
  2456                           ; BSR set to: 0
  2457  001616  0012               	return	
  2458  001618                     l1608:
  2459                           
  2460                           ; BSR set to: 0
  2461  001618  0E00               	movlw	0
  2462  00161A  6E15               	movwf	___ftmul@f2,c
  2463  00161C  0E00               	movlw	0
  2464  00161E  6E16               	movwf	___ftmul@f2+1,c
  2465  001620  0E40               	movlw	64
  2466  001622  6E17               	movwf	___ftmul@f2+2,c
  2467  001624  0E3C               	movlw	low log@exponent
  2468  001626  6E04               	movwf	frexp@eptr,c
  2469  001628  0E00               	movlw	high log@exponent
  2470  00162A  6E05               	movwf	frexp@eptr+1,c
  2471  00162C  C039  F001         	movff	log@x,frexp@value
  2472  001630  C03A  F002         	movff	log@x+1,frexp@value+1
  2473  001634  C03B  F003         	movff	log@x+2,frexp@value+2
  2474  001638  ECDB  F00E         	call	_frexp	;wreg free
  2475  00163C  C001  F012         	movff	?_frexp,___ftmul@f1
  2476  001640  C002  F013         	movff	?_frexp+1,___ftmul@f1+1
  2477  001644  C003  F014         	movff	?_frexp+2,___ftmul@f1+2
  2478  001648  ECF6  F00B         	call	___ftmul	;wreg free
  2479  00164C  C012  F021         	movff	?___ftmul,___ftadd@f1
  2480  001650  C013  F022         	movff	?___ftmul+1,___ftadd@f1+1
  2481  001654  C014  F023         	movff	?___ftmul+2,___ftadd@f1+2
  2482  001658  0E00               	movlw	0
  2483  00165A  6E24               	movwf	___ftadd@f2,c
  2484  00165C  0E80               	movlw	128
  2485  00165E  6E25               	movwf	___ftadd@f2+1,c
  2486  001660  0EBF               	movlw	191
  2487  001662  6E26               	movwf	___ftadd@f2+2,c
  2488  001664  EC93  F008         	call	___ftadd	;wreg free
  2489  001668  C021  F039         	movff	?___ftadd,log@x
  2490  00166C  C022  F03A         	movff	?___ftadd+1,log@x+1
  2491  001670  C023  F03B         	movff	?___ftadd+2,log@x+2
  2492  001674  063C               	decf	log@exponent,f,c
  2493  001676  A0D8               	btfss	status,0,c
  2494  001678  063D               	decf	log@exponent+1,f,c
  2495  00167A  C039  F02D         	movff	log@x,eval_poly@x
  2496  00167E  C03A  F02E         	movff	log@x+1,eval_poly@x+1
  2497  001682  C03B  F02F         	movff	log@x+2,eval_poly@x+2
  2498  001686  0E1F               	movlw	low log@coeff
  2499  001688  6E30               	movwf	eval_poly@d,c
  2500  00168A  0E0F               	movlw	high log@coeff
  2501  00168C  6E31               	movwf	eval_poly@d+1,c
  2502  00168E  0E00               	movlw	0
  2503  001690  6E33               	movwf	eval_poly@n+1,c
  2504  001692  0E08               	movlw	8
  2505  001694  6E32               	movwf	eval_poly@n,c
  2506  001696  EC52  F00D         	call	_eval_poly	;wreg free
  2507  00169A  C02D  F039         	movff	?_eval_poly,log@x
  2508  00169E  C02E  F03A         	movff	?_eval_poly+1,log@x+1
  2509  0016A2  C02F  F03B         	movff	?_eval_poly+2,log@x+2
  2510  0016A6  0E72               	movlw	114
  2511  0016A8  6E15               	movwf	___ftmul@f2,c
  2512  0016AA  0E31               	movlw	49
  2513  0016AC  6E16               	movwf	___ftmul@f2+1,c
  2514  0016AE  0E3F               	movlw	63
  2515  0016B0  6E17               	movwf	___ftmul@f2+2,c
  2516  0016B2  C03C  F009         	movff	log@exponent,___awtoft@c
  2517  0016B6  C03D  F00A         	movff	log@exponent+1,___awtoft@c+1
  2518  0016BA  ECAF  F010         	call	___awtoft	;wreg free
  2519  0016BE  C009  F012         	movff	?___awtoft,___ftmul@f1
  2520  0016C2  C00A  F013         	movff	?___awtoft+1,___ftmul@f1+1
  2521  0016C6  C00B  F014         	movff	?___awtoft+2,___ftmul@f1+2
  2522  0016CA  ECF6  F00B         	call	___ftmul	;wreg free
  2523  0016CE  C012  F021         	movff	?___ftmul,___ftadd@f1
  2524  0016D2  C013  F022         	movff	?___ftmul+1,___ftadd@f1+1
  2525  0016D6  C014  F023         	movff	?___ftmul+2,___ftadd@f1+2
  2526  0016DA  C039  F024         	movff	log@x,___ftadd@f2
  2527  0016DE  C03A  F025         	movff	log@x+1,___ftadd@f2+1
  2528  0016E2  C03B  F026         	movff	log@x+2,___ftadd@f2+2
  2529  0016E6  EC93  F008         	call	___ftadd	;wreg free
  2530  0016EA  C021  F039         	movff	?___ftadd,?_log
  2531  0016EE  C022  F03A         	movff	?___ftadd+1,?_log+1
  2532  0016F2  C023  F03B         	movff	?___ftadd+2,?_log+2
  2533  0016F6  0012               	return	
  2534  0016F8                     __end_of_log:
  2535                           	opt stack 0
  2536                           tblptru	equ	0xFF8
  2537                           tblptrh	equ	0xFF7
  2538                           tblptrl	equ	0xFF6
  2539                           tablat	equ	0xFF5
  2540                           intcon	equ	0xFF2
  2541                           intcon2	equ	0xFF1
  2542                           postinc0	equ	0xFEE
  2543                           wreg	equ	0xFE8
  2544                           postdec1	equ	0xFE5
  2545                           fsr1l	equ	0xFE1
  2546                           indf2	equ	0xFDF
  2547                           fsr2h	equ	0xFDA
  2548                           fsr2l	equ	0xFD9
  2549                           status	equ	0xFD8
  2550                           
  2551 ;; *************** function _exp *****************
  2552 ;; Defined at:
  2553 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\exp.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  x               3   80[COMRAM] int 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  exponent        2   86[COMRAM] int 
  2558 ;;  sign            1   88[COMRAM] unsigned char 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  3   80[COMRAM] unsigned char 
  2561 ;; Registers used:
  2562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2568 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2569 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2571 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2572 ;;Total ram usage:        9 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; Hardware stack levels required when called:    3
  2575 ;; This function calls:
  2576 ;;		___awtoft
  2577 ;;		___ftdiv
  2578 ;;		___ftge
  2579 ;;		___ftmul
  2580 ;;		___ftneg
  2581 ;;		___ftsub
  2582 ;;		___fttol
  2583 ;;		_eval_poly
  2584 ;;		_floor
  2585 ;;		_ldexp
  2586 ;; This function is called by:
  2587 ;;		_pow
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text15
  2592  000F3E                     __ptext15:
  2593                           	opt stack 0
  2594  000F3E                     _exp:
  2595                           	opt stack 25
  2596                           
  2597                           ;incstack = 0
  2598  000F3E  5051               	movf	exp@x,w,c
  2599  000F40  1052               	iorwf	exp@x+1,w,c
  2600  000F42  1053               	iorwf	exp@x+2,w,c
  2601  000F44  A4D8               	btfss	status,2,c
  2602  000F46  D007               	goto	l1564
  2603  000F48  0E00               	movlw	0
  2604  000F4A  6E51               	movwf	?_exp,c
  2605  000F4C  0E80               	movlw	128
  2606  000F4E  6E52               	movwf	?_exp+1,c
  2607  000F50  0E3F               	movlw	63
  2608  000F52  6E53               	movwf	?_exp+2,c
  2609  000F54  0012               	return	
  2610  000F56                     l1564:
  2611  000F56  0E72               	movlw	114
  2612  000F58  6E01               	movwf	___ftge@ff1,c
  2613  000F5A  0E31               	movlw	49
  2614  000F5C  6E02               	movwf	___ftge@ff1+1,c
  2615  000F5E  0E44               	movlw	68
  2616  000F60  6E03               	movwf	___ftge@ff1+2,c
  2617  000F62  C051  F004         	movff	exp@x,___ftge@ff2
  2618  000F66  C052  F005         	movff	exp@x+1,___ftge@ff2+1
  2619  000F6A  C053  F006         	movff	exp@x+2,___ftge@ff2+2
  2620  000F6E  EC23  F00F         	call	___ftge	;wreg free
  2621  000F72  B0D8               	btfsc	status,0,c
  2622  000F74  D00C               	goto	l1566
  2623  000F76  0E00               	movlw	0
  2624  000F78  0100               	movlb	0	; () banked
  2625  000F7A  6FAC               	movwf	(_errno+1)& (0+255),b
  2626  000F7C  0E22               	movlw	34
  2627  000F7E  6FAB               	movwf	_errno& (0+255),b
  2628  000F80  0EFF               	movlw	255
  2629  000F82  6E51               	movwf	?_exp,c
  2630  000F84  0E7F               	movlw	127
  2631  000F86  6E52               	movwf	?_exp+1,c
  2632  000F88  0E7F               	movlw	127
  2633  000F8A  6E53               	movwf	?_exp+2,c
  2634                           
  2635                           ; BSR set to: 0
  2636  000F8C  0012               	return	
  2637  000F8E                     l1566:
  2638                           
  2639                           ; BSR set to: 0
  2640  000F8E  C051  F001         	movff	exp@x,___ftge@ff1
  2641  000F92  C052  F002         	movff	exp@x+1,___ftge@ff1+1
  2642  000F96  C053  F003         	movff	exp@x+2,___ftge@ff1+2
  2643  000F9A  0E49               	movlw	73
  2644  000F9C  6E04               	movwf	___ftge@ff2,c
  2645  000F9E  0E3A               	movlw	58
  2646  000FA0  6E05               	movwf	___ftge@ff2+1,c
  2647  000FA2  0EC4               	movlw	196
  2648  000FA4  6E06               	movwf	___ftge@ff2+2,c
  2649  000FA6  EC23  F00F         	call	___ftge	;wreg free
  2650  000FAA  B0D8               	btfsc	status,0,c
  2651  000FAC  D00C               	goto	l1567
  2652  000FAE  0E00               	movlw	0
  2653  000FB0  0100               	movlb	0	; () banked
  2654  000FB2  6FAC               	movwf	(_errno+1)& (0+255),b
  2655  000FB4  0E22               	movlw	34
  2656  000FB6  6FAB               	movwf	_errno& (0+255),b
  2657  000FB8  0E00               	movlw	0
  2658  000FBA  6E51               	movwf	?_exp,c
  2659  000FBC  0E00               	movlw	0
  2660  000FBE  6E52               	movwf	?_exp+1,c
  2661  000FC0  0E00               	movlw	0
  2662  000FC2  6E53               	movwf	?_exp+2,c
  2663                           
  2664                           ; BSR set to: 0
  2665  000FC4  0012               	return	
  2666  000FC6                     l1567:
  2667                           
  2668                           ; BSR set to: 0
  2669  000FC6  AE53               	btfss	exp@x+2,7,c
  2670  000FC8  D002               	goto	u2610
  2671  000FCA  0E01               	movlw	1
  2672  000FCC  D001               	goto	u2620
  2673  000FCE                     u2610:
  2674  000FCE  0E00               	movlw	0
  2675  000FD0                     u2620:
  2676  000FD0  6E59               	movwf	exp@sign,c
  2677  000FD2  5059               	movf	exp@sign,w,c
  2678  000FD4  B4D8               	btfsc	status,2,c
  2679  000FD6  D00E               	goto	l1568
  2680  000FD8  C051  F001         	movff	exp@x,___ftneg@f1
  2681  000FDC  C052  F002         	movff	exp@x+1,___ftneg@f1+1
  2682  000FE0  C053  F003         	movff	exp@x+2,___ftneg@f1+2
  2683  000FE4  EC0E  F011         	call	___ftneg	;wreg free
  2684  000FE8  C001  F051         	movff	?___ftneg,exp@x
  2685  000FEC  C002  F052         	movff	?___ftneg+1,exp@x+1
  2686  000FF0  C003  F053         	movff	?___ftneg+2,exp@x+2
  2687  000FF4                     l1568:
  2688  000FF4  C051  F012         	movff	exp@x,___ftmul@f1
  2689  000FF8  C052  F013         	movff	exp@x+1,___ftmul@f1+1
  2690  000FFC  C053  F014         	movff	exp@x+2,___ftmul@f1+2
  2691  001000  0EAA               	movlw	170
  2692  001002  6E15               	movwf	___ftmul@f2,c
  2693  001004  0EB8               	movlw	184
  2694  001006  6E16               	movwf	___ftmul@f2+1,c
  2695  001008  0E3F               	movlw	63
  2696  00100A  6E17               	movwf	___ftmul@f2+2,c
  2697  00100C  ECF6  F00B         	call	___ftmul	;wreg free
  2698  001010  C012  F051         	movff	?___ftmul,exp@x
  2699  001014  C013  F052         	movff	?___ftmul+1,exp@x+1
  2700  001018  C014  F053         	movff	?___ftmul+2,exp@x+2
  2701  00101C  C051  F049         	movff	exp@x,floor@x
  2702  001020  C052  F04A         	movff	exp@x+1,floor@x+1
  2703  001024  C053  F04B         	movff	exp@x+2,floor@x+2
  2704  001028  ECE3  F00C         	call	_floor	;wreg free
  2705  00102C  C049  F054         	movff	?_floor,_exp$2929
  2706  001030  C04A  F055         	movff	?_floor+1,_exp$2929+1
  2707  001034  C04B  F056         	movff	?_floor+2,_exp$2929+2
  2708  001038  C054  F030         	movff	_exp$2929,___fttol@f1
  2709  00103C  C055  F031         	movff	_exp$2929+1,___fttol@f1+1
  2710  001040  C056  F032         	movff	_exp$2929+2,___fttol@f1+2
  2711  001044  EC7C  F00B         	call	___fttol	;wreg free
  2712  001048  C030  F057         	movff	?___fttol,exp@exponent
  2713  00104C  C031  F058         	movff	?___fttol+1,exp@exponent+1
  2714  001050  C051  F02D         	movff	exp@x,___ftsub@f1
  2715  001054  C052  F02E         	movff	exp@x+1,___ftsub@f1+1
  2716  001058  C053  F02F         	movff	exp@x+2,___ftsub@f1+2
  2717  00105C  C057  F009         	movff	exp@exponent,___awtoft@c
  2718  001060  C058  F00A         	movff	exp@exponent+1,___awtoft@c+1
  2719  001064  ECAF  F010         	call	___awtoft	;wreg free
  2720  001068  C009  F030         	movff	?___awtoft,___ftsub@f2
  2721  00106C  C00A  F031         	movff	?___awtoft+1,___ftsub@f2+1
  2722  001070  C00B  F032         	movff	?___awtoft+2,___ftsub@f2+2
  2723  001074  EC8F  F010         	call	___ftsub	;wreg free
  2724  001078  C02D  F051         	movff	?___ftsub,exp@x
  2725  00107C  C02E  F052         	movff	?___ftsub+1,exp@x+1
  2726  001080  C02F  F053         	movff	?___ftsub+2,exp@x+2
  2727  001084  C051  F02D         	movff	exp@x,eval_poly@x
  2728  001088  C052  F02E         	movff	exp@x+1,eval_poly@x+1
  2729  00108C  C053  F02F         	movff	exp@x+2,eval_poly@x+2
  2730  001090  0E01               	movlw	low exp@coeff
  2731  001092  6E30               	movwf	eval_poly@d,c
  2732  001094  0E0F               	movlw	high exp@coeff
  2733  001096  6E31               	movwf	eval_poly@d+1,c
  2734  001098  0E00               	movlw	0
  2735  00109A  6E33               	movwf	eval_poly@n+1,c
  2736  00109C  0E09               	movlw	9
  2737  00109E  6E32               	movwf	eval_poly@n,c
  2738  0010A0  EC52  F00D         	call	_eval_poly	;wreg free
  2739  0010A4  C02D  F039         	movff	?_eval_poly,ldexp@value
  2740  0010A8  C02E  F03A         	movff	?_eval_poly+1,ldexp@value+1
  2741  0010AC  C02F  F03B         	movff	?_eval_poly+2,ldexp@value+2
  2742  0010B0  C057  F03C         	movff	exp@exponent,ldexp@newexp
  2743  0010B4  C058  F03D         	movff	exp@exponent+1,ldexp@newexp+1
  2744  0010B8  EC21  F00E         	call	_ldexp	;wreg free
  2745  0010BC  C039  F051         	movff	?_ldexp,exp@x
  2746  0010C0  C03A  F052         	movff	?_ldexp+1,exp@x+1
  2747  0010C4  C03B  F053         	movff	?_ldexp+2,exp@x+2
  2748  0010C8  5059               	movf	exp@sign,w,c
  2749  0010CA  B4D8               	btfsc	status,2,c
  2750  0010CC  D025               	goto	l1569
  2751  0010CE  2851               	incf	exp@x,w,c
  2752  0010D0  E10E               	bnz	l3815
  2753  0010D2  0E7F               	movlw	127
  2754  0010D4  1852               	xorwf	exp@x+1,w,c
  2755  0010D6  E10B               	bnz	l3815
  2756  0010D8  0E7F               	movlw	127
  2757  0010DA  1853               	xorwf	exp@x+2,w,c
  2758  0010DC  A4D8               	btfss	status,2,c
  2759  0010DE  D007               	goto	l1570
  2760  0010E0  0E00               	movlw	0
  2761  0010E2  6E51               	movwf	?_exp,c
  2762  0010E4  0E00               	movlw	0
  2763  0010E6  6E52               	movwf	?_exp+1,c
  2764  0010E8  0E00               	movlw	0
  2765  0010EA  6E53               	movwf	?_exp+2,c
  2766  0010EC  0012               	return	
  2767  0010EE                     l1570:
  2768  0010EE                     l3815:
  2769  0010EE  0E00               	movlw	0
  2770  0010F0  6E21               	movwf	___ftdiv@f1,c
  2771  0010F2  0E80               	movlw	128
  2772  0010F4  6E22               	movwf	___ftdiv@f1+1,c
  2773  0010F6  0E3F               	movlw	63
  2774  0010F8  6E23               	movwf	___ftdiv@f1+2,c
  2775  0010FA  C051  F024         	movff	exp@x,___ftdiv@f2
  2776  0010FE  C052  F025         	movff	exp@x+1,___ftdiv@f2+1
  2777  001102  C053  F026         	movff	exp@x+2,___ftdiv@f2+2
  2778  001106  EC70  F00C         	call	___ftdiv	;wreg free
  2779  00110A  C021  F051         	movff	?___ftdiv,?_exp
  2780  00110E  C022  F052         	movff	?___ftdiv+1,?_exp+1
  2781  001112  C023  F053         	movff	?___ftdiv+2,?_exp+2
  2782  001116  0012               	return	
  2783  001118                     l1569:
  2784  001118  C051  F051         	movff	exp@x,?_exp
  2785  00111C  C052  F052         	movff	exp@x+1,?_exp+1
  2786  001120  C053  F053         	movff	exp@x+2,?_exp+2
  2787  001124  0012               	return		;funcret
  2788  001126                     __end_of_exp:
  2789                           	opt stack 0
  2790                           tblptru	equ	0xFF8
  2791                           tblptrh	equ	0xFF7
  2792                           tblptrl	equ	0xFF6
  2793                           tablat	equ	0xFF5
  2794                           intcon	equ	0xFF2
  2795                           intcon2	equ	0xFF1
  2796                           postinc0	equ	0xFEE
  2797                           wreg	equ	0xFE8
  2798                           postdec1	equ	0xFE5
  2799                           fsr1l	equ	0xFE1
  2800                           indf2	equ	0xFDF
  2801                           fsr2h	equ	0xFDA
  2802                           fsr2l	equ	0xFD9
  2803                           status	equ	0xFD8
  2804                           
  2805 ;; *************** function _ldexp *****************
  2806 ;; Defined at:
  2807 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  value           3   56[COMRAM] unsigned char 
  2810 ;;  newexp          2   59[COMRAM] int 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;		None
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  3   56[COMRAM] int 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, status,0
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2822 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2824 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2825 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2826 ;;Total ram usage:        7 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; This function calls:
  2829 ;;		Nothing
  2830 ;; This function is called by:
  2831 ;;		_exp
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text16
  2836  001C42                     __ptext16:
  2837                           	opt stack 0
  2838  001C42                     _ldexp:
  2839                           	opt stack 27
  2840                           
  2841                           ;incstack = 0
  2842  001C42  5039               	movf	ldexp@value,w,c
  2843  001C44  103A               	iorwf	ldexp@value+1,w,c
  2844  001C46  103B               	iorwf	ldexp@value+2,w,c
  2845  001C48  A4D8               	btfss	status,2,c
  2846  001C4A  D007               	goto	l1588
  2847  001C4C  0E00               	movlw	0
  2848  001C4E  6E39               	movwf	?_ldexp,c
  2849  001C50  0E00               	movlw	0
  2850  001C52  6E3A               	movwf	?_ldexp+1,c
  2851  001C54  0E00               	movlw	0
  2852  001C56  6E3B               	movwf	?_ldexp+2,c
  2853  001C58  0012               	return	
  2854  001C5A                     l1588:
  2855  001C5A  503B               	movf	ldexp@value+2,w,c
  2856  001C5C  0B7F               	andlw	127
  2857  001C5E  6E3E               	movwf	??_ldexp& (0+255),c
  2858  001C60  6A3F               	clrf	(??_ldexp+1)& (0+255),c
  2859  001C62  90D8               	bcf	status,0,c
  2860  001C64  363E               	rlcf	??_ldexp,f,c
  2861  001C66  363F               	rlcf	??_ldexp+1,f,c
  2862  001C68  503E               	movf	??_ldexp,w,c
  2863  001C6A  263C               	addwf	ldexp@newexp,f,c
  2864  001C6C  503F               	movf	??_ldexp+1,w,c
  2865  001C6E  223D               	addwfc	ldexp@newexp+1,f,c
  2866  001C70  AE3A               	btfss	ldexp@value+1,7,c
  2867  001C72  D003               	goto	u2440
  2868  001C74  6A3E               	clrf	??_ldexp& (0+255),c
  2869  001C76  2A3E               	incf	??_ldexp& (0+255),f,c
  2870  001C78  D001               	goto	u2448
  2871  001C7A                     u2440:
  2872  001C7A  6A3E               	clrf	??_ldexp& (0+255),c
  2873  001C7C                     u2448:
  2874  001C7C  503E               	movf	??_ldexp,w,c
  2875  001C7E  263C               	addwf	ldexp@newexp,f,c
  2876  001C80  0E00               	movlw	0
  2877  001C82  223D               	addwfc	ldexp@newexp+1,f,c
  2878  001C84  AE3D               	btfss	ldexp@newexp+1,7,c
  2879  001C86  D00C               	goto	l1590
  2880  001C88  0E00               	movlw	0
  2881  001C8A  0100               	movlb	0	; () banked
  2882  001C8C  6FAC               	movwf	(_errno+1)& (0+255),b
  2883  001C8E  0E22               	movlw	34
  2884  001C90  6FAB               	movwf	_errno& (0+255),b
  2885  001C92  0E00               	movlw	0
  2886  001C94  6E39               	movwf	?_ldexp,c
  2887  001C96  0E00               	movlw	0
  2888  001C98  6E3A               	movwf	?_ldexp+1,c
  2889  001C9A  0E00               	movlw	0
  2890  001C9C                     L1:
  2891  001C9C  6E3B               	movwf	?_ldexp+2,c
  2892                           
  2893                           ; BSR set to: 0
  2894  001C9E  0012               	return	
  2895  001CA0                     l1590:
  2896                           
  2897                           ; BSR set to: 0
  2898  001CA0  BE3D               	btfsc	ldexp@newexp+1,7,c
  2899  001CA2  D016               	goto	l1592
  2900  001CA4  043D               	decf	ldexp@newexp+1,w,c
  2901  001CA6  A0D8               	btfss	status,0,c
  2902  001CA8  D013               	goto	l1592
  2903  001CAA  0E00               	movlw	0
  2904  001CAC  0100               	movlb	0	; () banked
  2905  001CAE  6FAC               	movwf	(_errno+1)& (0+255),b
  2906  001CB0  0E22               	movlw	34
  2907  001CB2  6FAB               	movwf	_errno& (0+255),b
  2908                           
  2909                           ; BSR set to: 0
  2910  001CB4  AE3B               	btfss	ldexp@value+2,7,c
  2911  001CB6  D006               	goto	l1593
  2912                           
  2913                           ; BSR set to: 0
  2914  001CB8  0EFF               	movlw	255
  2915  001CBA  6E39               	movwf	?_ldexp,c
  2916  001CBC  0E7F               	movlw	127
  2917  001CBE  6E3A               	movwf	?_ldexp+1,c
  2918  001CC0  0EFF               	movlw	255
  2919  001CC2  D7EC               	goto	L1
  2920  001CC4                     l1593:
  2921                           
  2922                           ; BSR set to: 0
  2923                           
  2924                           ; BSR set to: 0
  2925  001CC4  0EFF               	movlw	255
  2926  001CC6  6E39               	movwf	?_ldexp,c
  2927  001CC8  0E7F               	movlw	127
  2928  001CCA  6E3A               	movwf	?_ldexp+1,c
  2929  001CCC  0E7F               	movlw	127
  2930  001CCE  D7E6               	goto	L1
  2931  001CD0                     l1592:
  2932                           
  2933                           ; BSR set to: 0
  2934  001CD0  343D               	rlcf	ldexp@newexp+1,w,c
  2935  001CD2  303D               	rrcf	ldexp@newexp+1,w,c
  2936  001CD4  6E3F               	movwf	(??_ldexp+1)& (0+255),c
  2937  001CD6  303C               	rrcf	ldexp@newexp,w,c
  2938  001CD8  6E3E               	movwf	??_ldexp& (0+255),c
  2939  001CDA  503B               	movf	ldexp@value+2,w,c
  2940  001CDC  183E               	xorwf	??_ldexp,w,c
  2941  001CDE  0B80               	andlw	-128
  2942  001CE0  183E               	xorwf	??_ldexp,w,c
  2943  001CE2  6E3B               	movwf	ldexp@value+2,c
  2944  001CE4  C03C  F03E         	movff	ldexp@newexp,??_ldexp
  2945  001CE8  0E01               	movlw	1
  2946  001CEA  163E               	andwf	??_ldexp,f,c
  2947  001CEC  323E               	rrcf	??_ldexp,f,c
  2948  001CEE  323E               	rrcf	??_ldexp,f,c
  2949  001CF0  503A               	movf	ldexp@value+1,w,c
  2950  001CF2  183E               	xorwf	??_ldexp,w,c
  2951  001CF4  0B7F               	andlw	-129
  2952  001CF6  183E               	xorwf	??_ldexp,w,c
  2953  001CF8  6E3A               	movwf	ldexp@value+1,c
  2954  001CFA  C039  F039         	movff	ldexp@value,?_ldexp
  2955  001CFE  C03A  F03A         	movff	ldexp@value+1,?_ldexp+1
  2956  001D02  C03B  F03B         	movff	ldexp@value+2,?_ldexp+2
  2957  001D06  0012               	return	
  2958  001D08                     __end_of_ldexp:
  2959                           	opt stack 0
  2960                           tblptru	equ	0xFF8
  2961                           tblptrh	equ	0xFF7
  2962                           tblptrl	equ	0xFF6
  2963                           tablat	equ	0xFF5
  2964                           intcon	equ	0xFF2
  2965                           intcon2	equ	0xFF1
  2966                           postinc0	equ	0xFEE
  2967                           wreg	equ	0xFE8
  2968                           postdec1	equ	0xFE5
  2969                           fsr1l	equ	0xFE1
  2970                           indf2	equ	0xFDF
  2971                           fsr2h	equ	0xFDA
  2972                           fsr2l	equ	0xFD9
  2973                           status	equ	0xFD8
  2974                           
  2975 ;; *************** function _floor *****************
  2976 ;; Defined at:
  2977 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  x               3   72[COMRAM] int 
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  i               3   75[COMRAM] int 
  2982 ;;  expon           2   78[COMRAM] int 
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  3   72[COMRAM] int 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2992 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2993 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2995 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2996 ;;Total ram usage:        8 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:    2
  2999 ;; This function calls:
  3000 ;;		___altoft
  3001 ;;		___ftadd
  3002 ;;		___ftge
  3003 ;;		___fttol
  3004 ;;		_frexp
  3005 ;; This function is called by:
  3006 ;;		_exp
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text17
  3011  0019C6                     __ptext17:
  3012                           	opt stack 0
  3013  0019C6                     _floor:
  3014                           	opt stack 25
  3015                           
  3016                           ;incstack = 0
  3017  0019C6  C049  F001         	movff	floor@x,frexp@value
  3018  0019CA  C04A  F002         	movff	floor@x+1,frexp@value+1
  3019  0019CE  C04B  F003         	movff	floor@x+2,frexp@value+2
  3020  0019D2  0E4F               	movlw	low floor@expon
  3021  0019D4  6E04               	movwf	frexp@eptr,c
  3022  0019D6  0E00               	movlw	high floor@expon
  3023  0019D8  6E05               	movwf	frexp@eptr+1,c
  3024  0019DA  ECDB  F00E         	call	_frexp	;wreg free
  3025  0019DE  AE50               	btfss	floor@expon+1,7,c
  3026  0019E0  D010               	goto	l1575
  3027  0019E2  AE4B               	btfss	floor@x+2,7,c
  3028  0019E4  D007               	goto	l1576
  3029  0019E6  0E00               	movlw	0
  3030  0019E8  6E49               	movwf	?_floor,c
  3031  0019EA  0E80               	movlw	128
  3032  0019EC  6E4A               	movwf	?_floor+1,c
  3033  0019EE  0EBF               	movlw	191
  3034  0019F0  6E4B               	movwf	?_floor+2,c
  3035  0019F2  0012               	return	
  3036  0019F4                     l1576:
  3037  0019F4  0E00               	movlw	0
  3038  0019F6  6E49               	movwf	?_floor,c
  3039  0019F8  0E00               	movlw	0
  3040  0019FA  6E4A               	movwf	?_floor+1,c
  3041  0019FC  0E00               	movlw	0
  3042  0019FE  6E4B               	movwf	?_floor+2,c
  3043  001A00  0012               	return	
  3044  001A02                     l1575:
  3045  001A02  5050               	movf	floor@expon+1,w,c
  3046  001A04  E104               	bnz	u2400
  3047  001A06  0E15               	movlw	21
  3048  001A08  5C4F               	subwf	floor@expon,w,c
  3049  001A0A  A0D8               	btfss	status,0,c
  3050  001A0C  D007               	goto	l1578
  3051  001A0E                     u2400:
  3052  001A0E  C049  F049         	movff	floor@x,?_floor
  3053  001A12  C04A  F04A         	movff	floor@x+1,?_floor+1
  3054  001A16  C04B  F04B         	movff	floor@x+2,?_floor+2
  3055  001A1A  0012               	return	
  3056  001A1C                     l1578:
  3057  001A1C  C049  F030         	movff	floor@x,___fttol@f1
  3058  001A20  C04A  F031         	movff	floor@x+1,___fttol@f1+1
  3059  001A24  C04B  F032         	movff	floor@x+2,___fttol@f1+2
  3060  001A28  EC7C  F00B         	call	___fttol	;wreg free
  3061  001A2C  C030  F03F         	movff	?___fttol,___altoft@c
  3062  001A30  C031  F040         	movff	?___fttol+1,___altoft@c+1
  3063  001A34  C032  F041         	movff	?___fttol+2,___altoft@c+2
  3064  001A38  C033  F042         	movff	?___fttol+3,___altoft@c+3
  3065  001A3C  EC6B  F00F         	call	___altoft	;wreg free
  3066  001A40  C03F  F04C         	movff	?___altoft,floor@i
  3067  001A44  C040  F04D         	movff	?___altoft+1,floor@i+1
  3068  001A48  C041  F04E         	movff	?___altoft+2,floor@i+2
  3069  001A4C  C049  F001         	movff	floor@x,___ftge@ff1
  3070  001A50  C04A  F002         	movff	floor@x+1,___ftge@ff1+1
  3071  001A54  C04B  F003         	movff	floor@x+2,___ftge@ff1+2
  3072  001A58  C04C  F004         	movff	floor@i,___ftge@ff2
  3073  001A5C  C04D  F005         	movff	floor@i+1,___ftge@ff2+1
  3074  001A60  C04E  F006         	movff	floor@i+2,___ftge@ff2+2
  3075  001A64  EC23  F00F         	call	___ftge	;wreg free
  3076  001A68  B0D8               	btfsc	status,0,c
  3077  001A6A  D015               	goto	l1579
  3078  001A6C  C04C  F021         	movff	floor@i,___ftadd@f1
  3079  001A70  C04D  F022         	movff	floor@i+1,___ftadd@f1+1
  3080  001A74  C04E  F023         	movff	floor@i+2,___ftadd@f1+2
  3081  001A78  0E00               	movlw	0
  3082  001A7A  6E24               	movwf	___ftadd@f2,c
  3083  001A7C  0E80               	movlw	128
  3084  001A7E  6E25               	movwf	___ftadd@f2+1,c
  3085  001A80  0EBF               	movlw	191
  3086  001A82  6E26               	movwf	___ftadd@f2+2,c
  3087  001A84  EC93  F008         	call	___ftadd	;wreg free
  3088  001A88  C021  F049         	movff	?___ftadd,?_floor
  3089  001A8C  C022  F04A         	movff	?___ftadd+1,?_floor+1
  3090  001A90  C023  F04B         	movff	?___ftadd+2,?_floor+2
  3091  001A94  0012               	return	
  3092  001A96                     l1579:
  3093  001A96  C04C  F049         	movff	floor@i,?_floor
  3094  001A9A  C04D  F04A         	movff	floor@i+1,?_floor+1
  3095  001A9E  C04E  F04B         	movff	floor@i+2,?_floor+2
  3096  001AA2  0012               	return		;funcret
  3097  001AA4                     __end_of_floor:
  3098                           	opt stack 0
  3099                           tblptru	equ	0xFF8
  3100                           tblptrh	equ	0xFF7
  3101                           tblptrl	equ	0xFF6
  3102                           tablat	equ	0xFF5
  3103                           intcon	equ	0xFF2
  3104                           intcon2	equ	0xFF1
  3105                           postinc0	equ	0xFEE
  3106                           wreg	equ	0xFE8
  3107                           postdec1	equ	0xFE5
  3108                           fsr1l	equ	0xFE1
  3109                           indf2	equ	0xFDF
  3110                           fsr2h	equ	0xFDA
  3111                           fsr2l	equ	0xFD9
  3112                           status	equ	0xFD8
  3113                           
  3114 ;; *************** function _frexp *****************
  3115 ;; Defined at:
  3116 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  value           3    0[COMRAM] int 
  3119 ;;  eptr            2    3[COMRAM] PTR int 
  3120 ;;		 -> log@exponent(2), floor@expon(2), 
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;		None
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  3    0[COMRAM] PTR int 
  3125 ;; Registers used:
  3126 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3132 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3134 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3135 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3136 ;;Total ram usage:        7 bytes
  3137 ;; Hardware stack levels used:    1
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_floor
  3142 ;;		_log
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text18
  3147  001DB6                     __ptext18:
  3148                           	opt stack 0
  3149  001DB6                     _frexp:
  3150                           	opt stack 27
  3151                           
  3152                           ;incstack = 0
  3153  001DB6  5001               	movf	frexp@value,w,c
  3154  001DB8  1002               	iorwf	frexp@value+1,w,c
  3155  001DBA  1003               	iorwf	frexp@value+2,w,c
  3156  001DBC  A4D8               	btfss	status,2,c
  3157  001DBE  D00F               	goto	l1584
  3158  001DC0  C004  FFD9         	movff	frexp@eptr,fsr2l
  3159  001DC4  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3160  001DC8  0E00               	movlw	0
  3161  001DCA  6EDE               	movwf	postinc2,c
  3162  001DCC  0E00               	movlw	0
  3163  001DCE  6EDD               	movwf	postdec2,c
  3164  001DD0  0E00               	movlw	0
  3165  001DD2  6E01               	movwf	?_frexp,c
  3166  001DD4  0E00               	movlw	0
  3167  001DD6  6E02               	movwf	?_frexp+1,c
  3168  001DD8  0E00               	movlw	0
  3169  001DDA  6E03               	movwf	?_frexp+2,c
  3170  001DDC  0012               	return	
  3171  001DDE                     l1584:
  3172  001DDE  5003               	movf	frexp@value+2,w,c
  3173  001DE0  0B7F               	andlw	127
  3174  001DE2  6E06               	movwf	??_frexp& (0+255),c
  3175  001DE4  6A07               	clrf	(??_frexp+1)& (0+255),c
  3176  001DE6  90D8               	bcf	status,0,c
  3177  001DE8  3606               	rlcf	??_frexp,f,c
  3178  001DEA  3607               	rlcf	??_frexp+1,f,c
  3179  001DEC  C004  FFD9         	movff	frexp@eptr,fsr2l
  3180  001DF0  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3181  001DF4  C006  FFDE         	movff	??_frexp,postinc2
  3182  001DF8  C007  FFDD         	movff	??_frexp+1,postdec2
  3183  001DFC  AE02               	btfss	frexp@value+1,7,c
  3184  001DFE  D003               	goto	u2290
  3185  001E00  6A06               	clrf	??_frexp& (0+255),c
  3186  001E02  2A06               	incf	??_frexp& (0+255),f,c
  3187  001E04  D001               	goto	u2298
  3188  001E06                     u2290:
  3189  001E06  6A06               	clrf	??_frexp& (0+255),c
  3190  001E08                     u2298:
  3191  001E08  5006               	movf	??_frexp,w,c
  3192  001E0A  C004  FFD9         	movff	frexp@eptr,fsr2l
  3193  001E0E  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3194  001E12  12DE               	iorwf	postinc2,f,c
  3195  001E14  0E00               	movlw	0
  3196  001E16  12DD               	iorwf	postdec2,f,c
  3197  001E18  C004  FFD9         	movff	frexp@eptr,fsr2l
  3198  001E1C  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3199  001E20  0E82               	movlw	130
  3200  001E22  26DE               	addwf	postinc2,f,c
  3201  001E24  0EFF               	movlw	255
  3202  001E26  22DD               	addwfc	postdec2,f,c
  3203  001E28  8003               	bsf	frexp@value+2,0,c
  3204  001E2A  8203               	bsf	frexp@value+2,1,c
  3205  001E2C  8403               	bsf	frexp@value+2,2,c
  3206  001E2E  8603               	bsf	frexp@value+2,3,c
  3207  001E30  8803               	bsf	frexp@value+2,4,c
  3208  001E32  8A03               	bsf	frexp@value+2,5,c
  3209  001E34  9C03               	bcf	frexp@value+2,6,c
  3210  001E36  9E02               	bcf	frexp@value+1,7,c
  3211  001E38  C001  F001         	movff	frexp@value,?_frexp
  3212  001E3C  C002  F002         	movff	frexp@value+1,?_frexp+1
  3213  001E40  C003  F003         	movff	frexp@value+2,?_frexp+2
  3214  001E44  0012               	return	
  3215  001E46                     __end_of_frexp:
  3216                           	opt stack 0
  3217                           tblptru	equ	0xFF8
  3218                           tblptrh	equ	0xFF7
  3219                           tblptrl	equ	0xFF6
  3220                           tablat	equ	0xFF5
  3221                           intcon	equ	0xFF2
  3222                           intcon2	equ	0xFF1
  3223                           postinc0	equ	0xFEE
  3224                           wreg	equ	0xFE8
  3225                           postdec1	equ	0xFE5
  3226                           fsr1l	equ	0xFE1
  3227                           indf2	equ	0xFDF
  3228                           postinc2	equ	0xFDE
  3229                           postdec2	equ	0xFDD
  3230                           fsr2h	equ	0xFDA
  3231                           fsr2l	equ	0xFD9
  3232                           status	equ	0xFD8
  3233                           
  3234 ;; *************** function ___fttol *****************
  3235 ;; Defined at:
  3236 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;  f1              3   47[COMRAM] float 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;  lval            4   57[COMRAM] unsigned long 
  3241 ;;  exp1            1   61[COMRAM] unsigned char 
  3242 ;;  sign1           1   56[COMRAM] unsigned char 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  4   47[COMRAM] long 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3252 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3253 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3254 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3255 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3256 ;;Total ram usage:       15 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; This function calls:
  3259 ;;		Nothing
  3260 ;; This function is called by:
  3261 ;;		_MCP342x_read
  3262 ;;		_pow
  3263 ;;		_exp
  3264 ;;		_floor
  3265 ;;		_MCP9801_TempRead
  3266 ;;		_EEPROM_24AA512_pageWrite
  3267 ;;		_EEPROM_24AA512_pageRead
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text19
  3272  0016F8                     __ptext19:
  3273                           	opt stack 0
  3274  0016F8                     ___fttol:
  3275                           	opt stack 26
  3276                           
  3277                           ;incstack = 0
  3278  0016F8  C032  F034         	movff	___fttol@f1+2,??___fttol
  3279  0016FC  6A35               	clrf	(??___fttol+1)& (0+255),c
  3280  0016FE  6A36               	clrf	(??___fttol+2)& (0+255),c
  3281  001700  3431               	rlcf	___fttol@f1+1,w,c
  3282  001702  3634               	rlcf	??___fttol& (0+255),f,c
  3283  001704  E301               	bnc	u2201
  3284  001706  8035               	bsf	(??___fttol+1)& (0+255),0,c
  3285  001708                     u2201:
  3286  001708  5034               	movf	??___fttol,w,c
  3287  00170A  6E3E               	movwf	___fttol@exp1,c
  3288  00170C  503E               	movf	___fttol@exp1,w,c
  3289  00170E  A4D8               	btfss	status,2,c
  3290  001710  D009               	goto	l1265
  3291  001712  0E00               	movlw	0
  3292  001714  6E30               	movwf	?___fttol,c
  3293  001716  0E00               	movlw	0
  3294  001718  6E31               	movwf	?___fttol+1,c
  3295  00171A  0E00               	movlw	0
  3296  00171C  6E32               	movwf	?___fttol+2,c
  3297  00171E  0E00               	movlw	0
  3298  001720  6E33               	movwf	?___fttol+3,c
  3299  001722  0012               	return	
  3300  001724                     l1265:
  3301  001724  0E17               	movlw	23
  3302  001726  6E34               	movwf	??___fttol& (0+255),c
  3303  001728  C030  F035         	movff	___fttol@f1,??___fttol+1
  3304  00172C  C031  F036         	movff	___fttol@f1+1,??___fttol+2
  3305  001730  C032  F037         	movff	___fttol@f1+2,??___fttol+3
  3306  001734  2834               	incf	??___fttol,w,c
  3307  001736  6E38               	movwf	(??___fttol+4)& (0+255),c
  3308  001738  D004               	goto	u2220
  3309  00173A                     u2225:
  3310  00173A  90D8               	bcf	status,0,c
  3311  00173C  3237               	rrcf	??___fttol+3,f,c
  3312  00173E  3236               	rrcf	??___fttol+2,f,c
  3313  001740  3235               	rrcf	??___fttol+1,f,c
  3314  001742                     u2220:
  3315  001742  2E38               	decfsz	(??___fttol+4)& (0+255),f,c
  3316  001744  D7FA               	goto	u2225
  3317  001746  5035               	movf	??___fttol+1,w,c
  3318  001748  6E39               	movwf	___fttol@sign1,c
  3319  00174A  8E31               	bsf	___fttol@f1+1,7,c
  3320  00174C  0EFF               	movlw	255
  3321  00174E  1630               	andwf	___fttol@f1,f,c
  3322  001750  0EFF               	movlw	255
  3323  001752  1631               	andwf	___fttol@f1+1,f,c
  3324  001754  0E00               	movlw	0
  3325  001756  1632               	andwf	___fttol@f1+2,f,c
  3326  001758  5030               	movf	___fttol@f1,w,c
  3327  00175A  6E3A               	movwf	___fttol@lval,c
  3328  00175C  5031               	movf	___fttol@f1+1,w,c
  3329  00175E  6E3B               	movwf	___fttol@lval+1,c
  3330  001760  5032               	movf	___fttol@f1+2,w,c
  3331  001762  6E3C               	movwf	___fttol@lval+2,c
  3332  001764  6A3D               	clrf	___fttol@lval+3,c
  3333  001766  0E8E               	movlw	142
  3334  001768  5E3E               	subwf	___fttol@exp1,f,c
  3335  00176A  AE3E               	btfss	___fttol@exp1,7,c
  3336  00176C  D016               	goto	l1267
  3337  00176E  503E               	movf	___fttol@exp1,w,c
  3338  001770  0A80               	xorlw	128
  3339  001772  0F8F               	addlw	143
  3340  001774  B0D8               	btfsc	status,0,c
  3341  001776  D009               	goto	l1268
  3342  001778  0E00               	movlw	0
  3343  00177A  6E30               	movwf	?___fttol,c
  3344  00177C  0E00               	movlw	0
  3345  00177E  6E31               	movwf	?___fttol+1,c
  3346  001780  0E00               	movlw	0
  3347  001782  6E32               	movwf	?___fttol+2,c
  3348  001784  0E00               	movlw	0
  3349  001786  6E33               	movwf	?___fttol+3,c
  3350  001788  0012               	return	
  3351  00178A                     l1268:
  3352  00178A  90D8               	bcf	status,0,c
  3353  00178C  323D               	rrcf	___fttol@lval+3,f,c
  3354  00178E  323C               	rrcf	___fttol@lval+2,f,c
  3355  001790  323B               	rrcf	___fttol@lval+1,f,c
  3356  001792  323A               	rrcf	___fttol@lval,f,c
  3357  001794  3E3E               	incfsz	___fttol@exp1,f,c
  3358  001796  D7F9               	goto	l1268
  3359  001798  D015               	goto	u2260
  3360  00179A                     l1267:
  3361  00179A  0E17               	movlw	23
  3362  00179C  643E               	cpfsgt	___fttol@exp1,c
  3363  00179E  D00F               	goto	l1273
  3364  0017A0  0E00               	movlw	0
  3365  0017A2  6E30               	movwf	?___fttol,c
  3366  0017A4  0E00               	movlw	0
  3367  0017A6  6E31               	movwf	?___fttol+1,c
  3368  0017A8  0E00               	movlw	0
  3369  0017AA  6E32               	movwf	?___fttol+2,c
  3370  0017AC  0E00               	movlw	0
  3371  0017AE  6E33               	movwf	?___fttol+3,c
  3372  0017B0  0012               	return	
  3373  0017B2  90D8               	bcf	status,0,c
  3374  0017B4  363A               	rlcf	___fttol@lval,f,c
  3375  0017B6  363B               	rlcf	___fttol@lval+1,f,c
  3376  0017B8  363C               	rlcf	___fttol@lval+2,f,c
  3377  0017BA  363D               	rlcf	___fttol@lval+3,f,c
  3378  0017BC  063E               	decf	___fttol@exp1,f,c
  3379  0017BE                     l1273:
  3380  0017BE  503E               	movf	___fttol@exp1,w,c
  3381  0017C0  A4D8               	btfss	status,2,c
  3382  0017C2  D7F7               	goto	l1274
  3383  0017C4                     u2260:
  3384  0017C4  5039               	movf	___fttol@sign1,w,c
  3385  0017C6  B4D8               	btfsc	status,2,c
  3386  0017C8  D008               	goto	l1276
  3387  0017CA  1E3D               	comf	___fttol@lval+3,f,c
  3388  0017CC  1E3C               	comf	___fttol@lval+2,f,c
  3389  0017CE  1E3B               	comf	___fttol@lval+1,f,c
  3390  0017D0  6C3A               	negf	___fttol@lval,c
  3391  0017D2  0E00               	movlw	0
  3392  0017D4  223B               	addwfc	___fttol@lval+1,f,c
  3393  0017D6  223C               	addwfc	___fttol@lval+2,f,c
  3394  0017D8  223D               	addwfc	___fttol@lval+3,f,c
  3395  0017DA                     l1276:
  3396  0017DA  C03A  F030         	movff	___fttol@lval,?___fttol
  3397  0017DE  C03B  F031         	movff	___fttol@lval+1,?___fttol+1
  3398  0017E2  C03C  F032         	movff	___fttol@lval+2,?___fttol+2
  3399  0017E6  C03D  F033         	movff	___fttol@lval+3,?___fttol+3
  3400  0017EA  0012               	return	
  3401  0017EC                     __end_of___fttol:
  3402                           	opt stack 0
  3403                           tblptru	equ	0xFF8
  3404                           tblptrh	equ	0xFF7
  3405                           tblptrl	equ	0xFF6
  3406                           tablat	equ	0xFF5
  3407                           intcon	equ	0xFF2
  3408                           intcon2	equ	0xFF1
  3409                           postinc0	equ	0xFEE
  3410                           wreg	equ	0xFE8
  3411                           postdec1	equ	0xFE5
  3412                           fsr1l	equ	0xFE1
  3413                           indf2	equ	0xFDF
  3414                           postinc2	equ	0xFDE
  3415                           postdec2	equ	0xFDD
  3416                           fsr2h	equ	0xFDA
  3417                           fsr2l	equ	0xFD9
  3418                           status	equ	0xFD8
  3419                           
  3420 ;; *************** function ___ftge *****************
  3421 ;; Defined at:
  3422 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  ff1             3    0[COMRAM] float 
  3425 ;;  ff2             3    3[COMRAM] float 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;		None
  3428 ;; Return value:  Size  Location     Type
  3429 ;;		None               void
  3430 ;; Registers used:
  3431 ;;		wreg, status,2, status,0
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3437 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3439 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3440 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3441 ;;Total ram usage:        9 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; This function calls:
  3444 ;;		Nothing
  3445 ;; This function is called by:
  3446 ;;		_pow
  3447 ;;		_exp
  3448 ;;		_floor
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text20
  3453  001E46                     __ptext20:
  3454                           	opt stack 0
  3455  001E46                     ___ftge:
  3456                           	opt stack 26
  3457                           
  3458                           ;incstack = 0
  3459  001E46  AE03               	btfss	___ftge@ff1+2,7,c
  3460  001E48  D016               	goto	l1237
  3461  001E4A  C001  F007         	movff	___ftge@ff1,??___ftge
  3462  001E4E  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3463  001E52  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3464  001E56  1E07               	comf	??___ftge,f,c
  3465  001E58  1E08               	comf	??___ftge+1,f,c
  3466  001E5A  1E09               	comf	??___ftge+2,f,c
  3467  001E5C  2A07               	incf	??___ftge,f,c
  3468  001E5E  0E00               	movlw	0
  3469  001E60  2208               	addwfc	??___ftge+1,f,c
  3470  001E62  2209               	addwfc	??___ftge+2,f,c
  3471  001E64  0E00               	movlw	0
  3472  001E66  2407               	addwf	??___ftge,w,c
  3473  001E68  6E01               	movwf	___ftge@ff1,c
  3474  001E6A  0E00               	movlw	0
  3475  001E6C  2008               	addwfc	??___ftge+1,w,c
  3476  001E6E  6E02               	movwf	___ftge@ff1+1,c
  3477  001E70  0E80               	movlw	128
  3478  001E72  2009               	addwfc	??___ftge+2,w,c
  3479  001E74  6E03               	movwf	___ftge@ff1+2,c
  3480  001E76                     l1237:
  3481  001E76  AE06               	btfss	___ftge@ff2+2,7,c
  3482  001E78  D016               	goto	l1238
  3483  001E7A  C004  F007         	movff	___ftge@ff2,??___ftge
  3484  001E7E  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3485  001E82  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3486  001E86  1E07               	comf	??___ftge,f,c
  3487  001E88  1E08               	comf	??___ftge+1,f,c
  3488  001E8A  1E09               	comf	??___ftge+2,f,c
  3489  001E8C  2A07               	incf	??___ftge,f,c
  3490  001E8E  0E00               	movlw	0
  3491  001E90  2208               	addwfc	??___ftge+1,f,c
  3492  001E92  2209               	addwfc	??___ftge+2,f,c
  3493  001E94  0E00               	movlw	0
  3494  001E96  2407               	addwf	??___ftge,w,c
  3495  001E98  6E04               	movwf	___ftge@ff2,c
  3496  001E9A  0E00               	movlw	0
  3497  001E9C  2008               	addwfc	??___ftge+1,w,c
  3498  001E9E  6E05               	movwf	___ftge@ff2+1,c
  3499  001EA0  0E80               	movlw	128
  3500  001EA2  2009               	addwfc	??___ftge+2,w,c
  3501  001EA4  6E06               	movwf	___ftge@ff2+2,c
  3502  001EA6                     l1238:
  3503  001EA6  0E00               	movlw	0
  3504  001EA8  1A01               	xorwf	___ftge@ff1,f,c
  3505  001EAA  0E00               	movlw	0
  3506  001EAC  1A02               	xorwf	___ftge@ff1+1,f,c
  3507  001EAE  0E80               	movlw	128
  3508  001EB0  1A03               	xorwf	___ftge@ff1+2,f,c
  3509  001EB2  0E00               	movlw	0
  3510  001EB4  1A04               	xorwf	___ftge@ff2,f,c
  3511  001EB6  0E00               	movlw	0
  3512  001EB8  1A05               	xorwf	___ftge@ff2+1,f,c
  3513  001EBA  0E80               	movlw	128
  3514  001EBC  1A06               	xorwf	___ftge@ff2+2,f,c
  3515  001EBE  5004               	movf	___ftge@ff2,w,c
  3516  001EC0  5C01               	subwf	___ftge@ff1,w,c
  3517  001EC2  5005               	movf	___ftge@ff2+1,w,c
  3518  001EC4  5802               	subwfb	___ftge@ff1+1,w,c
  3519  001EC6  5006               	movf	___ftge@ff2+2,w,c
  3520  001EC8  5803               	subwfb	___ftge@ff1+2,w,c
  3521  001ECA  B0D8               	btfsc	status,0,c
  3522  001ECC  D002               	goto	l3291
  3523  001ECE  90D8               	bcf	status,0,c
  3524  001ED0  0012               	return	
  3525  001ED2                     l3291:
  3526  001ED2  80D8               	bsf	status,0,c
  3527  001ED4  0012               	return	
  3528  001ED6                     __end_of___ftge:
  3529                           	opt stack 0
  3530                           tblptru	equ	0xFF8
  3531                           tblptrh	equ	0xFF7
  3532                           tblptrl	equ	0xFF6
  3533                           tablat	equ	0xFF5
  3534                           intcon	equ	0xFF2
  3535                           intcon2	equ	0xFF1
  3536                           postinc0	equ	0xFEE
  3537                           wreg	equ	0xFE8
  3538                           postdec1	equ	0xFE5
  3539                           fsr1l	equ	0xFE1
  3540                           indf2	equ	0xFDF
  3541                           postinc2	equ	0xFDE
  3542                           postdec2	equ	0xFDD
  3543                           fsr2h	equ	0xFDA
  3544                           fsr2l	equ	0xFD9
  3545                           status	equ	0xFD8
  3546                           
  3547 ;; *************** function ___altoft *****************
  3548 ;; Defined at:
  3549 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  c               4   62[COMRAM] long 
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;  sign            1   71[COMRAM] unsigned char 
  3554 ;;  exp             1   70[COMRAM] unsigned char 
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  3   62[COMRAM] float 
  3557 ;; Registers used:
  3558 ;;		wreg, status,2, status,0, cstack
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3564 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3565 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3566 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3567 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3568 ;;Total ram usage:       10 bytes
  3569 ;; Hardware stack levels used:    1
  3570 ;; Hardware stack levels required when called:    1
  3571 ;; This function calls:
  3572 ;;		___ftpack
  3573 ;; This function is called by:
  3574 ;;		_floor
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text21
  3579  001ED6                     __ptext21:
  3580                           	opt stack 0
  3581  001ED6                     ___altoft:
  3582                           	opt stack 25
  3583                           
  3584                           ;incstack = 0
  3585  001ED6  0E00               	movlw	0
  3586  001ED8  6E48               	movwf	___altoft@sign,c
  3587  001EDA  0E8E               	movlw	142
  3588  001EDC  6E47               	movwf	___altoft@exp,c
  3589  001EDE  AE42               	btfss	___altoft@c+3,7,c
  3590  001EE0  D011               	goto	l1035
  3591  001EE2  1E42               	comf	___altoft@c+3,f,c
  3592  001EE4  1E41               	comf	___altoft@c+2,f,c
  3593  001EE6  1E40               	comf	___altoft@c+1,f,c
  3594  001EE8  6C3F               	negf	___altoft@c,c
  3595  001EEA  0E00               	movlw	0
  3596  001EEC  2240               	addwfc	___altoft@c+1,f,c
  3597  001EEE  2241               	addwfc	___altoft@c+2,f,c
  3598  001EF0  2242               	addwfc	___altoft@c+3,f,c
  3599  001EF2  0E01               	movlw	1
  3600  001EF4  6E48               	movwf	___altoft@sign,c
  3601  001EF6  D006               	goto	l1035
  3602  001EF8  90D8               	bcf	status,0,c
  3603  001EFA  3242               	rrcf	___altoft@c+3,f,c
  3604  001EFC  3241               	rrcf	___altoft@c+2,f,c
  3605  001EFE  3240               	rrcf	___altoft@c+1,f,c
  3606  001F00  323F               	rrcf	___altoft@c,f,c
  3607  001F02  2A47               	incf	___altoft@exp,f,c
  3608  001F04                     l1035:
  3609  001F04  0E00               	movlw	0
  3610  001F06  143F               	andwf	___altoft@c,w,c
  3611  001F08  6E43               	movwf	??___altoft& (0+255),c
  3612  001F0A  0E00               	movlw	0
  3613  001F0C  1440               	andwf	___altoft@c+1,w,c
  3614  001F0E  6E44               	movwf	(??___altoft+1)& (0+255),c
  3615  001F10  0E00               	movlw	0
  3616  001F12  1441               	andwf	___altoft@c+2,w,c
  3617  001F14  6E45               	movwf	(??___altoft+2)& (0+255),c
  3618  001F16  0EFF               	movlw	255
  3619  001F18  1442               	andwf	___altoft@c+3,w,c
  3620  001F1A  6E46               	movwf	(??___altoft+3)& (0+255),c
  3621  001F1C  5043               	movf	??___altoft,w,c
  3622  001F1E  1044               	iorwf	??___altoft+1,w,c
  3623  001F20  1045               	iorwf	??___altoft+2,w,c
  3624  001F22  1046               	iorwf	??___altoft+3,w,c
  3625  001F24  A4D8               	btfss	status,2,c
  3626  001F26  D7E8               	goto	l1036
  3627  001F28  C03F  F001         	movff	___altoft@c,___ftpack@arg
  3628  001F2C  C040  F002         	movff	___altoft@c+1,___ftpack@arg+1
  3629  001F30  C041  F003         	movff	___altoft@c+2,___ftpack@arg+2
  3630  001F34  C047  F004         	movff	___altoft@exp,___ftpack@exp
  3631  001F38  C048  F005         	movff	___altoft@sign,___ftpack@sign
  3632  001F3C  EC84  F00E         	call	___ftpack	;wreg free
  3633  001F40  C001  F03F         	movff	?___ftpack,?___altoft
  3634  001F44  C002  F040         	movff	?___ftpack+1,?___altoft+1
  3635  001F48  C003  F041         	movff	?___ftpack+2,?___altoft+2
  3636  001F4C  0012               	return	
  3637  001F4E                     __end_of___altoft:
  3638                           	opt stack 0
  3639                           tblptru	equ	0xFF8
  3640                           tblptrh	equ	0xFF7
  3641                           tblptrl	equ	0xFF6
  3642                           tablat	equ	0xFF5
  3643                           intcon	equ	0xFF2
  3644                           intcon2	equ	0xFF1
  3645                           postinc0	equ	0xFEE
  3646                           wreg	equ	0xFE8
  3647                           postdec1	equ	0xFE5
  3648                           fsr1l	equ	0xFE1
  3649                           indf2	equ	0xFDF
  3650                           postinc2	equ	0xFDE
  3651                           postdec2	equ	0xFDD
  3652                           fsr2h	equ	0xFDA
  3653                           fsr2l	equ	0xFD9
  3654                           status	equ	0xFD8
  3655                           
  3656 ;; *************** function _eval_poly *****************
  3657 ;; Defined at:
  3658 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  x               3   44[COMRAM] float 
  3661 ;;  d               2   47[COMRAM] PTR const 
  3662 ;;		 -> log@coeff(27), exp@coeff(30), 
  3663 ;;  n               2   49[COMRAM] int 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  res             3   53[COMRAM] int 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  3   44[COMRAM] int 
  3668 ;; Registers used:
  3669 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3675 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3676 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3677 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3678 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3679 ;;Total ram usage:       12 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:    2
  3682 ;; This function calls:
  3683 ;;		___ftadd
  3684 ;;		___ftmul
  3685 ;;		___wmul
  3686 ;; This function is called by:
  3687 ;;		_exp
  3688 ;;		_log
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text22
  3693  001AA4                     __ptext22:
  3694                           	opt stack 0
  3695  001AA4                     _eval_poly:
  3696                           	opt stack 25
  3697                           
  3698                           ;incstack = 0
  3699  001AA4  C032  F001         	movff	eval_poly@n,___wmul@multiplier
  3700  001AA8  C033  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  3701  001AAC  0E00               	movlw	0
  3702  001AAE  6E04               	movwf	___wmul@multiplicand+1,c
  3703  001AB0  0E03               	movlw	3
  3704  001AB2  6E03               	movwf	___wmul@multiplicand,c
  3705  001AB4  ECFB  F010         	call	___wmul	;wreg free
  3706  001AB8  C030  F034         	movff	eval_poly@d,??_eval_poly
  3707  001ABC  C031  F035         	movff	eval_poly@d+1,??_eval_poly+1
  3708  001AC0  5001               	movf	?___wmul,w,c
  3709  001AC2  2634               	addwf	??_eval_poly,f,c
  3710  001AC4  5002               	movf	?___wmul+1,w,c
  3711  001AC6  2235               	addwfc	??_eval_poly+1,f,c
  3712  001AC8  C034  FFF6         	movff	??_eval_poly,tblptrl
  3713  001ACC  C035  FFF7         	movff	??_eval_poly+1,tblptrh
  3714  001AD0                     	if	0	;tblptru may be non-zero
  3715  001AD0                     	endif
  3716  001AD0                     	if	0	;tblptru may be non-zero
  3717  001AD0                     	endif
  3718  001AD0  0009               	tblrd		*+
  3719  001AD2  CFF5 F036          	movff	tablat,eval_poly@res
  3720  001AD6  0009               	tblrd		*+
  3721  001AD8  CFF5 F037          	movff	tablat,eval_poly@res+1
  3722  001ADC  000A               	tblrd		*-
  3723  001ADE  CFF5 F038          	movff	tablat,eval_poly@res+2
  3724  001AE2  D03E               	goto	l1614
  3725  001AE4  C036  F015         	movff	eval_poly@res,___ftmul@f2
  3726  001AE8  C037  F016         	movff	eval_poly@res+1,___ftmul@f2+1
  3727  001AEC  C038  F017         	movff	eval_poly@res+2,___ftmul@f2+2
  3728  001AF0  C02D  F012         	movff	eval_poly@x,___ftmul@f1
  3729  001AF4  C02E  F013         	movff	eval_poly@x+1,___ftmul@f1+1
  3730  001AF8  C02F  F014         	movff	eval_poly@x+2,___ftmul@f1+2
  3731  001AFC  ECF6  F00B         	call	___ftmul	;wreg free
  3732  001B00  C012  F021         	movff	?___ftmul,___ftadd@f1
  3733  001B04  C013  F022         	movff	?___ftmul+1,___ftadd@f1+1
  3734  001B08  C014  F023         	movff	?___ftmul+2,___ftadd@f1+2
  3735  001B0C  0E00               	movlw	0
  3736  001B0E  6E04               	movwf	___wmul@multiplicand+1,c
  3737  001B10  0E03               	movlw	3
  3738  001B12  6E03               	movwf	___wmul@multiplicand,c
  3739  001B14  0632               	decf	eval_poly@n,f,c
  3740  001B16  A0D8               	btfss	status,0,c
  3741  001B18  0633               	decf	eval_poly@n+1,f,c
  3742  001B1A  C032  F001         	movff	eval_poly@n,___wmul@multiplier
  3743  001B1E  C033  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  3744  001B22  ECFB  F010         	call	___wmul	;wreg free
  3745  001B26  C030  F034         	movff	eval_poly@d,??_eval_poly
  3746  001B2A  C031  F035         	movff	eval_poly@d+1,??_eval_poly+1
  3747  001B2E  5001               	movf	?___wmul,w,c
  3748  001B30  2634               	addwf	??_eval_poly,f,c
  3749  001B32  5002               	movf	?___wmul+1,w,c
  3750  001B34  2235               	addwfc	??_eval_poly+1,f,c
  3751  001B36  C034  FFF6         	movff	??_eval_poly,tblptrl
  3752  001B3A  C035  FFF7         	movff	??_eval_poly+1,tblptrh
  3753  001B3E                     	if	0	;tblptru may be non-zero
  3754  001B3E                     	endif
  3755  001B3E                     	if	0	;tblptru may be non-zero
  3756  001B3E                     	endif
  3757  001B3E  0009               	tblrd		*+
  3758  001B40  CFF5 F024          	movff	tablat,___ftadd@f2
  3759  001B44  0009               	tblrd		*+
  3760  001B46  CFF5 F025          	movff	tablat,___ftadd@f2+1
  3761  001B4A  000A               	tblrd		*-
  3762  001B4C  CFF5 F026          	movff	tablat,___ftadd@f2+2
  3763  001B50  EC93  F008         	call	___ftadd	;wreg free
  3764  001B54  C021  F036         	movff	?___ftadd,eval_poly@res
  3765  001B58  C022  F037         	movff	?___ftadd+1,eval_poly@res+1
  3766  001B5C  C023  F038         	movff	?___ftadd+2,eval_poly@res+2
  3767  001B60                     l1614:
  3768  001B60  5032               	movf	eval_poly@n,w,c
  3769  001B62  1033               	iorwf	eval_poly@n+1,w,c
  3770  001B64  A4D8               	btfss	status,2,c
  3771  001B66  D7BE               	goto	l1615
  3772  001B68  C036  F02D         	movff	eval_poly@res,?_eval_poly
  3773  001B6C  C037  F02E         	movff	eval_poly@res+1,?_eval_poly+1
  3774  001B70  C038  F02F         	movff	eval_poly@res+2,?_eval_poly+2
  3775  001B74  0012               	return		;funcret
  3776  001B76                     __end_of_eval_poly:
  3777                           	opt stack 0
  3778                           tblptru	equ	0xFF8
  3779                           tblptrh	equ	0xFF7
  3780                           tblptrl	equ	0xFF6
  3781                           tablat	equ	0xFF5
  3782                           intcon	equ	0xFF2
  3783                           intcon2	equ	0xFF1
  3784                           postinc0	equ	0xFEE
  3785                           wreg	equ	0xFE8
  3786                           postdec1	equ	0xFE5
  3787                           fsr1l	equ	0xFE1
  3788                           indf2	equ	0xFDF
  3789                           postinc2	equ	0xFDE
  3790                           postdec2	equ	0xFDD
  3791                           fsr2h	equ	0xFDA
  3792                           fsr2l	equ	0xFD9
  3793                           status	equ	0xFD8
  3794                           
  3795 ;; *************** function ___wmul *****************
  3796 ;; Defined at:
  3797 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  multiplier      2    0[COMRAM] unsigned int 
  3800 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  product         2    4[COMRAM] unsigned int 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  2    0[COMRAM] unsigned int 
  3805 ;; Registers used:
  3806 ;;		wreg, status,2, status,0, prodl, prodh
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3812 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3813 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3815 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3816 ;;Total ram usage:        6 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; This function calls:
  3819 ;;		Nothing
  3820 ;; This function is called by:
  3821 ;;		_I2C_Init
  3822 ;;		_eval_poly
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           	psect	text23
  3827  0021F6                     __ptext23:
  3828                           	opt stack 0
  3829  0021F6                     ___wmul:
  3830                           	opt stack 28
  3831                           
  3832                           ;incstack = 0
  3833  0021F6  5001               	movf	___wmul@multiplier,w,c
  3834  0021F8  0203               	mulwf	___wmul@multiplicand,c
  3835  0021FA  CFF3 F005          	movff	prodl,___wmul@product
  3836  0021FE  CFF4 F006          	movff	prodh,___wmul@product+1
  3837  002202  5001               	movf	___wmul@multiplier,w,c
  3838  002204  0204               	mulwf	___wmul@multiplicand+1,c
  3839  002206  50F3               	movf	prodl,w,c
  3840  002208  2606               	addwf	___wmul@product+1,f,c
  3841  00220A  5002               	movf	___wmul@multiplier+1,w,c
  3842  00220C  0203               	mulwf	___wmul@multiplicand,c
  3843  00220E  50F3               	movf	prodl,w,c
  3844  002210  2606               	addwf	___wmul@product+1,f,c
  3845  002212  C005  F001         	movff	___wmul@product,?___wmul
  3846  002216  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3847  00221A  0012               	return	
  3848  00221C                     __end_of___wmul:
  3849                           	opt stack 0
  3850                           tblptru	equ	0xFF8
  3851                           tblptrh	equ	0xFF7
  3852                           tblptrl	equ	0xFF6
  3853                           tablat	equ	0xFF5
  3854                           prodh	equ	0xFF4
  3855                           prodl	equ	0xFF3
  3856                           intcon	equ	0xFF2
  3857                           intcon2	equ	0xFF1
  3858                           postinc0	equ	0xFEE
  3859                           wreg	equ	0xFE8
  3860                           postdec1	equ	0xFE5
  3861                           fsr1l	equ	0xFE1
  3862                           indf2	equ	0xFDF
  3863                           postinc2	equ	0xFDE
  3864                           postdec2	equ	0xFDD
  3865                           fsr2h	equ	0xFDA
  3866                           fsr2l	equ	0xFD9
  3867                           status	equ	0xFD8
  3868                           
  3869 ;; *************** function ___ftmul *****************
  3870 ;; Defined at:
  3871 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;  f1              3   17[COMRAM] float 
  3874 ;;  f2              3   20[COMRAM] float 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  f3_as_produc    3   27[COMRAM] unsigned um
  3877 ;;  sign            1   31[COMRAM] unsigned char 
  3878 ;;  cntr            1   30[COMRAM] unsigned char 
  3879 ;;  exp             1   26[COMRAM] unsigned char 
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  3   17[COMRAM] float 
  3882 ;; Registers used:
  3883 ;;		wreg, status,2, status,0, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3889 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3890 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3891 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3892 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3893 ;;Total ram usage:       15 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    1
  3896 ;; This function calls:
  3897 ;;		___ftpack
  3898 ;; This function is called by:
  3899 ;;		_MCP342x_read
  3900 ;;		_pow
  3901 ;;		_exp
  3902 ;;		_log
  3903 ;;		_eval_poly
  3904 ;;		_MCP9801_TempRead
  3905 ;;		_EEPROM_24AA512_pageWrite
  3906 ;;		_EEPROM_24AA512_pageRead
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text24
  3911  0017EC                     __ptext24:
  3912                           	opt stack 0
  3913  0017EC                     ___ftmul:
  3914                           	opt stack 25
  3915                           
  3916                           ;incstack = 0
  3917  0017EC  C014  F018         	movff	___ftmul@f1+2,??___ftmul
  3918  0017F0  6A19               	clrf	(??___ftmul+1)& (0+255),c
  3919  0017F2  6A1A               	clrf	(??___ftmul+2)& (0+255),c
  3920  0017F4  3413               	rlcf	___ftmul@f1+1,w,c
  3921  0017F6  3618               	rlcf	??___ftmul& (0+255),f,c
  3922  0017F8  E301               	bnc	u2111
  3923  0017FA  8019               	bsf	(??___ftmul+1)& (0+255),0,c
  3924  0017FC                     u2111:
  3925  0017FC  5018               	movf	??___ftmul,w,c
  3926  0017FE  6E1B               	movwf	___ftmul@exp,c
  3927  001800  501B               	movf	___ftmul@exp,w,c
  3928  001802  A4D8               	btfss	status,2,c
  3929  001804  D007               	goto	l1244
  3930  001806  0E00               	movlw	0
  3931  001808  6E12               	movwf	?___ftmul,c
  3932  00180A  0E00               	movlw	0
  3933  00180C  6E13               	movwf	?___ftmul+1,c
  3934  00180E  0E00               	movlw	0
  3935  001810  6E14               	movwf	?___ftmul+2,c
  3936  001812  0012               	return	
  3937  001814                     l1244:
  3938  001814  C017  F018         	movff	___ftmul@f2+2,??___ftmul
  3939  001818  6A19               	clrf	(??___ftmul+1)& (0+255),c
  3940  00181A  6A1A               	clrf	(??___ftmul+2)& (0+255),c
  3941  00181C  3416               	rlcf	___ftmul@f2+1,w,c
  3942  00181E  3618               	rlcf	??___ftmul& (0+255),f,c
  3943  001820  E301               	bnc	u2131
  3944  001822  8019               	bsf	(??___ftmul+1)& (0+255),0,c
  3945  001824                     u2131:
  3946  001824  5018               	movf	??___ftmul,w,c
  3947  001826  6E20               	movwf	___ftmul@sign,c
  3948  001828  5020               	movf	___ftmul@sign,w,c
  3949  00182A  A4D8               	btfss	status,2,c
  3950  00182C  D007               	goto	l1246
  3951  00182E  0E00               	movlw	0
  3952  001830  6E12               	movwf	?___ftmul,c
  3953  001832  0E00               	movlw	0
  3954  001834  6E13               	movwf	?___ftmul+1,c
  3955  001836  0E00               	movlw	0
  3956  001838  6E14               	movwf	?___ftmul+2,c
  3957  00183A  0012               	return	
  3958  00183C                     l1246:
  3959  00183C  5020               	movf	___ftmul@sign,w,c
  3960  00183E  0F7B               	addlw	123
  3961  001840  261B               	addwf	___ftmul@exp,f,c
  3962  001842  C014  F020         	movff	___ftmul@f1+2,___ftmul@sign
  3963  001846  5017               	movf	___ftmul@f2+2,w,c
  3964  001848  1A20               	xorwf	___ftmul@sign,f,c
  3965  00184A  0E80               	movlw	128
  3966  00184C  1620               	andwf	___ftmul@sign,f,c
  3967  00184E  8E13               	bsf	___ftmul@f1+1,7,c
  3968  001850  8E16               	bsf	___ftmul@f2+1,7,c
  3969  001852  0EFF               	movlw	255
  3970  001854  1615               	andwf	___ftmul@f2,f,c
  3971  001856  0EFF               	movlw	255
  3972  001858  1616               	andwf	___ftmul@f2+1,f,c
  3973  00185A  0E00               	movlw	0
  3974  00185C  1617               	andwf	___ftmul@f2+2,f,c
  3975  00185E  0E00               	movlw	0
  3976  001860  6E1C               	movwf	___ftmul@f3_as_product,c
  3977  001862  0E00               	movlw	0
  3978  001864  6E1D               	movwf	___ftmul@f3_as_product+1,c
  3979  001866  0E00               	movlw	0
  3980  001868  6E1E               	movwf	___ftmul@f3_as_product+2,c
  3981  00186A  0E07               	movlw	7
  3982  00186C  6E1F               	movwf	___ftmul@cntr,c
  3983  00186E  A012               	btfss	___ftmul@f1,0,c
  3984  001870  D006               	goto	l1248
  3985  001872  5015               	movf	___ftmul@f2,w,c
  3986  001874  261C               	addwf	___ftmul@f3_as_product,f,c
  3987  001876  5016               	movf	___ftmul@f2+1,w,c
  3988  001878  221D               	addwfc	___ftmul@f3_as_product+1,f,c
  3989  00187A  5017               	movf	___ftmul@f2+2,w,c
  3990  00187C  221E               	addwfc	___ftmul@f3_as_product+2,f,c
  3991  00187E                     l1248:
  3992  00187E  90D8               	bcf	status,0,c
  3993  001880  3214               	rrcf	___ftmul@f1+2,f,c
  3994  001882  3213               	rrcf	___ftmul@f1+1,f,c
  3995  001884  3212               	rrcf	___ftmul@f1,f,c
  3996  001886  90D8               	bcf	status,0,c
  3997  001888  3615               	rlcf	___ftmul@f2,f,c
  3998  00188A  3616               	rlcf	___ftmul@f2+1,f,c
  3999  00188C  3617               	rlcf	___ftmul@f2+2,f,c
  4000  00188E  2E1F               	decfsz	___ftmul@cntr,f,c
  4001  001890  D7EE               	goto	l1247
  4002  001892  0E09               	movlw	9
  4003  001894  6E1F               	movwf	___ftmul@cntr,c
  4004  001896  A012               	btfss	___ftmul@f1,0,c
  4005  001898  D006               	goto	l1251
  4006  00189A  5015               	movf	___ftmul@f2,w,c
  4007  00189C  261C               	addwf	___ftmul@f3_as_product,f,c
  4008  00189E  5016               	movf	___ftmul@f2+1,w,c
  4009  0018A0  221D               	addwfc	___ftmul@f3_as_product+1,f,c
  4010  0018A2  5017               	movf	___ftmul@f2+2,w,c
  4011  0018A4  221E               	addwfc	___ftmul@f3_as_product+2,f,c
  4012  0018A6                     l1251:
  4013  0018A6  90D8               	bcf	status,0,c
  4014  0018A8  3214               	rrcf	___ftmul@f1+2,f,c
  4015  0018AA  3213               	rrcf	___ftmul@f1+1,f,c
  4016  0018AC  3212               	rrcf	___ftmul@f1,f,c
  4017  0018AE  90D8               	bcf	status,0,c
  4018  0018B0  321E               	rrcf	___ftmul@f3_as_product+2,f,c
  4019  0018B2  321D               	rrcf	___ftmul@f3_as_product+1,f,c
  4020  0018B4  321C               	rrcf	___ftmul@f3_as_product,f,c
  4021  0018B6  2E1F               	decfsz	___ftmul@cntr,f,c
  4022  0018B8  D7EE               	goto	l1250
  4023  0018BA  C01C  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  4024  0018BE  C01D  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4025  0018C2  C01E  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4026  0018C6  C01B  F004         	movff	___ftmul@exp,___ftpack@exp
  4027  0018CA  C020  F005         	movff	___ftmul@sign,___ftpack@sign
  4028  0018CE  EC84  F00E         	call	___ftpack	;wreg free
  4029  0018D2  C001  F012         	movff	?___ftpack,?___ftmul
  4030  0018D6  C002  F013         	movff	?___ftpack+1,?___ftmul+1
  4031  0018DA  C003  F014         	movff	?___ftpack+2,?___ftmul+2
  4032  0018DE  0012               	return	
  4033  0018E0                     __end_of___ftmul:
  4034                           	opt stack 0
  4035                           tblptru	equ	0xFF8
  4036                           tblptrh	equ	0xFF7
  4037                           tblptrl	equ	0xFF6
  4038                           tablat	equ	0xFF5
  4039                           prodh	equ	0xFF4
  4040                           prodl	equ	0xFF3
  4041                           intcon	equ	0xFF2
  4042                           intcon2	equ	0xFF1
  4043                           postinc0	equ	0xFEE
  4044                           wreg	equ	0xFE8
  4045                           postdec1	equ	0xFE5
  4046                           fsr1l	equ	0xFE1
  4047                           indf2	equ	0xFDF
  4048                           postinc2	equ	0xFDE
  4049                           postdec2	equ	0xFDD
  4050                           fsr2h	equ	0xFDA
  4051                           fsr2l	equ	0xFD9
  4052                           status	equ	0xFD8
  4053                           
  4054 ;; *************** function ___ftsub *****************
  4055 ;; Defined at:
  4056 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  f1              3   44[COMRAM] float 
  4059 ;;  f2              3   47[COMRAM] float 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;		None
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  3   44[COMRAM] float 
  4064 ;; Registers used:
  4065 ;;		wreg, status,2, status,0, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4071 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4074 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4075 ;;Total ram usage:        6 bytes
  4076 ;; Hardware stack levels used:    1
  4077 ;; Hardware stack levels required when called:    2
  4078 ;; This function calls:
  4079 ;;		___ftadd
  4080 ;; This function is called by:
  4081 ;;		_exp
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           	psect	text25
  4086  00211E                     __ptext25:
  4087                           	opt stack 0
  4088  00211E                     ___ftsub:
  4089                           	opt stack 25
  4090                           
  4091                           ;incstack = 0
  4092  00211E  5030               	movf	___ftsub@f2,w,c
  4093  002120  1031               	iorwf	___ftsub@f2+1,w,c
  4094  002122  1032               	iorwf	___ftsub@f2+2,w,c
  4095  002124  B4D8               	btfsc	status,2,c
  4096  002126  D006               	goto	l1261
  4097  002128  0E00               	movlw	0
  4098  00212A  1A30               	xorwf	___ftsub@f2,f,c
  4099  00212C  0E00               	movlw	0
  4100  00212E  1A31               	xorwf	___ftsub@f2+1,f,c
  4101  002130  0E80               	movlw	128
  4102  002132  1A32               	xorwf	___ftsub@f2+2,f,c
  4103  002134                     l1261:
  4104  002134  C02D  F021         	movff	___ftsub@f1,___ftadd@f1
  4105  002138  C02E  F022         	movff	___ftsub@f1+1,___ftadd@f1+1
  4106  00213C  C02F  F023         	movff	___ftsub@f1+2,___ftadd@f1+2
  4107  002140  C030  F024         	movff	___ftsub@f2,___ftadd@f2
  4108  002144  C031  F025         	movff	___ftsub@f2+1,___ftadd@f2+1
  4109  002148  C032  F026         	movff	___ftsub@f2+2,___ftadd@f2+2
  4110  00214C  EC93  F008         	call	___ftadd	;wreg free
  4111  002150  C021  F02D         	movff	?___ftadd,?___ftsub
  4112  002154  C022  F02E         	movff	?___ftadd+1,?___ftsub+1
  4113  002158  C023  F02F         	movff	?___ftadd+2,?___ftsub+2
  4114  00215C  0012               	return	
  4115  00215E                     __end_of___ftsub:
  4116                           	opt stack 0
  4117                           tblptru	equ	0xFF8
  4118                           tblptrh	equ	0xFF7
  4119                           tblptrl	equ	0xFF6
  4120                           tablat	equ	0xFF5
  4121                           prodh	equ	0xFF4
  4122                           prodl	equ	0xFF3
  4123                           intcon	equ	0xFF2
  4124                           intcon2	equ	0xFF1
  4125                           postinc0	equ	0xFEE
  4126                           wreg	equ	0xFE8
  4127                           postdec1	equ	0xFE5
  4128                           fsr1l	equ	0xFE1
  4129                           indf2	equ	0xFDF
  4130                           postinc2	equ	0xFDE
  4131                           postdec2	equ	0xFDD
  4132                           fsr2h	equ	0xFDA
  4133                           fsr2l	equ	0xFD9
  4134                           status	equ	0xFD8
  4135                           
  4136 ;; *************** function ___ftadd *****************
  4137 ;; Defined at:
  4138 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  f1              3   32[COMRAM] float 
  4141 ;;  f2              3   35[COMRAM] float 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;  exp1            1   43[COMRAM] unsigned char 
  4144 ;;  exp2            1   42[COMRAM] unsigned char 
  4145 ;;  sign            1   41[COMRAM] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  3   32[COMRAM] float 
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, status,0, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4155 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4156 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4157 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4158 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4159 ;;Total ram usage:       12 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    1
  4162 ;; This function calls:
  4163 ;;		___ftpack
  4164 ;; This function is called by:
  4165 ;;		___ftsub
  4166 ;;		_floor
  4167 ;;		_log
  4168 ;;		_eval_poly
  4169 ;;		_EEPROM_24AA512_pageWrite
  4170 ;;		_EEPROM_24AA512_pageRead
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text26
  4175  001126                     __ptext26:
  4176                           	opt stack 0
  4177  001126                     ___ftadd:
  4178                           	opt stack 25
  4179                           
  4180                           ;incstack = 0
  4181  001126  C023  F027         	movff	___ftadd@f1+2,??___ftadd
  4182  00112A  6A28               	clrf	(??___ftadd+1)& (0+255),c
  4183  00112C  6A29               	clrf	(??___ftadd+2)& (0+255),c
  4184  00112E  3422               	rlcf	___ftadd@f1+1,w,c
  4185  001130  3627               	rlcf	??___ftadd& (0+255),f,c
  4186  001132  E301               	bnc	u1901
  4187  001134  8028               	bsf	(??___ftadd+1)& (0+255),0,c
  4188  001136                     u1901:
  4189  001136  5027               	movf	??___ftadd,w,c
  4190  001138  6E2C               	movwf	___ftadd@exp1,c
  4191  00113A  C026  F027         	movff	___ftadd@f2+2,??___ftadd
  4192  00113E  6A28               	clrf	(??___ftadd+1)& (0+255),c
  4193  001140  6A29               	clrf	(??___ftadd+2)& (0+255),c
  4194  001142  3425               	rlcf	___ftadd@f2+1,w,c
  4195  001144  3627               	rlcf	??___ftadd& (0+255),f,c
  4196  001146  E301               	bnc	u1911
  4197  001148  8028               	bsf	(??___ftadd+1)& (0+255),0,c
  4198  00114A                     u1911:
  4199  00114A  5027               	movf	??___ftadd,w,c
  4200  00114C  6E2B               	movwf	___ftadd@exp2,c
  4201  00114E  502C               	movf	___ftadd@exp1,w,c
  4202  001150  B4D8               	btfsc	status,2,c
  4203  001152  D00B               	goto	u1940
  4204  001154  502B               	movf	___ftadd@exp2,w,c
  4205  001156  5C2C               	subwf	___ftadd@exp1,w,c
  4206  001158  B0D8               	btfsc	status,0,c
  4207  00115A  D00E               	goto	l1196
  4208  00115C  502C               	movf	___ftadd@exp1,w,c
  4209  00115E  0800               	sublw	0
  4210  001160  242B               	addwf	___ftadd@exp2,w,c
  4211  001162  6E27               	movwf	??___ftadd& (0+255),c
  4212  001164  0E18               	movlw	24
  4213  001166  6427               	cpfsgt	??___ftadd,c
  4214  001168  D007               	goto	l1196
  4215  00116A                     u1940:
  4216  00116A  C024  F021         	movff	___ftadd@f2,?___ftadd
  4217  00116E  C025  F022         	movff	___ftadd@f2+1,?___ftadd+1
  4218  001172  C026  F023         	movff	___ftadd@f2+2,?___ftadd+2
  4219  001176  0012               	return	
  4220  001178                     l1196:
  4221  001178  502B               	movf	___ftadd@exp2,w,c
  4222  00117A  B4D8               	btfsc	status,2,c
  4223  00117C  D00B               	goto	u1970
  4224  00117E  502C               	movf	___ftadd@exp1,w,c
  4225  001180  5C2B               	subwf	___ftadd@exp2,w,c
  4226  001182  B0D8               	btfsc	status,0,c
  4227  001184  D00E               	goto	l1200
  4228  001186  502B               	movf	___ftadd@exp2,w,c
  4229  001188  0800               	sublw	0
  4230  00118A  242C               	addwf	___ftadd@exp1,w,c
  4231  00118C  6E27               	movwf	??___ftadd& (0+255),c
  4232  00118E  0E18               	movlw	24
  4233  001190  6427               	cpfsgt	??___ftadd,c
  4234  001192  D007               	goto	l1200
  4235  001194                     u1970:
  4236  001194  C021  F021         	movff	___ftadd@f1,?___ftadd
  4237  001198  C022  F022         	movff	___ftadd@f1+1,?___ftadd+1
  4238  00119C  C023  F023         	movff	___ftadd@f1+2,?___ftadd+2
  4239  0011A0  0012               	return	
  4240  0011A2                     l1200:
  4241  0011A2  0E06               	movlw	6
  4242  0011A4  6E2A               	movwf	___ftadd@sign,c
  4243  0011A6  BE23               	btfsc	___ftadd@f1+2,7,c
  4244  0011A8  8E2A               	bsf	___ftadd@sign,7,c
  4245  0011AA  BE26               	btfsc	___ftadd@f2+2,7,c
  4246  0011AC  8C2A               	bsf	___ftadd@sign,6,c
  4247  0011AE  8E22               	bsf	___ftadd@f1+1,7,c
  4248  0011B0  0EFF               	movlw	255
  4249  0011B2  1621               	andwf	___ftadd@f1,f,c
  4250  0011B4  0EFF               	movlw	255
  4251  0011B6  1622               	andwf	___ftadd@f1+1,f,c
  4252  0011B8  0E00               	movlw	0
  4253  0011BA  1623               	andwf	___ftadd@f1+2,f,c
  4254  0011BC  8E25               	bsf	___ftadd@f2+1,7,c
  4255  0011BE  0EFF               	movlw	255
  4256  0011C0  1624               	andwf	___ftadd@f2,f,c
  4257  0011C2  0EFF               	movlw	255
  4258  0011C4  1625               	andwf	___ftadd@f2+1,f,c
  4259  0011C6  0E00               	movlw	0
  4260  0011C8  1626               	andwf	___ftadd@f2+2,f,c
  4261  0011CA  502B               	movf	___ftadd@exp2,w,c
  4262  0011CC  5C2C               	subwf	___ftadd@exp1,w,c
  4263  0011CE  B0D8               	btfsc	status,0,c
  4264  0011D0  D01B               	goto	l1205
  4265  0011D2                     u2000:
  4266  0011D2  90D8               	bcf	status,0,c
  4267  0011D4  3624               	rlcf	___ftadd@f2,f,c
  4268  0011D6  3625               	rlcf	___ftadd@f2+1,f,c
  4269  0011D8  3626               	rlcf	___ftadd@f2+2,f,c
  4270  0011DA  062B               	decf	___ftadd@exp2,f,c
  4271  0011DC  502C               	movf	___ftadd@exp1,w,c
  4272  0011DE  182B               	xorwf	___ftadd@exp2,w,c
  4273  0011E0  B4D8               	btfsc	status,2,c
  4274  0011E2  D00D               	goto	l1210
  4275  0011E4  062A               	decf	___ftadd@sign,f,c
  4276  0011E6  C02A  F027         	movff	___ftadd@sign,??___ftadd
  4277  0011EA  0E07               	movlw	7
  4278  0011EC  1627               	andwf	??___ftadd,f,c
  4279  0011EE  B4D8               	btfsc	status,2,c
  4280  0011F0  D006               	goto	l1210
  4281  0011F2  D7EF               	goto	u2000
  4282  0011F4  90D8               	bcf	status,0,c
  4283  0011F6  3223               	rrcf	___ftadd@f1+2,f,c
  4284  0011F8  3222               	rrcf	___ftadd@f1+1,f,c
  4285  0011FA  3221               	rrcf	___ftadd@f1,f,c
  4286  0011FC  2A2C               	incf	___ftadd@exp1,f,c
  4287  0011FE                     l1210:
  4288  0011FE  502B               	movf	___ftadd@exp2,w,c
  4289  001200  182C               	xorwf	___ftadd@exp1,w,c
  4290  001202  B4D8               	btfsc	status,2,c
  4291  001204  D01F               	goto	u2070
  4292  001206  D7F6               	goto	l1211
  4293  001208                     l1205:
  4294  001208  502C               	movf	___ftadd@exp1,w,c
  4295  00120A  5C2B               	subwf	___ftadd@exp2,w,c
  4296  00120C  B0D8               	btfsc	status,0,c
  4297  00120E  D01A               	goto	u2070
  4298  001210                     u2040:
  4299  001210  90D8               	bcf	status,0,c
  4300  001212  3621               	rlcf	___ftadd@f1,f,c
  4301  001214  3622               	rlcf	___ftadd@f1+1,f,c
  4302  001216  3623               	rlcf	___ftadd@f1+2,f,c
  4303  001218  062C               	decf	___ftadd@exp1,f,c
  4304  00121A  502C               	movf	___ftadd@exp1,w,c
  4305  00121C  182B               	xorwf	___ftadd@exp2,w,c
  4306  00121E  B4D8               	btfsc	status,2,c
  4307  001220  D00D               	goto	l1219
  4308  001222  062A               	decf	___ftadd@sign,f,c
  4309  001224  C02A  F027         	movff	___ftadd@sign,??___ftadd
  4310  001228  0E07               	movlw	7
  4311  00122A  1627               	andwf	??___ftadd,f,c
  4312  00122C  B4D8               	btfsc	status,2,c
  4313  00122E  D006               	goto	l1219
  4314  001230  D7EF               	goto	u2040
  4315  001232  90D8               	bcf	status,0,c
  4316  001234  3226               	rrcf	___ftadd@f2+2,f,c
  4317  001236  3225               	rrcf	___ftadd@f2+1,f,c
  4318  001238  3224               	rrcf	___ftadd@f2,f,c
  4319  00123A  2A2B               	incf	___ftadd@exp2,f,c
  4320  00123C                     l1219:
  4321  00123C  502B               	movf	___ftadd@exp2,w,c
  4322  00123E  182C               	xorwf	___ftadd@exp1,w,c
  4323  001240  A4D8               	btfss	status,2,c
  4324  001242  D7F7               	goto	l1220
  4325  001244                     u2070:
  4326  001244  AE2A               	btfss	___ftadd@sign,7,c
  4327  001246  D00C               	goto	l1222
  4328  001248  0EFF               	movlw	255
  4329  00124A  1A21               	xorwf	___ftadd@f1,f,c
  4330  00124C  0EFF               	movlw	255
  4331  00124E  1A22               	xorwf	___ftadd@f1+1,f,c
  4332  001250  0EFF               	movlw	255
  4333  001252  1A23               	xorwf	___ftadd@f1+2,f,c
  4334  001254  0E01               	movlw	1
  4335  001256  2621               	addwf	___ftadd@f1,f,c
  4336  001258  0E00               	movlw	0
  4337  00125A  2222               	addwfc	___ftadd@f1+1,f,c
  4338  00125C  0E00               	movlw	0
  4339  00125E  2223               	addwfc	___ftadd@f1+2,f,c
  4340  001260                     l1222:
  4341  001260  AC2A               	btfss	___ftadd@sign,6,c
  4342  001262  D00C               	goto	l1223
  4343  001264  0EFF               	movlw	255
  4344  001266  1A24               	xorwf	___ftadd@f2,f,c
  4345  001268  0EFF               	movlw	255
  4346  00126A  1A25               	xorwf	___ftadd@f2+1,f,c
  4347  00126C  0EFF               	movlw	255
  4348  00126E  1A26               	xorwf	___ftadd@f2+2,f,c
  4349  001270  0E01               	movlw	1
  4350  001272  2624               	addwf	___ftadd@f2,f,c
  4351  001274  0E00               	movlw	0
  4352  001276  2225               	addwfc	___ftadd@f2+1,f,c
  4353  001278  0E00               	movlw	0
  4354  00127A  2226               	addwfc	___ftadd@f2+2,f,c
  4355  00127C                     l1223:
  4356  00127C  0E00               	movlw	0
  4357  00127E  6E2A               	movwf	___ftadd@sign,c
  4358  001280  5021               	movf	___ftadd@f1,w,c
  4359  001282  2624               	addwf	___ftadd@f2,f,c
  4360  001284  5022               	movf	___ftadd@f1+1,w,c
  4361  001286  2225               	addwfc	___ftadd@f2+1,f,c
  4362  001288  5023               	movf	___ftadd@f1+2,w,c
  4363  00128A  2226               	addwfc	___ftadd@f2+2,f,c
  4364  00128C  AE26               	btfss	___ftadd@f2+2,7,c
  4365  00128E  D00E               	goto	l1224
  4366  001290  0EFF               	movlw	255
  4367  001292  1A24               	xorwf	___ftadd@f2,f,c
  4368  001294  0EFF               	movlw	255
  4369  001296  1A25               	xorwf	___ftadd@f2+1,f,c
  4370  001298  0EFF               	movlw	255
  4371  00129A  1A26               	xorwf	___ftadd@f2+2,f,c
  4372  00129C  0E01               	movlw	1
  4373  00129E  2624               	addwf	___ftadd@f2,f,c
  4374  0012A0  0E00               	movlw	0
  4375  0012A2  2225               	addwfc	___ftadd@f2+1,f,c
  4376  0012A4  0E00               	movlw	0
  4377  0012A6  2226               	addwfc	___ftadd@f2+2,f,c
  4378  0012A8  0E01               	movlw	1
  4379  0012AA  6E2A               	movwf	___ftadd@sign,c
  4380  0012AC                     l1224:
  4381  0012AC  C024  F001         	movff	___ftadd@f2,___ftpack@arg
  4382  0012B0  C025  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4383  0012B4  C026  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4384  0012B8  C02C  F004         	movff	___ftadd@exp1,___ftpack@exp
  4385  0012BC  C02A  F005         	movff	___ftadd@sign,___ftpack@sign
  4386  0012C0  EC84  F00E         	call	___ftpack	;wreg free
  4387  0012C4  C001  F021         	movff	?___ftpack,?___ftadd
  4388  0012C8  C002  F022         	movff	?___ftpack+1,?___ftadd+1
  4389  0012CC  C003  F023         	movff	?___ftpack+2,?___ftadd+2
  4390  0012D0  0012               	return	
  4391  0012D2                     __end_of___ftadd:
  4392                           	opt stack 0
  4393                           tblptru	equ	0xFF8
  4394                           tblptrh	equ	0xFF7
  4395                           tblptrl	equ	0xFF6
  4396                           tablat	equ	0xFF5
  4397                           prodh	equ	0xFF4
  4398                           prodl	equ	0xFF3
  4399                           intcon	equ	0xFF2
  4400                           intcon2	equ	0xFF1
  4401                           postinc0	equ	0xFEE
  4402                           wreg	equ	0xFE8
  4403                           postdec1	equ	0xFE5
  4404                           fsr1l	equ	0xFE1
  4405                           indf2	equ	0xFDF
  4406                           postinc2	equ	0xFDE
  4407                           postdec2	equ	0xFDD
  4408                           fsr2h	equ	0xFDA
  4409                           fsr2l	equ	0xFD9
  4410                           status	equ	0xFD8
  4411                           
  4412 ;; *************** function ___ftneg *****************
  4413 ;; Defined at:
  4414 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  f1              3    0[COMRAM] float 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  3    0[COMRAM] float 
  4421 ;; Registers used:
  4422 ;;		wreg, status,2, status,0
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4428 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4431 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4432 ;;Total ram usage:        3 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; This function calls:
  4435 ;;		Nothing
  4436 ;; This function is called by:
  4437 ;;		_pow
  4438 ;;		_exp
  4439 ;;		_EEPROM_24AA512_pageWrite
  4440 ;;		_EEPROM_24AA512_pageRead
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text27
  4445  00221C                     __ptext27:
  4446                           	opt stack 0
  4447  00221C                     ___ftneg:
  4448                           	opt stack 27
  4449                           
  4450                           ;incstack = 0
  4451  00221C  5001               	movf	___ftneg@f1,w,c
  4452  00221E  1002               	iorwf	___ftneg@f1+1,w,c
  4453  002220  1003               	iorwf	___ftneg@f1+2,w,c
  4454  002222  B4D8               	btfsc	status,2,c
  4455  002224  D006               	goto	l1255
  4456  002226  0E00               	movlw	0
  4457  002228  1A01               	xorwf	___ftneg@f1,f,c
  4458  00222A  0E00               	movlw	0
  4459  00222C  1A02               	xorwf	___ftneg@f1+1,f,c
  4460  00222E  0E80               	movlw	128
  4461  002230  1A03               	xorwf	___ftneg@f1+2,f,c
  4462  002232                     l1255:
  4463  002232  C001  F001         	movff	___ftneg@f1,?___ftneg
  4464  002236  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4465  00223A  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4466  00223E  0012               	return		;funcret
  4467  002240                     __end_of___ftneg:
  4468                           	opt stack 0
  4469                           tblptru	equ	0xFF8
  4470                           tblptrh	equ	0xFF7
  4471                           tblptrl	equ	0xFF6
  4472                           tablat	equ	0xFF5
  4473                           prodh	equ	0xFF4
  4474                           prodl	equ	0xFF3
  4475                           intcon	equ	0xFF2
  4476                           intcon2	equ	0xFF1
  4477                           postinc0	equ	0xFEE
  4478                           wreg	equ	0xFE8
  4479                           postdec1	equ	0xFE5
  4480                           fsr1l	equ	0xFE1
  4481                           indf2	equ	0xFDF
  4482                           postinc2	equ	0xFDE
  4483                           postdec2	equ	0xFDD
  4484                           fsr2h	equ	0xFDA
  4485                           fsr2l	equ	0xFD9
  4486                           status	equ	0xFD8
  4487                           
  4488 ;; *************** function ___ftdiv *****************
  4489 ;; Defined at:
  4490 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;  f1              3   32[COMRAM] float 
  4493 ;;  f2              3   35[COMRAM] float 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  f3              3   42[COMRAM] float 
  4496 ;;  sign            1   46[COMRAM] unsigned char 
  4497 ;;  exp             1   45[COMRAM] unsigned char 
  4498 ;;  cntr            1   41[COMRAM] unsigned char 
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  3   32[COMRAM] float 
  4501 ;; Registers used:
  4502 ;;		wreg, status,2, status,0, cstack
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4508 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4509 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4510 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4511 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4512 ;;Total ram usage:       15 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; Hardware stack levels required when called:    1
  4515 ;; This function calls:
  4516 ;;		___ftpack
  4517 ;; This function is called by:
  4518 ;;		_MCP342x_read
  4519 ;;		_exp
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text28
  4524  0018E0                     __ptext28:
  4525                           	opt stack 0
  4526  0018E0                     ___ftdiv:
  4527                           	opt stack 26
  4528                           
  4529                           ;incstack = 0
  4530  0018E0  C023  F027         	movff	___ftdiv@f1+2,??___ftdiv
  4531  0018E4  6A28               	clrf	(??___ftdiv+1)& (0+255),c
  4532  0018E6  6A29               	clrf	(??___ftdiv+2)& (0+255),c
  4533  0018E8  3422               	rlcf	___ftdiv@f1+1,w,c
  4534  0018EA  3627               	rlcf	??___ftdiv& (0+255),f,c
  4535  0018EC  E301               	bnc	u2301
  4536  0018EE  8028               	bsf	(??___ftdiv+1)& (0+255),0,c
  4537  0018F0                     u2301:
  4538  0018F0  5027               	movf	??___ftdiv,w,c
  4539  0018F2  6E2E               	movwf	___ftdiv@exp,c
  4540  0018F4  502E               	movf	___ftdiv@exp,w,c
  4541  0018F6  A4D8               	btfss	status,2,c
  4542  0018F8  D007               	goto	l1229
  4543  0018FA  0E00               	movlw	0
  4544  0018FC  6E21               	movwf	?___ftdiv,c
  4545  0018FE  0E00               	movlw	0
  4546  001900  6E22               	movwf	?___ftdiv+1,c
  4547  001902  0E00               	movlw	0
  4548  001904  6E23               	movwf	?___ftdiv+2,c
  4549  001906  0012               	return	
  4550  001908                     l1229:
  4551  001908  C026  F027         	movff	___ftdiv@f2+2,??___ftdiv
  4552  00190C  6A28               	clrf	(??___ftdiv+1)& (0+255),c
  4553  00190E  6A29               	clrf	(??___ftdiv+2)& (0+255),c
  4554  001910  3425               	rlcf	___ftdiv@f2+1,w,c
  4555  001912  3627               	rlcf	??___ftdiv& (0+255),f,c
  4556  001914  E301               	bnc	u2321
  4557  001916  8028               	bsf	(??___ftdiv+1)& (0+255),0,c
  4558  001918                     u2321:
  4559  001918  5027               	movf	??___ftdiv,w,c
  4560  00191A  6E2F               	movwf	___ftdiv@sign,c
  4561  00191C  502F               	movf	___ftdiv@sign,w,c
  4562  00191E  A4D8               	btfss	status,2,c
  4563  001920  D007               	goto	l1231
  4564  001922  0E00               	movlw	0
  4565  001924  6E21               	movwf	?___ftdiv,c
  4566  001926  0E00               	movlw	0
  4567  001928  6E22               	movwf	?___ftdiv+1,c
  4568  00192A  0E00               	movlw	0
  4569  00192C  6E23               	movwf	?___ftdiv+2,c
  4570  00192E  0012               	return	
  4571  001930                     l1231:
  4572  001930  0E00               	movlw	0
  4573  001932  6E2B               	movwf	___ftdiv@f3,c
  4574  001934  0E00               	movlw	0
  4575  001936  6E2C               	movwf	___ftdiv@f3+1,c
  4576  001938  0E00               	movlw	0
  4577  00193A  6E2D               	movwf	___ftdiv@f3+2,c
  4578  00193C  502F               	movf	___ftdiv@sign,w,c
  4579  00193E  0F89               	addlw	137
  4580  001940  5E2E               	subwf	___ftdiv@exp,f,c
  4581  001942  C023  F02F         	movff	___ftdiv@f1+2,___ftdiv@sign
  4582  001946  5026               	movf	___ftdiv@f2+2,w,c
  4583  001948  1A2F               	xorwf	___ftdiv@sign,f,c
  4584  00194A  0E80               	movlw	128
  4585  00194C  162F               	andwf	___ftdiv@sign,f,c
  4586  00194E  8E22               	bsf	___ftdiv@f1+1,7,c
  4587  001950  0EFF               	movlw	255
  4588  001952  1621               	andwf	___ftdiv@f1,f,c
  4589  001954  0EFF               	movlw	255
  4590  001956  1622               	andwf	___ftdiv@f1+1,f,c
  4591  001958  0E00               	movlw	0
  4592  00195A  1623               	andwf	___ftdiv@f1+2,f,c
  4593  00195C  8E25               	bsf	___ftdiv@f2+1,7,c
  4594  00195E  0EFF               	movlw	255
  4595  001960  1624               	andwf	___ftdiv@f2,f,c
  4596  001962  0EFF               	movlw	255
  4597  001964  1625               	andwf	___ftdiv@f2+1,f,c
  4598  001966  0E00               	movlw	0
  4599  001968  1626               	andwf	___ftdiv@f2+2,f,c
  4600  00196A  0E18               	movlw	24
  4601  00196C  6E2A               	movwf	___ftdiv@cntr,c
  4602  00196E  90D8               	bcf	status,0,c
  4603  001970  362B               	rlcf	___ftdiv@f3,f,c
  4604  001972  362C               	rlcf	___ftdiv@f3+1,f,c
  4605  001974  362D               	rlcf	___ftdiv@f3+2,f,c
  4606  001976  5024               	movf	___ftdiv@f2,w,c
  4607  001978  5C21               	subwf	___ftdiv@f1,w,c
  4608  00197A  5025               	movf	___ftdiv@f2+1,w,c
  4609  00197C  5822               	subwfb	___ftdiv@f1+1,w,c
  4610  00197E  5026               	movf	___ftdiv@f2+2,w,c
  4611  001980  5823               	subwfb	___ftdiv@f1+2,w,c
  4612  001982  A0D8               	btfss	status,0,c
  4613  001984  D007               	goto	l1233
  4614  001986  5024               	movf	___ftdiv@f2,w,c
  4615  001988  5E21               	subwf	___ftdiv@f1,f,c
  4616  00198A  5025               	movf	___ftdiv@f2+1,w,c
  4617  00198C  5A22               	subwfb	___ftdiv@f1+1,f,c
  4618  00198E  5026               	movf	___ftdiv@f2+2,w,c
  4619  001990  5A23               	subwfb	___ftdiv@f1+2,f,c
  4620  001992  802B               	bsf	___ftdiv@f3,0,c
  4621  001994                     l1233:
  4622  001994  90D8               	bcf	status,0,c
  4623  001996  3621               	rlcf	___ftdiv@f1,f,c
  4624  001998  3622               	rlcf	___ftdiv@f1+1,f,c
  4625  00199A  3623               	rlcf	___ftdiv@f1+2,f,c
  4626  00199C  2E2A               	decfsz	___ftdiv@cntr,f,c
  4627  00199E  D7E7               	goto	l1232
  4628  0019A0  C02B  F001         	movff	___ftdiv@f3,___ftpack@arg
  4629  0019A4  C02C  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4630  0019A8  C02D  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4631  0019AC  C02E  F004         	movff	___ftdiv@exp,___ftpack@exp
  4632  0019B0  C02F  F005         	movff	___ftdiv@sign,___ftpack@sign
  4633  0019B4  EC84  F00E         	call	___ftpack	;wreg free
  4634  0019B8  C001  F021         	movff	?___ftpack,?___ftdiv
  4635  0019BC  C002  F022         	movff	?___ftpack+1,?___ftdiv+1
  4636  0019C0  C003  F023         	movff	?___ftpack+2,?___ftdiv+2
  4637  0019C4  0012               	return	
  4638  0019C6                     __end_of___ftdiv:
  4639                           	opt stack 0
  4640                           tblptru	equ	0xFF8
  4641                           tblptrh	equ	0xFF7
  4642                           tblptrl	equ	0xFF6
  4643                           tablat	equ	0xFF5
  4644                           prodh	equ	0xFF4
  4645                           prodl	equ	0xFF3
  4646                           intcon	equ	0xFF2
  4647                           intcon2	equ	0xFF1
  4648                           postinc0	equ	0xFEE
  4649                           wreg	equ	0xFE8
  4650                           postdec1	equ	0xFE5
  4651                           fsr1l	equ	0xFE1
  4652                           indf2	equ	0xFDF
  4653                           postinc2	equ	0xFDE
  4654                           postdec2	equ	0xFDD
  4655                           fsr2h	equ	0xFDA
  4656                           fsr2l	equ	0xFD9
  4657                           status	equ	0xFD8
  4658                           
  4659 ;; *************** function ___awtoft *****************
  4660 ;; Defined at:
  4661 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  c               2    8[COMRAM] int 
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;  sign            1   11[COMRAM] unsigned char 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  3    8[COMRAM] float 
  4668 ;; Registers used:
  4669 ;;		wreg, status,2, status,0, cstack
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4675 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4678 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4679 ;;Total ram usage:        4 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    1
  4682 ;; This function calls:
  4683 ;;		___ftpack
  4684 ;; This function is called by:
  4685 ;;		_exp
  4686 ;;		_log
  4687 ;;		_MCP9801_TempRead
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text29
  4692  00215E                     __ptext29:
  4693                           	opt stack 0
  4694  00215E                     ___awtoft:
  4695                           	opt stack 26
  4696                           
  4697                           ;incstack = 0
  4698  00215E  0E00               	movlw	0
  4699  002160  6E0C               	movwf	___awtoft@sign,c
  4700  002162  AE0A               	btfss	___awtoft@c+1,7,c
  4701  002164  D006               	goto	l1146
  4702  002166  6C09               	negf	___awtoft@c,c
  4703  002168  1E0A               	comf	___awtoft@c+1,f,c
  4704  00216A  B0D8               	btfsc	status,0,c
  4705  00216C  2A0A               	incf	___awtoft@c+1,f,c
  4706  00216E  0E01               	movlw	1
  4707  002170  6E0C               	movwf	___awtoft@sign,c
  4708  002172                     l1146:
  4709  002172  C009  F001         	movff	___awtoft@c,___ftpack@arg
  4710  002176  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  4711  00217A  6A03               	clrf	___ftpack@arg+2,c
  4712  00217C  0E8E               	movlw	142
  4713  00217E  6E04               	movwf	___ftpack@exp,c
  4714  002180  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  4715  002184  EC84  F00E         	call	___ftpack	;wreg free
  4716  002188  C001  F009         	movff	?___ftpack,?___awtoft
  4717  00218C  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  4718  002190  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  4719  002194  0012               	return	
  4720  002196                     __end_of___awtoft:
  4721                           	opt stack 0
  4722                           tblptru	equ	0xFF8
  4723                           tblptrh	equ	0xFF7
  4724                           tblptrl	equ	0xFF6
  4725                           tablat	equ	0xFF5
  4726                           prodh	equ	0xFF4
  4727                           prodl	equ	0xFF3
  4728                           intcon	equ	0xFF2
  4729                           intcon2	equ	0xFF1
  4730                           postinc0	equ	0xFEE
  4731                           wreg	equ	0xFE8
  4732                           postdec1	equ	0xFE5
  4733                           fsr1l	equ	0xFE1
  4734                           indf2	equ	0xFDF
  4735                           postinc2	equ	0xFDE
  4736                           postdec2	equ	0xFDD
  4737                           fsr2h	equ	0xFDA
  4738                           fsr2l	equ	0xFD9
  4739                           status	equ	0xFD8
  4740                           
  4741 ;; *************** function ___lltoft *****************
  4742 ;; Defined at:
  4743 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;  c               4    8[COMRAM] unsigned long 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;  exp             1   16[COMRAM] unsigned char 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  3    8[COMRAM] float 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4757 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4758 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4759 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4760 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4761 ;;Total ram usage:        9 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    1
  4764 ;; This function calls:
  4765 ;;		___ftpack
  4766 ;; This function is called by:
  4767 ;;		_MCP342x_read
  4768 ;;		_pow
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           	psect	text30
  4773  001F4E                     __ptext30:
  4774                           	opt stack 0
  4775  001F4E                     ___lltoft:
  4776                           	opt stack 27
  4777                           
  4778                           ;incstack = 0
  4779  001F4E  0E8E               	movlw	142
  4780  001F50  6E11               	movwf	___lltoft@exp,c
  4781  001F52  D006               	goto	l1336
  4782  001F54  90D8               	bcf	status,0,c
  4783  001F56  320C               	rrcf	___lltoft@c+3,f,c
  4784  001F58  320B               	rrcf	___lltoft@c+2,f,c
  4785  001F5A  320A               	rrcf	___lltoft@c+1,f,c
  4786  001F5C  3209               	rrcf	___lltoft@c,f,c
  4787  001F5E  2A11               	incf	___lltoft@exp,f,c
  4788  001F60                     l1336:
  4789  001F60  0E00               	movlw	0
  4790  001F62  1409               	andwf	___lltoft@c,w,c
  4791  001F64  6E0D               	movwf	??___lltoft& (0+255),c
  4792  001F66  0E00               	movlw	0
  4793  001F68  140A               	andwf	___lltoft@c+1,w,c
  4794  001F6A  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  4795  001F6C  0E00               	movlw	0
  4796  001F6E  140B               	andwf	___lltoft@c+2,w,c
  4797  001F70  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  4798  001F72  0EFF               	movlw	255
  4799  001F74  140C               	andwf	___lltoft@c+3,w,c
  4800  001F76  6E10               	movwf	(??___lltoft+3)& (0+255),c
  4801  001F78  500D               	movf	??___lltoft,w,c
  4802  001F7A  100E               	iorwf	??___lltoft+1,w,c
  4803  001F7C  100F               	iorwf	??___lltoft+2,w,c
  4804  001F7E  1010               	iorwf	??___lltoft+3,w,c
  4805  001F80  A4D8               	btfss	status,2,c
  4806  001F82  D7E8               	goto	l1337
  4807  001F84  C009  F001         	movff	___lltoft@c,___ftpack@arg
  4808  001F88  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  4809  001F8C  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  4810  001F90  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4811  001F94  0E00               	movlw	0
  4812  001F96  6E05               	movwf	___ftpack@sign,c
  4813  001F98  EC84  F00E         	call	___ftpack	;wreg free
  4814  001F9C  C001  F009         	movff	?___ftpack,?___lltoft
  4815  001FA0  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4816  001FA4  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4817  001FA8  0012               	return	
  4818  001FAA                     __end_of___lltoft:
  4819                           	opt stack 0
  4820                           tblptru	equ	0xFF8
  4821                           tblptrh	equ	0xFF7
  4822                           tblptrl	equ	0xFF6
  4823                           tablat	equ	0xFF5
  4824                           prodh	equ	0xFF4
  4825                           prodl	equ	0xFF3
  4826                           intcon	equ	0xFF2
  4827                           intcon2	equ	0xFF1
  4828                           postinc0	equ	0xFEE
  4829                           wreg	equ	0xFE8
  4830                           postdec1	equ	0xFE5
  4831                           fsr1l	equ	0xFE1
  4832                           indf2	equ	0xFDF
  4833                           postinc2	equ	0xFDE
  4834                           postdec2	equ	0xFDD
  4835                           fsr2h	equ	0xFDA
  4836                           fsr2l	equ	0xFD9
  4837                           status	equ	0xFD8
  4838                           
  4839 ;; *************** function ___ftpack *****************
  4840 ;; Defined at:
  4841 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  arg             3    0[COMRAM] unsigned um
  4844 ;;  exp             1    3[COMRAM] unsigned char 
  4845 ;;  sign            1    4[COMRAM] unsigned char 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;		None
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  3    0[COMRAM] float 
  4850 ;; Registers used:
  4851 ;;		wreg, status,2, status,0
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4857 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4859 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4860 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4861 ;;Total ram usage:        8 bytes
  4862 ;; Hardware stack levels used:    1
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		___altoft
  4867 ;;		___awtoft
  4868 ;;		___ftadd
  4869 ;;		___ftdiv
  4870 ;;		___ftmul
  4871 ;;		___lltoft
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	text31
  4876  001D08                     __ptext31:
  4877                           	opt stack 0
  4878  001D08                     ___ftpack:
  4879                           	opt stack 25
  4880                           
  4881                           ;incstack = 0
  4882  001D08  5004               	movf	___ftpack@exp,w,c
  4883  001D0A  B4D8               	btfsc	status,2,c
  4884  001D0C  D005               	goto	u1810
  4885  001D0E  5001               	movf	___ftpack@arg,w,c
  4886  001D10  1002               	iorwf	___ftpack@arg+1,w,c
  4887  001D12  1003               	iorwf	___ftpack@arg+2,w,c
  4888  001D14  A4D8               	btfss	status,2,c
  4889  001D16  D00C               	goto	l1165
  4890  001D18                     u1810:
  4891  001D18  0E00               	movlw	0
  4892  001D1A  6E01               	movwf	?___ftpack,c
  4893  001D1C  0E00               	movlw	0
  4894  001D1E  6E02               	movwf	?___ftpack+1,c
  4895  001D20  0E00               	movlw	0
  4896  001D22  6E03               	movwf	?___ftpack+2,c
  4897  001D24  0012               	return	
  4898  001D26  2A04               	incf	___ftpack@exp,f,c
  4899  001D28  90D8               	bcf	status,0,c
  4900  001D2A  3203               	rrcf	___ftpack@arg+2,f,c
  4901  001D2C  3202               	rrcf	___ftpack@arg+1,f,c
  4902  001D2E  3201               	rrcf	___ftpack@arg,f,c
  4903  001D30                     l1165:
  4904  001D30  0E00               	movlw	0
  4905  001D32  1401               	andwf	___ftpack@arg,w,c
  4906  001D34  6E06               	movwf	??___ftpack& (0+255),c
  4907  001D36  0E00               	movlw	0
  4908  001D38  1402               	andwf	___ftpack@arg+1,w,c
  4909  001D3A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4910  001D3C  0EFE               	movlw	254
  4911  001D3E  1403               	andwf	___ftpack@arg+2,w,c
  4912  001D40  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4913  001D42  5006               	movf	??___ftpack,w,c
  4914  001D44  1007               	iorwf	??___ftpack+1,w,c
  4915  001D46  1008               	iorwf	??___ftpack+2,w,c
  4916  001D48  B4D8               	btfsc	status,2,c
  4917  001D4A  D00C               	goto	l1168
  4918  001D4C  D7EC               	goto	l1166
  4919  001D4E  2A04               	incf	___ftpack@exp,f,c
  4920  001D50  0E01               	movlw	1
  4921  001D52  2601               	addwf	___ftpack@arg,f,c
  4922  001D54  0E00               	movlw	0
  4923  001D56  2202               	addwfc	___ftpack@arg+1,f,c
  4924  001D58  0E00               	movlw	0
  4925  001D5A  2203               	addwfc	___ftpack@arg+2,f,c
  4926  001D5C  90D8               	bcf	status,0,c
  4927  001D5E  3203               	rrcf	___ftpack@arg+2,f,c
  4928  001D60  3202               	rrcf	___ftpack@arg+1,f,c
  4929  001D62  3201               	rrcf	___ftpack@arg,f,c
  4930  001D64                     l1168:
  4931  001D64  0E00               	movlw	0
  4932  001D66  1401               	andwf	___ftpack@arg,w,c
  4933  001D68  6E06               	movwf	??___ftpack& (0+255),c
  4934  001D6A  0E00               	movlw	0
  4935  001D6C  1402               	andwf	___ftpack@arg+1,w,c
  4936  001D6E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4937  001D70  0EFF               	movlw	255
  4938  001D72  1403               	andwf	___ftpack@arg+2,w,c
  4939  001D74  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4940  001D76  5006               	movf	??___ftpack,w,c
  4941  001D78  1007               	iorwf	??___ftpack+1,w,c
  4942  001D7A  1008               	iorwf	??___ftpack+2,w,c
  4943  001D7C  B4D8               	btfsc	status,2,c
  4944  001D7E  D006               	goto	l1171
  4945  001D80  D7E6               	goto	l1169
  4946  001D82  0604               	decf	___ftpack@exp,f,c
  4947  001D84  90D8               	bcf	status,0,c
  4948  001D86  3601               	rlcf	___ftpack@arg,f,c
  4949  001D88  3602               	rlcf	___ftpack@arg+1,f,c
  4950  001D8A  3603               	rlcf	___ftpack@arg+2,f,c
  4951  001D8C                     l1171:
  4952  001D8C  BE02               	btfsc	___ftpack@arg+1,7,c
  4953  001D8E  D003               	goto	u1850
  4954  001D90  0E02               	movlw	2
  4955  001D92  6004               	cpfslt	___ftpack@exp,c
  4956  001D94  D7F6               	goto	l1172
  4957  001D96                     u1850:
  4958  001D96  A004               	btfss	___ftpack@exp,0,c
  4959  001D98  9E02               	bcf	___ftpack@arg+1,7,c
  4960  001D9A  90D8               	bcf	status,0,c
  4961  001D9C  3204               	rrcf	___ftpack@exp,f,c
  4962  001D9E  5004               	movf	___ftpack@exp,w,c
  4963  001DA0  1203               	iorwf	___ftpack@arg+2,f,c
  4964  001DA2  5005               	movf	___ftpack@sign,w,c
  4965  001DA4  A4D8               	btfss	status,2,c
  4966  001DA6  8E03               	bsf	___ftpack@arg+2,7,c
  4967  001DA8  C001  F001         	movff	___ftpack@arg,?___ftpack
  4968  001DAC  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  4969  001DB0  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  4970  001DB4  0012               	return	
  4971  001DB6                     __end_of___ftpack:
  4972                           	opt stack 0
  4973                           tblptru	equ	0xFF8
  4974                           tblptrh	equ	0xFF7
  4975                           tblptrl	equ	0xFF6
  4976                           tablat	equ	0xFF5
  4977                           prodh	equ	0xFF4
  4978                           prodl	equ	0xFF3
  4979                           intcon	equ	0xFF2
  4980                           intcon2	equ	0xFF1
  4981                           postinc0	equ	0xFEE
  4982                           wreg	equ	0xFE8
  4983                           postdec1	equ	0xFE5
  4984                           fsr1l	equ	0xFE1
  4985                           indf2	equ	0xFDF
  4986                           postinc2	equ	0xFDE
  4987                           postdec2	equ	0xFDD
  4988                           fsr2h	equ	0xFDA
  4989                           fsr2l	equ	0xFD9
  4990                           status	equ	0xFD8
  4991                           
  4992 ;; *************** function _I2C_read *****************
  4993 ;; Defined at:
  4994 ;;		line 42 in file "I2C.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  ACK_NACK        2    0[COMRAM] int 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;		None
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  2    0[COMRAM] int 
  5001 ;; Registers used:
  5002 ;;		None
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5012 ;;Total ram usage:        2 bytes
  5013 ;; Hardware stack levels used:    1
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_MCP342x_read
  5018 ;;		_MCP23008_read
  5019 ;;		_portINT_status
  5020 ;;		_MCP23008_reagReg
  5021 ;;		_MCP9801_TempRead
  5022 ;;		_EEPROM_24AA512_Read
  5023 ;;		_EEPROM_24AA512_pageRead
  5024 ;;		_PCF8523_rtcRead
  5025 ;;		_MCP794x_readEEPROM
  5026 ;;		_MCP794x_getID
  5027 ;;		_MCP7941x_read
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           	psect	text32
  5032  002272                     __ptext32:
  5033                           	opt stack 0
  5034  002272                     _I2C_read:
  5035                           	opt stack 29
  5036                           
  5037                           ;I2C.c: 43: SSP2CON2bits.RCEN = 1;
  5038                           
  5039                           ;incstack = 0
  5040  002272  8671               	bsf	3953,3,c	;volatile
  5041  002274  A073               	btfss	3955,0,c	;volatile
  5042  002276  D7FE               	goto	l482
  5043                           
  5044                           ;I2C.c: 45: SSP2CON2bits.ACKDT = ACK_NACK;
  5045  002278  B001               	btfsc	I2C_read@ACK_NACK,0,c
  5046  00227A  D002               	bra	u2745
  5047  00227C  9A71               	bcf	3953,5,c	;volatile
  5048  00227E  D001               	bra	u2746
  5049  002280                     u2745:
  5050  002280  8A71               	bsf	3953,5,c	;volatile
  5051  002282                     u2746:
  5052                           
  5053                           ;I2C.c: 46: SSP2CON2bits.ACKEN = 1;
  5054  002282  8871               	bsf	3953,4,c	;volatile
  5055  002284  A871               	btfss	3953,4,c	;volatile
  5056  002286  0012               	return	
  5057  002288  D7FD               	goto	l485
  5058  00228A                     __end_of_I2C_read:
  5059                           	opt stack 0
  5060                           tblptru	equ	0xFF8
  5061                           tblptrh	equ	0xFF7
  5062                           tblptrl	equ	0xFF6
  5063                           tablat	equ	0xFF5
  5064                           prodh	equ	0xFF4
  5065                           prodl	equ	0xFF3
  5066                           intcon	equ	0xFF2
  5067                           intcon2	equ	0xFF1
  5068                           postinc0	equ	0xFEE
  5069                           wreg	equ	0xFE8
  5070                           postdec1	equ	0xFE5
  5071                           fsr1l	equ	0xFE1
  5072                           indf2	equ	0xFDF
  5073                           postinc2	equ	0xFDE
  5074                           postdec2	equ	0xFDD
  5075                           fsr2h	equ	0xFDA
  5076                           fsr2l	equ	0xFD9
  5077                           status	equ	0xFD8
  5078                           
  5079 ;; *************** function _I2C_buffClear *****************
  5080 ;; Defined at:
  5081 ;;		line 81 in file "I2C.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;		None
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;		None
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  1    wreg      void 
  5088 ;; Registers used:
  5089 ;;		wreg, cstack
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5099 ;;Total ram usage:        0 bytes
  5100 ;; Hardware stack levels used:    1
  5101 ;; Hardware stack levels required when called:    2
  5102 ;; This function calls:
  5103 ;;		_I2C_Write
  5104 ;;		_I2C_start
  5105 ;;		_I2C_stop
  5106 ;; This function is called by:
  5107 ;;		_main
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           	psect	text33
  5112  00228A                     __ptext33:
  5113                           	opt stack 0
  5114  00228A                     _I2C_buffClear:
  5115                           	opt stack 28
  5116                           
  5117                           ;I2C.c: 82: I2C_start();
  5118                           
  5119                           ;incstack = 0
  5120  00228A  EC68  F011         	call	_I2C_start	;wreg free
  5121                           
  5122                           ;I2C.c: 83: I2C_Write(0x00);
  5123  00228E  0E00               	movlw	0
  5124  002290  EC20  F011         	call	_I2C_Write
  5125                           
  5126                           ;I2C.c: 84: I2C_stop();
  5127  002294  EC6D  F011         	call	_I2C_stop	;wreg free
  5128  002298  0012               	return		;funcret
  5129  00229A                     __end_of_I2C_buffClear:
  5130                           	opt stack 0
  5131                           tblptru	equ	0xFF8
  5132                           tblptrh	equ	0xFF7
  5133                           tblptrl	equ	0xFF6
  5134                           tablat	equ	0xFF5
  5135                           prodh	equ	0xFF4
  5136                           prodl	equ	0xFF3
  5137                           intcon	equ	0xFF2
  5138                           intcon2	equ	0xFF1
  5139                           postinc0	equ	0xFEE
  5140                           wreg	equ	0xFE8
  5141                           postdec1	equ	0xFE5
  5142                           fsr1l	equ	0xFE1
  5143                           indf2	equ	0xFDF
  5144                           postinc2	equ	0xFDE
  5145                           postdec2	equ	0xFDD
  5146                           fsr2h	equ	0xFDA
  5147                           fsr2l	equ	0xFD9
  5148                           status	equ	0xFD8
  5149                           
  5150 ;; *************** function _I2C_start *****************
  5151 ;; Defined at:
  5152 ;;		line 51 in file "I2C.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;		None
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      void 
  5159 ;; Registers used:
  5160 ;;		None
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5170 ;;Total ram usage:        0 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; This function calls:
  5173 ;;		Nothing
  5174 ;; This function is called by:
  5175 ;;		_I2C_buffClear
  5176 ;;		_MCP342x_read
  5177 ;;		_I2C_BusSCan
  5178 ;;		_MCP23008_pinMode
  5179 ;;		_MCP23008_Write
  5180 ;;		_MCP23008_read
  5181 ;;		_MCP23008_pullUp
  5182 ;;		_MCP23008_ISR_EN
  5183 ;;		_MCP23008_ISR_polarity
  5184 ;;		_portINT_status
  5185 ;;		_MCP23008_reagReg
  5186 ;;		_MCP9801_Init
  5187 ;;		_MCP9801_TempRead
  5188 ;;		_EEPROM_24AA512_Write
  5189 ;;		_EEPROM_24AA512_Read
  5190 ;;		_EEPROM_24AA512_pageWrite
  5191 ;;		_EEPROM_24AA512_pageRead
  5192 ;;		_PCF8523_rtcRead
  5193 ;;		_PCF8523_write
  5194 ;;		_MCP794x_setTime
  5195 ;;		_MCP794x_setDate
  5196 ;;		_MCP794x_writeRtcc
  5197 ;;		_MCP794x_writeEEPROM
  5198 ;;		_MCP794x_readEEPROM
  5199 ;;		_MCP794x_getID
  5200 ;;		_MCP7941x_read
  5201 ;;		_SSD1306_writeCMD
  5202 ;;		_displaySetCursor
  5203 ;;		_displayWrite
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text34
  5208  0022D0                     __ptext34:
  5209                           	opt stack 0
  5210  0022D0                     _I2C_start:
  5211                           	opt stack 29
  5212                           
  5213                           ;I2C.c: 52: SSP2CON2bits.SEN = 1;
  5214                           
  5215                           ;incstack = 0
  5216  0022D0  8071               	bsf	3953,0,c	;volatile
  5217  0022D2  B071               	btfsc	3953,0,c	;volatile
  5218  0022D4  D7FE               	goto	l491
  5219                           
  5220                           ;I2C.c: 54: PIR3bits.SSP2IF = 0;
  5221  0022D6  9EA4               	bcf	4004,7,c	;volatile
  5222  0022D8  0012               	return		;funcret
  5223  0022DA                     __end_of_I2C_start:
  5224                           	opt stack 0
  5225                           tblptru	equ	0xFF8
  5226                           tblptrh	equ	0xFF7
  5227                           tblptrl	equ	0xFF6
  5228                           tablat	equ	0xFF5
  5229                           prodh	equ	0xFF4
  5230                           prodl	equ	0xFF3
  5231                           intcon	equ	0xFF2
  5232                           intcon2	equ	0xFF1
  5233                           postinc0	equ	0xFEE
  5234                           wreg	equ	0xFE8
  5235                           postdec1	equ	0xFE5
  5236                           fsr1l	equ	0xFE1
  5237                           indf2	equ	0xFDF
  5238                           postinc2	equ	0xFDE
  5239                           postdec2	equ	0xFDD
  5240                           fsr2h	equ	0xFDA
  5241                           fsr2l	equ	0xFD9
  5242                           status	equ	0xFD8
  5243                           
  5244 ;; *************** function _I2C_Write *****************
  5245 ;; Defined at:
  5246 ;;		line 31 in file "I2C.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  data            1    wreg     unsigned char 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  data            1    0[COMRAM] unsigned char 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  1    wreg      void 
  5253 ;; Registers used:
  5254 ;;		wreg, cstack
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5263 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5264 ;;Total ram usage:        1 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:    1
  5267 ;; This function calls:
  5268 ;;		_I2C_stop
  5269 ;; This function is called by:
  5270 ;;		_I2C_buffClear
  5271 ;;		_MCP342x_read
  5272 ;;		_I2C_BusSCan
  5273 ;;		_MCP23008_pinMode
  5274 ;;		_MCP23008_Write
  5275 ;;		_MCP23008_read
  5276 ;;		_MCP23008_pullUp
  5277 ;;		_MCP23008_ISR_EN
  5278 ;;		_MCP23008_ISR_polarity
  5279 ;;		_portINT_status
  5280 ;;		_MCP23008_reagReg
  5281 ;;		_MCP9801_Init
  5282 ;;		_MCP9801_TempRead
  5283 ;;		_EEPROM_24AA512_Write
  5284 ;;		_EEPROM_24AA512_Read
  5285 ;;		_EEPROM_24AA512_pageWrite
  5286 ;;		_EEPROM_24AA512_pageRead
  5287 ;;		_PCF8523_rtcRead
  5288 ;;		_PCF8523_write
  5289 ;;		_MCP794x_setTime
  5290 ;;		_MCP794x_setDate
  5291 ;;		_MCP794x_writeRtcc
  5292 ;;		_MCP794x_writeEEPROM
  5293 ;;		_MCP794x_readEEPROM
  5294 ;;		_MCP794x_getID
  5295 ;;		_MCP7941x_read
  5296 ;;		_SSD1306_writeCMD
  5297 ;;		_displaySetCursor
  5298 ;;		_displayWrite
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text35
  5303  002240                     __ptext35:
  5304                           	opt stack 0
  5305  002240                     _I2C_Write:
  5306                           	opt stack 28
  5307                           
  5308                           ;incstack = 0
  5309                           ;I2C_Write@data stored from wreg
  5310  002240  6E01               	movwf	I2C_Write@data,c
  5311                           
  5312                           ;I2C.c: 32: SSP2BUF = data;
  5313  002242  C001  FF75         	movff	I2C_Write@data,3957	;volatile
  5314  002246  A073               	btfss	3955,0,c	;volatile
  5315  002248  D7FE               	goto	l472
  5316  00224A                     u2700:
  5317                           
  5318                           ;I2C.c: 34: while (!PIR3bits.SSP2IF);
  5319  00224A  AEA4               	btfss	4004,7,c	;volatile
  5320  00224C  D7FE               	goto	u2700
  5321                           
  5322                           ;I2C.c: 35: PIR3bits.SSP2IF = 0;
  5323  00224E  9EA4               	bcf	4004,7,c	;volatile
  5324                           
  5325                           ;I2C.c: 36: if (SSP2CON2bits.ACKSTAT) {
  5326  002250  AC71               	btfss	3953,6,c	;volatile
  5327  002252  0012               	return	
  5328                           
  5329                           ;I2C.c: 37: I2C_stop();
  5330  002254  EC6D  F011         	call	_I2C_stop	;wreg free
  5331                           
  5332                           ;I2C.c: 38: return;
  5333  002258  0012               	return	
  5334  00225A                     __end_of_I2C_Write:
  5335                           	opt stack 0
  5336                           tblptru	equ	0xFF8
  5337                           tblptrh	equ	0xFF7
  5338                           tblptrl	equ	0xFF6
  5339                           tablat	equ	0xFF5
  5340                           prodh	equ	0xFF4
  5341                           prodl	equ	0xFF3
  5342                           intcon	equ	0xFF2
  5343                           intcon2	equ	0xFF1
  5344                           postinc0	equ	0xFEE
  5345                           wreg	equ	0xFE8
  5346                           postdec1	equ	0xFE5
  5347                           fsr1l	equ	0xFE1
  5348                           indf2	equ	0xFDF
  5349                           postinc2	equ	0xFDE
  5350                           postdec2	equ	0xFDD
  5351                           fsr2h	equ	0xFDA
  5352                           fsr2l	equ	0xFD9
  5353                           status	equ	0xFD8
  5354                           
  5355 ;; *************** function _I2C_stop *****************
  5356 ;; Defined at:
  5357 ;;		line 63 in file "I2C.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;		None
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;		None
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  1    wreg      void 
  5364 ;; Registers used:
  5365 ;;		None
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5375 ;;Total ram usage:        0 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; This function calls:
  5378 ;;		Nothing
  5379 ;; This function is called by:
  5380 ;;		_I2C_Write
  5381 ;;		_I2C_buffClear
  5382 ;;		_MCP342x_read
  5383 ;;		_I2C_BusSCan
  5384 ;;		_MCP23008_pinMode
  5385 ;;		_MCP23008_Write
  5386 ;;		_MCP23008_read
  5387 ;;		_MCP23008_pullUp
  5388 ;;		_MCP23008_ISR_EN
  5389 ;;		_MCP23008_ISR_polarity
  5390 ;;		_portINT_status
  5391 ;;		_MCP23008_reagReg
  5392 ;;		_MCP9801_Init
  5393 ;;		_MCP9801_TempRead
  5394 ;;		_EEPROM_24AA512_Write
  5395 ;;		_EEPROM_24AA512_Read
  5396 ;;		_EEPROM_24AA512_pageWrite
  5397 ;;		_EEPROM_24AA512_pageRead
  5398 ;;		_PCF8523_rtcRead
  5399 ;;		_PCF8523_write
  5400 ;;		_MCP794x_setTime
  5401 ;;		_MCP794x_setDate
  5402 ;;		_MCP794x_writeRtcc
  5403 ;;		_MCP794x_writeEEPROM
  5404 ;;		_MCP794x_readEEPROM
  5405 ;;		_MCP794x_getID
  5406 ;;		_SSD1306_writeCMD
  5407 ;;		_displaySetCursor
  5408 ;;		_displayWrite
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           
  5412                           	psect	text36
  5413  0022DA                     __ptext36:
  5414                           	opt stack 0
  5415  0022DA                     _I2C_stop:
  5416                           	opt stack 29
  5417                           
  5418                           ;I2C.c: 64: SSP2CON2bits.PEN = 1;
  5419                           
  5420                           ;incstack = 0
  5421  0022DA  8471               	bsf	3953,2,c	;volatile
  5422  0022DC  B471               	btfsc	3953,2,c	;volatile
  5423  0022DE  D7FE               	goto	l503
  5424                           
  5425                           ;I2C.c: 66: PIR3bits.SSP2IF = 0;
  5426  0022E0  9EA4               	bcf	4004,7,c	;volatile
  5427  0022E2  0012               	return		;funcret
  5428  0022E4                     __end_of_I2C_stop:
  5429                           	opt stack 0
  5430                           tblptru	equ	0xFF8
  5431                           tblptrh	equ	0xFF7
  5432                           tblptrl	equ	0xFF6
  5433                           tablat	equ	0xFF5
  5434                           prodh	equ	0xFF4
  5435                           prodl	equ	0xFF3
  5436                           intcon	equ	0xFF2
  5437                           intcon2	equ	0xFF1
  5438                           postinc0	equ	0xFEE
  5439                           wreg	equ	0xFE8
  5440                           postdec1	equ	0xFE5
  5441                           fsr1l	equ	0xFE1
  5442                           indf2	equ	0xFDF
  5443                           postinc2	equ	0xFDE
  5444                           postdec2	equ	0xFDD
  5445                           fsr2h	equ	0xFDA
  5446                           fsr2l	equ	0xFD9
  5447                           status	equ	0xFD8
  5448                           tblptru	equ	0xFF8
  5449                           tblptrh	equ	0xFF7
  5450                           tblptrl	equ	0xFF6
  5451                           tablat	equ	0xFF5
  5452                           prodh	equ	0xFF4
  5453                           prodl	equ	0xFF3
  5454                           intcon	equ	0xFF2
  5455                           intcon2	equ	0xFF1
  5456                           postinc0	equ	0xFEE
  5457                           wreg	equ	0xFE8
  5458                           postdec1	equ	0xFE5
  5459                           fsr1l	equ	0xFE1
  5460                           indf2	equ	0xFDF
  5461                           postinc2	equ	0xFDE
  5462                           postdec2	equ	0xFDD
  5463                           fsr2h	equ	0xFDA
  5464                           fsr2l	equ	0xFD9
  5465                           status	equ	0xFD8
  5466                           
  5467                           	psect	rparam
  5468  0000                     tblptru	equ	0xFF8
  5469                           tblptrh	equ	0xFF7
  5470                           tblptrl	equ	0xFF6
  5471                           tablat	equ	0xFF5
  5472                           prodh	equ	0xFF4
  5473                           prodl	equ	0xFF3
  5474                           intcon	equ	0xFF2
  5475                           intcon2	equ	0xFF1
  5476                           postinc0	equ	0xFEE
  5477                           wreg	equ	0xFE8
  5478                           postdec1	equ	0xFE5
  5479                           fsr1l	equ	0xFE1
  5480                           indf2	equ	0xFDF
  5481                           postinc2	equ	0xFDE
  5482                           postdec2	equ	0xFDD
  5483                           fsr2h	equ	0xFDA
  5484                           fsr2l	equ	0xFD9
  5485                           status	equ	0xFD8


Data Sizes:
    Strings     2
    Constant    57
    Data        53
    BSS         135
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     27     115
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 

    sp__memset	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    buffer	PTR unsigned int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__MCP794x_getID	PTR  size(2) Largest target is 8
		 -> MCP794x_getID@UID(COMRAM[8]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_I2C_Init
    _I2C_Init->___aldiv
    ___aldiv->___wmul
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _MCP342x_read->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftdiv
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___lltoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    _I2C_buffClear->_I2C_Write

Critical Paths under _main in BANK0

    _main->_MCP342x_read
    _MCP342x_read->_pow

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   87855
                                             25 BANK0      2     2      0
                      _I2C_buffClear
                       _MCP342x_read
                  _SYSTEM_Initialize
                     _interrupt_Init
 ---------------------------------------------------------------------------------
 (1) _interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1383
                 _EUSART1_Initialize
                           _I2C_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             1     1      0    1089
                                             20 COMRAM     1     1      0
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              6 COMRAM    14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MCP342x_read                                        14    12      2   86450
                                             11 BANK0     14    12      2
                          _I2C_Write
                           _I2C_read
                          _I2C_start
                           _I2C_stop
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lltoft
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 17    11      6   73435
                                             89 COMRAM     6     0      6
                                              0 BANK0     11    11      0
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  5     2      3   23680
                                             56 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                  9     6      3   38972
                                             80 COMRAM     9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                7     2      5     400
                                             56 COMRAM     7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                                8     5      3    9715
                                             72 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     528
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     784
                                             47 COMRAM    15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     744
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) ___altoft                                            10     6      4    2758
                                             62 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           12     5      7   10617
                                             44 COMRAM    12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    4794
                                             17 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lltoft (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    4919
                                             44 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    4574
                                             32 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     425
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    3254
                                             32 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    2863
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2765
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2544
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _I2C_read                                             2     0      2    1162
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_buffClear                                        0     0      0      22
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_buffClear
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
   _MCP342x_read
     _I2C_Write
       _I2C_stop
     _I2C_read
     _I2C_start
     _I2C_stop
     ___ftdiv
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
       _frexp (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___lltoft
       ___ftpack
     _pow
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg
       ___fttol
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
       _exp
         ___awtoft
           ___ftpack
         ___ftdiv
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lltoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
         ___fttol
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lltoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___lltoft (ARG)
             ___ftpack
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lltoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lltoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lltoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___lltoft (ARG)
                 ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lltoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___lltoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lltoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___lltoft (ARG)
               ___ftpack
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lltoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lltoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lltoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lltoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _frexp
       _log
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lltoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lltoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _frexp
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _I2C_Init
       ___aldiv
         ___wmul (ARG)
       ___wmul
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   _interrupt_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      64       8       39.1%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1B      73       5       71.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     136       6        0.0%
DATA                 0      0     136       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat May 02 13:31:54 2020

                                  ___altoft@exp 0047                                   ___altoft@sign 0048  
                            __size_of_I2C_Write 001A                             ___wmul@multiplicand 0003  
                        __end_of_interrupt_Init 22B2                                    __CFG_CP0$OFF 000000  
                            __size_of_I2C_start 000A                                     __CFG_OSC$HS 000000  
                                  ___ftadd@exp1 002C                                    ___ftadd@exp2 002B  
                                  ___ftadd@sign 002A                                             l503 22DC  
                                           _ADC 00AF                                             l272 1FDA  
                                           l472 2246                                             l482 2274  
                                           l491 22D2                                             l485 2284  
                                           l947 132E                                             l949 133A  
                                           _exp 0F3E                                             _log 15DA  
                                           _pow 145E                                             wreg 000FE8  
                                    _TXSTA1bits 000FAD                                    __CFG_IESO$ON 000000  
                                  ___ftdiv@cntr 002A                                    ___ftdiv@sign 002F  
                                          l1010 1BCC                                            l1013 1C0C  
                                          l1014 1C1A                                            l1006 1B92  
                                          l1015 1C30                                            l1007 1BAA  
                                          l1200 11A2                                            l1009 1BD8  
                                          l1210 11FE                                            l1211 11F4  
                                          l1035 1F04                                            l1220 1232  
                                          l1036 1EF8                                            l1205 1208  
                                          l1222 1260                                            l1231 1930  
                                          l1223 127C                                            l1232 196E  
                                          l1224 12AC                                            l1233 1994  
                                          l1146 2172                                            l1250 1896  
                                          l1410 15CC                                            l1171 1D8C  
                                          l1219 123C                                            l1251 18A6  
                                          l1172 1D82                                            l1244 1814  
                                          l1404 14A6                                            l1165 1D30  
                                          l1229 1908                                            l1261 2134  
                                          l1237 1E76                                            l1405 1498  
                                          l1166 1D26                                            l1246 183C  
                                          l1238 1EA6                                            l1255 2232  
                                          l1247 186E                                            l1407 14BE  
                                          l1168 1D64                                            l1336 1F60  
                                          l1248 187E                                            l1408 1546  
                                          l1169 1D4E                                            l1337 1F54  
                                          l1273 17BE                                            l1265 1724  
                                          l1409 1522                                            l1274 17B2  
                                          l1267 179A                                            l1196 1178  
                                          l1276 17DA                                            l1268 178A  
                                          l1614 1B60                                            l1606 15F6  
                                          l1615 1AE4                                            l1608 1618  
                                          l1570 10EE                                            l1564 0F56  
                                          l1590 1CA0                                            l1566 0F8E  
                                          l1575 1A02                                            l1567 0FC6  
                                          l1584 1DDE                                            l1576 19F4  
                                          l1592 1CD0                                            l1568 0FF4  
                                          l1593 1CC4                                            l1569 1118  
                                          l1578 1A1C                                            l3291 1ED2  
                                          l1579 1A96                                            l1588 1C5A  
                                          l3815 10EE                                            l3941 130A  
                                          l3945 1318                                            ?_exp 0051  
                                          ?_log 0039                                            ?_pow 005A  
                                          STR_1 0F3A                                            u2000 11D2  
                                          u2111 17FC                                            u2040 1210  
                                          u2201 1708                                            u2131 1824  
                                          u2220 1742                                            u2301 18F0  
                                          _LATA 000F89                                            u2070 1244  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          u2400 1A0E                                            _LATD 000F8C  
                                          u2321 1918                                            u2225 173A  
                                          _LATE 000F8D                                            u2260 17C4  
                                          u2440 1C7A                                            u2520 1BDC  
                                          u1810 1D18                                            u2290 1E06  
                                          u2610 0FCE                                            u2700 224A  
                                          u2620 0FD0                                            u1901 1136  
                                          u1911 114A                                            u2448 1C7C  
                                          u1850 1D96                                            u2298 1E08  
                                          u2810 150A                                            u1940 116A  
                                          u2745 2280                                            u2746 2282  
                                          u1970 1194                                            u2860 136C  
                                          u2870 1414                                            u3807 1FF4  
                                          u3817 21E8                                            u2875 1408  
                                          u3827 12F0                                            u3777 1FC0  
                                          u3787 1FCC                                            u3797 1FD4  
                             _MCP342x_read$2925 00C9                               _MCP342x_read$2926 00CC  
                                 __CFG_FCMEN$ON 000000                                            _main 1FAA  
                                          _page 0088                                    ___ftpack@arg 0001  
                                  ___ftpack@exp 0004                                __end_of_I2C_Init 2058  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            fsr2l 000FD9  
                                          exp@x 0051                                            log@x 0039  
                                          pow@x 005A                                            pow@y 005D  
                              __end_of_I2C_read 228A                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0000  
                              __end_of_I2C_stop 22E4                                    ___ftmul@cntr 001F  
                                  ___param_bank 000000                                    ___ftmul@sign 0020  
                                  ___fttol@exp1 003E                                           ??_exp 0054  
                                         ??_log 003C                                    ___fttol@lval 003A  
                                         ??_pow 0060                                   __CFG_PLLDIV$1 000000  
                __size_of_OSCILLATOR_Initialize 002A                   __end_of_OSCILLATOR_Initialize 21F6  
                               ?_interrupt_Init 0001                                 __end_of___aldiv 1C42  
                                         ?_main 0001                                 __end_of___ftadd 12D2  
                               __end_of___ftdiv 19C6                                 __end_of___ftneg 2240  
                               __end_of___ftmul 18E0                                 __end_of___ftsub 215E  
                               __end_of___fttol 17EC                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                                  ___lltoft@exp 0011                                           _sData 0095  
                                 ___awtoft@sign 000C                                           _floor 19C6  
                                         _ldexp 1C42                                           _frexp 1DB6  
                                         _errno 00AB                                  __CFG_CLKOEC$ON 000000  
                                 ___ftpack@sign 0005                            __end_of_MCP342x_read 145E  
                             __end_of_I2C_Write 225A                                           tablat 000FF5  
                                         pow@yi 00BF                                           status 000FD8  
                             __end_of_I2C_start 22DA              _EUSART1_DefaultFramingErrorHandler 000000  
                      __size_of_SPI1_Initialize 000E                                     exp@exponent 0057  
                       __CFG_DSWDTOSC$INTOSCREF 000000                                     ldexp@newexp 003C  
                               __initialization 209C                                     log@exponent 003C  
                    __end_of_EUSART1_Initialize 211E                                    __end_of_main 2004  
                                        ??_main 00D1                                   ___fttol@sign1 0039  
                                 __activetblptr 000002                                          ?_floor 0049  
                                        ?_ldexp 0039                                          ?_frexp 0001  
                              __end_of___altoft 1F4E                                          _ANCON0 000F48  
                                        _ANCON1 000F49                                __end_of___awtoft 2196  
                              __end_of___ftpack 1DB6                                __end_of___lltoft 1FAA  
                                        _ODCON1 000F42                                          _ODCON2 000F41  
                                        _ODCON3 000F40                                  __CFG_WDTEN$OFF 000000  
                                        _RCREG1 000FAF                                          _RCSTA1 000FAC  
                                        _OSCCON 000FD3                                          _SPBRG1 000FB0  
                                __CFG_WPCFG$OFF 000000                                          _TXREG1 000FAE  
                                        _TXSTA1 000FAD                                  __CFG_WPDIS$OFF 000000  
                                __CFG_XINST$OFF 000000                                          _TxData 0100  
                                        ___ftge 1E46                                          _bfSize 00A3  
                                     ??___aldiv 000F                                          ___wmul 21F6  
                                     ??___ftadd 0027                                  __CFG_STVREN$ON 000000  
                                     ??___ftdiv 0027                                       ??___ftneg 0004  
                                     ??___ftmul 0018                                       ??___ftsub 0033  
                                     ??___fttol 0034                          __size_of_I2C_buffClear 0010  
                                        _buffer 00AD                                          _columm 0060  
                      ?_EUSART1_SetErrorHandler 0001                                          clear_0 20C2  
                                        clear_1 20CE                ??_EUSART1_SetOverrunErrorHandler 0003  
               ?_EUSART1_SetOverrunErrorHandler 0001                                          floor@i 004C  
                                        floor@x 0049                           ___ftmul@f3_as_product 001C  
                                     ?_I2C_Init 0001                                    __mediumconst 0000  
                                     ?_I2C_read 0001                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                                     ?_I2C_stop 0001                                 __CFG_DSBOREN$ON 000000  
                              __end_ofexp@coeff 0F1F                               _SYSTEM_Initialize 225A  
                              __end_oflog@coeff 0F3A                                      __accesstop 0060  
                       __end_of__initialization 20D4                                      ___altoft@c 003F  
                                    ___ftadd@f1 0021                                      ___ftadd@f2 0024  
                                    ___ftge@ff1 0001                                      ___ftge@ff2 0004  
                            ?_SYSTEM_Initialize 0001                                    eval_poly@res 0036  
                                 ___rparam_used 000001                                      ___ftdiv@f1 0021  
                                    ___ftdiv@f2 0024                                      ___ftdiv@f3 002B  
                                    ___ftneg@f1 0001                                 __CFG_IOL1WAY$ON 000000  
                                    ___awtoft@c 0009                            __CFG_WPEND$PAGE_WPFP 000000  
                                    ___ftmul@f1 0012                                      ___ftmul@f2 0015  
                                    ___ftsub@f1 002D                                      ___ftsub@f2 0030  
                                    ___fttol@f1 0030                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 2196                             ??_SYSTEM_Initialize 0016  
                                    ___lltoft@c 0009                                   __end_of_floor 1AA4  
                                 __end_of_ldexp 1D08                                   __end_of_frexp 1E46  
                             ??_SPI1_Initialize 0001                                 __CFG_DSWDTEN$ON 000000  
                               __CFG_DSWDTPS$G2 000000                                      ??_I2C_Init 0015  
                         __size_of_MCP342x_read 018C                                      ??_I2C_read 0003  
                                    ??_I2C_stop 0001                                         ??_floor 004C  
                                       ??_ldexp 003E                                         ??_frexp 0006  
                     __end_of_SYSTEM_Initialize 2272                                   _I2C_buffClear 228A  
                                    __pbssBANK0 0095                                      __pbssBANK1 0100  
                            __size_of_eval_poly 00D2                 __end_of_EUSART1_SetErrorHandler 22D0  
                             __CFG_PLLSEL$PLL4X 000000                                ??_interrupt_Init 0001  
                                       ?___ftge 0001                                         ?___wmul 0001  
                                  _MCP342x_read 12D2                                       ?___altoft 003F  
                                     ?___awtoft 0009                                       ?___ftpack 0001  
                                     ?___lltoft 0009                           MCP342x_read@dataIndex 00CF  
        __end_of_EUSART1_SetFramingErrorHandler 22C6         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 22BC                                         _REFOCON 000F3D  
                                       _OSCCON2 000F87                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000F7F                                         _SSP1ADD 000FC8  
                                       _SSP2ADD 000F74                                         _SSP1BUF 000FC9  
                                       _SSP2BUF 000F75                                  ?_I2C_buffClear 0001  
                              I2C_read@ACK_NACK 0001                                       _I2C_Write 2240  
                                       __Hparam 0000                                         __Lparam 0000  
                                     _I2C_start 22D0                                         ___aldiv 1B76  
                               __size_of___ftge 0090                                         ___ftadd 1126  
                                       ___ftdiv 18E0                                         ___ftneg 221C  
                               __size_of___wmul 0026                                         ___ftmul 17EC  
                                       ___ftsub 211E                                         ___fttol 16F8  
                                  __psmallconst 0F00                                      ??___altoft 0043  
                                       __pcinit 209C                                      ??___awtoft 000C  
                                    ??___ftpack 0006                               __end_of_eval_poly 1B76  
                                       __ramtop 0F00                                      ??___lltoft 000D  
                                       __ptext0 1FAA                                         __ptext1 22A8  
                                       __ptext2 225A                                         __ptext3 229A  
                                       __ptext4 2058                                         __ptext5 21CC  
                                       __ptext6 2004                                         __ptext7 1B76  
                                       __ptext8 20DE                                         __ptext9 22B2  
                                     _MAX31_ADC 00A7                           _OSCILLATOR_Initialize 21CC  
                                  __size_of_exp 01E8                                    __size_of_log 011E  
                                  __size_of_pow 017C                                ___aldiv@dividend 0007  
                            _EUSART1_Initialize 20DE                        ??_PIN_MANAGER_Initialize 0001  
                    __size_of_SYSTEM_Initialize 0018                            end_of_initialization 20D4  
                                       exp@sign 0059                             ?_EUSART1_Initialize 0001  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 00B3  
                                    ?_I2C_Write 0001                                         pow@sign 00BE  
                                    ?_I2C_start 0001                                ___aldiv@quotient 0011  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc2 000FDE  
                          ??_EUSART1_Initialize 0003                                       _PORTBbits 000F81  
                               ??_I2C_buffClear 0002                                       _TRISCbits 000F94  
                                     _TRISDbits 000F95                                       _TRISEbits 000F96  
                             __size_of_I2C_Init 0054                __size_of_EUSART1_SetErrorHandler 000A  
                             __size_of_I2C_read 0018                               __size_of_I2C_stop 000A  
                                   ___ftdiv@exp 002E                                 _SPI1_Initialize 229A  
                             __CFG_WPFP$PAGE_63 000000                             __CFG_MSSP7B_EN$MSK7 000000  
                                   ___ftmul@exp 001B                                  __end_of___ftge 1ED6  
                                __end_of___wmul 221C                          ?_OSCILLATOR_Initialize 0001  
                                    floor@expon 004F                             start_initialization 209C  
                                    eval_poly@d 0030                                      eval_poly@n 0032  
                                    eval_poly@x 002D                                      ldexp@value 0039  
               __size_of_PIN_MANAGER_Initialize 0044                                     __end_of_exp 1126  
                                   __end_of_log 16F8                                     __end_of_pow 15DA  
                                    frexp@value 0001                                     ??_I2C_Write 0001  
                                   ??_I2C_start 0001                                        ??___ftge 0007  
                                      ??___wmul 0005                               __CFG_ADCSEL$BIT10 000000  
                                   __pdataBANK0 0060                                 I2C_Init@F_clock 0015  
                             __size_of___altoft 0078                               __size_of___awtoft 0038  
                             __size_of___ftpack 00AE                               __size_of___lltoft 005C  
                                 __pcstackBANK0 00B8                         __end_of_SPI1_Initialize 22A8  
              ??_EUSART1_SetFramingErrorHandler 0003                 ?_EUSART1_SetFramingErrorHandler 0001  
                        _PIN_MANAGER_Initialize 2058                                     _MCP342x_ADC 009F  
                                      ?___aldiv 0007                                        ?___ftadd 0021  
                                      ?___ftdiv 0021                                        ?___ftneg 0001  
                                      ?___ftmul 0012                                        ?___ftsub 002D  
                                      ?___fttol 0030                                     __smallconst 0F00  
                                      _BAUDCON1 000F7E              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      _I2C_Init 2004                                       _eval_poly 1AA4  
                          _EUSART1_ErrorHandler 00B1                            __CFG_RTCOSC$T1OSCREF 000000  
                                      _I2C_read 2272                                        _I2C_stop 22DA  
                       _EUSART1_SetErrorHandler 22C6                                  __size_of_floor 00DE  
                                __size_of_ldexp 00C6                                  __size_of_frexp 0090  
                               ___aldiv@divisor 000B                                 ___aldiv@counter 000F  
                                ___wmul@product 0005         EUSART1_SetErrorHandler@interruptHandler 0001  
                                      _LATCbits 000F8B                                        _LATEbits 000F8D  
                                      _PIE3bits 000FA3                                        _PIR1bits 000F9E  
                                      _PIR3bits 000FA4                                __CFG_WDTPS$32768 000000  
                                      _SSP1CON1 000FC6                                        _SSP1STAT 000FC7  
                             ___wmul@multiplier 0001                                __CFG_SOSCSEL$DIG 000000  
                       __size_of_interrupt_Init 000A                                      ?_eval_poly 002D  
                             __CFG_CFGPLLEN$OFF 000000                                ?_SPI1_Initialize 0001  
                                   _INTCON2bits 000FF1                                       copy_data0 20B0  
                                     frexp@eptr 0004                                        __Hrparam 0000  
                                      __Lrparam 0000                                   I2C_Write@data 0001  
                       ??_OSCILLATOR_Initialize 0001                                __size_of___aldiv 00CC  
                              __size_of___ftadd 01AC                                __size_of___ftdiv 00E6  
                              __size_of___ftneg 0024                                        ___altoft 1ED6  
                              __size_of___ftmul 00F4                                __size_of___ftsub 0040  
                              __size_of___fttol 00F4                     __size_of_EUSART1_Initialize 0040  
                                      ___awtoft 215E                                        ___ftpack 1D08  
                                      ___lltoft 1F4E                       ??_EUSART1_SetErrorHandler 0003  
                   _EUSART1_DefaultErrorHandler 000000                            PCF8523_setDate@F7843 0090  
                                      _exp$2929 0054                                        __ptext10 22BC  
                                      __ptext11 22C6                                        __ptext20 1E46  
                                      __ptext12 12D2                                        __ptext21 1ED6  
                                      __ptext13 145E                                        __ptext30 1F4E  
                                      __ptext22 1AA4                                        __ptext14 15DA  
                                      __ptext31 1D08                                        __ptext23 21F6  
                                      __ptext15 0F3E                                        __ptext32 2272  
                                      __ptext24 17EC                                        __ptext16 1C42  
                                      __ptext33 228A                                        __ptext25 211E  
                                      __ptext17 19C6                                        __ptext34 22D0  
                                      __ptext26 1126                                        __ptext18 1DB6  
                                      __ptext35 2240                                        __ptext27 221C  
                                      __ptext19 16F8                                        __ptext36 22DA  
                                      __ptext28 18E0                                        __ptext29 215E  
                         __end_of_I2C_buffClear 229A                                    _SSP1CON1bits 000FC6  
                           MCP342x_read@channel 00C3                                    _SSP2CON1bits 000F72  
                                  _SSP2CON2bits 000F71                                        _pow$2927 00B8  
                                      _pow$2928 00BB                                   __size_of_main 005A  
EUSART1_SetOverrunErrorHandler@interruptHandler 0001                                   ?_MCP342x_read 00C3  
                                  _SSP1STATbits 000FC7                     _EUSART1_FramingErrorHandler 00B5  
                                  _SSP2STATbits 000F73                                        exp@coeff 0F01  
                                      log@coeff 0F1F                                      _INTCONbits 000FF2  
                                   ??_eval_poly 0034                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 22BC         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 22B2                                      _RCSTA1bits 000FAC  
                                ??_MCP342x_read 00C5  EUSART1_SetFramingErrorHandler@interruptHandler 0001  
                            _eusart1RxLastError 00B7                                  _interrupt_Init 22A8  
                                  ___aldiv@sign 0010                  __end_of_PIN_MANAGER_Initialize 209C  
                          PCF8523_setTime@F7836 0080  
