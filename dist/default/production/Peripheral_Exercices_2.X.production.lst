

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr 08 21:06:16 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46J13
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42  0000                     
    43                           ; Version 1.45
    44                           ; Generated 16/11/2017 GMT
    45                           ; 
    46                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18LF46J13 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    79  0000                     
    80 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    81  0000                     
    82 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    83  0000                     
    84                           	psect	idataCOMRAM
    85  0015EC                     __pidataCOMRAM:
    86                           	opt stack 0
    87                           
    88                           ;initializer for PCF8523_setTime@F7792
    89  0015EC  0003               	dw	3
    90  0015EE  0004               	dw	4
    91  0015F0  0005               	dw	5
    92  0015F2  00                 	db	0
    93  0015F3  00                 	db	0
    94                           
    95                           ;initializer for PCF8523_setDate@F7799
    96  0015F4  06                 	db	6
    97  0015F5  07                 	db	7
    98  0015F6  08                 	db	8
    99  0015F7  09                 	db	9
   100  0015F8  00                 	db	0
   101                           
   102                           	psect	smallconst
   103  000F00                     __psmallconst:
   104                           	opt stack 0
   105  000F00  00                 	db	0
   106  000F01  00                 	db	0
   107  000F02  80                 	db	128
   108  000F03  3F                 	db	63
   109  000F04  72                 	db	114
   110  000F05  31                 	db	49
   111  000F06  3F                 	db	63
   112  000F07  FE                 	db	254
   113  000F08  75                 	db	117
   114  000F09  3E                 	db	62
   115  000F0A  58                 	db	88
   116  000F0B  63                 	db	99
   117  000F0C  3D                 	db	61
   118  000F0D  95                 	db	149
   119  000F0E  1D                 	db	29
   120  000F0F  3C                 	db	60
   121  000F10  C5                 	db	197
   122  000F11  AE                 	db	174
   123  000F12  3A                 	db	58
   124  000F13  79                 	db	121
   125  000F14  21                 	db	33
   126  000F15  39                 	db	57
   127  000F16  94                 	db	148
   128  000F17  80                 	db	128
   129  000F18  37                 	db	55
   130  000F19  93                 	db	147
   131  000F1A  A7                 	db	167
   132  000F1B  35                 	db	53
   133  000F1C  56                 	db	86
   134  000F1D  15                 	db	21
   135  000F1E  34                 	db	52
   136  000F1F                     __end_ofexp@coeff:
   137                           	opt stack 0
   138  000F1F  00                 	db	0
   139  000F20  00                 	db	0
   140  000F21  00                 	db	0
   141  000F22  00                 	db	0
   142  000F23  80                 	db	128
   143  000F24  3F                 	db	63
   144  000F25  F0                 	db	240
   145  000F26  FF                 	db	255
   146  000F27  BE                 	db	190
   147  000F28  E2                 	db	226
   148  000F29  A9                 	db	169
   149  000F2A  3E                 	db	62
   150  000F2B  83                 	db	131
   151  000F2C  76                 	db	118
   152  000F2D  BE                 	db	190
   153  000F2E  AE                 	db	174
   154  000F2F  2B                 	db	43
   155  000F30  3E                 	db	62
   156  000F31  3C                 	db	60
   157  000F32  C3                 	db	195
   158  000F33  BD                 	db	189
   159  000F34  D2                 	db	210
   160  000F35  13                 	db	19
   161  000F36  3D                 	db	61
   162  000F37  78                 	db	120
   163  000F38  D3                 	db	211
   164  000F39  BB                 	db	187
   165  000F3A                     __end_oflog@coeff:
   166                           	opt stack 0
   167  0000                     _ODCON3	set	3904
   168  0000                     _ODCON2	set	3905
   169  0000                     _ODCON1	set	3906
   170  0000                     _ANCON1	set	3913
   171  0000                     _ANCON0	set	3912
   172  0000                     _REFOCON	set	3901
   173  0000                     _SSP2STATbits	set	3955
   174  0000                     _SSP2BUF	set	3957
   175  0000                     _SSP2ADD	set	3956
   176  0000                     _SSP2CON2bits	set	3953
   177  0000                     _SSP2CON1bits	set	3954
   178  0000                     _TRISDbits	set	3989
   179  0000                     _PIR3bits	set	4004
   180  0000                     _PIE3bits	set	4003
   181  0000                     _LATCbits	set	3979
   182  0000                     _LATBbits	set	3978
   183  0000                     _PORTBbits	set	3969
   184  0000                     _INTCONbits	set	4082
   185  0000                     _TRISEbits	set	3990
   186  0000                     _INTCON2bits	set	4081
   187  0000                     _TRISD	set	3989
   188  0000                     _TRISC	set	3988
   189  0000                     _TRISB	set	3987
   190  0000                     _TRISA	set	3986
   191  0000                     _TRISE	set	3990
   192  0000                     _LATC	set	3979
   193  0000                     _LATB	set	3978
   194  0000                     _LATA	set	3977
   195  0000                     _LATD	set	3980
   196  0000                     _LATE	set	3981
   197  0000                     _OSCCON2	set	3975
   198  0000                     _OSCTUNE	set	3995
   199  0000                     _OSCCON	set	4051
   200  0000                     _TXREG1	set	4014
   201  0000                     _RCREG1	set	4015
   202  0000                     _RCSTA1bits	set	4012
   203  0000                     _TXSTA1bits	set	4013
   204  0000                     _PIR1bits	set	3998
   205  0000                     _SPBRGH1	set	3967
   206  0000                     _SPBRG1	set	4016
   207  0000                     _TXSTA1	set	4013
   208  0000                     _RCSTA1	set	4012
   209  0000                     _BAUDCON1	set	3966
   210  0000                     _SSP1STATbits	set	4039
   211  0000                     _SSP1BUF	set	4041
   212  0000                     _SSP1CON1bits	set	4038
   213  0000                     _SSP1ADD	set	4040
   214  0000                     _SSP1CON1	set	4038
   215  0000                     _SSP1STAT	set	4039
   216  000F3A  0D                 	db	13
   217  000F3B  00                 	db	0
   218  000F3C  30                 	db	48	;'0'
   219  000F3D  00                 	db	0
   220  000F3E  20                 	db	32
   221  000F3F  00                 	db	0
   222                           
   223                           ; #config settings
   224  000F40  00                 	db	0	; dummy byte at the end
   225  0000                     
   226                           	psect	cinit
   227  0013D2                     __pcinit:
   228                           	opt stack 0
   229  0013D2                     start_initialization:
   230                           	opt stack 0
   231  0013D2                     __initialization:
   232                           	opt stack 0
   233                           
   234                           ; Initialize objects allocated to COMRAM (13 bytes)
   235                           ; load TBLPTR registers with __pidataCOMRAM
   236  0013D2  0EEC               	movlw	low __pidataCOMRAM
   237  0013D4  6EF6               	movwf	tblptrl,c
   238  0013D6  0E15               	movlw	high __pidataCOMRAM
   239  0013D8  6EF7               	movwf	tblptrh,c
   240  0013DA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   241  0013DC  6EF8               	movwf	tblptru,c
   242  0013DE  EE00  F02E         	lfsr	0,__pdataCOMRAM
   243  0013E2  EE10 F00D          	lfsr	1,13
   244  0013E6                     copy_data0:
   245  0013E6  0009               	tblrd		*+
   246  0013E8  CFF5 FFEE          	movff	tablat,postinc0
   247  0013EC  50E5               	movf	postdec1,w,c
   248  0013EE  50E1               	movf	fsr1l,w,c
   249  0013F0  E1FA               	bnz	copy_data0
   250                           
   251                           ; Clear objects allocated to BANK1 (256 bytes)
   252  0013F2  EE01  F000         	lfsr	0,__pbssBANK1
   253  0013F6  EE11 F000          	lfsr	1,256
   254  0013FA                     clear_0:
   255  0013FA  6AEE               	clrf	postinc0,c
   256  0013FC  50E5               	movf	postdec1,w,c
   257  0013FE  50E1               	movf	fsr1l,w,c
   258  001400  E1FC               	bnz	clear_0
   259  001402  50E2               	movf	fsr1h,w,c
   260  001404  E1FA               	bnz	clear_0
   261                           
   262                           ; Clear objects allocated to COMRAM (21 bytes)
   263  001406  EE00  F019         	lfsr	0,__pbssCOMRAM
   264  00140A  0E15               	movlw	21
   265  00140C                     clear_1:
   266  00140C  6AEE               	clrf	postinc0,c
   267  00140E  06E8               	decf	wreg,f,c
   268  001410  E1FD               	bnz	clear_1
   269  001412                     end_of_initialization:
   270                           	opt stack 0
   271  001412                     __end_of__initialization:
   272                           	opt stack 0
   273  001412  0E00               	movlw	low (__Lmediumconst shr (0+16))
   274  001414  6EF8               	movwf	tblptru,c
   275  001416  0100               	movlb	0
   276  001418  EFA7  F008         	goto	_main	;jump to C main() function
   277                           tblptru	equ	0xFF8
   278                           tblptrh	equ	0xFF7
   279                           tblptrl	equ	0xFF6
   280                           tablat	equ	0xFF5
   281                           postinc0	equ	0xFEE
   282                           wreg	equ	0xFE8
   283                           postdec1	equ	0xFE5
   284                           fsr1h	equ	0xFE2
   285                           fsr1l	equ	0xFE1
   286                           
   287                           	psect	bssCOMRAM
   288  000019                     __pbssCOMRAM:
   289                           	opt stack 0
   290  000019                     _sData:
   291                           	opt stack 0
   292  000019                     	ds	10
   293  000023                     _errno:
   294                           	opt stack 0
   295  000023                     	ds	2
   296  000025                     _ADC:
   297                           	opt stack 0
   298  000025                     	ds	2
   299  000027                     _EUSART1_ErrorHandler:
   300                           	opt stack 0
   301  000027                     	ds	2
   302  000029                     _EUSART1_OverrunErrorHandler:
   303                           	opt stack 0
   304  000029                     	ds	2
   305  00002B                     _EUSART1_FramingErrorHandler:
   306                           	opt stack 0
   307  00002B                     	ds	2
   308  00002D                     _eusart1RxLastError:
   309                           	opt stack 0
   310  00002D                     	ds	1
   311                           tblptru	equ	0xFF8
   312                           tblptrh	equ	0xFF7
   313                           tblptrl	equ	0xFF6
   314                           tablat	equ	0xFF5
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           postdec1	equ	0xFE5
   318                           fsr1h	equ	0xFE2
   319                           fsr1l	equ	0xFE1
   320                           
   321                           	psect	dataCOMRAM
   322  00002E                     __pdataCOMRAM:
   323                           	opt stack 0
   324  00002E                     PCF8523_setTime@F7792:
   325                           	opt stack 0
   326  00002E                     	ds	8
   327  000036                     PCF8523_setDate@F7799:
   328                           	opt stack 0
   329  000036                     	ds	5
   330                           tblptru	equ	0xFF8
   331                           tblptrh	equ	0xFF7
   332                           tblptrl	equ	0xFF6
   333                           tablat	equ	0xFF5
   334                           postinc0	equ	0xFEE
   335                           wreg	equ	0xFE8
   336                           postdec1	equ	0xFE5
   337                           fsr1h	equ	0xFE2
   338                           fsr1l	equ	0xFE1
   339                           
   340                           	psect	bssBANK1
   341  000100                     __pbssBANK1:
   342                           	opt stack 0
   343  000100                     _TxData:
   344                           	opt stack 0
   345  000100                     	ds	256
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           postdec1	equ	0xFE5
   353                           fsr1h	equ	0xFE2
   354                           fsr1l	equ	0xFE1
   355                           
   356                           	psect	cstackCOMRAM
   357  000001                     __pcstackCOMRAM:
   358                           	opt stack 0
   359  000001                     ??_OSCILLATOR_Initialize:
   360  000001                     ?___wmul:
   361                           	opt stack 0
   362  000001                     ?___awdiv:
   363                           	opt stack 0
   364  000001                     ?___awmod:
   365                           	opt stack 0
   366  000001                     EUSART1_Write@txData:
   367                           	opt stack 0
   368  000001                     I2C_Write@data:
   369                           	opt stack 0
   370  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
   371                           	opt stack 0
   372  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   373                           	opt stack 0
   374  000001                     EUSART1_SetErrorHandler@interruptHandler:
   375                           	opt stack 0
   376  000001                     I2C_read@ACK_NACK:
   377                           	opt stack 0
   378  000001                     ___wmul@multiplier:
   379                           	opt stack 0
   380  000001                     ___awdiv@dividend:
   381                           	opt stack 0
   382  000001                     ___awmod@dividend:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x0
   386  000001                     	ds	1
   387  000002                     
   388                           ; 1 bytes @ 0x1
   389  000002                     	ds	1
   390  000003                     MCP794x_readEEPROM@Register:
   391                           	opt stack 0
   392  000003                     ___wmul@multiplicand:
   393                           	opt stack 0
   394  000003                     ___awdiv@divisor:
   395                           	opt stack 0
   396  000003                     ___awmod@divisor:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x2
   400  000003                     	ds	2
   401  000005                     ___awdiv@counter:
   402                           	opt stack 0
   403  000005                     ___awmod@counter:
   404                           	opt stack 0
   405  000005                     ___wmul@product:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x4
   409  000005                     	ds	1
   410  000006                     ___awdiv@sign:
   411                           	opt stack 0
   412  000006                     ___awmod@sign:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x5
   416  000006                     	ds	1
   417  000007                     ?___aldiv:
   418                           	opt stack 0
   419  000007                     ___awdiv@quotient:
   420                           	opt stack 0
   421  000007                     ___aldiv@dividend:
   422                           	opt stack 0
   423                           
   424                           ; 4 bytes @ 0x6
   425  000007                     	ds	2
   426  000009                     decimalToBCD@DecValue:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x8
   430  000009                     	ds	2
   431  00000B                     ??_decimalToBCD:
   432  00000B                     ___aldiv@divisor:
   433                           	opt stack 0
   434                           
   435                           ; 4 bytes @ 0xA
   436  00000B                     	ds	2
   437  00000D                     MCP794x_setTime@minute:
   438                           	opt stack 0
   439  00000D                     MCP794x_setDate@weekDay:
   440                           	opt stack 0
   441  00000D                     MCP794x_writeRtcc@value:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0xC
   445  00000D                     	ds	1
   446  00000E                     MCP794x_setTime@second:
   447                           	opt stack 0
   448  00000E                     MCP794x_setDate@month:
   449                           	opt stack 0
   450  00000E                     MCP794x_writeRtcc@Register:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0xD
   454  00000E                     	ds	1
   455  00000F                     ??_MCP794x_setTime:
   456  00000F                     MCP794x_setDate@year:
   457                           	opt stack 0
   458  00000F                     MCP794x_setAlarm@time:
   459                           	opt stack 0
   460  00000F                     ___aldiv@counter:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0xE
   464  00000F                     	ds	1
   465  000010                     ??_MCP794x_setDate:
   466  000010                     ??_MCP794x_setAlarm:
   467  000010                     ___aldiv@sign:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0xF
   471  000010                     	ds	1
   472  000011                     MCP794x_setTime@hour:
   473                           	opt stack 0
   474  000011                     ___aldiv@quotient:
   475                           	opt stack 0
   476                           
   477                           ; 4 bytes @ 0x10
   478  000011                     	ds	1
   479  000012                     MCP794x_setDate@date:
   480                           	opt stack 0
   481  000012                     MCP794x_setAlarm@alarmMask:
   482                           	opt stack 0
   483                           
   484                           ; 1 bytes @ 0x11
   485  000012                     	ds	3
   486  000015                     I2C_Init@F_clock:
   487                           	opt stack 0
   488                           
   489                           ; 1 bytes @ 0x14
   490  000015                     	ds	1
   491  000016                     ??_main:
   492                           
   493                           ; 1 bytes @ 0x15
   494  000016                     	ds	1
   495  000017                     main@index:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x16
   499  000017                     	ds	2
   500                           tblptru	equ	0xFF8
   501                           tblptrh	equ	0xFF7
   502                           tblptrl	equ	0xFF6
   503                           tablat	equ	0xFF5
   504                           postinc0	equ	0xFEE
   505                           wreg	equ	0xFE8
   506                           postdec1	equ	0xFE5
   507                           fsr1h	equ	0xFE2
   508                           fsr1l	equ	0xFE1
   509                           
   510 ;;
   511 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   512 ;;
   513 ;; *************** function _main *****************
   514 ;; Defined at:
   515 ;;		line 5 in file "main.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  index           2   22[COMRAM] int 
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   530 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   532 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   533 ;;Total ram usage:        3 bytes
   534 ;; Hardware stack levels required when called:    4
   535 ;; This function calls:
   536 ;;		_EUSART1_Write
   537 ;;		_I2C_buffClear
   538 ;;		_MCP794x_readEEPROM
   539 ;;		_MCP794x_setAlarm
   540 ;;		_MCP794x_setDate
   541 ;;		_MCP794x_setTime
   542 ;;		_SYSTEM_Initialize
   543 ;;		_interrupt_Init
   544 ;; This function is called by:
   545 ;;		Startup code after reset
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text0
   550  00114E                     __ptext0:
   551                           	opt stack 0
   552  00114E                     _main:
   553                           	opt stack 27
   554                           
   555                           ;main.c: 7: interrupt_Init();
   556                           
   557                           ;incstack = 0
   558  00114E  ECFD  F00A         	call	_interrupt_Init	;wreg free
   559                           
   560                           ;main.c: 8: SYSTEM_Initialize();
   561  001152  ECC7  F00A         	call	_SYSTEM_Initialize	;wreg free
   562                           
   563                           ;main.c: 9: I2C_buffClear();
   564  001156  ECDF  F00A         	call	_I2C_buffClear	;wreg free
   565                           
   566                           ;main.c: 10: _delay((unsigned long)((10)*(16000000/4000.0)));
   567  00115A  0E34               	movlw	52
   568  00115C  6E16               	movwf	??_main& (0+255),c
   569  00115E  0EF2               	movlw	242
   570  001160                     u1327:
   571  001160  2EE8               	decfsz	wreg,f,c
   572  001162  D7FE               	bra	u1327
   573  001164  2E16               	decfsz	??_main& (0+255),f,c
   574  001166  D7FC               	bra	u1327
   575                           
   576                           ;main.c: 12: MCP794x_setTime(22,59,7);
   577  001168  0E3B               	movlw	59
   578  00116A  6E0D               	movwf	MCP794x_setTime@minute,c
   579  00116C  0E07               	movlw	7
   580  00116E  6E0E               	movwf	MCP794x_setTime@second,c
   581  001170  0E16               	movlw	22
   582  001172  ECBF  F009         	call	_MCP794x_setTime
   583                           
   584                           ;main.c: 13: MCP794x_setDate(25,Fri,Dec,20);
   585  001176  0E05               	movlw	5
   586  001178  6E0D               	movwf	MCP794x_setDate@weekDay,c
   587  00117A  0E0C               	movlw	12
   588  00117C  6E0E               	movwf	MCP794x_setDate@month,c
   589  00117E  0E14               	movlw	20
   590  001180  6E0F               	movwf	MCP794x_setDate@year,c
   591  001182  0E19               	movlw	25
   592  001184  EC68  F009         	call	_MCP794x_setDate
   593                           
   594                           ;main.c: 14: MCP794x_setAlarm(hour, 23);
   595  001188  0E17               	movlw	23
   596  00118A  6E0F               	movwf	MCP794x_setAlarm@time,c
   597  00118C  0E20               	movlw	32
   598  00118E  ECA1  F007         	call	_MCP794x_setAlarm
   599                           
   600                           ;main.c: 17: for(int index = 0; index <128; index++){
   601  001192  0E00               	movlw	0
   602  001194  6E18               	movwf	main@index+1,c
   603  001196  0E00               	movlw	0
   604  001198  6E17               	movwf	main@index,c
   605  00119A                     l2563:
   606  00119A  BE18               	btfsc	main@index+1,7,c
   607  00119C  D006               	goto	l256
   608  00119E  5018               	movf	main@index+1,w,c
   609  0011A0  E10C               	bnz	l258
   610  0011A2  0E80               	movlw	128
   611  0011A4  5C17               	subwf	main@index,w,c
   612  0011A6  B0D8               	btfsc	status,0,c
   613  0011A8  D008               	goto	u1150
   614  0011AA                     l256:
   615                           
   616                           ;main.c: 20: EUSART1_Write(MCP794x_readEEPROM(index));
   617  0011AA  5017               	movf	main@index,w,c
   618  0011AC  EC6B  F00A         	call	_MCP794x_readEEPROM
   619  0011B0  ECE7  F00A         	call	_EUSART1_Write
   620  0011B4  4A17               	infsnz	main@index,f,c
   621  0011B6  2A18               	incf	main@index+1,f,c
   622  0011B8  D7F0               	goto	l2563
   623  0011BA                     u1150:
   624  0011BA                     l258:
   625                           
   626                           ;main.c: 23: if (!PORTBbits.RB0) {
   627  0011BA  B081               	btfsc	3969,0,c	;volatile
   628  0011BC  D7FE               	goto	u1150
   629                           
   630                           ;main.c: 24: do { LATBbits.LATB5 = ~LATBbits.LATB5; } while(0);
   631  0011BE  AA8A               	btfss	3978,5,c	;volatile
   632  0011C0  D002               	goto	u1170
   633  0011C2  0E01               	movlw	1
   634  0011C4  D001               	goto	u1176
   635  0011C6                     u1170:
   636  0011C6  0E00               	movlw	0
   637  0011C8                     u1176:
   638  0011C8  0AFF               	xorlw	255
   639  0011CA  6E16               	movwf	??_main& (0+255),c
   640  0011CC  3A16               	swapf	??_main,f,c
   641  0011CE  4616               	rlncf	??_main,f,c
   642  0011D0  508A               	movf	3978,w,c	;volatile
   643  0011D2  1816               	xorwf	??_main,w,c
   644  0011D4  0BDF               	andlw	-33
   645  0011D6  1816               	xorwf	??_main,w,c
   646  0011D8  6E8A               	movwf	3978,c	;volatile
   647  0011DA  D7EF               	goto	u1150
   648  0011DC                     __end_of_main:
   649                           	opt stack 0
   650                           tblptru	equ	0xFF8
   651                           tblptrh	equ	0xFF7
   652                           tblptrl	equ	0xFF6
   653                           tablat	equ	0xFF5
   654                           postinc0	equ	0xFEE
   655                           wreg	equ	0xFE8
   656                           postdec1	equ	0xFE5
   657                           fsr1h	equ	0xFE2
   658                           fsr1l	equ	0xFE1
   659                           status	equ	0xFD8
   660                           
   661 ;; *************** function _interrupt_Init *****************
   662 ;; Defined at:
   663 ;;		line 15 in file "Interrupt.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;		None
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      void 
   670 ;; Registers used:
   671 ;;		None
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   681 ;;Total ram usage:        0 bytes
   682 ;; Hardware stack levels used:    1
   683 ;; This function calls:
   684 ;;		Nothing
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           	psect	text1
   691  0015FA                     __ptext1:
   692                           	opt stack 0
   693  0015FA                     _interrupt_Init:
   694                           	opt stack 30
   695                           
   696                           ;Interrupt.c: 16: INTCONbits.GIE = 1;
   697                           
   698                           ;incstack = 0
   699  0015FA  8EF2               	bsf	intcon,7,c	;volatile
   700                           
   701                           ;Interrupt.c: 17: INTCONbits.PEIE = 1;
   702  0015FC  8CF2               	bsf	intcon,6,c	;volatile
   703                           
   704                           ;Interrupt.c: 18: PIE3bits.SSP2IE = 1;
   705  0015FE  8EA3               	bsf	4003,7,c	;volatile
   706                           
   707                           ;Interrupt.c: 19: PIR3bits.SSP2IF = 0;
   708  001600  9EA4               	bcf	4004,7,c	;volatile
   709  001602  0012               	return		;funcret
   710  001604                     __end_of_interrupt_Init:
   711                           	opt stack 0
   712                           tblptru	equ	0xFF8
   713                           tblptrh	equ	0xFF7
   714                           tblptrl	equ	0xFF6
   715                           tablat	equ	0xFF5
   716                           intcon	equ	0xFF2
   717                           postinc0	equ	0xFEE
   718                           wreg	equ	0xFE8
   719                           postdec1	equ	0xFE5
   720                           fsr1h	equ	0xFE2
   721                           fsr1l	equ	0xFE1
   722                           status	equ	0xFD8
   723                           
   724 ;; *************** function _SYSTEM_Initialize *****************
   725 ;; Defined at:
   726 ;;		line 50 in file "mcc_generated_files/mcc.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;		None
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   744 ;;Total ram usage:        0 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; Hardware stack levels required when called:    2
   747 ;; This function calls:
   748 ;;		_EUSART1_Initialize
   749 ;;		_I2C_Init
   750 ;;		_OSCILLATOR_Initialize
   751 ;;		_PIN_MANAGER_Initialize
   752 ;;		_SPI1_Initialize
   753 ;; This function is called by:
   754 ;;		_main
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text2
   759  00158E                     __ptext2:
   760                           	opt stack 0
   761  00158E                     _SYSTEM_Initialize:
   762                           	opt stack 28
   763                           
   764                           ;mcc.c: 52: PIN_MANAGER_Initialize();
   765                           
   766                           ;incstack = 0
   767  00158E  EC0E  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
   768                           
   769                           ;mcc.c: 53: OSCILLATOR_Initialize();
   770  001592  EC83  F00A         	call	_OSCILLATOR_Initialize	;wreg free
   771                           
   772                           ;mcc.c: 54: SPI1_Initialize();
   773  001596  ECEF  F00A         	call	_SPI1_Initialize	;wreg free
   774                           
   775                           ;mcc.c: 55: EUSART1_Initialize();
   776  00159A  EC30  F00A         	call	_EUSART1_Initialize	;wreg free
   777                           
   778                           ;mcc.c: 56: I2C_Init(100);
   779  00159E  0E64               	movlw	100
   780  0015A0  EC95  F009         	call	_I2C_Init
   781  0015A4  0012               	return		;funcret
   782  0015A6                     __end_of_SYSTEM_Initialize:
   783                           	opt stack 0
   784                           tblptru	equ	0xFF8
   785                           tblptrh	equ	0xFF7
   786                           tblptrl	equ	0xFF6
   787                           tablat	equ	0xFF5
   788                           intcon	equ	0xFF2
   789                           postinc0	equ	0xFEE
   790                           wreg	equ	0xFE8
   791                           postdec1	equ	0xFE5
   792                           fsr1h	equ	0xFE2
   793                           fsr1l	equ	0xFE1
   794                           status	equ	0xFD8
   795                           
   796 ;; *************** function _SPI1_Initialize *****************
   797 ;; Defined at:
   798 ;;		line 65 in file "mcc_generated_files/spi1.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;		None
   801 ;; Auto vars:     Size  Location     Type
   802 ;;		None
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg, status,2
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   816 ;;Total ram usage:        0 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_SYSTEM_Initialize
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           	psect	text3
   826  0015DE                     __ptext3:
   827                           	opt stack 0
   828  0015DE                     _SPI1_Initialize:
   829                           	opt stack 29
   830                           
   831                           ;spi1.c: 70: SSP1STAT = 0x80;
   832                           
   833                           ;incstack = 0
   834  0015DE  0E80               	movlw	128
   835  0015E0  6EC7               	movwf	4039,c	;volatile
   836                           
   837                           ;spi1.c: 73: SSP1CON1 = 0x20;
   838  0015E2  0E20               	movlw	32
   839  0015E4  6EC6               	movwf	4038,c	;volatile
   840                           
   841                           ;spi1.c: 76: SSP1ADD = 0x00;
   842  0015E6  0E00               	movlw	0
   843  0015E8  6EC8               	movwf	4040,c	;volatile
   844  0015EA  0012               	return		;funcret
   845  0015EC                     __end_of_SPI1_Initialize:
   846                           	opt stack 0
   847                           tblptru	equ	0xFF8
   848                           tblptrh	equ	0xFF7
   849                           tblptrl	equ	0xFF6
   850                           tablat	equ	0xFF5
   851                           intcon	equ	0xFF2
   852                           postinc0	equ	0xFEE
   853                           wreg	equ	0xFE8
   854                           postdec1	equ	0xFE5
   855                           fsr1h	equ	0xFE2
   856                           fsr1l	equ	0xFE1
   857                           status	equ	0xFD8
   858                           
   859 ;; *************** function _PIN_MANAGER_Initialize *****************
   860 ;; Defined at:
   861 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;		None
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, status,2
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   879 ;;Total ram usage:        0 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; This function calls:
   882 ;;		Nothing
   883 ;; This function is called by:
   884 ;;		_SYSTEM_Initialize
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           	psect	text4
   889  00141C                     __ptext4:
   890                           	opt stack 0
   891  00141C                     _PIN_MANAGER_Initialize:
   892                           	opt stack 29
   893                           
   894                           ;pin_manager.c: 57: LATE = 0x00;
   895                           
   896                           ;incstack = 0
   897  00141C  0E00               	movlw	0
   898  00141E  6E8D               	movwf	3981,c	;volatile
   899                           
   900                           ;pin_manager.c: 58: LATD = 0x00;
   901  001420  0E00               	movlw	0
   902  001422  6E8C               	movwf	3980,c	;volatile
   903                           
   904                           ;pin_manager.c: 59: LATA = 0x00;
   905  001424  0E00               	movlw	0
   906  001426  6E89               	movwf	3977,c	;volatile
   907                           
   908                           ;pin_manager.c: 60: LATB = 0x00;
   909  001428  0E00               	movlw	0
   910  00142A  6E8A               	movwf	3978,c	;volatile
   911                           
   912                           ;pin_manager.c: 61: LATC = 0x01;
   913  00142C  0E01               	movlw	1
   914  00142E  6E8B               	movwf	3979,c	;volatile
   915                           
   916                           ;pin_manager.c: 66: TRISE = 0xC7;
   917  001430  0EC7               	movlw	199
   918  001432  6E96               	movwf	3990,c	;volatile
   919                           
   920                           ;pin_manager.c: 67: TRISA = 0xEF;
   921  001434  0EEF               	movlw	239
   922  001436  6E92               	movwf	3986,c	;volatile
   923                           
   924                           ;pin_manager.c: 68: TRISB = 0xDF;
   925  001438  0EDF               	movlw	223
   926  00143A  6E93               	movwf	3987,c	;volatile
   927                           
   928                           ;pin_manager.c: 69: TRISC = 0x96;
   929  00143C  0E96               	movlw	150
   930  00143E  6E94               	movwf	3988,c	;volatile
   931                           
   932                           ;pin_manager.c: 70: TRISD = 0xFF;
   933  001440  6895               	setf	3989,c	;volatile
   934                           
   935                           ;pin_manager.c: 75: ANCON0 = 0x00;
   936  001442  0E00               	movlw	0
   937  001444  010F               	movlb	15	; () banked
   938  001446  6F48               	movwf	72,b	;volatile
   939                           
   940                           ;pin_manager.c: 76: ANCON1 = 0x10;
   941  001448  0E10               	movlw	16
   942  00144A  6F49               	movwf	73,b	;volatile
   943                           
   944                           ; BSR set to: 15
   945                           ;pin_manager.c: 81: INTCON2bits.nRBPU = 1;
   946  00144C  8EF1               	bsf	intcon2,7,c	;volatile
   947                           
   948                           ; BSR set to: 15
   949                           ;pin_manager.c: 82: TRISEbits.RDPU = 1;
   950  00144E  8E96               	bsf	3990,7,c	;volatile
   951                           
   952                           ; BSR set to: 15
   953                           ;pin_manager.c: 83: TRISEbits.REPU = 1;
   954  001450  8C96               	bsf	3990,6,c	;volatile
   955                           
   956                           ;pin_manager.c: 88: ODCON1 = 0x00;
   957  001452  0E00               	movlw	0
   958  001454  6F42               	movwf	66,b	;volatile
   959                           
   960                           ;pin_manager.c: 89: ODCON2 = 0x00;
   961  001456  0E00               	movlw	0
   962  001458  6F41               	movwf	65,b	;volatile
   963                           
   964                           ;pin_manager.c: 90: ODCON3 = 0x00;
   965  00145A  0E00               	movlw	0
   966  00145C  6F40               	movwf	64,b	;volatile
   967                           
   968                           ; BSR set to: 15
   969  00145E  0012               	return		;funcret
   970  001460                     __end_of_PIN_MANAGER_Initialize:
   971                           	opt stack 0
   972                           tblptru	equ	0xFF8
   973                           tblptrh	equ	0xFF7
   974                           tblptrl	equ	0xFF6
   975                           tablat	equ	0xFF5
   976                           intcon	equ	0xFF2
   977                           intcon2	equ	0xFF1
   978                           postinc0	equ	0xFEE
   979                           wreg	equ	0xFE8
   980                           postdec1	equ	0xFE5
   981                           fsr1h	equ	0xFE2
   982                           fsr1l	equ	0xFE1
   983                           status	equ	0xFD8
   984                           
   985 ;; *************** function _OSCILLATOR_Initialize *****************
   986 ;; Defined at:
   987 ;;		line 59 in file "mcc_generated_files/mcc.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;		None
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg, status,2
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1003 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1004 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1005 ;;Total ram usage:        2 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_SYSTEM_Initialize
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text5
  1015  001506                     __ptext5:
  1016                           	opt stack 0
  1017  001506                     _OSCILLATOR_Initialize:
  1018                           	opt stack 29
  1019                           
  1020                           ;mcc.c: 62: OSCCON = 0x70;
  1021                           
  1022                           ; BSR set to: 15
  1023                           ;incstack = 0
  1024  001506  0E70               	movlw	112
  1025  001508  6ED3               	movwf	4051,c	;volatile
  1026                           
  1027                           ;mcc.c: 64: OSCTUNE = 0x00;
  1028  00150A  0E00               	movlw	0
  1029  00150C  6E9B               	movwf	3995,c	;volatile
  1030                           
  1031                           ;mcc.c: 66: REFOCON = 0x00;
  1032  00150E  0E00               	movlw	0
  1033  001510  010F               	movlb	15	; () banked
  1034  001512  6F3D               	movwf	61,b	;volatile
  1035                           
  1036                           ;mcc.c: 68: OSCCON2 = 0x14;
  1037  001514  0E14               	movlw	20
  1038  001516  6E87               	movwf	3975,c	;volatile
  1039                           
  1040                           ; BSR set to: 15
  1041                           ;mcc.c: 69: _delay((unsigned long)((500)*(16000000/4000.0)));
  1042  001518  0E0B               	movlw	11
  1043  00151A  6E02               	movwf	(??_OSCILLATOR_Initialize+1)& (0+255),c
  1044  00151C  0E26               	movlw	38
  1045  00151E  6E01               	movwf	??_OSCILLATOR_Initialize& (0+255),c
  1046  001520  0E5E               	movlw	94
  1047  001522                     u1337:
  1048  001522  2EE8               	decfsz	wreg,f,c
  1049  001524  D7FE               	bra	u1337
  1050  001526  2E01               	decfsz	??_OSCILLATOR_Initialize& (0+255),f,c
  1051  001528  D7FC               	bra	u1337
  1052  00152A  2E02               	decfsz	(??_OSCILLATOR_Initialize+1)& (0+255),f,c
  1053  00152C  D7FA               	bra	u1337
  1054  00152E  0012               	return		;funcret
  1055  001530                     __end_of_OSCILLATOR_Initialize:
  1056                           	opt stack 0
  1057                           tblptru	equ	0xFF8
  1058                           tblptrh	equ	0xFF7
  1059                           tblptrl	equ	0xFF6
  1060                           tablat	equ	0xFF5
  1061                           intcon	equ	0xFF2
  1062                           intcon2	equ	0xFF1
  1063                           postinc0	equ	0xFEE
  1064                           wreg	equ	0xFE8
  1065                           postdec1	equ	0xFE5
  1066                           fsr1h	equ	0xFE2
  1067                           fsr1l	equ	0xFE1
  1068                           status	equ	0xFD8
  1069                           
  1070 ;; *************** function _I2C_Init *****************
  1071 ;; Defined at:
  1072 ;;		line 20 in file "I2C.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;  F_clock         1    wreg     unsigned char 
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  F_clock         1   20[COMRAM] unsigned char 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1087 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1089 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1090 ;;Total ram usage:        1 bytes
  1091 ;; Hardware stack levels used:    1
  1092 ;; Hardware stack levels required when called:    1
  1093 ;; This function calls:
  1094 ;;		___aldiv
  1095 ;;		___wmul
  1096 ;; This function is called by:
  1097 ;;		_SYSTEM_Initialize
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text6
  1102  00132A                     __ptext6:
  1103                           	opt stack 0
  1104  00132A                     _I2C_Init:
  1105                           	opt stack 28
  1106                           
  1107                           ;incstack = 0
  1108                           ;I2C_Init@F_clock stored from wreg
  1109  00132A  6E15               	movwf	I2C_Init@F_clock,c
  1110                           
  1111                           ;I2C.c: 21: TRISDbits.TRISD0 = 1;
  1112  00132C  8095               	bsf	3989,0,c	;volatile
  1113                           
  1114                           ;I2C.c: 22: TRISDbits.TRISD1 = 1;
  1115  00132E  8295               	bsf	3989,1,c	;volatile
  1116                           
  1117                           ;I2C.c: 23: SSP2CON1bits.WCOL = 0;
  1118  001330  9E72               	bcf	3954,7,c	;volatile
  1119                           
  1120                           ;I2C.c: 24: SSP2CON1bits.SSPEN = 1;
  1121  001332  8A72               	bsf	3954,5,c	;volatile
  1122                           
  1123                           ;I2C.c: 25: SSP2CON1bits.SSPM = 0x08;
  1124  001334  5072               	movf	3954,w,c	;volatile
  1125  001336  0BF0               	andlw	-16
  1126  001338  0908               	iorlw	8
  1127  00133A  6E72               	movwf	3954,c	;volatile
  1128                           
  1129                           ;I2C.c: 26: SSP2CON2bits.ACKDT = 0;
  1130  00133C  9A71               	bcf	3953,5,c	;volatile
  1131                           
  1132                           ;I2C.c: 27: SSP2CON2bits.ACKEN = 1;
  1133  00133E  8871               	bsf	3953,4,c	;volatile
  1134                           
  1135                           ;I2C.c: 28: SSP2ADD = (16000000 / ((F_clock * 1000) * 4)) - 1;
  1136  001340  0E00               	movlw	0
  1137  001342  6E07               	movwf	___aldiv@dividend,c
  1138  001344  0E24               	movlw	36
  1139  001346  6E08               	movwf	___aldiv@dividend+1,c
  1140  001348  0EF4               	movlw	244
  1141  00134A  6E09               	movwf	___aldiv@dividend+2,c
  1142  00134C  0E00               	movlw	0
  1143  00134E  6E0A               	movwf	___aldiv@dividend+3,c
  1144  001350  C015  F001         	movff	I2C_Init@F_clock,___wmul@multiplier
  1145  001354  6A02               	clrf	___wmul@multiplier+1,c
  1146  001356  0E0F               	movlw	15
  1147  001358  6E04               	movwf	___wmul@multiplicand+1,c
  1148  00135A  0EA0               	movlw	160
  1149  00135C  6E03               	movwf	___wmul@multiplicand,c
  1150  00135E  EC98  F00A         	call	___wmul	;wreg free
  1151  001362  C001  F00B         	movff	?___wmul,___aldiv@divisor
  1152  001366  C002  F00C         	movff	?___wmul+1,___aldiv@divisor+1
  1153  00136A  0E00               	movlw	0
  1154  00136C  BE0C               	btfsc	___aldiv@divisor+1,7,c
  1155  00136E  0EFF               	movlw	-1
  1156  001370  6E0D               	movwf	___aldiv@divisor+2,c
  1157  001372  6E0E               	movwf	___aldiv@divisor+3,c
  1158  001374  EC41  F008         	call	___aldiv	;wreg free
  1159  001378  0407               	decf	?___aldiv,w,c
  1160  00137A  6E74               	movwf	3956,c	;volatile
  1161  00137C  0012               	return		;funcret
  1162  00137E                     __end_of_I2C_Init:
  1163                           	opt stack 0
  1164                           tblptru	equ	0xFF8
  1165                           tblptrh	equ	0xFF7
  1166                           tblptrl	equ	0xFF6
  1167                           tablat	equ	0xFF5
  1168                           intcon	equ	0xFF2
  1169                           intcon2	equ	0xFF1
  1170                           postinc0	equ	0xFEE
  1171                           wreg	equ	0xFE8
  1172                           postdec1	equ	0xFE5
  1173                           fsr1h	equ	0xFE2
  1174                           fsr1l	equ	0xFE1
  1175                           status	equ	0xFD8
  1176                           
  1177 ;; *************** function ___wmul *****************
  1178 ;; Defined at:
  1179 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  multiplier      2    0[COMRAM] unsigned int 
  1182 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;  product         2    4[COMRAM] unsigned int 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  2    0[COMRAM] unsigned int 
  1187 ;; Registers used:
  1188 ;;		wreg, status,2, status,0, prodl, prodh
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1194 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1195 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1197 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1198 ;;Total ram usage:        6 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; This function calls:
  1201 ;;		Nothing
  1202 ;; This function is called by:
  1203 ;;		_I2C_Init
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text7
  1208  001530                     __ptext7:
  1209                           	opt stack 0
  1210  001530                     ___wmul:
  1211                           	opt stack 28
  1212                           
  1213                           ;incstack = 0
  1214  001530  5001               	movf	___wmul@multiplier,w,c
  1215  001532  0203               	mulwf	___wmul@multiplicand,c
  1216  001534  CFF3 F005          	movff	prodl,___wmul@product
  1217  001538  CFF4 F006          	movff	prodh,___wmul@product+1
  1218  00153C  5001               	movf	___wmul@multiplier,w,c
  1219  00153E  0204               	mulwf	___wmul@multiplicand+1,c
  1220  001540  50F3               	movf	prodl,w,c
  1221  001542  2606               	addwf	___wmul@product+1,f,c
  1222  001544  5002               	movf	___wmul@multiplier+1,w,c
  1223  001546  0203               	mulwf	___wmul@multiplicand,c
  1224  001548  50F3               	movf	prodl,w,c
  1225  00154A  2606               	addwf	___wmul@product+1,f,c
  1226  00154C  C005  F001         	movff	___wmul@product,?___wmul
  1227  001550  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1228  001554  0012               	return	
  1229  001556                     __end_of___wmul:
  1230                           	opt stack 0
  1231                           tblptru	equ	0xFF8
  1232                           tblptrh	equ	0xFF7
  1233                           tblptrl	equ	0xFF6
  1234                           tablat	equ	0xFF5
  1235                           prodh	equ	0xFF4
  1236                           prodl	equ	0xFF3
  1237                           intcon	equ	0xFF2
  1238                           intcon2	equ	0xFF1
  1239                           postinc0	equ	0xFEE
  1240                           wreg	equ	0xFE8
  1241                           postdec1	equ	0xFE5
  1242                           fsr1h	equ	0xFE2
  1243                           fsr1l	equ	0xFE1
  1244                           status	equ	0xFD8
  1245                           
  1246 ;; *************** function ___aldiv *****************
  1247 ;; Defined at:
  1248 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  dividend        4    6[COMRAM] long 
  1251 ;;  divisor         4   10[COMRAM] long 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  quotient        4   16[COMRAM] long 
  1254 ;;  sign            1   15[COMRAM] unsigned char 
  1255 ;;  counter         1   14[COMRAM] unsigned char 
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  4    6[COMRAM] long 
  1258 ;; Registers used:
  1259 ;;		wreg, status,2, status,0
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1265 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1266 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1268 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1269 ;;Total ram usage:       14 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_I2C_Init
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text8
  1279  001082                     __ptext8:
  1280                           	opt stack 0
  1281  001082                     ___aldiv:
  1282                           	opt stack 28
  1283                           
  1284                           ;incstack = 0
  1285  001082  0E00               	movlw	0
  1286  001084  6E10               	movwf	___aldiv@sign,c
  1287  001086  AE0E               	btfss	___aldiv@divisor+3,7,c
  1288  001088  D00A               	goto	l748
  1289  00108A  1E0E               	comf	___aldiv@divisor+3,f,c
  1290  00108C  1E0D               	comf	___aldiv@divisor+2,f,c
  1291  00108E  1E0C               	comf	___aldiv@divisor+1,f,c
  1292  001090  6C0B               	negf	___aldiv@divisor,c
  1293  001092  0E00               	movlw	0
  1294  001094  220C               	addwfc	___aldiv@divisor+1,f,c
  1295  001096  220D               	addwfc	___aldiv@divisor+2,f,c
  1296  001098  220E               	addwfc	___aldiv@divisor+3,f,c
  1297  00109A  0E01               	movlw	1
  1298  00109C  6E10               	movwf	___aldiv@sign,c
  1299  00109E                     l748:
  1300  00109E  AE0A               	btfss	___aldiv@dividend+3,7,c
  1301  0010A0  D00A               	goto	l749
  1302  0010A2  1E0A               	comf	___aldiv@dividend+3,f,c
  1303  0010A4  1E09               	comf	___aldiv@dividend+2,f,c
  1304  0010A6  1E08               	comf	___aldiv@dividend+1,f,c
  1305  0010A8  6C07               	negf	___aldiv@dividend,c
  1306  0010AA  0E00               	movlw	0
  1307  0010AC  2208               	addwfc	___aldiv@dividend+1,f,c
  1308  0010AE  2209               	addwfc	___aldiv@dividend+2,f,c
  1309  0010B0  220A               	addwfc	___aldiv@dividend+3,f,c
  1310  0010B2  0E01               	movlw	1
  1311  0010B4  1A10               	xorwf	___aldiv@sign,f,c
  1312  0010B6                     l749:
  1313  0010B6  0E00               	movlw	0
  1314  0010B8  6E11               	movwf	___aldiv@quotient,c
  1315  0010BA  0E00               	movlw	0
  1316  0010BC  6E12               	movwf	___aldiv@quotient+1,c
  1317  0010BE  0E00               	movlw	0
  1318  0010C0  6E13               	movwf	___aldiv@quotient+2,c
  1319  0010C2  0E00               	movlw	0
  1320  0010C4  6E14               	movwf	___aldiv@quotient+3,c
  1321  0010C6  500B               	movf	___aldiv@divisor,w,c
  1322  0010C8  100C               	iorwf	___aldiv@divisor+1,w,c
  1323  0010CA  100D               	iorwf	___aldiv@divisor+2,w,c
  1324  0010CC  100E               	iorwf	___aldiv@divisor+3,w,c
  1325  0010CE  B4D8               	btfsc	status,2,c
  1326  0010D0  D02A               	goto	l756
  1327  0010D2  0E01               	movlw	1
  1328  0010D4  6E0F               	movwf	___aldiv@counter,c
  1329  0010D6  D006               	goto	l751
  1330  0010D8  90D8               	bcf	status,0,c
  1331  0010DA  360B               	rlcf	___aldiv@divisor,f,c
  1332  0010DC  360C               	rlcf	___aldiv@divisor+1,f,c
  1333  0010DE  360D               	rlcf	___aldiv@divisor+2,f,c
  1334  0010E0  360E               	rlcf	___aldiv@divisor+3,f,c
  1335  0010E2  2A0F               	incf	___aldiv@counter,f,c
  1336  0010E4                     l751:
  1337  0010E4  AE0E               	btfss	___aldiv@divisor+3,7,c
  1338  0010E6  D7F8               	goto	l752
  1339  0010E8                     u940:
  1340  0010E8  90D8               	bcf	status,0,c
  1341  0010EA  3611               	rlcf	___aldiv@quotient,f,c
  1342  0010EC  3612               	rlcf	___aldiv@quotient+1,f,c
  1343  0010EE  3613               	rlcf	___aldiv@quotient+2,f,c
  1344  0010F0  3614               	rlcf	___aldiv@quotient+3,f,c
  1345  0010F2  500B               	movf	___aldiv@divisor,w,c
  1346  0010F4  5C07               	subwf	___aldiv@dividend,w,c
  1347  0010F6  500C               	movf	___aldiv@divisor+1,w,c
  1348  0010F8  5808               	subwfb	___aldiv@dividend+1,w,c
  1349  0010FA  500D               	movf	___aldiv@divisor+2,w,c
  1350  0010FC  5809               	subwfb	___aldiv@dividend+2,w,c
  1351  0010FE  500E               	movf	___aldiv@divisor+3,w,c
  1352  001100  580A               	subwfb	___aldiv@dividend+3,w,c
  1353  001102  A0D8               	btfss	status,0,c
  1354  001104  D009               	goto	l755
  1355  001106  500B               	movf	___aldiv@divisor,w,c
  1356  001108  5E07               	subwf	___aldiv@dividend,f,c
  1357  00110A  500C               	movf	___aldiv@divisor+1,w,c
  1358  00110C  5A08               	subwfb	___aldiv@dividend+1,f,c
  1359  00110E  500D               	movf	___aldiv@divisor+2,w,c
  1360  001110  5A09               	subwfb	___aldiv@dividend+2,f,c
  1361  001112  500E               	movf	___aldiv@divisor+3,w,c
  1362  001114  5A0A               	subwfb	___aldiv@dividend+3,f,c
  1363  001116  8011               	bsf	___aldiv@quotient,0,c
  1364  001118                     l755:
  1365  001118  90D8               	bcf	status,0,c
  1366  00111A  320E               	rrcf	___aldiv@divisor+3,f,c
  1367  00111C  320D               	rrcf	___aldiv@divisor+2,f,c
  1368  00111E  320C               	rrcf	___aldiv@divisor+1,f,c
  1369  001120  320B               	rrcf	___aldiv@divisor,f,c
  1370  001122  2E0F               	decfsz	___aldiv@counter,f,c
  1371  001124  D7E1               	goto	u940
  1372  001126                     l756:
  1373  001126  5010               	movf	___aldiv@sign,w,c
  1374  001128  B4D8               	btfsc	status,2,c
  1375  00112A  D008               	goto	l757
  1376  00112C  1E14               	comf	___aldiv@quotient+3,f,c
  1377  00112E  1E13               	comf	___aldiv@quotient+2,f,c
  1378  001130  1E12               	comf	___aldiv@quotient+1,f,c
  1379  001132  6C11               	negf	___aldiv@quotient,c
  1380  001134  0E00               	movlw	0
  1381  001136  2212               	addwfc	___aldiv@quotient+1,f,c
  1382  001138  2213               	addwfc	___aldiv@quotient+2,f,c
  1383  00113A  2214               	addwfc	___aldiv@quotient+3,f,c
  1384  00113C                     l757:
  1385  00113C  C011  F007         	movff	___aldiv@quotient,?___aldiv
  1386  001140  C012  F008         	movff	___aldiv@quotient+1,?___aldiv+1
  1387  001144  C013  F009         	movff	___aldiv@quotient+2,?___aldiv+2
  1388  001148  C014  F00A         	movff	___aldiv@quotient+3,?___aldiv+3
  1389  00114C  0012               	return	
  1390  00114E                     __end_of___aldiv:
  1391                           	opt stack 0
  1392                           tblptru	equ	0xFF8
  1393                           tblptrh	equ	0xFF7
  1394                           tblptrl	equ	0xFF6
  1395                           tablat	equ	0xFF5
  1396                           prodh	equ	0xFF4
  1397                           prodl	equ	0xFF3
  1398                           intcon	equ	0xFF2
  1399                           intcon2	equ	0xFF1
  1400                           postinc0	equ	0xFEE
  1401                           wreg	equ	0xFE8
  1402                           postdec1	equ	0xFE5
  1403                           fsr1h	equ	0xFE2
  1404                           fsr1l	equ	0xFE1
  1405                           status	equ	0xFD8
  1406                           
  1407 ;; *************** function _EUSART1_Initialize *****************
  1408 ;; Defined at:
  1409 ;;		line 68 in file "mcc_generated_files/eusart1.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;		None
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, status,2, status,0, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1427 ;;Total ram usage:        0 bytes
  1428 ;; Hardware stack levels used:    1
  1429 ;; Hardware stack levels required when called:    1
  1430 ;; This function calls:
  1431 ;;		_EUSART1_SetErrorHandler
  1432 ;;		_EUSART1_SetFramingErrorHandler
  1433 ;;		_EUSART1_SetOverrunErrorHandler
  1434 ;; This function is called by:
  1435 ;;		_SYSTEM_Initialize
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text9
  1440  001460                     __ptext9:
  1441                           	opt stack 0
  1442  001460                     _EUSART1_Initialize:
  1443                           	opt stack 28
  1444                           
  1445                           ;eusart1.c: 72: BAUDCON1 = 0x18;
  1446                           
  1447                           ;incstack = 0
  1448  001460  0E18               	movlw	24
  1449  001462  6E7E               	movwf	3966,c	;volatile
  1450                           
  1451                           ;eusart1.c: 75: RCSTA1 = 0x98;
  1452  001464  0E98               	movlw	152
  1453  001466  6EAC               	movwf	4012,c	;volatile
  1454                           
  1455                           ;eusart1.c: 78: TXSTA1 = 0x24;
  1456  001468  0E24               	movlw	36
  1457  00146A  6EAD               	movwf	4013,c	;volatile
  1458                           
  1459                           ;eusart1.c: 81: SPBRG1 = 0xCF;
  1460  00146C  0ECF               	movlw	207
  1461  00146E  6EB0               	movwf	4016,c	;volatile
  1462                           
  1463                           ;eusart1.c: 84: SPBRGH1 = 0x00;
  1464  001470  0E00               	movlw	0
  1465  001472  6E7F               	movwf	3967,c	;volatile
  1466                           
  1467                           ;eusart1.c: 87: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  1468  001474  0E00               	movlw	0
  1469  001476  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  1470  001478  0E00               	movlw	0
  1471  00147A  6E02               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  1472  00147C  EC07  F00B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1473                           
  1474                           ;eusart1.c: 88: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  1475  001480  0E00               	movlw	0
  1476  001482  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  1477  001484  0E00               	movlw	0
  1478  001486  6E02               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  1479  001488  EC02  F00B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1480                           
  1481                           ;eusart1.c: 89: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  1482  00148C  0E00               	movlw	0
  1483  00148E  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  1484  001490  0E00               	movlw	0
  1485  001492  6E02               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  1486  001494  EC0C  F00B         	call	_EUSART1_SetErrorHandler	;wreg free
  1487                           
  1488                           ;eusart1.c: 91: eusart1RxLastError.status = 0;
  1489  001498  0E00               	movlw	0
  1490  00149A  6E2D               	movwf	_eusart1RxLastError,c	;volatile
  1491  00149C  0012               	return		;funcret
  1492  00149E                     __end_of_EUSART1_Initialize:
  1493                           	opt stack 0
  1494                           tblptru	equ	0xFF8
  1495                           tblptrh	equ	0xFF7
  1496                           tblptrl	equ	0xFF6
  1497                           tablat	equ	0xFF5
  1498                           prodh	equ	0xFF4
  1499                           prodl	equ	0xFF3
  1500                           intcon	equ	0xFF2
  1501                           intcon2	equ	0xFF1
  1502                           postinc0	equ	0xFEE
  1503                           wreg	equ	0xFE8
  1504                           postdec1	equ	0xFE5
  1505                           fsr1h	equ	0xFE2
  1506                           fsr1l	equ	0xFE1
  1507                           status	equ	0xFD8
  1508                           
  1509 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1510 ;; Defined at:
  1511 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1514 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1529 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1530 ;;Total ram usage:        2 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_EUSART1_Initialize
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text10
  1540  001604                     __ptext10:
  1541                           	opt stack 0
  1542  001604                     _EUSART1_SetOverrunErrorHandler:
  1543                           	opt stack 28
  1544                           
  1545                           ;eusart1.c: 171: EUSART1_OverrunErrorHandler = interruptHandler;
  1546                           
  1547                           ;incstack = 0
  1548  001604  C001  F029         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1549  001608  C002  F02A         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1550  00160C  0012               	return		;funcret
  1551  00160E                     __end_of_EUSART1_SetOverrunErrorHandler:
  1552                           	opt stack 0
  1553                           tblptru	equ	0xFF8
  1554                           tblptrh	equ	0xFF7
  1555                           tblptrl	equ	0xFF6
  1556                           tablat	equ	0xFF5
  1557                           prodh	equ	0xFF4
  1558                           prodl	equ	0xFF3
  1559                           intcon	equ	0xFF2
  1560                           intcon2	equ	0xFF1
  1561                           postinc0	equ	0xFEE
  1562                           wreg	equ	0xFE8
  1563                           postdec1	equ	0xFE5
  1564                           fsr1h	equ	0xFE2
  1565                           fsr1l	equ	0xFE1
  1566                           status	equ	0xFD8
  1567                           
  1568 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1569 ;; Defined at:
  1570 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1573 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;		None
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg, status,2, status,0
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1585 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1588 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1589 ;;Total ram usage:        2 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_EUSART1_Initialize
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text11
  1599  00160E                     __ptext11:
  1600                           	opt stack 0
  1601  00160E                     _EUSART1_SetFramingErrorHandler:
  1602                           	opt stack 28
  1603                           
  1604                           ;eusart1.c: 167: EUSART1_FramingErrorHandler = interruptHandler;
  1605                           
  1606                           ;incstack = 0
  1607  00160E  C001  F02B         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1608  001612  C002  F02C         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1609  001616  0012               	return		;funcret
  1610  001618                     __end_of_EUSART1_SetFramingErrorHandler:
  1611                           	opt stack 0
  1612                           tblptru	equ	0xFF8
  1613                           tblptrh	equ	0xFF7
  1614                           tblptrl	equ	0xFF6
  1615                           tablat	equ	0xFF5
  1616                           prodh	equ	0xFF4
  1617                           prodl	equ	0xFF3
  1618                           intcon	equ	0xFF2
  1619                           intcon2	equ	0xFF1
  1620                           postinc0	equ	0xFEE
  1621                           wreg	equ	0xFE8
  1622                           postdec1	equ	0xFE5
  1623                           fsr1h	equ	0xFE2
  1624                           fsr1l	equ	0xFE1
  1625                           status	equ	0xFD8
  1626                           
  1627 ;; *************** function _EUSART1_SetErrorHandler *****************
  1628 ;; Defined at:
  1629 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1632 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;		None
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      void 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1647 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1648 ;;Total ram usage:        2 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_EUSART1_Initialize
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text12
  1658  001618                     __ptext12:
  1659                           	opt stack 0
  1660  001618                     _EUSART1_SetErrorHandler:
  1661                           	opt stack 28
  1662                           
  1663                           ;eusart1.c: 175: EUSART1_ErrorHandler = interruptHandler;
  1664                           
  1665                           ;incstack = 0
  1666  001618  C001  F027         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1667  00161C  C002  F028         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1668  001620  0012               	return		;funcret
  1669  001622                     __end_of_EUSART1_SetErrorHandler:
  1670                           	opt stack 0
  1671                           tblptru	equ	0xFF8
  1672                           tblptrh	equ	0xFF7
  1673                           tblptrl	equ	0xFF6
  1674                           tablat	equ	0xFF5
  1675                           prodh	equ	0xFF4
  1676                           prodl	equ	0xFF3
  1677                           intcon	equ	0xFF2
  1678                           intcon2	equ	0xFF1
  1679                           postinc0	equ	0xFEE
  1680                           wreg	equ	0xFE8
  1681                           postdec1	equ	0xFE5
  1682                           fsr1h	equ	0xFE2
  1683                           fsr1l	equ	0xFE1
  1684                           status	equ	0xFD8
  1685                           
  1686 ;; *************** function _MCP794x_setTime *****************
  1687 ;; Defined at:
  1688 ;;		line 10 in file "RTC_MCP79411.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  hour            1    wreg     unsigned char 
  1691 ;;  minute          1   12[COMRAM] unsigned char 
  1692 ;;  second          1   13[COMRAM] unsigned char 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  hour            1   16[COMRAM] unsigned char 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      void 
  1697 ;; Registers used:
  1698 ;;		wreg, status,2, status,0, cstack
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1705 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1706 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1707 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1708 ;;Total ram usage:        5 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:    2
  1711 ;; This function calls:
  1712 ;;		_I2C_Write
  1713 ;;		_I2C_start
  1714 ;;		_I2C_stop
  1715 ;;		_decimalToBCD
  1716 ;; This function is called by:
  1717 ;;		_main
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text13
  1722  00137E                     __ptext13:
  1723                           	opt stack 0
  1724  00137E                     _MCP794x_setTime:
  1725                           	opt stack 28
  1726                           
  1727                           ;incstack = 0
  1728                           ;MCP794x_setTime@hour stored from wreg
  1729  00137E  6E11               	movwf	MCP794x_setTime@hour,c
  1730                           
  1731                           ;RTC_MCP79411.c: 11: I2C_start();
  1732  001380  EC16  F00B         	call	_I2C_start	;wreg free
  1733                           
  1734                           ;RTC_MCP79411.c: 12: I2C_Write(0xDE);
  1735  001384  0EDE               	movlw	222
  1736  001386  ECBA  F00A         	call	_I2C_Write
  1737                           
  1738                           ;RTC_MCP79411.c: 13: I2C_Write(0x00);
  1739  00138A  0E00               	movlw	0
  1740  00138C  ECBA  F00A         	call	_I2C_Write
  1741                           
  1742                           ;RTC_MCP79411.c: 14: I2C_Write(decimalToBCD(second | 0x80));
  1743  001390  0E80               	movlw	128
  1744  001392  C00E  F00F         	movff	MCP794x_setTime@second,??_MCP794x_setTime
  1745  001396  6A10               	clrf	(??_MCP794x_setTime+1)& (0+255),c
  1746  001398  100F               	iorwf	??_MCP794x_setTime,w,c
  1747  00139A  6E09               	movwf	decimalToBCD@DecValue,c
  1748  00139C  5010               	movf	??_MCP794x_setTime+1,w,c
  1749  00139E  6E0A               	movwf	decimalToBCD@DecValue+1,c
  1750  0013A0  EC4F  F00A         	call	_decimalToBCD	;wreg free
  1751  0013A4  ECBA  F00A         	call	_I2C_Write
  1752                           
  1753                           ;RTC_MCP79411.c: 15: I2C_Write(decimalToBCD(minute));
  1754  0013A8  C00D  F009         	movff	MCP794x_setTime@minute,decimalToBCD@DecValue
  1755  0013AC  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1756  0013AE  EC4F  F00A         	call	_decimalToBCD	;wreg free
  1757  0013B2  ECBA  F00A         	call	_I2C_Write
  1758                           
  1759                           ;RTC_MCP79411.c: 16: I2C_Write(decimalToBCD(hour & 0x1F));
  1760  0013B6  C011  F00F         	movff	MCP794x_setTime@hour,??_MCP794x_setTime
  1761  0013BA  0E1F               	movlw	31
  1762  0013BC  160F               	andwf	??_MCP794x_setTime,f,c
  1763  0013BE  500F               	movf	??_MCP794x_setTime,w,c
  1764  0013C0  6E09               	movwf	decimalToBCD@DecValue,c
  1765  0013C2  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1766  0013C4  EC4F  F00A         	call	_decimalToBCD	;wreg free
  1767  0013C8  ECBA  F00A         	call	_I2C_Write
  1768                           
  1769                           ;RTC_MCP79411.c: 17: I2C_stop();
  1770  0013CC  EC1B  F00B         	call	_I2C_stop	;wreg free
  1771  0013D0  0012               	return		;funcret
  1772  0013D2                     __end_of_MCP794x_setTime:
  1773                           	opt stack 0
  1774                           tblptru	equ	0xFF8
  1775                           tblptrh	equ	0xFF7
  1776                           tblptrl	equ	0xFF6
  1777                           tablat	equ	0xFF5
  1778                           prodh	equ	0xFF4
  1779                           prodl	equ	0xFF3
  1780                           intcon	equ	0xFF2
  1781                           intcon2	equ	0xFF1
  1782                           postinc0	equ	0xFEE
  1783                           wreg	equ	0xFE8
  1784                           postdec1	equ	0xFE5
  1785                           fsr1h	equ	0xFE2
  1786                           fsr1l	equ	0xFE1
  1787                           status	equ	0xFD8
  1788                           
  1789 ;; *************** function _MCP794x_setDate *****************
  1790 ;; Defined at:
  1791 ;;		line 20 in file "RTC_MCP79411.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;  date            1    wreg     unsigned char 
  1794 ;;  weekDay         1   12[COMRAM] unsigned char 
  1795 ;;  month           1   13[COMRAM] unsigned char 
  1796 ;;  year            1   14[COMRAM] unsigned char 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  date            1   17[COMRAM] unsigned char 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2, status,0, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1808 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1809 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1810 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1811 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1812 ;;Total ram usage:        6 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; Hardware stack levels required when called:    2
  1815 ;; This function calls:
  1816 ;;		_I2C_Write
  1817 ;;		_I2C_start
  1818 ;;		_I2C_stop
  1819 ;;		_decimalToBCD
  1820 ;; This function is called by:
  1821 ;;		_main
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text14
  1826  0012D0                     __ptext14:
  1827                           	opt stack 0
  1828  0012D0                     _MCP794x_setDate:
  1829                           	opt stack 28
  1830                           
  1831                           ;incstack = 0
  1832                           ;MCP794x_setDate@date stored from wreg
  1833  0012D0  6E12               	movwf	MCP794x_setDate@date,c
  1834                           
  1835                           ;RTC_MCP79411.c: 21: I2C_start();
  1836  0012D2  EC16  F00B         	call	_I2C_start	;wreg free
  1837                           
  1838                           ;RTC_MCP79411.c: 22: I2C_Write(0xDE);
  1839  0012D6  0EDE               	movlw	222
  1840  0012D8  ECBA  F00A         	call	_I2C_Write
  1841                           
  1842                           ;RTC_MCP79411.c: 23: I2C_Write(0x03);
  1843  0012DC  0E03               	movlw	3
  1844  0012DE  ECBA  F00A         	call	_I2C_Write
  1845                           
  1846                           ;RTC_MCP79411.c: 24: I2C_Write(decimalToBCD(weekDay | 0x28));
  1847  0012E2  0E28               	movlw	40
  1848  0012E4  C00D  F010         	movff	MCP794x_setDate@weekDay,??_MCP794x_setDate
  1849  0012E8  6A11               	clrf	(??_MCP794x_setDate+1)& (0+255),c
  1850  0012EA  1010               	iorwf	??_MCP794x_setDate,w,c
  1851  0012EC  6E09               	movwf	decimalToBCD@DecValue,c
  1852  0012EE  5011               	movf	??_MCP794x_setDate+1,w,c
  1853  0012F0  6E0A               	movwf	decimalToBCD@DecValue+1,c
  1854  0012F2  EC4F  F00A         	call	_decimalToBCD	;wreg free
  1855  0012F6  ECBA  F00A         	call	_I2C_Write
  1856                           
  1857                           ;RTC_MCP79411.c: 25: I2C_Write(decimalToBCD(date));
  1858  0012FA  C012  F009         	movff	MCP794x_setDate@date,decimalToBCD@DecValue
  1859  0012FE  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1860  001300  EC4F  F00A         	call	_decimalToBCD	;wreg free
  1861  001304  ECBA  F00A         	call	_I2C_Write
  1862                           
  1863                           ;RTC_MCP79411.c: 26: I2C_Write(decimalToBCD(month));
  1864  001308  C00E  F009         	movff	MCP794x_setDate@month,decimalToBCD@DecValue
  1865  00130C  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1866  00130E  EC4F  F00A         	call	_decimalToBCD	;wreg free
  1867  001312  ECBA  F00A         	call	_I2C_Write
  1868                           
  1869                           ;RTC_MCP79411.c: 27: I2C_Write(decimalToBCD(year));
  1870  001316  C00F  F009         	movff	MCP794x_setDate@year,decimalToBCD@DecValue
  1871  00131A  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1872  00131C  EC4F  F00A         	call	_decimalToBCD	;wreg free
  1873  001320  ECBA  F00A         	call	_I2C_Write
  1874                           
  1875                           ;RTC_MCP79411.c: 28: I2C_stop();
  1876  001324  EC1B  F00B         	call	_I2C_stop	;wreg free
  1877  001328  0012               	return		;funcret
  1878  00132A                     __end_of_MCP794x_setDate:
  1879                           	opt stack 0
  1880                           tblptru	equ	0xFF8
  1881                           tblptrh	equ	0xFF7
  1882                           tblptrl	equ	0xFF6
  1883                           tablat	equ	0xFF5
  1884                           prodh	equ	0xFF4
  1885                           prodl	equ	0xFF3
  1886                           intcon	equ	0xFF2
  1887                           intcon2	equ	0xFF1
  1888                           postinc0	equ	0xFEE
  1889                           wreg	equ	0xFE8
  1890                           postdec1	equ	0xFE5
  1891                           fsr1h	equ	0xFE2
  1892                           fsr1l	equ	0xFE1
  1893                           status	equ	0xFD8
  1894                           
  1895 ;; *************** function _MCP794x_setAlarm *****************
  1896 ;; Defined at:
  1897 ;;		line 39 in file "RTC_MCP79411.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  alarmMask       1    wreg     unsigned char 
  1900 ;;  time            1   14[COMRAM] unsigned char 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  alarmMask       1   17[COMRAM] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1912 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1915 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1916 ;;Total ram usage:        4 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    3
  1919 ;; This function calls:
  1920 ;;		_MCP794x_writeRtcc
  1921 ;;		_decimalToBCD
  1922 ;; This function is called by:
  1923 ;;		_main
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text15
  1928  000F42                     __ptext15:
  1929                           	opt stack 0
  1930  000F42                     _MCP794x_setAlarm:
  1931                           	opt stack 27
  1932                           
  1933                           ;incstack = 0
  1934                           ;MCP794x_setAlarm@alarmMask stored from wreg
  1935  000F42  6E12               	movwf	MCP794x_setAlarm@alarmMask,c
  1936                           
  1937                           ;RTC_MCP79411.c: 40: MCP794x_writeRtcc(0x0D, 0x00);
  1938  000F44  0E00               	movlw	0
  1939  000F46  6E0D               	movwf	MCP794x_writeRtcc@value,c
  1940  000F48  0E0D               	movlw	13
  1941  000F4A  ECAB  F00A         	call	_MCP794x_writeRtcc
  1942                           
  1943                           ;RTC_MCP79411.c: 41: MCP794x_writeRtcc(0x0D, alarmMask);
  1944  000F4E  C012  F00D         	movff	MCP794x_setAlarm@alarmMask,MCP794x_writeRtcc@value
  1945  000F52  0E0D               	movlw	13
  1946  000F54  ECAB  F00A         	call	_MCP794x_writeRtcc
  1947                           
  1948                           ;RTC_MCP79411.c: 43: switch (alarmMask) {
  1949  000F58  D07B               	goto	l666
  1950  000F5A  C00F  F009         	movff	MCP794x_setAlarm@time,decimalToBCD@DecValue
  1951  000F5E  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1952  000F60  EC4F  F00A         	call	_decimalToBCD	;wreg free
  1953  000F64  6E0D               	movwf	MCP794x_writeRtcc@value,c
  1954  000F66  0E0A               	movlw	10
  1955  000F68  ECAB  F00A         	call	_MCP794x_writeRtcc
  1956                           
  1957                           ;RTC_MCP79411.c: 45: break;
  1958  000F6C  D084               	goto	l668
  1959  000F6E  C00F  F009         	movff	MCP794x_setAlarm@time,decimalToBCD@DecValue
  1960  000F72  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1961  000F74  EC4F  F00A         	call	_decimalToBCD	;wreg free
  1962  000F78  6E0D               	movwf	MCP794x_writeRtcc@value,c
  1963  000F7A  0E0B               	movlw	11
  1964  000F7C  ECAB  F00A         	call	_MCP794x_writeRtcc
  1965                           
  1966                           ;RTC_MCP79411.c: 47: break;
  1967  000F80  D07A               	goto	l668
  1968  000F82  C00F  F009         	movff	MCP794x_setAlarm@time,decimalToBCD@DecValue
  1969  000F86  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1970  000F88  EC4F  F00A         	call	_decimalToBCD	;wreg free
  1971  000F8C  0BBF               	andlw	191
  1972  000F8E  6E0D               	movwf	MCP794x_writeRtcc@value,c
  1973  000F90  0E0C               	movlw	12
  1974  000F92  ECAB  F00A         	call	_MCP794x_writeRtcc
  1975                           
  1976                           ;RTC_MCP79411.c: 49: break;
  1977  000F96  D06F               	goto	l668
  1978  000F98  C00F  F009         	movff	MCP794x_setAlarm@time,decimalToBCD@DecValue
  1979  000F9C  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1980  000F9E  EC4F  F00A         	call	_decimalToBCD	;wreg free
  1981  000FA2  6E10               	movwf	??_MCP794x_setAlarm& (0+255),c
  1982  000FA4  0E06               	movlw	6
  1983  000FA6  6E11               	movwf	(??_MCP794x_setAlarm+1)& (0+255),c
  1984  000FA8                     u1125:
  1985  000FA8  90D8               	bcf	status,0,c
  1986  000FAA  3210               	rrcf	??_MCP794x_setAlarm,f,c
  1987  000FAC  2E11               	decfsz	(??_MCP794x_setAlarm+1)& (0+255),f,c
  1988  000FAE  D7FC               	goto	u1125
  1989  000FB0  5010               	movf	??_MCP794x_setAlarm,w,c
  1990  000FB2  6E0D               	movwf	MCP794x_writeRtcc@value,c
  1991  000FB4  0E0D               	movlw	13
  1992  000FB6  ECAB  F00A         	call	_MCP794x_writeRtcc
  1993                           
  1994                           ;RTC_MCP79411.c: 51: break;
  1995  000FBA  D05D               	goto	l668
  1996  000FBC  C00F  F009         	movff	MCP794x_setAlarm@time,decimalToBCD@DecValue
  1997  000FC0  6A0A               	clrf	decimalToBCD@DecValue+1,c
  1998  000FC2  EC4F  F00A         	call	_decimalToBCD	;wreg free
  1999  000FC6  6E0D               	movwf	MCP794x_writeRtcc@value,c
  2000  000FC8  0E0E               	movlw	14
  2001  000FCA  ECAB  F00A         	call	_MCP794x_writeRtcc
  2002                           
  2003                           ;RTC_MCP79411.c: 53: break;
  2004  000FCE  D053               	goto	l668
  2005  000FD0                     
  2006                           ;RTC_MCP79411.c: 55: MCP794x_writeRtcc(0x0A, decimalToBCD(time));
  2007  000FD0  C00F  F009         	movff	MCP794x_setAlarm@time,decimalToBCD@DecValue
  2008  000FD4  6A0A               	clrf	decimalToBCD@DecValue+1,c
  2009  000FD6  EC4F  F00A         	call	_decimalToBCD	;wreg free
  2010  000FDA  6E0D               	movwf	MCP794x_writeRtcc@value,c
  2011  000FDC  0E0A               	movlw	10
  2012  000FDE  ECAB  F00A         	call	_MCP794x_writeRtcc
  2013                           
  2014                           ;RTC_MCP79411.c: 56: MCP794x_writeRtcc(0x0B, decimalToBCD(time));
  2015  000FE2  C00F  F009         	movff	MCP794x_setAlarm@time,decimalToBCD@DecValue
  2016  000FE6  6A0A               	clrf	decimalToBCD@DecValue+1,c
  2017  000FE8  EC4F  F00A         	call	_decimalToBCD	;wreg free
  2018  000FEC  6E0D               	movwf	MCP794x_writeRtcc@value,c
  2019  000FEE  0E0B               	movlw	11
  2020  000FF0  ECAB  F00A         	call	_MCP794x_writeRtcc
  2021                           
  2022                           ;RTC_MCP79411.c: 57: MCP794x_writeRtcc(0x0C, (decimalToBCD(time)) & 0xBF);
  2023  000FF4  C00F  F009         	movff	MCP794x_setAlarm@time,decimalToBCD@DecValue
  2024  000FF8  6A0A               	clrf	decimalToBCD@DecValue+1,c
  2025  000FFA  EC4F  F00A         	call	_decimalToBCD	;wreg free
  2026  000FFE  0BBF               	andlw	191
  2027  001000  6E0D               	movwf	MCP794x_writeRtcc@value,c
  2028  001002  0E0C               	movlw	12
  2029  001004  ECAB  F00A         	call	_MCP794x_writeRtcc
  2030                           
  2031                           ;RTC_MCP79411.c: 58: MCP794x_writeRtcc(0x0D, (decimalToBCD(time)) >> 6);
  2032  001008  C00F  F009         	movff	MCP794x_setAlarm@time,decimalToBCD@DecValue
  2033  00100C  6A0A               	clrf	decimalToBCD@DecValue+1,c
  2034  00100E  EC4F  F00A         	call	_decimalToBCD	;wreg free
  2035  001012  6E10               	movwf	??_MCP794x_setAlarm& (0+255),c
  2036  001014  0E06               	movlw	6
  2037  001016  6E11               	movwf	(??_MCP794x_setAlarm+1)& (0+255),c
  2038  001018                     u1135:
  2039  001018  90D8               	bcf	status,0,c
  2040  00101A  3210               	rrcf	??_MCP794x_setAlarm,f,c
  2041  00101C  2E11               	decfsz	(??_MCP794x_setAlarm+1)& (0+255),f,c
  2042  00101E  D7FC               	goto	u1135
  2043  001020  5010               	movf	??_MCP794x_setAlarm,w,c
  2044  001022  6E0D               	movwf	MCP794x_writeRtcc@value,c
  2045  001024  0E0D               	movlw	13
  2046  001026  ECAB  F00A         	call	_MCP794x_writeRtcc
  2047                           
  2048                           ;RTC_MCP79411.c: 59: MCP794x_writeRtcc(0x0E, decimalToBCD(time));
  2049  00102A  C00F  F009         	movff	MCP794x_setAlarm@time,decimalToBCD@DecValue
  2050  00102E  6A0A               	clrf	decimalToBCD@DecValue+1,c
  2051  001030  EC4F  F00A         	call	_decimalToBCD	;wreg free
  2052  001034  6E0D               	movwf	MCP794x_writeRtcc@value,c
  2053  001036  0E0E               	movlw	14
  2054  001038  ECAB  F00A         	call	_MCP794x_writeRtcc
  2055                           
  2056                           ;RTC_MCP79411.c: 60: MCP794x_writeRtcc(0x0F, decimalToBCD(time));
  2057  00103C  C00F  F009         	movff	MCP794x_setAlarm@time,decimalToBCD@DecValue
  2058  001040  6A0A               	clrf	decimalToBCD@DecValue+1,c
  2059  001042  EC4F  F00A         	call	_decimalToBCD	;wreg free
  2060  001046  6E0D               	movwf	MCP794x_writeRtcc@value,c
  2061  001048  0E0F               	movlw	15
  2062  00104A  ECAB  F00A         	call	_MCP794x_writeRtcc
  2063                           
  2064                           ;RTC_MCP79411.c: 62: }
  2065                           
  2066                           ;RTC_MCP79411.c: 61: break;
  2067  00104E  D013               	goto	l668
  2068  001050                     l666:
  2069  001050  5012               	movf	MCP794x_setAlarm@alarmMask,w,c
  2070                           
  2071                           ; Switch size 1, requested type "space"
  2072                           ; Number of cases is 6, Range of values is 0 to 112
  2073                           ; switch strategies available:
  2074                           ; Name         Instructions Cycles
  2075                           ; simple_byte           19    10 (average)
  2076                           ;	Chosen strategy is simple_byte
  2077  001052  0A00               	xorlw	0	; case 0
  2078  001054  B4D8               	btfsc	status,2,c
  2079  001056  D781               	goto	l667
  2080  001058  0A10               	xorlw	16	; case 16
  2081  00105A  B4D8               	btfsc	status,2,c
  2082  00105C  D788               	goto	l669
  2083  00105E  0A30               	xorlw	48	; case 32
  2084  001060  B4D8               	btfsc	status,2,c
  2085  001062  D78F               	goto	l670
  2086  001064  0A10               	xorlw	16	; case 48
  2087  001066  B4D8               	btfsc	status,2,c
  2088  001068  D797               	goto	l671
  2089  00106A  0A70               	xorlw	112	; case 64
  2090  00106C  B4D8               	btfsc	status,2,c
  2091  00106E  D7A6               	goto	l672
  2092  001070  0A30               	xorlw	48	; case 112
  2093  001072  B4D8               	btfsc	status,2,c
  2094  001074  D7AD               	goto	l673
  2095  001076                     l668:
  2096                           
  2097                           ;RTC_MCP79411.c: 63: MCP794x_writeRtcc(0x07, 0x10);
  2098  001076  0E10               	movlw	16
  2099  001078  6E0D               	movwf	MCP794x_writeRtcc@value,c
  2100  00107A  0E07               	movlw	7
  2101  00107C  ECAB  F00A         	call	_MCP794x_writeRtcc
  2102  001080  0012               	return		;funcret
  2103  001082                     __end_of_MCP794x_setAlarm:
  2104                           	opt stack 0
  2105                           tblptru	equ	0xFF8
  2106                           tblptrh	equ	0xFF7
  2107                           tblptrl	equ	0xFF6
  2108                           tablat	equ	0xFF5
  2109                           prodh	equ	0xFF4
  2110                           prodl	equ	0xFF3
  2111                           intcon	equ	0xFF2
  2112                           intcon2	equ	0xFF1
  2113                           postinc0	equ	0xFEE
  2114                           wreg	equ	0xFE8
  2115                           postdec1	equ	0xFE5
  2116                           fsr1h	equ	0xFE2
  2117                           fsr1l	equ	0xFE1
  2118                           status	equ	0xFD8
  2119                           
  2120 ;; *************** function _decimalToBCD *****************
  2121 ;; Defined at:
  2122 ;;		line 94 in file "RTC_PCF8523.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  DecValue        2    8[COMRAM] int 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      unsigned char 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2138 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2139 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2140 ;;Total ram usage:        4 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    1
  2143 ;; This function calls:
  2144 ;;		___awdiv
  2145 ;;		___awmod
  2146 ;; This function is called by:
  2147 ;;		_MCP794x_setTime
  2148 ;;		_MCP794x_setDate
  2149 ;;		_MCP794x_setAlarm
  2150 ;;		_PCF8523_setTime
  2151 ;;		_PCF8523_setDate
  2152 ;;		_PCF8523_setAlarm
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text16
  2157  00149E                     __ptext16:
  2158                           	opt stack 0
  2159  00149E                     _decimalToBCD:
  2160                           	opt stack 28
  2161                           
  2162                           ;RTC_PCF8523.c: 95: return (((DecValue / 10) << 4) | (DecValue % 10));
  2163                           
  2164                           ;incstack = 0
  2165  00149E  C009  F001         	movff	decimalToBCD@DecValue,___awmod@dividend
  2166  0014A2  C00A  F002         	movff	decimalToBCD@DecValue+1,___awmod@dividend+1
  2167  0014A6  0E00               	movlw	0
  2168  0014A8  6E04               	movwf	___awmod@divisor+1,c
  2169  0014AA  0E0A               	movlw	10
  2170  0014AC  6E03               	movwf	___awmod@divisor,c
  2171  0014AE  EC30  F009         	call	___awmod	;wreg free
  2172  0014B2  C001  F00B         	movff	?___awmod,??_decimalToBCD
  2173  0014B6  C002  F00C         	movff	?___awmod+1,??_decimalToBCD+1
  2174  0014BA  C009  F001         	movff	decimalToBCD@DecValue,___awdiv@dividend
  2175  0014BE  C00A  F002         	movff	decimalToBCD@DecValue+1,___awdiv@dividend+1
  2176  0014C2  0E00               	movlw	0
  2177  0014C4  6E04               	movwf	___awdiv@divisor+1,c
  2178  0014C6  0E0A               	movlw	10
  2179  0014C8  6E03               	movwf	___awdiv@divisor,c
  2180  0014CA  ECEE  F008         	call	___awdiv	;wreg free
  2181  0014CE  3801               	swapf	?___awdiv,w,c
  2182  0014D0  0BF0               	andlw	240
  2183  0014D2  100B               	iorwf	??_decimalToBCD,w,c
  2184  0014D4  0012               	return	
  2185  0014D6                     __end_of_decimalToBCD:
  2186                           	opt stack 0
  2187                           tblptru	equ	0xFF8
  2188                           tblptrh	equ	0xFF7
  2189                           tblptrl	equ	0xFF6
  2190                           tablat	equ	0xFF5
  2191                           prodh	equ	0xFF4
  2192                           prodl	equ	0xFF3
  2193                           intcon	equ	0xFF2
  2194                           intcon2	equ	0xFF1
  2195                           postinc0	equ	0xFEE
  2196                           wreg	equ	0xFE8
  2197                           postdec1	equ	0xFE5
  2198                           fsr1h	equ	0xFE2
  2199                           fsr1l	equ	0xFE1
  2200                           status	equ	0xFD8
  2201                           
  2202 ;; *************** function ___awmod *****************
  2203 ;; Defined at:
  2204 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  dividend        2    0[COMRAM] int 
  2207 ;;  divisor         2    2[COMRAM] int 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  sign            1    5[COMRAM] unsigned char 
  2210 ;;  counter         1    4[COMRAM] unsigned char 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  2    0[COMRAM] int 
  2213 ;; Registers used:
  2214 ;;		wreg, status,2, status,0
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2220 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2221 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2223 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2224 ;;Total ram usage:        6 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_decimalToBCD
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text17
  2234  001260                     __ptext17:
  2235                           	opt stack 0
  2236  001260                     ___awmod:
  2237                           	opt stack 28
  2238                           
  2239                           ;incstack = 0
  2240  001260  0E00               	movlw	0
  2241  001262  6E06               	movwf	___awmod@sign,c
  2242  001264  AE02               	btfss	___awmod@dividend+1,7,c
  2243  001266  D006               	goto	l873
  2244  001268  6C01               	negf	___awmod@dividend,c
  2245  00126A  1E02               	comf	___awmod@dividend+1,f,c
  2246  00126C  B0D8               	btfsc	status,0,c
  2247  00126E  2A02               	incf	___awmod@dividend+1,f,c
  2248  001270  0E01               	movlw	1
  2249  001272  6E06               	movwf	___awmod@sign,c
  2250  001274                     l873:
  2251  001274  AE04               	btfss	___awmod@divisor+1,7,c
  2252  001276  D004               	goto	l874
  2253  001278  6C03               	negf	___awmod@divisor,c
  2254  00127A  1E04               	comf	___awmod@divisor+1,f,c
  2255  00127C  B0D8               	btfsc	status,0,c
  2256  00127E  2A04               	incf	___awmod@divisor+1,f,c
  2257  001280                     l874:
  2258  001280  5003               	movf	___awmod@divisor,w,c
  2259  001282  1004               	iorwf	___awmod@divisor+1,w,c
  2260  001284  B4D8               	btfsc	status,2,c
  2261  001286  D018               	goto	l881
  2262  001288  0E01               	movlw	1
  2263  00128A  6E05               	movwf	___awmod@counter,c
  2264  00128C  D004               	goto	l876
  2265  00128E  90D8               	bcf	status,0,c
  2266  001290  3603               	rlcf	___awmod@divisor,f,c
  2267  001292  3604               	rlcf	___awmod@divisor+1,f,c
  2268  001294  2A05               	incf	___awmod@counter,f,c
  2269  001296                     l876:
  2270  001296  AE04               	btfss	___awmod@divisor+1,7,c
  2271  001298  D7FA               	goto	l877
  2272  00129A                     u1060:
  2273  00129A  5003               	movf	___awmod@divisor,w,c
  2274  00129C  5C01               	subwf	___awmod@dividend,w,c
  2275  00129E  5004               	movf	___awmod@divisor+1,w,c
  2276  0012A0  5802               	subwfb	___awmod@dividend+1,w,c
  2277  0012A2  A0D8               	btfss	status,0,c
  2278  0012A4  D004               	goto	l880
  2279  0012A6  5003               	movf	___awmod@divisor,w,c
  2280  0012A8  5E01               	subwf	___awmod@dividend,f,c
  2281  0012AA  5004               	movf	___awmod@divisor+1,w,c
  2282  0012AC  5A02               	subwfb	___awmod@dividend+1,f,c
  2283  0012AE                     l880:
  2284  0012AE  90D8               	bcf	status,0,c
  2285  0012B0  3204               	rrcf	___awmod@divisor+1,f,c
  2286  0012B2  3203               	rrcf	___awmod@divisor,f,c
  2287  0012B4  2E05               	decfsz	___awmod@counter,f,c
  2288  0012B6  D7F1               	goto	u1060
  2289  0012B8                     l881:
  2290  0012B8  5006               	movf	___awmod@sign,w,c
  2291  0012BA  B4D8               	btfsc	status,2,c
  2292  0012BC  D004               	goto	l882
  2293  0012BE  6C01               	negf	___awmod@dividend,c
  2294  0012C0  1E02               	comf	___awmod@dividend+1,f,c
  2295  0012C2  B0D8               	btfsc	status,0,c
  2296  0012C4  2A02               	incf	___awmod@dividend+1,f,c
  2297  0012C6                     l882:
  2298  0012C6  C001  F001         	movff	___awmod@dividend,?___awmod
  2299  0012CA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2300  0012CE  0012               	return	
  2301  0012D0                     __end_of___awmod:
  2302                           	opt stack 0
  2303                           tblptru	equ	0xFF8
  2304                           tblptrh	equ	0xFF7
  2305                           tblptrl	equ	0xFF6
  2306                           tablat	equ	0xFF5
  2307                           prodh	equ	0xFF4
  2308                           prodl	equ	0xFF3
  2309                           intcon	equ	0xFF2
  2310                           intcon2	equ	0xFF1
  2311                           postinc0	equ	0xFEE
  2312                           wreg	equ	0xFE8
  2313                           postdec1	equ	0xFE5
  2314                           fsr1h	equ	0xFE2
  2315                           fsr1l	equ	0xFE1
  2316                           status	equ	0xFD8
  2317                           
  2318 ;; *************** function ___awdiv *****************
  2319 ;; Defined at:
  2320 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  dividend        2    0[COMRAM] int 
  2323 ;;  divisor         2    2[COMRAM] int 
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;  quotient        2    6[COMRAM] int 
  2326 ;;  sign            1    5[COMRAM] unsigned char 
  2327 ;;  counter         1    4[COMRAM] unsigned char 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  2    0[COMRAM] int 
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2338 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2340 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2341 ;;Total ram usage:        8 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; This function calls:
  2344 ;;		Nothing
  2345 ;; This function is called by:
  2346 ;;		_decimalToBCD
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text18
  2351  0011DC                     __ptext18:
  2352                           	opt stack 0
  2353  0011DC                     ___awdiv:
  2354                           	opt stack 28
  2355                           
  2356                           ;incstack = 0
  2357  0011DC  0E00               	movlw	0
  2358  0011DE  6E06               	movwf	___awdiv@sign,c
  2359  0011E0  AE04               	btfss	___awdiv@divisor+1,7,c
  2360  0011E2  D006               	goto	l860
  2361  0011E4  6C03               	negf	___awdiv@divisor,c
  2362  0011E6  1E04               	comf	___awdiv@divisor+1,f,c
  2363  0011E8  B0D8               	btfsc	status,0,c
  2364  0011EA  2A04               	incf	___awdiv@divisor+1,f,c
  2365  0011EC  0E01               	movlw	1
  2366  0011EE  6E06               	movwf	___awdiv@sign,c
  2367  0011F0                     l860:
  2368  0011F0  AE02               	btfss	___awdiv@dividend+1,7,c
  2369  0011F2  D006               	goto	l861
  2370  0011F4  6C01               	negf	___awdiv@dividend,c
  2371  0011F6  1E02               	comf	___awdiv@dividend+1,f,c
  2372  0011F8  B0D8               	btfsc	status,0,c
  2373  0011FA  2A02               	incf	___awdiv@dividend+1,f,c
  2374  0011FC  0E01               	movlw	1
  2375  0011FE  1A06               	xorwf	___awdiv@sign,f,c
  2376  001200                     l861:
  2377  001200  0E00               	movlw	0
  2378  001202  6E08               	movwf	___awdiv@quotient+1,c
  2379  001204  0E00               	movlw	0
  2380  001206  6E07               	movwf	___awdiv@quotient,c
  2381  001208  5003               	movf	___awdiv@divisor,w,c
  2382  00120A  1004               	iorwf	___awdiv@divisor+1,w,c
  2383  00120C  B4D8               	btfsc	status,2,c
  2384  00120E  D01C               	goto	l868
  2385  001210  0E01               	movlw	1
  2386  001212  6E05               	movwf	___awdiv@counter,c
  2387  001214  D004               	goto	l863
  2388  001216  90D8               	bcf	status,0,c
  2389  001218  3603               	rlcf	___awdiv@divisor,f,c
  2390  00121A  3604               	rlcf	___awdiv@divisor+1,f,c
  2391  00121C  2A05               	incf	___awdiv@counter,f,c
  2392  00121E                     l863:
  2393  00121E  AE04               	btfss	___awdiv@divisor+1,7,c
  2394  001220  D7FA               	goto	l864
  2395  001222                     u1000:
  2396  001222  90D8               	bcf	status,0,c
  2397  001224  3607               	rlcf	___awdiv@quotient,f,c
  2398  001226  3608               	rlcf	___awdiv@quotient+1,f,c
  2399  001228  5003               	movf	___awdiv@divisor,w,c
  2400  00122A  5C01               	subwf	___awdiv@dividend,w,c
  2401  00122C  5004               	movf	___awdiv@divisor+1,w,c
  2402  00122E  5802               	subwfb	___awdiv@dividend+1,w,c
  2403  001230  A0D8               	btfss	status,0,c
  2404  001232  D005               	goto	l867
  2405  001234  5003               	movf	___awdiv@divisor,w,c
  2406  001236  5E01               	subwf	___awdiv@dividend,f,c
  2407  001238  5004               	movf	___awdiv@divisor+1,w,c
  2408  00123A  5A02               	subwfb	___awdiv@dividend+1,f,c
  2409  00123C  8007               	bsf	___awdiv@quotient,0,c
  2410  00123E                     l867:
  2411  00123E  90D8               	bcf	status,0,c
  2412  001240  3204               	rrcf	___awdiv@divisor+1,f,c
  2413  001242  3203               	rrcf	___awdiv@divisor,f,c
  2414  001244  2E05               	decfsz	___awdiv@counter,f,c
  2415  001246  D7ED               	goto	u1000
  2416  001248                     l868:
  2417  001248  5006               	movf	___awdiv@sign,w,c
  2418  00124A  B4D8               	btfsc	status,2,c
  2419  00124C  D004               	goto	l869
  2420  00124E  6C07               	negf	___awdiv@quotient,c
  2421  001250  1E08               	comf	___awdiv@quotient+1,f,c
  2422  001252  B0D8               	btfsc	status,0,c
  2423  001254  2A08               	incf	___awdiv@quotient+1,f,c
  2424  001256                     l869:
  2425  001256  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2426  00125A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2427  00125E  0012               	return	
  2428  001260                     __end_of___awdiv:
  2429                           	opt stack 0
  2430                           tblptru	equ	0xFF8
  2431                           tblptrh	equ	0xFF7
  2432                           tblptrl	equ	0xFF6
  2433                           tablat	equ	0xFF5
  2434                           prodh	equ	0xFF4
  2435                           prodl	equ	0xFF3
  2436                           intcon	equ	0xFF2
  2437                           intcon2	equ	0xFF1
  2438                           postinc0	equ	0xFEE
  2439                           wreg	equ	0xFE8
  2440                           postdec1	equ	0xFE5
  2441                           fsr1h	equ	0xFE2
  2442                           fsr1l	equ	0xFE1
  2443                           status	equ	0xFD8
  2444                           
  2445 ;; *************** function _MCP794x_writeRtcc *****************
  2446 ;; Defined at:
  2447 ;;		line 31 in file "RTC_MCP79411.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  Register        1    wreg     unsigned char 
  2450 ;;  value           1   12[COMRAM] unsigned char 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  Register        1   13[COMRAM] unsigned char 
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, cstack
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2462 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2465 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2466 ;;Total ram usage:        2 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; Hardware stack levels required when called:    2
  2469 ;; This function calls:
  2470 ;;		_I2C_Write
  2471 ;;		_I2C_start
  2472 ;;		_I2C_stop
  2473 ;; This function is called by:
  2474 ;;		_MCP794x_setAlarm
  2475 ;;		_MCP794x_INTF_CLR
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text19
  2480  001556                     __ptext19:
  2481                           	opt stack 0
  2482  001556                     _MCP794x_writeRtcc:
  2483                           	opt stack 27
  2484                           
  2485                           ;incstack = 0
  2486                           ;MCP794x_writeRtcc@Register stored from wreg
  2487  001556  6E0E               	movwf	MCP794x_writeRtcc@Register,c
  2488                           
  2489                           ;RTC_MCP79411.c: 32: I2C_start();
  2490  001558  EC16  F00B         	call	_I2C_start	;wreg free
  2491                           
  2492                           ;RTC_MCP79411.c: 33: I2C_Write(0xDE);
  2493  00155C  0EDE               	movlw	222
  2494  00155E  ECBA  F00A         	call	_I2C_Write
  2495                           
  2496                           ;RTC_MCP79411.c: 34: I2C_Write(Register);
  2497  001562  500E               	movf	MCP794x_writeRtcc@Register,w,c
  2498  001564  ECBA  F00A         	call	_I2C_Write
  2499                           
  2500                           ;RTC_MCP79411.c: 35: I2C_Write(value);
  2501  001568  500D               	movf	MCP794x_writeRtcc@value,w,c
  2502  00156A  ECBA  F00A         	call	_I2C_Write
  2503                           
  2504                           ;RTC_MCP79411.c: 36: I2C_stop();
  2505  00156E  EC1B  F00B         	call	_I2C_stop	;wreg free
  2506  001572  0012               	return		;funcret
  2507  001574                     __end_of_MCP794x_writeRtcc:
  2508                           	opt stack 0
  2509                           tblptru	equ	0xFF8
  2510                           tblptrh	equ	0xFF7
  2511                           tblptrl	equ	0xFF6
  2512                           tablat	equ	0xFF5
  2513                           prodh	equ	0xFF4
  2514                           prodl	equ	0xFF3
  2515                           intcon	equ	0xFF2
  2516                           intcon2	equ	0xFF1
  2517                           postinc0	equ	0xFEE
  2518                           wreg	equ	0xFE8
  2519                           postdec1	equ	0xFE5
  2520                           fsr1h	equ	0xFE2
  2521                           fsr1l	equ	0xFE1
  2522                           status	equ	0xFD8
  2523                           
  2524 ;; *************** function _MCP794x_readEEPROM *****************
  2525 ;; Defined at:
  2526 ;;		line 74 in file "RTC_MCP79411.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  Register        1    wreg     unsigned char 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  Register        1    2[COMRAM] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      unsigned char 
  2533 ;; Registers used:
  2534 ;;		wreg, status,2, cstack
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2543 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2544 ;;Total ram usage:        1 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    2
  2547 ;; This function calls:
  2548 ;;		_I2C_Write
  2549 ;;		_I2C_read
  2550 ;;		_I2C_repeated_Start
  2551 ;;		_I2C_start
  2552 ;;		_I2C_stop
  2553 ;; This function is called by:
  2554 ;;		_main
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text20
  2559  0014D6                     __ptext20:
  2560                           	opt stack 0
  2561  0014D6                     _MCP794x_readEEPROM:
  2562                           	opt stack 28
  2563                           
  2564                           ;incstack = 0
  2565                           ;MCP794x_readEEPROM@Register stored from wreg
  2566  0014D6  6E03               	movwf	MCP794x_readEEPROM@Register,c
  2567                           
  2568                           ;RTC_MCP79411.c: 75: I2C_start();
  2569  0014D8  EC16  F00B         	call	_I2C_start	;wreg free
  2570                           
  2571                           ;RTC_MCP79411.c: 76: I2C_Write(0xAE);
  2572  0014DC  0EAE               	movlw	174
  2573  0014DE  ECBA  F00A         	call	_I2C_Write
  2574                           
  2575                           ;RTC_MCP79411.c: 77: I2C_Write(Register);
  2576  0014E2  5003               	movf	MCP794x_readEEPROM@Register,w,c
  2577  0014E4  ECBA  F00A         	call	_I2C_Write
  2578                           
  2579                           ;RTC_MCP79411.c: 78: I2C_repeated_Start();
  2580  0014E8  EC11  F00B         	call	_I2C_repeated_Start	;wreg free
  2581                           
  2582                           ;RTC_MCP79411.c: 79: I2C_Write(0xAE | 0x01);
  2583  0014EC  0EAF               	movlw	175
  2584  0014EE  ECBA  F00A         	call	_I2C_Write
  2585                           
  2586                           ;RTC_MCP79411.c: 80: I2C_read(1);
  2587  0014F2  0E00               	movlw	0
  2588  0014F4  6E02               	movwf	I2C_read@ACK_NACK+1,c
  2589  0014F6  0E01               	movlw	1
  2590  0014F8  6E01               	movwf	I2C_read@ACK_NACK,c
  2591  0014FA  ECD3  F00A         	call	_I2C_read	;wreg free
  2592                           
  2593                           ;RTC_MCP79411.c: 81: I2C_stop();
  2594  0014FE  EC1B  F00B         	call	_I2C_stop	;wreg free
  2595                           
  2596                           ;RTC_MCP79411.c: 82: return SSP2BUF;
  2597  001502  5075               	movf	3957,w,c	;volatile
  2598  001504  0012               	return	
  2599  001506                     __end_of_MCP794x_readEEPROM:
  2600                           	opt stack 0
  2601                           tblptru	equ	0xFF8
  2602                           tblptrh	equ	0xFF7
  2603                           tblptrl	equ	0xFF6
  2604                           tablat	equ	0xFF5
  2605                           prodh	equ	0xFF4
  2606                           prodl	equ	0xFF3
  2607                           intcon	equ	0xFF2
  2608                           intcon2	equ	0xFF1
  2609                           postinc0	equ	0xFEE
  2610                           wreg	equ	0xFE8
  2611                           postdec1	equ	0xFE5
  2612                           fsr1h	equ	0xFE2
  2613                           fsr1l	equ	0xFE1
  2614                           status	equ	0xFD8
  2615                           
  2616 ;; *************** function _I2C_repeated_Start *****************
  2617 ;; Defined at:
  2618 ;;		line 57 in file "I2C.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      void 
  2625 ;; Registers used:
  2626 ;;		None
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2636 ;;Total ram usage:        0 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_MCP794x_readEEPROM
  2642 ;;		_MCP23008_read
  2643 ;;		_MCP9801_TempRead
  2644 ;;		_EEPROM_24AA512_Read
  2645 ;;		_EEPROM_24AA512_pageRead
  2646 ;;		_MCP794x_getID
  2647 ;;		_MCP7941x_read
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text21
  2652  001622                     __ptext21:
  2653                           	opt stack 0
  2654  001622                     _I2C_repeated_Start:
  2655                           	opt stack 29
  2656                           
  2657                           ;I2C.c: 58: SSP2CON2bits.RSEN = 1;
  2658                           
  2659                           ;incstack = 0
  2660  001622  8271               	bsf	3953,1,c	;volatile
  2661  001624  B271               	btfsc	3953,1,c	;volatile
  2662  001626  D7FE               	goto	l450
  2663                           
  2664                           ;I2C.c: 60: PIR3bits.SSP2IF = 0;
  2665  001628  9EA4               	bcf	4004,7,c	;volatile
  2666  00162A  0012               	return		;funcret
  2667  00162C                     __end_of_I2C_repeated_Start:
  2668                           	opt stack 0
  2669                           tblptru	equ	0xFF8
  2670                           tblptrh	equ	0xFF7
  2671                           tblptrl	equ	0xFF6
  2672                           tablat	equ	0xFF5
  2673                           prodh	equ	0xFF4
  2674                           prodl	equ	0xFF3
  2675                           intcon	equ	0xFF2
  2676                           intcon2	equ	0xFF1
  2677                           postinc0	equ	0xFEE
  2678                           wreg	equ	0xFE8
  2679                           postdec1	equ	0xFE5
  2680                           fsr1h	equ	0xFE2
  2681                           fsr1l	equ	0xFE1
  2682                           status	equ	0xFD8
  2683                           
  2684 ;; *************** function _I2C_read *****************
  2685 ;; Defined at:
  2686 ;;		line 42 in file "I2C.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  ACK_NACK        2    0[COMRAM] int 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;		None
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  2    0[COMRAM] int 
  2693 ;; Registers used:
  2694 ;;		None
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2703 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2704 ;;Total ram usage:        2 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; This function calls:
  2707 ;;		Nothing
  2708 ;; This function is called by:
  2709 ;;		_MCP794x_readEEPROM
  2710 ;;		_MCP23008_read
  2711 ;;		_MCP9801_TempRead
  2712 ;;		_EEPROM_24AA512_Read
  2713 ;;		_EEPROM_24AA512_pageRead
  2714 ;;		_PCF8523_rtcRead
  2715 ;;		_MCP794x_getID
  2716 ;;		_MCP7941x_read
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           	psect	text22
  2721  0015A6                     __ptext22:
  2722                           	opt stack 0
  2723  0015A6                     _I2C_read:
  2724                           	opt stack 29
  2725                           
  2726                           ;I2C.c: 43: SSP2CON2bits.RCEN = 1;
  2727                           
  2728                           ;incstack = 0
  2729  0015A6  8671               	bsf	3953,3,c	;volatile
  2730  0015A8  A073               	btfss	3955,0,c	;volatile
  2731  0015AA  D7FE               	goto	l435
  2732                           
  2733                           ;I2C.c: 45: SSP2CON2bits.ACKDT = ACK_NACK;
  2734  0015AC  B001               	btfsc	I2C_read@ACK_NACK,0,c
  2735  0015AE  D002               	bra	u1105
  2736  0015B0  9A71               	bcf	3953,5,c	;volatile
  2737  0015B2  D001               	bra	u1106
  2738  0015B4                     u1105:
  2739  0015B4  8A71               	bsf	3953,5,c	;volatile
  2740  0015B6                     u1106:
  2741                           
  2742                           ;I2C.c: 46: SSP2CON2bits.ACKEN = 1;
  2743  0015B6  8871               	bsf	3953,4,c	;volatile
  2744  0015B8  A871               	btfss	3953,4,c	;volatile
  2745  0015BA  0012               	return	
  2746  0015BC  D7FD               	goto	l438
  2747  0015BE                     __end_of_I2C_read:
  2748                           	opt stack 0
  2749                           tblptru	equ	0xFF8
  2750                           tblptrh	equ	0xFF7
  2751                           tblptrl	equ	0xFF6
  2752                           tablat	equ	0xFF5
  2753                           prodh	equ	0xFF4
  2754                           prodl	equ	0xFF3
  2755                           intcon	equ	0xFF2
  2756                           intcon2	equ	0xFF1
  2757                           postinc0	equ	0xFEE
  2758                           wreg	equ	0xFE8
  2759                           postdec1	equ	0xFE5
  2760                           fsr1h	equ	0xFE2
  2761                           fsr1l	equ	0xFE1
  2762                           status	equ	0xFD8
  2763                           
  2764 ;; *************** function _I2C_buffClear *****************
  2765 ;; Defined at:
  2766 ;;		line 81 in file "I2C.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;		None
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;		None
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      void 
  2773 ;; Registers used:
  2774 ;;		wreg, cstack
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2784 ;;Total ram usage:        0 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; Hardware stack levels required when called:    2
  2787 ;; This function calls:
  2788 ;;		_I2C_Write
  2789 ;;		_I2C_start
  2790 ;;		_I2C_stop
  2791 ;; This function is called by:
  2792 ;;		_main
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text23
  2797  0015BE                     __ptext23:
  2798                           	opt stack 0
  2799  0015BE                     _I2C_buffClear:
  2800                           	opt stack 28
  2801                           
  2802                           ;I2C.c: 82: I2C_start();
  2803                           
  2804                           ;incstack = 0
  2805  0015BE  EC16  F00B         	call	_I2C_start	;wreg free
  2806                           
  2807                           ;I2C.c: 83: I2C_Write(0x00);
  2808  0015C2  0E00               	movlw	0
  2809  0015C4  ECBA  F00A         	call	_I2C_Write
  2810                           
  2811                           ;I2C.c: 84: I2C_stop();
  2812  0015C8  EC1B  F00B         	call	_I2C_stop	;wreg free
  2813  0015CC  0012               	return		;funcret
  2814  0015CE                     __end_of_I2C_buffClear:
  2815                           	opt stack 0
  2816                           tblptru	equ	0xFF8
  2817                           tblptrh	equ	0xFF7
  2818                           tblptrl	equ	0xFF6
  2819                           tablat	equ	0xFF5
  2820                           prodh	equ	0xFF4
  2821                           prodl	equ	0xFF3
  2822                           intcon	equ	0xFF2
  2823                           intcon2	equ	0xFF1
  2824                           postinc0	equ	0xFEE
  2825                           wreg	equ	0xFE8
  2826                           postdec1	equ	0xFE5
  2827                           fsr1h	equ	0xFE2
  2828                           fsr1l	equ	0xFE1
  2829                           status	equ	0xFD8
  2830                           
  2831 ;; *************** function _I2C_start *****************
  2832 ;; Defined at:
  2833 ;;		line 51 in file "I2C.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;		None
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;		None
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      void 
  2840 ;; Registers used:
  2841 ;;		None
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2851 ;;Total ram usage:        0 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_I2C_buffClear
  2857 ;;		_MCP794x_setTime
  2858 ;;		_MCP794x_setDate
  2859 ;;		_MCP794x_writeRtcc
  2860 ;;		_MCP794x_readEEPROM
  2861 ;;		_I2C_BusSCan
  2862 ;;		_MCP23008_Init
  2863 ;;		_MCP23008_Write
  2864 ;;		_MCP23008_read
  2865 ;;		_MCP9801_Init
  2866 ;;		_MCP9801_TempRead
  2867 ;;		_EEPROM_24AA512_Write
  2868 ;;		_EEPROM_24AA512_Read
  2869 ;;		_EEPROM_24AA512_pageWrite
  2870 ;;		_EEPROM_24AA512_pageRead
  2871 ;;		_PCF8523_rtcRead
  2872 ;;		_PCF8523_write
  2873 ;;		_MCP794x_writeEEPROM
  2874 ;;		_MCP794x_getID
  2875 ;;		_MCP7941x_read
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text24
  2880  00162C                     __ptext24:
  2881                           	opt stack 0
  2882  00162C                     _I2C_start:
  2883                           	opt stack 29
  2884                           
  2885                           ;I2C.c: 52: SSP2CON2bits.SEN = 1;
  2886                           
  2887                           ;incstack = 0
  2888  00162C  8071               	bsf	3953,0,c	;volatile
  2889  00162E  B071               	btfsc	3953,0,c	;volatile
  2890  001630  D7FE               	goto	l444
  2891                           
  2892                           ;I2C.c: 54: PIR3bits.SSP2IF = 0;
  2893  001632  9EA4               	bcf	4004,7,c	;volatile
  2894  001634  0012               	return		;funcret
  2895  001636                     __end_of_I2C_start:
  2896                           	opt stack 0
  2897                           tblptru	equ	0xFF8
  2898                           tblptrh	equ	0xFF7
  2899                           tblptrl	equ	0xFF6
  2900                           tablat	equ	0xFF5
  2901                           prodh	equ	0xFF4
  2902                           prodl	equ	0xFF3
  2903                           intcon	equ	0xFF2
  2904                           intcon2	equ	0xFF1
  2905                           postinc0	equ	0xFEE
  2906                           wreg	equ	0xFE8
  2907                           postdec1	equ	0xFE5
  2908                           fsr1h	equ	0xFE2
  2909                           fsr1l	equ	0xFE1
  2910                           status	equ	0xFD8
  2911                           
  2912 ;; *************** function _I2C_Write *****************
  2913 ;; Defined at:
  2914 ;;		line 31 in file "I2C.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  data            1    wreg     unsigned char 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  data            1    0[COMRAM] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, cstack
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2932 ;;Total ram usage:        1 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    1
  2935 ;; This function calls:
  2936 ;;		_I2C_stop
  2937 ;; This function is called by:
  2938 ;;		_I2C_buffClear
  2939 ;;		_MCP794x_setTime
  2940 ;;		_MCP794x_setDate
  2941 ;;		_MCP794x_writeRtcc
  2942 ;;		_MCP794x_readEEPROM
  2943 ;;		_I2C_BusSCan
  2944 ;;		_MCP23008_Init
  2945 ;;		_MCP23008_Write
  2946 ;;		_MCP23008_read
  2947 ;;		_MCP9801_Init
  2948 ;;		_MCP9801_TempRead
  2949 ;;		_EEPROM_24AA512_Write
  2950 ;;		_EEPROM_24AA512_Read
  2951 ;;		_EEPROM_24AA512_pageWrite
  2952 ;;		_EEPROM_24AA512_pageRead
  2953 ;;		_PCF8523_rtcRead
  2954 ;;		_PCF8523_write
  2955 ;;		_MCP794x_writeEEPROM
  2956 ;;		_MCP794x_getID
  2957 ;;		_MCP7941x_read
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text25
  2962  001574                     __ptext25:
  2963                           	opt stack 0
  2964  001574                     _I2C_Write:
  2965                           	opt stack 28
  2966                           
  2967                           ;incstack = 0
  2968                           ;I2C_Write@data stored from wreg
  2969  001574  6E01               	movwf	I2C_Write@data,c
  2970                           
  2971                           ;I2C.c: 32: SSP2BUF = data;
  2972  001576  C001  FF75         	movff	I2C_Write@data,3957	;volatile
  2973  00157A  A073               	btfss	3955,0,c	;volatile
  2974  00157C  D7FE               	goto	l425
  2975  00157E                     u20:
  2976                           
  2977                           ;I2C.c: 34: while (!PIR3bits.SSP2IF);
  2978  00157E  AEA4               	btfss	4004,7,c	;volatile
  2979  001580  D7FE               	goto	u20
  2980                           
  2981                           ;I2C.c: 35: PIR3bits.SSP2IF = 0;
  2982  001582  9EA4               	bcf	4004,7,c	;volatile
  2983                           
  2984                           ;I2C.c: 36: if (SSP2CON2bits.ACKSTAT) {
  2985  001584  AC71               	btfss	3953,6,c	;volatile
  2986  001586  0012               	return	
  2987                           
  2988                           ;I2C.c: 37: I2C_stop();
  2989  001588  EC1B  F00B         	call	_I2C_stop	;wreg free
  2990                           
  2991                           ;I2C.c: 38: return;
  2992  00158C  0012               	return	
  2993  00158E                     __end_of_I2C_Write:
  2994                           	opt stack 0
  2995                           tblptru	equ	0xFF8
  2996                           tblptrh	equ	0xFF7
  2997                           tblptrl	equ	0xFF6
  2998                           tablat	equ	0xFF5
  2999                           prodh	equ	0xFF4
  3000                           prodl	equ	0xFF3
  3001                           intcon	equ	0xFF2
  3002                           intcon2	equ	0xFF1
  3003                           postinc0	equ	0xFEE
  3004                           wreg	equ	0xFE8
  3005                           postdec1	equ	0xFE5
  3006                           fsr1h	equ	0xFE2
  3007                           fsr1l	equ	0xFE1
  3008                           status	equ	0xFD8
  3009                           
  3010 ;; *************** function _I2C_stop *****************
  3011 ;; Defined at:
  3012 ;;		line 63 in file "I2C.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;		None
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		None
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3030 ;;Total ram usage:        0 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; This function calls:
  3033 ;;		Nothing
  3034 ;; This function is called by:
  3035 ;;		_I2C_Write
  3036 ;;		_I2C_buffClear
  3037 ;;		_MCP794x_setTime
  3038 ;;		_MCP794x_setDate
  3039 ;;		_MCP794x_writeRtcc
  3040 ;;		_MCP794x_readEEPROM
  3041 ;;		_I2C_BusSCan
  3042 ;;		_MCP23008_Init
  3043 ;;		_MCP23008_Write
  3044 ;;		_MCP23008_read
  3045 ;;		_MCP9801_Init
  3046 ;;		_MCP9801_TempRead
  3047 ;;		_EEPROM_24AA512_Write
  3048 ;;		_EEPROM_24AA512_Read
  3049 ;;		_EEPROM_24AA512_pageWrite
  3050 ;;		_EEPROM_24AA512_pageRead
  3051 ;;		_PCF8523_rtcRead
  3052 ;;		_PCF8523_write
  3053 ;;		_MCP794x_writeEEPROM
  3054 ;;		_MCP794x_getID
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           	psect	text26
  3059  001636                     __ptext26:
  3060                           	opt stack 0
  3061  001636                     _I2C_stop:
  3062                           	opt stack 29
  3063                           
  3064                           ;I2C.c: 64: SSP2CON2bits.PEN = 1;
  3065                           
  3066                           ;incstack = 0
  3067  001636  8471               	bsf	3953,2,c	;volatile
  3068  001638  B471               	btfsc	3953,2,c	;volatile
  3069  00163A  D7FE               	goto	l456
  3070                           
  3071                           ;I2C.c: 66: PIR3bits.SSP2IF = 0;
  3072  00163C  9EA4               	bcf	4004,7,c	;volatile
  3073  00163E  0012               	return		;funcret
  3074  001640                     __end_of_I2C_stop:
  3075                           	opt stack 0
  3076                           tblptru	equ	0xFF8
  3077                           tblptrh	equ	0xFF7
  3078                           tblptrl	equ	0xFF6
  3079                           tablat	equ	0xFF5
  3080                           prodh	equ	0xFF4
  3081                           prodl	equ	0xFF3
  3082                           intcon	equ	0xFF2
  3083                           intcon2	equ	0xFF1
  3084                           postinc0	equ	0xFEE
  3085                           wreg	equ	0xFE8
  3086                           postdec1	equ	0xFE5
  3087                           fsr1h	equ	0xFE2
  3088                           fsr1l	equ	0xFE1
  3089                           status	equ	0xFD8
  3090                           
  3091 ;; *************** function _EUSART1_Write *****************
  3092 ;; Defined at:
  3093 ;;		line 127 in file "mcc_generated_files/eusart1.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  txData          1    wreg     unsigned char 
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;  txData          1    0[COMRAM] unsigned char 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      void 
  3100 ;; Registers used:
  3101 ;;		wreg
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3108 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3110 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3111 ;;Total ram usage:        1 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; This function calls:
  3114 ;;		Nothing
  3115 ;; This function is called by:
  3116 ;;		_main
  3117 ;;		_I2C_BusSCan
  3118 ;;		_EEPROM_24AA512_pageRead
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text27
  3123  0015CE                     __ptext27:
  3124                           	opt stack 0
  3125  0015CE                     _EUSART1_Write:
  3126                           	opt stack 30
  3127                           
  3128                           ;incstack = 0
  3129                           ;EUSART1_Write@txData stored from wreg
  3130  0015CE  6E01               	movwf	EUSART1_Write@txData,c
  3131  0015D0                     
  3132                           ;eusart1.c: 129: while (!PIR1bits.TX1IF) {
  3133  0015D0  A89E               	btfss	3998,4,c	;volatile
  3134  0015D2  D7FE               	goto	l1629
  3135  0015D4                     u330:
  3136                           
  3137                           ;eusart1.c: 130: }
  3138                           ;eusart1.c: 131: while (!TXSTA1bits.TRMT);
  3139  0015D4  A2AD               	btfss	4013,1,c	;volatile
  3140  0015D6  D7FE               	goto	u330
  3141                           
  3142                           ;eusart1.c: 132: TXREG1 = txData;
  3143  0015D8  C001  FFAE         	movff	EUSART1_Write@txData,4014	;volatile
  3144  0015DC  0012               	return		;funcret
  3145  0015DE                     __end_of_EUSART1_Write:
  3146                           	opt stack 0
  3147                           tblptru	equ	0xFF8
  3148                           tblptrh	equ	0xFF7
  3149                           tblptrl	equ	0xFF6
  3150                           tablat	equ	0xFF5
  3151                           prodh	equ	0xFF4
  3152                           prodl	equ	0xFF3
  3153                           intcon	equ	0xFF2
  3154                           intcon2	equ	0xFF1
  3155                           postinc0	equ	0xFEE
  3156                           wreg	equ	0xFE8
  3157                           postdec1	equ	0xFE5
  3158                           fsr1h	equ	0xFE2
  3159                           fsr1l	equ	0xFE1
  3160                           status	equ	0xFD8
  3161                           tblptru	equ	0xFF8
  3162                           tblptrh	equ	0xFF7
  3163                           tblptrl	equ	0xFF6
  3164                           tablat	equ	0xFF5
  3165                           prodh	equ	0xFF4
  3166                           prodl	equ	0xFF3
  3167                           intcon	equ	0xFF2
  3168                           intcon2	equ	0xFF1
  3169                           postinc0	equ	0xFEE
  3170                           wreg	equ	0xFE8
  3171                           postdec1	equ	0xFE5
  3172                           fsr1h	equ	0xFE2
  3173                           fsr1l	equ	0xFE1
  3174                           status	equ	0xFD8
  3175                           
  3176                           	psect	rparam
  3177  0000                     tblptru	equ	0xFF8
  3178                           tblptrh	equ	0xFF7
  3179                           tblptrl	equ	0xFF6
  3180                           tablat	equ	0xFF5
  3181                           prodh	equ	0xFF4
  3182                           prodl	equ	0xFF3
  3183                           intcon	equ	0xFF2
  3184                           intcon2	equ	0xFF1
  3185                           postinc0	equ	0xFEE
  3186                           wreg	equ	0xFE8
  3187                           postdec1	equ	0xFE5
  3188                           fsr1h	equ	0xFE2
  3189                           fsr1l	equ	0xFE1
  3190                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    57
    Data        13
    BSS         277
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      58
    BANK0           160      0       0
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_I2C_Init
    _I2C_Init->___aldiv
    ___aldiv->___wmul
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _MCP794x_setTime->_decimalToBCD
    _MCP794x_setDate->_decimalToBCD
    _MCP794x_setAlarm->_MCP794x_writeRtcc
    _decimalToBCD->___awdiv
    _MCP794x_writeRtcc->_decimalToBCD
    _MCP794x_readEEPROM->_I2C_read
    _I2C_buffClear->_I2C_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   13209
                                             21 COMRAM     3     3      0
                      _EUSART1_Write
                      _I2C_buffClear
                 _MCP794x_readEEPROM
                   _MCP794x_setAlarm
                    _MCP794x_setDate
                    _MCP794x_setTime
                  _SYSTEM_Initialize
                     _interrupt_Init
 ---------------------------------------------------------------------------------
 (1) _interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1331
                 _EUSART1_Initialize
                           _I2C_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             1     1      0    1037
                                             20 COMRAM     1     1      0
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     563
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              6 COMRAM    14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MCP794x_setTime                                      5     3      2    3153
                                             12 COMRAM     5     3      2
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
                       _decimalToBCD
 ---------------------------------------------------------------------------------
 (1) _MCP794x_setDate                                      6     3      3    3251
                                             12 COMRAM     6     3      3
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
                       _decimalToBCD
 ---------------------------------------------------------------------------------
 (1) _MCP794x_setAlarm                                     4     3      1    4481
                                             14 COMRAM     4     3      1
                  _MCP794x_writeRtcc
                       _decimalToBCD
 ---------------------------------------------------------------------------------
 (2) _decimalToBCD                                         4     2      2    2920
                                              8 COMRAM     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _MCP794x_writeRtcc                                    2     1      1    1199
                                             12 COMRAM     2     1      1
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
                       _decimalToBCD (ARG)
 ---------------------------------------------------------------------------------
 (1) _MCP794x_readEEPROM                                   1     1      0     895
                                              2 COMRAM     1     1      0
                          _I2C_Write
                           _I2C_read
                 _I2C_repeated_Start
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _I2C_repeated_Start                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_read                                             2     0      2     858
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_buffClear                                        0     0      0      15
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      15
                                              0 COMRAM     1     1      0
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write
   _I2C_buffClear
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
   _MCP794x_readEEPROM
     _I2C_Write
       _I2C_stop
     _I2C_read
     _I2C_repeated_Start
     _I2C_start
     _I2C_stop
   _MCP794x_setAlarm
     _MCP794x_writeRtcc
       _I2C_Write
         _I2C_stop
       _I2C_start
       _I2C_stop
       _decimalToBCD (ARG)
         ___awdiv
         ___awmod
     _decimalToBCD
       ___awdiv
       ___awmod
   _MCP794x_setDate
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
     _decimalToBCD
       ___awdiv
       ___awmod
   _MCP794x_setTime
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
     _decimalToBCD
       ___awdiv
       ___awmod
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _I2C_Init
       ___aldiv
         ___wmul (ARG)
       ___wmul
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   _interrupt_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0     100       8      100.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      3A       1       61.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13A       6        0.0%
DATA                 0      0     13A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr 08 21:06:16 2020

                               _MCP794x_setDate 12D0                              __size_of_I2C_Write 001A  
                          __end_of_decimalToBCD 14D6                                 _MCP794x_setTime 137E  
                                            u20 157E                                    ___awdiv@sign 0006  
                           ___wmul@multiplicand 0003                          __end_of_interrupt_Init 1604  
                              _MCP794x_setAlarm 0F42                                    __CFG_CP0$OFF 000000  
                            __size_of_I2C_start 000A                                     __CFG_OSC$HS 000000  
                                           _ADC 0025                                             l256 11AA  
                                           l425 157A                                             l450 1624  
                                           l258 11BA                                             l435 15A8  
                                           l444 162E                                             l438 15B8  
                                           l456 1638                                             l670 0F82  
                                           l671 0F98                                             l751 10E4  
                                           l672 0FBC                                             l752 10D8  
                                           l673 0FD0                                             l666 1050  
                                           l667 0F5A                                             l755 1118  
                                           l860 11F0                                             l668 1076  
                                           l756 1126                                             l748 109E  
                                           l861 1200                                             l669 0F6E  
                                           l757 113C                                             l749 10B6  
                                           l863 121E                                             l864 1216  
                                           l880 12AE                                             l881 12B8  
                                           l873 1274                                             l882 12C6  
                                           l874 1280                                             l867 123E  
                                           l868 1248                                             l876 1296  
                                           l869 1256                                             l877 128E  
                                           u330 15D4                                             u940 10E8  
                            _MCP794x_readEEPROM 14D6                                    ___awmod@sign 0006  
                                           wreg 000FE8                                      _TXSTA1bits 000FAD  
                                  __CFG_IESO$ON 000000                             ?_MCP794x_readEEPROM 0001  
                                          l1629 15D0                                            l2563 119A  
                                          STR_1 0F3E                                            STR_2 0F3C  
                                          STR_3 0F3A                                            u1000 1222  
                                          u1105 15B4                                            u1106 15B6  
                                          u1060 129A                                            u1125 0FA8  
                                          u1150 11BA                                            u1135 1018  
                                          u1170 11C6                                            _LATA 000F89  
                                          _LATB 000F8A                                            u1327 1160  
                                          _LATC 000F8B                                            u1176 11C8  
                                          _LATD 000F8C                                            u1337 1522  
                                          _LATE 000F8D                                   _EUSART1_Write 15CE  
                                 __CFG_FCMEN$ON 000000                                            _main 114E  
                              __end_of_I2C_Init 137E                                            fsr1h 000FE2  
                                          fsr1l 000FE1                                __end_of_I2C_read 15BE  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0000                                __end_of_I2C_stop 1640  
                                  ___param_bank 000000                            ??_MCP794x_readEEPROM 0003  
                                 __CFG_PLLDIV$1 000000                  __size_of_OSCILLATOR_Initialize 002A  
                 __end_of_OSCILLATOR_Initialize 1530                                 ?_interrupt_Init 0001  
                               __end_of___aldiv 114E                                           ?_main 0001  
                               __end_of___awdiv 1260                                 __end_of___awmod 12D0  
                               ___awdiv@divisor 0003                               _MCP794x_writeRtcc 1556  
                               ___awdiv@counter 0005                          MCP794x_writeRtcc@value 000D  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                              ?_MCP794x_writeRtcc 000D  
                                         _sData 0019                                           _errno 0023  
                                __CFG_CLKOEC$ON 000000                                  ?_EUSART1_Write 0001  
                             __end_of_I2C_Write 158E                                           tablat 000FF5  
                           ??_MCP794x_writeRtcc 000E                                           status 000FD8  
                             __end_of_I2C_start 1636                            MCP794x_setDate@month 000E  
            _EUSART1_DefaultFramingErrorHandler 000000                         __end_of_MCP794x_setDate 132A  
                      __size_of_SPI1_Initialize 000E                            MCP794x_setAlarm@time 000F  
                       __end_of_MCP794x_setTime 13D2                         __CFG_DSWDTOSC$INTOSCREF 000000  
                               __initialization 13D2                      __end_of_EUSART1_Initialize 149E  
                                  __end_of_main 11DC                       __end_of_MCP794x_writeRtcc 1574  
                                        ??_main 0016                                   __activetblptr 000002  
                                        _ANCON0 000F48                                          _ANCON1 000F49  
                              ___awdiv@dividend 0001                                          _ODCON1 000F42  
                                        _ODCON2 000F41                                          _ODCON3 000F40  
                                __CFG_WDTEN$OFF 000000                                          _RCREG1 000FAF  
                                        _RCSTA1 000FAC                                          _OSCCON 000FD3  
                                        _SPBRG1 000FB0                                  __CFG_WPCFG$OFF 000000  
                                        _TXREG1 000FAE                                          _TXSTA1 000FAD  
                                __CFG_WPDIS$OFF 000000                           __size_of_decimalToBCD 0038  
                                __CFG_XINST$OFF 000000                                          _TxData 0100  
                                     ??___aldiv 000F                                          ___wmul 1530  
                                     ??___awdiv 0005                                  __CFG_STVREN$ON 000000  
                                     ??___awmod 0005                          __size_of_I2C_buffClear 0010  
                      ?_EUSART1_SetErrorHandler 0001                                          clear_0 13FA  
                                        clear_1 140C                                ___awdiv@quotient 0007  
                               ___awmod@divisor 0003                                 ___awmod@counter 0005  
              ??_EUSART1_SetOverrunErrorHandler 0003                 ?_EUSART1_SetOverrunErrorHandler 0001  
                                  __pdataCOMRAM 002E                                       ?_I2C_Init 0001  
                                  __mediumconst 0000                                       ?_I2C_read 0001  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                       ?_I2C_stop 0001  
                               ??_EUSART1_Write 0001                                 __CFG_DSBOREN$ON 000000  
                                  _decimalToBCD 149E                                __end_ofexp@coeff 0F1F  
                             _SYSTEM_Initialize 158E                                __end_oflog@coeff 0F3A  
                                    __accesstop 0060                         __end_of__initialization 1412  
                     MCP794x_writeRtcc@Register 000E                        __end_of_MCP794x_setAlarm 1082  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                    __end_of_I2C_repeated_Start 162C                                ?_MCP794x_setDate 000D  
                               __CFG_IOL1WAY$ON 000000                                ?_MCP794x_setTime 000D  
                          __CFG_WPEND$PAGE_WPFP 000000                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 0016                               ??_SPI1_Initialize 0001  
                               __CFG_DSWDTEN$ON 000000                                 __CFG_DSWDTPS$G2 000000  
                    __size_of_MCP794x_writeRtcc 001E                                      ??_I2C_Init 0015  
                                    ??_I2C_read 0003                                      ??_I2C_stop 0001  
                     __end_of_SYSTEM_Initialize 15A6                                   _I2C_buffClear 15BE  
                                    __pbssBANK1 0100                 __end_of_EUSART1_SetErrorHandler 1622  
                             __CFG_PLLSEL$PLL4X 000000                                ??_interrupt_Init 0001  
                                       ?___wmul 0001          __end_of_EUSART1_SetFramingErrorHandler 1618  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 160E  
                                       _REFOCON 000F3D                                         _OSCCON2 000F87  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000F7F  
                                       _SSP1ADD 000FC8                                         _SSP2ADD 000F74  
                                       _SSP1BUF 000FC9                                         _SSP2BUF 000F75  
                                ?_I2C_buffClear 0001                                I2C_read@ACK_NACK 0001  
                                     _I2C_Write 1574                                         __Hparam 0000  
                                       __Lparam 0000                                       _I2C_start 162C  
                                       ___aldiv 1082                     __size_of_MCP794x_readEEPROM 0030  
                                       ___awdiv 11DC                                         ___awmod 1260  
                               __size_of___wmul 0026                                    __psmallconst 0F00  
                                       __pcinit 13D2                                         __ramtop 0F00  
                                       __ptext0 114E                                         __ptext1 15FA  
                                       __ptext2 158E                                         __ptext3 15DE  
                                       __ptext4 141C                                         __ptext5 1506  
                                       __ptext6 132A                                         __ptext7 1530  
                                       __ptext8 1082                                         __ptext9 1460  
                         _OSCILLATOR_Initialize 1506                                ___awmod@dividend 0001  
                              ___aldiv@dividend 0007                              _EUSART1_Initialize 1460  
                      ??_PIN_MANAGER_Initialize 0001                      __size_of_SYSTEM_Initialize 0018  
                          end_of_initialization 1412                             ?_EUSART1_Initialize 0001  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 0029  
                                    ?_I2C_Write 0001                                      ?_I2C_start 0001  
                              ___aldiv@quotient 0011                                         postdec1 000FE5  
                                       postinc0 000FEE                            ??_EUSART1_Initialize 0003  
                        MCP794x_setDate@weekDay 000D                                       _PORTBbits 000F81  
                               ??_I2C_buffClear 0002                                       _TRISDbits 000F95  
                                     _TRISEbits 000F96                               __size_of_I2C_Init 0054  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0001  
                             __size_of_I2C_read 0018                               __size_of_I2C_stop 000A  
                               _SPI1_Initialize 15DE                               ?_MCP794x_setAlarm 000F  
                             __CFG_WPFP$PAGE_63 000000                              ??_MCP794x_setAlarm 0010  
                           __CFG_MSSP7B_EN$MSK7 000000                      MCP794x_readEEPROM@Register 0003  
                                __end_of___wmul 1556                                   __pidataCOMRAM 15EC  
                         MCP794x_setTime@minute 000D                           MCP794x_setTime@second 000E  
                            _I2C_repeated_Start 1622                          ?_OSCILLATOR_Initialize 0001  
                           MCP794x_setDate@date 0012                             MCP794x_setDate@year 000F  
                           start_initialization 13D2                 __size_of_PIN_MANAGER_Initialize 0044  
                           ?_I2C_repeated_Start 0001                           __end_of_EUSART1_Write 15DE  
                                   ??_I2C_Write 0001                                     ??_I2C_start 0001  
                          ??_I2C_repeated_Start 0001                            decimalToBCD@DecValue 0009  
                                      ??___wmul 0005                       MCP794x_setAlarm@alarmMask 0012  
                             __CFG_ADCSEL$BIT10 000000                        __size_of_MCP794x_setDate 005A  
                      __size_of_MCP794x_setTime 0054                                 I2C_Init@F_clock 0015  
                                   __pbssCOMRAM 0019                             MCP794x_setTime@hour 0011  
                       __end_of_SPI1_Initialize 15EC                ??_EUSART1_SetFramingErrorHandler 0003  
               ?_EUSART1_SetFramingErrorHandler 0001                          _PIN_MANAGER_Initialize 141C  
                                      ?___aldiv 0007                                        ?___awdiv 0001  
                                      ?___awmod 0001                                     __smallconst 0F00  
                                      _BAUDCON1 000F7E              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      _I2C_Init 132A                            _EUSART1_ErrorHandler 0027  
                          __CFG_RTCOSC$T1OSCREF 000000                                        _I2C_read 15A6  
                                      _I2C_stop 1636                         _EUSART1_SetErrorHandler 1618  
                               ___aldiv@divisor 000B                                 ___aldiv@counter 000F  
                                ___wmul@product 0005         EUSART1_SetErrorHandler@interruptHandler 0001  
                                      _LATBbits 000F8A                                        _LATCbits 000F8B  
                                      _PIE3bits 000FA3                      __end_of_MCP794x_readEEPROM 1506  
                                      _PIR1bits 000F9E                                        _PIR3bits 000FA4  
                              __CFG_WDTPS$32768 000000                                        _SSP1CON1 000FC6  
                                      _SSP1STAT 000FC7                               ___wmul@multiplier 0001  
                              __CFG_SOSCSEL$DIG 000000                         __size_of_interrupt_Init 000A  
                                     main@index 0017                               __CFG_CFGPLLEN$OFF 000000  
                             ??_MCP794x_setDate 0010                               ??_MCP794x_setTime 000F  
                              ?_SPI1_Initialize 0001                                     _INTCON2bits 000FF1  
                                     copy_data0 13E6                                   ?_decimalToBCD 0009  
                                      __Hrparam 0000                                        __Lrparam 0000  
                                 I2C_Write@data 0001                         ??_OSCILLATOR_Initialize 0001  
                              __size_of___aldiv 00CC                                __size_of___awdiv 0084  
                              __size_of___awmod 0070                     __size_of_EUSART1_Initialize 003E  
                     __size_of_MCP794x_setAlarm 0140                       ??_EUSART1_SetErrorHandler 0003  
                   _EUSART1_DefaultErrorHandler 000000                            PCF8523_setDate@F7799 0036  
                                      __ptext10 1604                                        __ptext11 160E  
                                      __ptext20 14D6                                        __ptext12 1618  
                                      __ptext21 1622                                        __ptext13 137E  
                                      __ptext22 15A6                                        __ptext14 12D0  
                                      __ptext23 15BE                                        __ptext15 0F42  
                                      __ptext24 162C                                        __ptext16 149E  
                                      __ptext25 1574                                        __ptext17 1260  
                                      __ptext26 1636                                        __ptext18 11DC  
                                      __ptext27 15CE                                        __ptext19 1556  
                         __end_of_I2C_buffClear 15CE                                    _SSP1CON1bits 000FC6  
                                ??_decimalToBCD 000B                                    _SSP2CON1bits 000F72  
                                  _SSP2CON2bits 000F71                                   __size_of_main 008E  
EUSART1_SetOverrunErrorHandler@interruptHandler 0001                                    _SSP1STATbits 000FC7  
                   _EUSART1_FramingErrorHandler 002B                                    _SSP2STATbits 000F73  
                                      exp@coeff 0F01                                        log@coeff 0F1F  
                                    _INTCONbits 000FF2                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 160E         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 1604                                      _RCSTA1bits 000FAC  
                   __size_of_I2C_repeated_Start 000A  EUSART1_SetFramingErrorHandler@interruptHandler 0001  
                        __size_of_EUSART1_Write 0010                              _eusart1RxLastError 002D  
                                _interrupt_Init 15FA                                    ___aldiv@sign 0010  
                __end_of_PIN_MANAGER_Initialize 1460                            PCF8523_setTime@F7792 002E  
