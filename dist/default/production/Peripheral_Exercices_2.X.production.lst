

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Apr 04 20:00:59 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46J13
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54  0000                     
    55                           ; Version 1.45
    56                           ; Generated 16/11/2017 GMT
    57                           ; 
    58                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18LF46J13 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    91  0000                     
    92 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    93  0000                     
    94 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    95  0000                     
    96                           	psect	smallconst
    97  000F00                     __psmallconst:
    98                           	opt stack 0
    99  000F00  00                 	db	0
   100  000F01                     exp@coeff:
   101                           	opt stack 0
   102  000F01  00                 	db	0
   103  000F02  80                 	db	128
   104  000F03  3F                 	db	63
   105  000F04  72                 	db	114
   106  000F05  31                 	db	49
   107  000F06  3F                 	db	63
   108  000F07  FE                 	db	254
   109  000F08  75                 	db	117
   110  000F09  3E                 	db	62
   111  000F0A  58                 	db	88
   112  000F0B  63                 	db	99
   113  000F0C  3D                 	db	61
   114  000F0D  95                 	db	149
   115  000F0E  1D                 	db	29
   116  000F0F  3C                 	db	60
   117  000F10  C5                 	db	197
   118  000F11  AE                 	db	174
   119  000F12  3A                 	db	58
   120  000F13  79                 	db	121
   121  000F14  21                 	db	33
   122  000F15  39                 	db	57
   123  000F16  94                 	db	148
   124  000F17  80                 	db	128
   125  000F18  37                 	db	55
   126  000F19  93                 	db	147
   127  000F1A  A7                 	db	167
   128  000F1B  35                 	db	53
   129  000F1C  56                 	db	86
   130  000F1D  15                 	db	21
   131  000F1E  34                 	db	52
   132  000F1F                     __end_ofexp@coeff:
   133                           	opt stack 0
   134  000F1F                     log@coeff:
   135                           	opt stack 0
   136  000F1F  00                 	db	0
   137  000F20  00                 	db	0
   138  000F21  00                 	db	0
   139  000F22  00                 	db	0
   140  000F23  80                 	db	128
   141  000F24  3F                 	db	63
   142  000F25  F0                 	db	240
   143  000F26  FF                 	db	255
   144  000F27  BE                 	db	190
   145  000F28  E2                 	db	226
   146  000F29  A9                 	db	169
   147  000F2A  3E                 	db	62
   148  000F2B  83                 	db	131
   149  000F2C  76                 	db	118
   150  000F2D  BE                 	db	190
   151  000F2E  AE                 	db	174
   152  000F2F  2B                 	db	43
   153  000F30  3E                 	db	62
   154  000F31  3C                 	db	60
   155  000F32  C3                 	db	195
   156  000F33  BD                 	db	189
   157  000F34  D2                 	db	210
   158  000F35  13                 	db	19
   159  000F36  3D                 	db	61
   160  000F37  78                 	db	120
   161  000F38  D3                 	db	211
   162  000F39  BB                 	db	187
   163  000F3A                     __end_oflog@coeff:
   164                           	opt stack 0
   165  0000                     _ODCON3	set	3904
   166  0000                     _ODCON2	set	3905
   167  0000                     _ODCON1	set	3906
   168  0000                     _ANCON1	set	3913
   169  0000                     _ANCON0	set	3912
   170  0000                     _REFOCON	set	3901
   171  0000                     _SSP2STATbits	set	3955
   172  0000                     _SSP2BUF	set	3957
   173  0000                     _SSP2ADD	set	3956
   174  0000                     _SSP2CON2bits	set	3953
   175  0000                     _SSP2CON1bits	set	3954
   176  0000                     _TRISDbits	set	3989
   177  0000                     _PIR3bits	set	4004
   178  0000                     _PIE3bits	set	4003
   179  0000                     _LATCbits	set	3979
   180  0000                     _LATBbits	set	3978
   181  0000                     _PORTBbits	set	3969
   182  0000                     _INTCONbits	set	4082
   183  0000                     _TRISEbits	set	3990
   184  0000                     _INTCON2bits	set	4081
   185  0000                     _TRISD	set	3989
   186  0000                     _TRISC	set	3988
   187  0000                     _TRISB	set	3987
   188  0000                     _TRISA	set	3986
   189  0000                     _TRISE	set	3990
   190  0000                     _LATC	set	3979
   191  0000                     _LATB	set	3978
   192  0000                     _LATA	set	3977
   193  0000                     _LATD	set	3980
   194  0000                     _LATE	set	3981
   195  0000                     _OSCCON2	set	3975
   196  0000                     _OSCTUNE	set	3995
   197  0000                     _OSCCON	set	4051
   198  0000                     _TXREG1	set	4014
   199  0000                     _RCREG1	set	4015
   200  0000                     _RCSTA1bits	set	4012
   201  0000                     _TXSTA1bits	set	4013
   202  0000                     _PIR1bits	set	3998
   203  0000                     _SPBRGH1	set	3967
   204  0000                     _SPBRG1	set	4016
   205  0000                     _TXSTA1	set	4013
   206  0000                     _RCSTA1	set	4012
   207  0000                     _BAUDCON1	set	3966
   208  0000                     _SSP1STATbits	set	4039
   209  0000                     _SSP1BUF	set	4041
   210  0000                     _SSP1CON1bits	set	4038
   211  0000                     _SSP1ADD	set	4040
   212  0000                     _SSP1CON1	set	4038
   213  0000                     _SSP1STAT	set	4039
   214  000F3A  0D                 	db	13
   215  000F3B  00                 	db	0
   216                           
   217                           ; #config settings
   218  000F3C  00                 	db	0	; dummy byte at the end
   219  0000                     
   220                           	psect	cinit
   221  00212A                     __pcinit:
   222                           	opt stack 0
   223  00212A                     start_initialization:
   224                           	opt stack 0
   225  00212A                     __initialization:
   226                           	opt stack 0
   227                           
   228                           ; Clear objects allocated to BANK1 (256 bytes)
   229  00212A  EE01  F000         	lfsr	0,__pbssBANK1
   230  00212E  EE11 F000          	lfsr	1,256
   231  002132                     clear_0:
   232  002132  6AEE               	clrf	postinc0,c
   233  002134  50E5               	movf	postdec1,w,c
   234  002136  50E1               	movf	fsr1l,w,c
   235  002138  E1FC               	bnz	clear_0
   236  00213A  50E2               	movf	fsr1h,w,c
   237  00213C  E1FA               	bnz	clear_0
   238                           
   239                           ; Clear objects allocated to BANK0 (28 bytes)
   240  00213E  EE00  F060         	lfsr	0,__pbssBANK0
   241  002142  0E1C               	movlw	28
   242  002144                     clear_1:
   243  002144  6AEE               	clrf	postinc0,c
   244  002146  06E8               	decf	wreg,f,c
   245  002148  E1FD               	bnz	clear_1
   246                           
   247                           ; Clear objects allocated to COMRAM (3 bytes)
   248  00214A  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   249  00214C  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   250  00214E  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   251  002150                     end_of_initialization:
   252                           	opt stack 0
   253  002150                     __end_of__initialization:
   254                           	opt stack 0
   255  002150  0E00               	movlw	low (__Lmediumconst shr (0+16))
   256  002152  6EF8               	movwf	tblptru,c
   257  002154  0100               	movlb	0
   258  002156  EF27  F00F         	goto	_main	;jump to C main() function
   259                           tblptru	equ	0xFF8
   260                           postinc0	equ	0xFEE
   261                           wreg	equ	0xFE8
   262                           postdec1	equ	0xFE5
   263                           fsr1h	equ	0xFE2
   264                           fsr1l	equ	0xFE1
   265                           
   266                           	psect	bssCOMRAM
   267  00005C                     __pbssCOMRAM:
   268                           	opt stack 0
   269  00005C                     _ADC:
   270                           	opt stack 0
   271  00005C                     	ds	2
   272  00005E                     _eusart1RxLastError:
   273                           	opt stack 0
   274  00005E                     	ds	1
   275                           tblptru	equ	0xFF8
   276                           postinc0	equ	0xFEE
   277                           wreg	equ	0xFE8
   278                           postdec1	equ	0xFE5
   279                           fsr1h	equ	0xFE2
   280                           fsr1l	equ	0xFE1
   281                           
   282                           	psect	bssBANK0
   283  000060                     __pbssBANK0:
   284                           	opt stack 0
   285  000060                     _tem:
   286                           	opt stack 0
   287  000060                     	ds	10
   288  00006A                     _sData:
   289                           	opt stack 0
   290  00006A                     	ds	10
   291  000074                     _errno:
   292                           	opt stack 0
   293  000074                     	ds	2
   294  000076                     _EUSART1_ErrorHandler:
   295                           	opt stack 0
   296  000076                     	ds	2
   297  000078                     _EUSART1_OverrunErrorHandler:
   298                           	opt stack 0
   299  000078                     	ds	2
   300  00007A                     _EUSART1_FramingErrorHandler:
   301                           	opt stack 0
   302  00007A                     	ds	2
   303                           tblptru	equ	0xFF8
   304                           postinc0	equ	0xFEE
   305                           wreg	equ	0xFE8
   306                           postdec1	equ	0xFE5
   307                           fsr1h	equ	0xFE2
   308                           fsr1l	equ	0xFE1
   309                           
   310                           	psect	bssBANK1
   311  000100                     __pbssBANK1:
   312                           	opt stack 0
   313  000100                     _TxData:
   314                           	opt stack 0
   315  000100                     	ds	256
   316                           tblptru	equ	0xFF8
   317                           postinc0	equ	0xFEE
   318                           wreg	equ	0xFE8
   319                           postdec1	equ	0xFE5
   320                           fsr1h	equ	0xFE2
   321                           fsr1l	equ	0xFE1
   322                           
   323                           	psect	cstackBANK0
   324  00007C                     __pcstackBANK0:
   325                           	opt stack 0
   326  00007C                     _pow$2633:
   327                           	opt stack 0
   328                           
   329                           ; 3 bytes @ 0x0
   330  00007C                     	ds	3
   331  00007F                     _pow$2634:
   332                           	opt stack 0
   333                           
   334                           ; 3 bytes @ 0x3
   335  00007F                     	ds	3
   336  000082                     pow@sign:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x6
   340  000082                     	ds	1
   341  000083                     pow@yi:
   342                           	opt stack 0
   343                           
   344                           ; 4 bytes @ 0x7
   345  000083                     	ds	4
   346  000087                     _EEPROM_24AA512_pageWrite$2631:
   347                           	opt stack 0
   348                           
   349                           ; 3 bytes @ 0xB
   350  000087                     	ds	3
   351  00008A                     _EEPROM_24AA512_pageWrite$2632:
   352                           	opt stack 0
   353                           
   354                           ; 3 bytes @ 0xE
   355  00008A                     	ds	3
   356  00008D                     EEPROM_24AA512_pageWrite@page:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x11
   360  00008D                     	ds	1
   361  00008E                     EEPROM_24AA512_pageWrite@address:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0x12
   365  00008E                     	ds	2
   366  000090                     EEPROM_24AA512_pageWrite@index:
   367                           	opt stack 0
   368                           
   369                           ; 2 bytes @ 0x14
   370  000090                     	ds	2
   371                           tblptru	equ	0xFF8
   372                           postinc0	equ	0xFEE
   373                           wreg	equ	0xFE8
   374                           postdec1	equ	0xFE5
   375                           fsr1h	equ	0xFE2
   376                           fsr1l	equ	0xFE1
   377                           
   378                           	psect	cstackCOMRAM
   379  000001                     __pcstackCOMRAM:
   380                           	opt stack 0
   381  000001                     ??_OSCILLATOR_Initialize:
   382  000001                     ?___wmul:
   383                           	opt stack 0
   384  000001                     ?___ftpack:
   385                           	opt stack 0
   386  000001                     ?_frexp:
   387                           	opt stack 0
   388  000001                     ?___ftneg:
   389                           	opt stack 0
   390  000001                     I2C_Write@data:
   391                           	opt stack 0
   392  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
   393                           	opt stack 0
   394  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   395                           	opt stack 0
   396  000001                     EUSART1_SetErrorHandler@interruptHandler:
   397                           	opt stack 0
   398  000001                     I2C_read@ACK_NACK:
   399                           	opt stack 0
   400  000001                     ___wmul@multiplier:
   401                           	opt stack 0
   402  000001                     ___ftpack@arg:
   403                           	opt stack 0
   404  000001                     ___ftge@ff1:
   405                           	opt stack 0
   406  000001                     ___ftneg@f1:
   407                           	opt stack 0
   408  000001                     frexp@value:
   409                           	opt stack 0
   410                           
   411                           ; 3 bytes @ 0x0
   412  000001                     	ds	1
   413  000002                     
   414                           ; 1 bytes @ 0x1
   415  000002                     	ds	1
   416  000003                     EEPROM_24AA512_Read@addHigh:
   417                           	opt stack 0
   418  000003                     ___wmul@multiplicand:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x2
   422  000003                     	ds	1
   423  000004                     ___ftpack@exp:
   424                           	opt stack 0
   425  000004                     frexp@eptr:
   426                           	opt stack 0
   427  000004                     ___ftge@ff2:
   428                           	opt stack 0
   429                           
   430                           ; 3 bytes @ 0x3
   431  000004                     	ds	1
   432  000005                     ___ftpack@sign:
   433                           	opt stack 0
   434  000005                     EEPROM_24AA512_Read@addLow:
   435                           	opt stack 0
   436  000005                     ___wmul@product:
   437                           	opt stack 0
   438                           
   439                           ; 2 bytes @ 0x4
   440  000005                     	ds	1
   441  000006                     ??___ftpack:
   442  000006                     ??_frexp:
   443                           
   444                           ; 1 bytes @ 0x5
   445  000006                     	ds	1
   446  000007                     ??___ftge:
   447  000007                     ?___aldiv:
   448                           	opt stack 0
   449  000007                     ___aldiv@dividend:
   450                           	opt stack 0
   451                           
   452                           ; 4 bytes @ 0x6
   453  000007                     	ds	2
   454  000009                     ?___ftdiv:
   455                           	opt stack 0
   456  000009                     ?___awtoft:
   457                           	opt stack 0
   458  000009                     ?___lbtoft:
   459                           	opt stack 0
   460  000009                     ?___lltoft:
   461                           	opt stack 0
   462  000009                     ___awtoft@c:
   463                           	opt stack 0
   464  000009                     ___ftdiv@f1:
   465                           	opt stack 0
   466  000009                     ___lltoft@c:
   467                           	opt stack 0
   468                           
   469                           ; 4 bytes @ 0x8
   470  000009                     	ds	2
   471  00000B                     ___aldiv@divisor:
   472                           	opt stack 0
   473                           
   474                           ; 4 bytes @ 0xA
   475  00000B                     	ds	1
   476  00000C                     ___awtoft@sign:
   477                           	opt stack 0
   478  00000C                     ___lbtoft@c:
   479                           	opt stack 0
   480  00000C                     ___ftdiv@f2:
   481                           	opt stack 0
   482                           
   483                           ; 3 bytes @ 0xB
   484  00000C                     	ds	1
   485  00000D                     ??___lltoft:
   486  00000D                     ?___ftmul:
   487                           	opt stack 0
   488  00000D                     ___ftmul@f1:
   489                           	opt stack 0
   490                           
   491                           ; 3 bytes @ 0xC
   492  00000D                     	ds	2
   493  00000F                     ??___ftdiv:
   494  00000F                     ___aldiv@counter:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0xE
   498  00000F                     	ds	1
   499  000010                     ___aldiv@sign:
   500                           	opt stack 0
   501  000010                     ___ftmul@f2:
   502                           	opt stack 0
   503                           
   504                           ; 3 bytes @ 0xF
   505  000010                     	ds	1
   506  000011                     ___lltoft@exp:
   507                           	opt stack 0
   508  000011                     ___aldiv@quotient:
   509                           	opt stack 0
   510                           
   511                           ; 4 bytes @ 0x10
   512  000011                     	ds	1
   513  000012                     ___ftdiv@cntr:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x11
   517  000012                     	ds	1
   518  000013                     ??___ftmul:
   519  000013                     ___ftdiv@f3:
   520                           	opt stack 0
   521                           
   522                           ; 3 bytes @ 0x12
   523  000013                     	ds	2
   524  000015                     I2C_Init@F_clock:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x14
   528  000015                     	ds	1
   529  000016                     ___ftdiv@exp:
   530                           	opt stack 0
   531  000016                     ___ftmul@exp:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x15
   535  000016                     	ds	1
   536  000017                     ___ftdiv@sign:
   537                           	opt stack 0
   538  000017                     ___ftmul@f3_as_product:
   539                           	opt stack 0
   540                           
   541                           ; 3 bytes @ 0x16
   542  000017                     	ds	3
   543  00001A                     ___ftmul@cntr:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x19
   547  00001A                     	ds	1
   548  00001B                     ___ftmul@sign:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0x1A
   552  00001B                     	ds	1
   553  00001C                     ?___ftadd:
   554                           	opt stack 0
   555  00001C                     ___ftadd@f1:
   556                           	opt stack 0
   557                           
   558                           ; 3 bytes @ 0x1B
   559  00001C                     	ds	3
   560  00001F                     ___ftadd@f2:
   561                           	opt stack 0
   562                           
   563                           ; 3 bytes @ 0x1E
   564  00001F                     	ds	3
   565  000022                     ??___ftadd:
   566                           
   567                           ; 1 bytes @ 0x21
   568  000022                     	ds	3
   569  000025                     ___ftadd@sign:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x24
   573  000025                     	ds	1
   574  000026                     ___ftadd@exp2:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x25
   578  000026                     	ds	1
   579  000027                     ___ftadd@exp1:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0x26
   583  000027                     	ds	1
   584  000028                     ?___ftsub:
   585                           	opt stack 0
   586  000028                     ?_eval_poly:
   587                           	opt stack 0
   588  000028                     ?___fttol:
   589                           	opt stack 0
   590  000028                     ___ftsub@f1:
   591                           	opt stack 0
   592  000028                     ___fttol@f1:
   593                           	opt stack 0
   594  000028                     eval_poly@x:
   595                           	opt stack 0
   596                           
   597                           ; 3 bytes @ 0x27
   598  000028                     	ds	3
   599  00002B                     eval_poly@d:
   600                           	opt stack 0
   601  00002B                     ___ftsub@f2:
   602                           	opt stack 0
   603                           
   604                           ; 3 bytes @ 0x2A
   605  00002B                     	ds	1
   606  00002C                     ??___fttol:
   607                           
   608                           ; 1 bytes @ 0x2B
   609  00002C                     	ds	1
   610  00002D                     eval_poly@n:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x2C
   614  00002D                     	ds	1
   615  00002E                     
   616                           ; 1 bytes @ 0x2D
   617  00002E                     	ds	1
   618  00002F                     ??_eval_poly:
   619                           
   620                           ; 1 bytes @ 0x2E
   621  00002F                     	ds	2
   622  000031                     ___fttol@sign1:
   623                           	opt stack 0
   624  000031                     eval_poly@res:
   625                           	opt stack 0
   626                           
   627                           ; 3 bytes @ 0x30
   628  000031                     	ds	1
   629  000032                     ___fttol@lval:
   630                           	opt stack 0
   631                           
   632                           ; 4 bytes @ 0x31
   633  000032                     	ds	2
   634  000034                     ?_log:
   635                           	opt stack 0
   636  000034                     ?_ldexp:
   637                           	opt stack 0
   638  000034                     ldexp@value:
   639                           	opt stack 0
   640  000034                     log@x:
   641                           	opt stack 0
   642                           
   643                           ; 3 bytes @ 0x33
   644  000034                     	ds	2
   645  000036                     ___fttol@exp1:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x35
   649  000036                     	ds	1
   650  000037                     ?___altoft:
   651                           	opt stack 0
   652  000037                     ldexp@newexp:
   653                           	opt stack 0
   654  000037                     log@exponent:
   655                           	opt stack 0
   656  000037                     ___altoft@c:
   657                           	opt stack 0
   658                           
   659                           ; 4 bytes @ 0x36
   660  000037                     	ds	2
   661  000039                     ??_ldexp:
   662                           
   663                           ; 1 bytes @ 0x38
   664  000039                     	ds	2
   665  00003B                     ??___altoft:
   666                           
   667                           ; 1 bytes @ 0x3A
   668  00003B                     	ds	4
   669  00003F                     ___altoft@exp:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x3E
   673  00003F                     	ds	1
   674  000040                     ___altoft@sign:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x3F
   678  000040                     	ds	1
   679  000041                     ?_floor:
   680                           	opt stack 0
   681  000041                     floor@x:
   682                           	opt stack 0
   683                           
   684                           ; 3 bytes @ 0x40
   685  000041                     	ds	3
   686  000044                     floor@i:
   687                           	opt stack 0
   688                           
   689                           ; 3 bytes @ 0x43
   690  000044                     	ds	3
   691  000047                     floor@expon:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0x46
   695  000047                     	ds	2
   696  000049                     ?_exp:
   697                           	opt stack 0
   698  000049                     exp@x:
   699                           	opt stack 0
   700                           
   701                           ; 3 bytes @ 0x48
   702  000049                     	ds	3
   703  00004C                     _exp$2635:
   704                           	opt stack 0
   705                           
   706                           ; 3 bytes @ 0x4B
   707  00004C                     	ds	3
   708  00004F                     exp@exponent:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x4E
   712  00004F                     	ds	2
   713  000051                     exp@sign:
   714                           	opt stack 0
   715                           
   716                           ; 1 bytes @ 0x50
   717  000051                     	ds	1
   718  000052                     ?_pow:
   719                           	opt stack 0
   720  000052                     pow@x:
   721                           	opt stack 0
   722                           
   723                           ; 3 bytes @ 0x51
   724  000052                     	ds	3
   725  000055                     pow@y:
   726                           	opt stack 0
   727                           
   728                           ; 3 bytes @ 0x54
   729  000055                     	ds	3
   730  000058                     EEPROM_24AA512_pageWrite@data:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x57
   734  000058                     	ds	2
   735  00005A                     ??_main:
   736                           
   737                           ; 1 bytes @ 0x59
   738  00005A                     	ds	2
   739                           tblptru	equ	0xFF8
   740                           postinc0	equ	0xFEE
   741                           wreg	equ	0xFE8
   742                           postdec1	equ	0xFE5
   743                           fsr1h	equ	0xFE2
   744                           fsr1l	equ	0xFE1
   745                           
   746 ;;
   747 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   748 ;;
   749 ;; *************** function _main *****************
   750 ;; Defined at:
   751 ;;		line 5 in file "main.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   767 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   768 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   769 ;;Total ram usage:        2 bytes
   770 ;; Hardware stack levels required when called:    6
   771 ;; This function calls:
   772 ;;		_EEPROM_24AA512_Read
   773 ;;		_EEPROM_24AA512_pageWrite
   774 ;;		_I2C_buffClear
   775 ;;		_SYSTEM_Initialize
   776 ;;		_interrupt_Init
   777 ;; This function is called by:
   778 ;;		Startup code after reset
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           	psect	text0
   783  001E4E                     __ptext0:
   784                           	opt stack 0
   785  001E4E                     _main:
   786                           	opt stack 25
   787                           
   788                           ;main.c: 7: interrupt_Init();
   789                           
   790                           ;incstack = 0
   791  001E4E  EC2D  F011         	call	_interrupt_Init	;wreg free
   792                           
   793                           ;main.c: 8: SYSTEM_Initialize();
   794  001E52  EC06  F011         	call	_SYSTEM_Initialize	;wreg free
   795                           
   796                           ;main.c: 9: I2C_buffClear();
   797  001E56  EC1E  F011         	call	_I2C_buffClear	;wreg free
   798                           
   799                           ;main.c: 10: EEPROM_24AA512_pageWrite(3,0xA4);
   800  001E5A  0E00               	movlw	0
   801  001E5C  6E59               	movwf	EEPROM_24AA512_pageWrite@data+1,c
   802  001E5E  0EA4               	movlw	164
   803  001E60  6E58               	movwf	EEPROM_24AA512_pageWrite@data,c
   804  001E62  0E03               	movlw	3
   805  001E64  ECB6  F00A         	call	_EEPROM_24AA512_pageWrite
   806                           
   807                           ;main.c: 11: _delay((unsigned long)((5)*(16000000/4000.0)));
   808  001E68  0E1A               	movlw	26
   809  001E6A  6E5A               	movwf	??_main& (0+255),c
   810  001E6C  0EF8               	movlw	248
   811  001E6E                     u2597:
   812  001E6E  2EE8               	decfsz	wreg,f,c
   813  001E70  D7FE               	bra	u2597
   814  001E72  2E5A               	decfsz	??_main& (0+255),f,c
   815  001E74  D7FC               	bra	u2597
   816  001E76  D000               	nop2	
   817                           
   818                           ;main.c: 12: EEPROM_24AA512_Read(0x01, 0x7E);
   819  001E78  0E00               	movlw	0
   820  001E7A  6E04               	movwf	EEPROM_24AA512_Read@addHigh+1,c
   821  001E7C  0E01               	movlw	1
   822  001E7E  6E03               	movwf	EEPROM_24AA512_Read@addHigh,c
   823  001E80  0E00               	movlw	0
   824  001E82  6E06               	movwf	EEPROM_24AA512_Read@addLow+1,c
   825  001E84  0E7E               	movlw	126
   826  001E86  6E05               	movwf	EEPROM_24AA512_Read@addLow,c
   827  001E88  EC7C  F010         	call	_EEPROM_24AA512_Read	;wreg free
   828  001E8C                     
   829                           ;main.c: 15: _delay((unsigned long)((500)*(16000000/4000.0)));
   830  001E8C  0E0B               	movlw	11
   831  001E8E  6E5B               	movwf	(??_main+1)& (0+255),c
   832  001E90  0E26               	movlw	38
   833  001E92  6E5A               	movwf	??_main& (0+255),c
   834  001E94  0E5E               	movlw	94
   835  001E96                     u2607:
   836  001E96  2EE8               	decfsz	wreg,f,c
   837  001E98  D7FE               	bra	u2607
   838  001E9A  2E5A               	decfsz	??_main& (0+255),f,c
   839  001E9C  D7FC               	bra	u2607
   840  001E9E  2E5B               	decfsz	(??_main+1)& (0+255),f,c
   841  001EA0  D7FA               	bra	u2607
   842                           
   843                           ;main.c: 16: if (PORTBbits.RB0) {
   844  001EA2  A081               	btfss	3969,0,c	;volatile
   845  001EA4  D7F3               	goto	l252
   846                           
   847                           ;main.c: 17: _delay((unsigned long)((10)*(16000000/4000.0)));
   848  001EA6  0E34               	movlw	52
   849  001EA8  6E5A               	movwf	??_main& (0+255),c
   850  001EAA  0EF2               	movlw	242
   851  001EAC                     u2617:
   852  001EAC  2EE8               	decfsz	wreg,f,c
   853  001EAE  D7FE               	bra	u2617
   854  001EB0  2E5A               	decfsz	??_main& (0+255),f,c
   855  001EB2  D7FC               	bra	u2617
   856                           
   857                           ;main.c: 18: if (!PORTBbits.RB0) {
   858  001EB4  B081               	btfsc	3969,0,c	;volatile
   859  001EB6  D7EA               	goto	l252
   860                           
   861                           ;main.c: 19: do { LATBbits.LATB5 = ~LATBbits.LATB5; } while(0);
   862  001EB8  AA8A               	btfss	3978,5,c	;volatile
   863  001EBA  D002               	goto	u2520
   864  001EBC  0E01               	movlw	1
   865  001EBE  D001               	goto	u2526
   866  001EC0                     u2520:
   867  001EC0  0E00               	movlw	0
   868  001EC2                     u2526:
   869  001EC2  0AFF               	xorlw	255
   870  001EC4  6E5A               	movwf	??_main& (0+255),c
   871  001EC6  3A5A               	swapf	??_main,f,c
   872  001EC8  465A               	rlncf	??_main,f,c
   873  001ECA  508A               	movf	3978,w,c	;volatile
   874  001ECC  185A               	xorwf	??_main,w,c
   875  001ECE  0BDF               	andlw	-33
   876  001ED0  185A               	xorwf	??_main,w,c
   877  001ED2  6E8A               	movwf	3978,c	;volatile
   878  001ED4  D7DB               	goto	l252
   879  001ED6                     __end_of_main:
   880                           	opt stack 0
   881                           tblptru	equ	0xFF8
   882                           postinc0	equ	0xFEE
   883                           wreg	equ	0xFE8
   884                           postdec1	equ	0xFE5
   885                           fsr1h	equ	0xFE2
   886                           fsr1l	equ	0xFE1
   887                           
   888 ;; *************** function _interrupt_Init *****************
   889 ;; Defined at:
   890 ;;		line 15 in file "Interrupt.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		None
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   908 ;;Total ram usage:        0 bytes
   909 ;; Hardware stack levels used:    1
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text1
   918  00225A                     __ptext1:
   919                           	opt stack 0
   920  00225A                     _interrupt_Init:
   921                           	opt stack 30
   922                           
   923                           ;Interrupt.c: 16: INTCONbits.GIE = 1;
   924                           
   925                           ;incstack = 0
   926  00225A  8EF2               	bsf	intcon,7,c	;volatile
   927                           
   928                           ;Interrupt.c: 17: INTCONbits.PEIE = 1;
   929  00225C  8CF2               	bsf	intcon,6,c	;volatile
   930                           
   931                           ;Interrupt.c: 18: PIE3bits.SSP2IE = 1;
   932  00225E  8EA3               	bsf	4003,7,c	;volatile
   933                           
   934                           ;Interrupt.c: 19: PIR3bits.SSP2IF = 0;
   935  002260  9EA4               	bcf	4004,7,c	;volatile
   936  002262  0012               	return		;funcret
   937  002264                     __end_of_interrupt_Init:
   938                           	opt stack 0
   939                           tblptru	equ	0xFF8
   940                           intcon	equ	0xFF2
   941                           postinc0	equ	0xFEE
   942                           wreg	equ	0xFE8
   943                           postdec1	equ	0xFE5
   944                           fsr1h	equ	0xFE2
   945                           fsr1l	equ	0xFE1
   946                           
   947 ;; *************** function _SYSTEM_Initialize *****************
   948 ;; Defined at:
   949 ;;		line 50 in file "mcc_generated_files/mcc.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    2
   970 ;; This function calls:
   971 ;;		_EUSART1_Initialize
   972 ;;		_I2C_Init
   973 ;;		_OSCILLATOR_Initialize
   974 ;;		_PIN_MANAGER_Initialize
   975 ;;		_SPI1_Initialize
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text2
   982  00220C                     __ptext2:
   983                           	opt stack 0
   984  00220C                     _SYSTEM_Initialize:
   985                           	opt stack 28
   986                           
   987                           ;mcc.c: 52: PIN_MANAGER_Initialize();
   988                           
   989                           ;incstack = 0
   990  00220C  ECFF  F00F         	call	_PIN_MANAGER_Initialize	;wreg free
   991                           
   992                           ;mcc.c: 53: OSCILLATOR_Initialize();
   993  002210  ECAD  F010         	call	_OSCILLATOR_Initialize	;wreg free
   994                           
   995                           ;mcc.c: 54: SPI1_Initialize();
   996  002214  EC26  F011         	call	_SPI1_Initialize	;wreg free
   997                           
   998                           ;mcc.c: 55: EUSART1_Initialize();
   999  002218  EC41  F010         	call	_EUSART1_Initialize	;wreg free
  1000                           
  1001                           ;mcc.c: 56: I2C_Init(100);
  1002  00221C  0E64               	movlw	100
  1003  00221E  ECD5  F00F         	call	_I2C_Init
  1004  002222  0012               	return		;funcret
  1005  002224                     __end_of_SYSTEM_Initialize:
  1006                           	opt stack 0
  1007                           tblptru	equ	0xFF8
  1008                           intcon	equ	0xFF2
  1009                           postinc0	equ	0xFEE
  1010                           wreg	equ	0xFE8
  1011                           postdec1	equ	0xFE5
  1012                           fsr1h	equ	0xFE2
  1013                           fsr1l	equ	0xFE1
  1014                           
  1015 ;; *************** function _SPI1_Initialize *****************
  1016 ;; Defined at:
  1017 ;;		line 65 in file "mcc_generated_files/spi1.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;		None
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1035 ;;Total ram usage:        0 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; This function calls:
  1038 ;;		Nothing
  1039 ;; This function is called by:
  1040 ;;		_SYSTEM_Initialize
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text3
  1045  00224C                     __ptext3:
  1046                           	opt stack 0
  1047  00224C                     _SPI1_Initialize:
  1048                           	opt stack 29
  1049                           
  1050                           ;spi1.c: 70: SSP1STAT = 0x80;
  1051                           
  1052                           ;incstack = 0
  1053  00224C  0E80               	movlw	128
  1054  00224E  6EC7               	movwf	4039,c	;volatile
  1055                           
  1056                           ;spi1.c: 73: SSP1CON1 = 0x20;
  1057  002250  0E20               	movlw	32
  1058  002252  6EC6               	movwf	4038,c	;volatile
  1059                           
  1060                           ;spi1.c: 76: SSP1ADD = 0x00;
  1061  002254  0E00               	movlw	0
  1062  002256  6EC8               	movwf	4040,c	;volatile
  1063  002258  0012               	return		;funcret
  1064  00225A                     __end_of_SPI1_Initialize:
  1065                           	opt stack 0
  1066                           tblptru	equ	0xFF8
  1067                           intcon	equ	0xFF2
  1068                           postinc0	equ	0xFEE
  1069                           wreg	equ	0xFE8
  1070                           postdec1	equ	0xFE5
  1071                           fsr1h	equ	0xFE2
  1072                           fsr1l	equ	0xFE1
  1073                           
  1074 ;; *************** function _PIN_MANAGER_Initialize *****************
  1075 ;; Defined at:
  1076 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, status,2
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1094 ;;Total ram usage:        0 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; This function calls:
  1097 ;;		Nothing
  1098 ;; This function is called by:
  1099 ;;		_SYSTEM_Initialize
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text4
  1104  001FFE                     __ptext4:
  1105                           	opt stack 0
  1106  001FFE                     _PIN_MANAGER_Initialize:
  1107                           	opt stack 29
  1108                           
  1109                           ;pin_manager.c: 57: LATE = 0x00;
  1110                           
  1111                           ;incstack = 0
  1112  001FFE  0E00               	movlw	0
  1113  002000  6E8D               	movwf	3981,c	;volatile
  1114                           
  1115                           ;pin_manager.c: 58: LATD = 0x00;
  1116  002002  0E00               	movlw	0
  1117  002004  6E8C               	movwf	3980,c	;volatile
  1118                           
  1119                           ;pin_manager.c: 59: LATA = 0x00;
  1120  002006  0E00               	movlw	0
  1121  002008  6E89               	movwf	3977,c	;volatile
  1122                           
  1123                           ;pin_manager.c: 60: LATB = 0x00;
  1124  00200A  0E00               	movlw	0
  1125  00200C  6E8A               	movwf	3978,c	;volatile
  1126                           
  1127                           ;pin_manager.c: 61: LATC = 0x01;
  1128  00200E  0E01               	movlw	1
  1129  002010  6E8B               	movwf	3979,c	;volatile
  1130                           
  1131                           ;pin_manager.c: 66: TRISE = 0xC7;
  1132  002012  0EC7               	movlw	199
  1133  002014  6E96               	movwf	3990,c	;volatile
  1134                           
  1135                           ;pin_manager.c: 67: TRISA = 0xEF;
  1136  002016  0EEF               	movlw	239
  1137  002018  6E92               	movwf	3986,c	;volatile
  1138                           
  1139                           ;pin_manager.c: 68: TRISB = 0xDF;
  1140  00201A  0EDF               	movlw	223
  1141  00201C  6E93               	movwf	3987,c	;volatile
  1142                           
  1143                           ;pin_manager.c: 69: TRISC = 0x96;
  1144  00201E  0E96               	movlw	150
  1145  002020  6E94               	movwf	3988,c	;volatile
  1146                           
  1147                           ;pin_manager.c: 70: TRISD = 0xFF;
  1148  002022  6895               	setf	3989,c	;volatile
  1149                           
  1150                           ;pin_manager.c: 75: ANCON0 = 0x00;
  1151  002024  0E00               	movlw	0
  1152  002026  010F               	movlb	15	; () banked
  1153  002028  6F48               	movwf	72,b	;volatile
  1154                           
  1155                           ;pin_manager.c: 76: ANCON1 = 0x10;
  1156  00202A  0E10               	movlw	16
  1157  00202C  6F49               	movwf	73,b	;volatile
  1158                           
  1159                           ; BSR set to: 15
  1160                           ;pin_manager.c: 81: INTCON2bits.nRBPU = 1;
  1161  00202E  8EF1               	bsf	intcon2,7,c	;volatile
  1162                           
  1163                           ; BSR set to: 15
  1164                           ;pin_manager.c: 82: TRISEbits.RDPU = 1;
  1165  002030  8E96               	bsf	3990,7,c	;volatile
  1166                           
  1167                           ; BSR set to: 15
  1168                           ;pin_manager.c: 83: TRISEbits.REPU = 1;
  1169  002032  8C96               	bsf	3990,6,c	;volatile
  1170                           
  1171                           ;pin_manager.c: 88: ODCON1 = 0x00;
  1172  002034  0E00               	movlw	0
  1173  002036  6F42               	movwf	66,b	;volatile
  1174                           
  1175                           ;pin_manager.c: 89: ODCON2 = 0x00;
  1176  002038  0E00               	movlw	0
  1177  00203A  6F41               	movwf	65,b	;volatile
  1178                           
  1179                           ;pin_manager.c: 90: ODCON3 = 0x00;
  1180  00203C  0E00               	movlw	0
  1181  00203E  6F40               	movwf	64,b	;volatile
  1182                           
  1183                           ; BSR set to: 15
  1184  002040  0012               	return		;funcret
  1185  002042                     __end_of_PIN_MANAGER_Initialize:
  1186                           	opt stack 0
  1187                           tblptru	equ	0xFF8
  1188                           intcon	equ	0xFF2
  1189                           intcon2	equ	0xFF1
  1190                           postinc0	equ	0xFEE
  1191                           wreg	equ	0xFE8
  1192                           postdec1	equ	0xFE5
  1193                           fsr1h	equ	0xFE2
  1194                           fsr1l	equ	0xFE1
  1195                           
  1196 ;; *************** function _OSCILLATOR_Initialize *****************
  1197 ;; Defined at:
  1198 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1214 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1215 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1216 ;;Total ram usage:        2 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_SYSTEM_Initialize
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	text5
  1226  00215A                     __ptext5:
  1227                           	opt stack 0
  1228  00215A                     _OSCILLATOR_Initialize:
  1229                           	opt stack 29
  1230                           
  1231                           ;mcc.c: 62: OSCCON = 0x70;
  1232                           
  1233                           ; BSR set to: 15
  1234                           ;incstack = 0
  1235  00215A  0E70               	movlw	112
  1236  00215C  6ED3               	movwf	4051,c	;volatile
  1237                           
  1238                           ;mcc.c: 64: OSCTUNE = 0x00;
  1239  00215E  0E00               	movlw	0
  1240  002160  6E9B               	movwf	3995,c	;volatile
  1241                           
  1242                           ;mcc.c: 66: REFOCON = 0x00;
  1243  002162  0E00               	movlw	0
  1244  002164  010F               	movlb	15	; () banked
  1245  002166  6F3D               	movwf	61,b	;volatile
  1246                           
  1247                           ;mcc.c: 68: OSCCON2 = 0x14;
  1248  002168  0E14               	movlw	20
  1249  00216A  6E87               	movwf	3975,c	;volatile
  1250                           
  1251                           ; BSR set to: 15
  1252                           ;mcc.c: 69: _delay((unsigned long)((500)*(16000000/4000.0)));
  1253  00216C  0E0B               	movlw	11
  1254  00216E  6E02               	movwf	(??_OSCILLATOR_Initialize+1)& (0+255),c
  1255  002170  0E26               	movlw	38
  1256  002172  6E01               	movwf	??_OSCILLATOR_Initialize& (0+255),c
  1257  002174  0E5E               	movlw	94
  1258  002176                     u2627:
  1259  002176  2EE8               	decfsz	wreg,f,c
  1260  002178  D7FE               	bra	u2627
  1261  00217A  2E01               	decfsz	??_OSCILLATOR_Initialize& (0+255),f,c
  1262  00217C  D7FC               	bra	u2627
  1263  00217E  2E02               	decfsz	(??_OSCILLATOR_Initialize+1)& (0+255),f,c
  1264  002180  D7FA               	bra	u2627
  1265  002182  0012               	return		;funcret
  1266  002184                     __end_of_OSCILLATOR_Initialize:
  1267                           	opt stack 0
  1268                           tblptru	equ	0xFF8
  1269                           intcon	equ	0xFF2
  1270                           intcon2	equ	0xFF1
  1271                           postinc0	equ	0xFEE
  1272                           wreg	equ	0xFE8
  1273                           postdec1	equ	0xFE5
  1274                           fsr1h	equ	0xFE2
  1275                           fsr1l	equ	0xFE1
  1276                           
  1277 ;; *************** function _I2C_Init *****************
  1278 ;; Defined at:
  1279 ;;		line 20 in file "I2C.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  F_clock         1    wreg     unsigned char 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  F_clock         1   20[COMRAM] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1297 ;;Total ram usage:        1 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    1
  1300 ;; This function calls:
  1301 ;;		___aldiv
  1302 ;;		___wmul
  1303 ;; This function is called by:
  1304 ;;		_SYSTEM_Initialize
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text6
  1309  001FAA                     __ptext6:
  1310                           	opt stack 0
  1311  001FAA                     _I2C_Init:
  1312                           	opt stack 28
  1313                           
  1314                           ;incstack = 0
  1315                           ;I2C_Init@F_clock stored from wreg
  1316  001FAA  6E15               	movwf	I2C_Init@F_clock,c
  1317                           
  1318                           ;I2C.c: 21: TRISDbits.TRISD0 = 1;
  1319  001FAC  8095               	bsf	3989,0,c	;volatile
  1320                           
  1321                           ;I2C.c: 22: TRISDbits.TRISD1 = 1;
  1322  001FAE  8295               	bsf	3989,1,c	;volatile
  1323                           
  1324                           ;I2C.c: 23: SSP2CON1bits.WCOL = 0;
  1325  001FB0  9E72               	bcf	3954,7,c	;volatile
  1326                           
  1327                           ;I2C.c: 24: SSP2CON1bits.SSPEN = 1;
  1328  001FB2  8A72               	bsf	3954,5,c	;volatile
  1329                           
  1330                           ;I2C.c: 25: SSP2CON1bits.SSPM = 0x08;
  1331  001FB4  5072               	movf	3954,w,c	;volatile
  1332  001FB6  0BF0               	andlw	-16
  1333  001FB8  0908               	iorlw	8
  1334  001FBA  6E72               	movwf	3954,c	;volatile
  1335                           
  1336                           ;I2C.c: 26: SSP2CON2bits.ACKDT = 0;
  1337  001FBC  9A71               	bcf	3953,5,c	;volatile
  1338                           
  1339                           ;I2C.c: 27: SSP2CON2bits.ACKEN = 1;
  1340  001FBE  8871               	bsf	3953,4,c	;volatile
  1341                           
  1342                           ;I2C.c: 28: SSP2ADD = (16000000 / ((F_clock * 1000) * 4)) - 1;
  1343  001FC0  0E00               	movlw	0
  1344  001FC2  6E07               	movwf	___aldiv@dividend,c
  1345  001FC4  0E24               	movlw	36
  1346  001FC6  6E08               	movwf	___aldiv@dividend+1,c
  1347  001FC8  0EF4               	movlw	244
  1348  001FCA  6E09               	movwf	___aldiv@dividend+2,c
  1349  001FCC  0E00               	movlw	0
  1350  001FCE  6E0A               	movwf	___aldiv@dividend+3,c
  1351  001FD0  C015  F001         	movff	I2C_Init@F_clock,___wmul@multiplier
  1352  001FD4  6A02               	clrf	___wmul@multiplier+1,c
  1353  001FD6  0E0F               	movlw	15
  1354  001FD8  6E04               	movwf	___wmul@multiplicand+1,c
  1355  001FDA  0EA0               	movlw	160
  1356  001FDC  6E03               	movwf	___wmul@multiplicand,c
  1357  001FDE  ECC2  F010         	call	___wmul	;wreg free
  1358  001FE2  C001  F00B         	movff	?___wmul,___aldiv@divisor
  1359  001FE6  C002  F00C         	movff	?___wmul+1,___aldiv@divisor+1
  1360  001FEA  0E00               	movlw	0
  1361  001FEC  BE0C               	btfsc	___aldiv@divisor+1,7,c
  1362  001FEE  0EFF               	movlw	-1
  1363  001FF0  6E0D               	movwf	___aldiv@divisor+2,c
  1364  001FF2  6E0E               	movwf	___aldiv@divisor+3,c
  1365  001FF4  EC77  F00D         	call	___aldiv	;wreg free
  1366  001FF8  0407               	decf	?___aldiv,w,c
  1367  001FFA  6E74               	movwf	3956,c	;volatile
  1368  001FFC  0012               	return		;funcret
  1369  001FFE                     __end_of_I2C_Init:
  1370                           	opt stack 0
  1371                           tblptru	equ	0xFF8
  1372                           intcon	equ	0xFF2
  1373                           intcon2	equ	0xFF1
  1374                           postinc0	equ	0xFEE
  1375                           wreg	equ	0xFE8
  1376                           postdec1	equ	0xFE5
  1377                           fsr1h	equ	0xFE2
  1378                           fsr1l	equ	0xFE1
  1379                           
  1380 ;; *************** function ___aldiv *****************
  1381 ;; Defined at:
  1382 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  dividend        4    6[COMRAM] long 
  1385 ;;  divisor         4   10[COMRAM] long 
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  quotient        4   16[COMRAM] long 
  1388 ;;  sign            1   15[COMRAM] unsigned char 
  1389 ;;  counter         1   14[COMRAM] unsigned char 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  4    6[COMRAM] long 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1399 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1400 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1402 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1403 ;;Total ram usage:       14 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; This function calls:
  1406 ;;		Nothing
  1407 ;; This function is called by:
  1408 ;;		_I2C_Init
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text7
  1413  001AEE                     __ptext7:
  1414                           	opt stack 0
  1415  001AEE                     ___aldiv:
  1416                           	opt stack 28
  1417                           
  1418                           ;incstack = 0
  1419  001AEE  0E00               	movlw	0
  1420  001AF0  6E10               	movwf	___aldiv@sign,c
  1421  001AF2  AE0E               	btfss	___aldiv@divisor+3,7,c
  1422  001AF4  D00A               	goto	l610
  1423  001AF6  1E0E               	comf	___aldiv@divisor+3,f,c
  1424  001AF8  1E0D               	comf	___aldiv@divisor+2,f,c
  1425  001AFA  1E0C               	comf	___aldiv@divisor+1,f,c
  1426  001AFC  6C0B               	negf	___aldiv@divisor,c
  1427  001AFE  0E00               	movlw	0
  1428  001B00  220C               	addwfc	___aldiv@divisor+1,f,c
  1429  001B02  220D               	addwfc	___aldiv@divisor+2,f,c
  1430  001B04  220E               	addwfc	___aldiv@divisor+3,f,c
  1431  001B06  0E01               	movlw	1
  1432  001B08  6E10               	movwf	___aldiv@sign,c
  1433  001B0A                     l610:
  1434  001B0A  AE0A               	btfss	___aldiv@dividend+3,7,c
  1435  001B0C  D00A               	goto	l611
  1436  001B0E  1E0A               	comf	___aldiv@dividend+3,f,c
  1437  001B10  1E09               	comf	___aldiv@dividend+2,f,c
  1438  001B12  1E08               	comf	___aldiv@dividend+1,f,c
  1439  001B14  6C07               	negf	___aldiv@dividend,c
  1440  001B16  0E00               	movlw	0
  1441  001B18  2208               	addwfc	___aldiv@dividend+1,f,c
  1442  001B1A  2209               	addwfc	___aldiv@dividend+2,f,c
  1443  001B1C  220A               	addwfc	___aldiv@dividend+3,f,c
  1444  001B1E  0E01               	movlw	1
  1445  001B20  1A10               	xorwf	___aldiv@sign,f,c
  1446  001B22                     l611:
  1447  001B22  0E00               	movlw	0
  1448  001B24  6E11               	movwf	___aldiv@quotient,c
  1449  001B26  0E00               	movlw	0
  1450  001B28  6E12               	movwf	___aldiv@quotient+1,c
  1451  001B2A  0E00               	movlw	0
  1452  001B2C  6E13               	movwf	___aldiv@quotient+2,c
  1453  001B2E  0E00               	movlw	0
  1454  001B30  6E14               	movwf	___aldiv@quotient+3,c
  1455  001B32  500B               	movf	___aldiv@divisor,w,c
  1456  001B34  100C               	iorwf	___aldiv@divisor+1,w,c
  1457  001B36  100D               	iorwf	___aldiv@divisor+2,w,c
  1458  001B38  100E               	iorwf	___aldiv@divisor+3,w,c
  1459  001B3A  B4D8               	btfsc	status,2,c
  1460  001B3C  D02A               	goto	l618
  1461  001B3E  0E01               	movlw	1
  1462  001B40  6E0F               	movwf	___aldiv@counter,c
  1463  001B42  D006               	goto	l613
  1464  001B44  90D8               	bcf	status,0,c
  1465  001B46  360B               	rlcf	___aldiv@divisor,f,c
  1466  001B48  360C               	rlcf	___aldiv@divisor+1,f,c
  1467  001B4A  360D               	rlcf	___aldiv@divisor+2,f,c
  1468  001B4C  360E               	rlcf	___aldiv@divisor+3,f,c
  1469  001B4E  2A0F               	incf	___aldiv@counter,f,c
  1470  001B50                     l613:
  1471  001B50  AE0E               	btfss	___aldiv@divisor+3,7,c
  1472  001B52  D7F8               	goto	l614
  1473  001B54                     u2210:
  1474  001B54  90D8               	bcf	status,0,c
  1475  001B56  3611               	rlcf	___aldiv@quotient,f,c
  1476  001B58  3612               	rlcf	___aldiv@quotient+1,f,c
  1477  001B5A  3613               	rlcf	___aldiv@quotient+2,f,c
  1478  001B5C  3614               	rlcf	___aldiv@quotient+3,f,c
  1479  001B5E  500B               	movf	___aldiv@divisor,w,c
  1480  001B60  5C07               	subwf	___aldiv@dividend,w,c
  1481  001B62  500C               	movf	___aldiv@divisor+1,w,c
  1482  001B64  5808               	subwfb	___aldiv@dividend+1,w,c
  1483  001B66  500D               	movf	___aldiv@divisor+2,w,c
  1484  001B68  5809               	subwfb	___aldiv@dividend+2,w,c
  1485  001B6A  500E               	movf	___aldiv@divisor+3,w,c
  1486  001B6C  580A               	subwfb	___aldiv@dividend+3,w,c
  1487  001B6E  A0D8               	btfss	status,0,c
  1488  001B70  D009               	goto	l617
  1489  001B72  500B               	movf	___aldiv@divisor,w,c
  1490  001B74  5E07               	subwf	___aldiv@dividend,f,c
  1491  001B76  500C               	movf	___aldiv@divisor+1,w,c
  1492  001B78  5A08               	subwfb	___aldiv@dividend+1,f,c
  1493  001B7A  500D               	movf	___aldiv@divisor+2,w,c
  1494  001B7C  5A09               	subwfb	___aldiv@dividend+2,f,c
  1495  001B7E  500E               	movf	___aldiv@divisor+3,w,c
  1496  001B80  5A0A               	subwfb	___aldiv@dividend+3,f,c
  1497  001B82  8011               	bsf	___aldiv@quotient,0,c
  1498  001B84                     l617:
  1499  001B84  90D8               	bcf	status,0,c
  1500  001B86  320E               	rrcf	___aldiv@divisor+3,f,c
  1501  001B88  320D               	rrcf	___aldiv@divisor+2,f,c
  1502  001B8A  320C               	rrcf	___aldiv@divisor+1,f,c
  1503  001B8C  320B               	rrcf	___aldiv@divisor,f,c
  1504  001B8E  2E0F               	decfsz	___aldiv@counter,f,c
  1505  001B90  D7E1               	goto	u2210
  1506  001B92                     l618:
  1507  001B92  5010               	movf	___aldiv@sign,w,c
  1508  001B94  B4D8               	btfsc	status,2,c
  1509  001B96  D008               	goto	l619
  1510  001B98  1E14               	comf	___aldiv@quotient+3,f,c
  1511  001B9A  1E13               	comf	___aldiv@quotient+2,f,c
  1512  001B9C  1E12               	comf	___aldiv@quotient+1,f,c
  1513  001B9E  6C11               	negf	___aldiv@quotient,c
  1514  001BA0  0E00               	movlw	0
  1515  001BA2  2212               	addwfc	___aldiv@quotient+1,f,c
  1516  001BA4  2213               	addwfc	___aldiv@quotient+2,f,c
  1517  001BA6  2214               	addwfc	___aldiv@quotient+3,f,c
  1518  001BA8                     l619:
  1519  001BA8  C011  F007         	movff	___aldiv@quotient,?___aldiv
  1520  001BAC  C012  F008         	movff	___aldiv@quotient+1,?___aldiv+1
  1521  001BB0  C013  F009         	movff	___aldiv@quotient+2,?___aldiv+2
  1522  001BB4  C014  F00A         	movff	___aldiv@quotient+3,?___aldiv+3
  1523  001BB8  0012               	return	
  1524  001BBA                     __end_of___aldiv:
  1525                           	opt stack 0
  1526                           tblptru	equ	0xFF8
  1527                           intcon	equ	0xFF2
  1528                           intcon2	equ	0xFF1
  1529                           postinc0	equ	0xFEE
  1530                           wreg	equ	0xFE8
  1531                           postdec1	equ	0xFE5
  1532                           fsr1h	equ	0xFE2
  1533                           fsr1l	equ	0xFE1
  1534                           status	equ	0xFD8
  1535                           
  1536 ;; *************** function _EUSART1_Initialize *****************
  1537 ;; Defined at:
  1538 ;;		line 69 in file "mcc_generated_files/eusart1.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1556 ;;Total ram usage:        0 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    1
  1559 ;; This function calls:
  1560 ;;		_EUSART1_SetErrorHandler
  1561 ;;		_EUSART1_SetFramingErrorHandler
  1562 ;;		_EUSART1_SetOverrunErrorHandler
  1563 ;; This function is called by:
  1564 ;;		_SYSTEM_Initialize
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text8
  1569  002082                     __ptext8:
  1570                           	opt stack 0
  1571  002082                     _EUSART1_Initialize:
  1572                           	opt stack 28
  1573                           
  1574                           ;eusart1.c: 74: BAUDCON1 = 0x18;
  1575                           
  1576                           ;incstack = 0
  1577  002082  0E18               	movlw	24
  1578  002084  6E7E               	movwf	3966,c	;volatile
  1579                           
  1580                           ;eusart1.c: 77: RCSTA1 = 0x98;
  1581  002086  0E98               	movlw	152
  1582  002088  6EAC               	movwf	4012,c	;volatile
  1583                           
  1584                           ;eusart1.c: 80: TXSTA1 = 0x24;
  1585  00208A  0E24               	movlw	36
  1586  00208C  6EAD               	movwf	4013,c	;volatile
  1587                           
  1588                           ;eusart1.c: 83: SPBRG1 = 0xCF;
  1589  00208E  0ECF               	movlw	207
  1590  002090  6EB0               	movwf	4016,c	;volatile
  1591                           
  1592                           ;eusart1.c: 86: SPBRGH1 = 0x00;
  1593  002092  0E00               	movlw	0
  1594  002094  6E7F               	movwf	3967,c	;volatile
  1595                           
  1596                           ;eusart1.c: 89: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  1597  002096  0E00               	movlw	0
  1598  002098  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  1599  00209A  0E00               	movlw	0
  1600  00209C  6E02               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  1601  00209E  EC37  F011         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1602                           
  1603                           ;eusart1.c: 90: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  1604  0020A2  0E00               	movlw	0
  1605  0020A4  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  1606  0020A6  0E00               	movlw	0
  1607  0020A8  6E02               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  1608  0020AA  EC32  F011         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1609                           
  1610                           ;eusart1.c: 91: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  1611  0020AE  0E00               	movlw	0
  1612  0020B0  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  1613  0020B2  0E00               	movlw	0
  1614  0020B4  6E02               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  1615  0020B6  EC3C  F011         	call	_EUSART1_SetErrorHandler	;wreg free
  1616                           
  1617                           ;eusart1.c: 93: eusart1RxLastError.status = 0;
  1618  0020BA  0E00               	movlw	0
  1619  0020BC  6E5E               	movwf	_eusart1RxLastError,c	;volatile
  1620  0020BE  0012               	return		;funcret
  1621  0020C0                     __end_of_EUSART1_Initialize:
  1622                           	opt stack 0
  1623                           tblptru	equ	0xFF8
  1624                           intcon	equ	0xFF2
  1625                           intcon2	equ	0xFF1
  1626                           postinc0	equ	0xFEE
  1627                           wreg	equ	0xFE8
  1628                           postdec1	equ	0xFE5
  1629                           fsr1h	equ	0xFE2
  1630                           fsr1l	equ	0xFE1
  1631                           status	equ	0xFD8
  1632                           
  1633 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1634 ;; Defined at:
  1635 ;;		line 179 in file "mcc_generated_files/eusart1.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1638 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1650 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1653 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1654 ;;Total ram usage:        2 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_EUSART1_Initialize
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text9
  1664  002264                     __ptext9:
  1665                           	opt stack 0
  1666  002264                     _EUSART1_SetOverrunErrorHandler:
  1667                           	opt stack 28
  1668                           
  1669                           ;eusart1.c: 180: EUSART1_OverrunErrorHandler = interruptHandler;
  1670                           
  1671                           ;incstack = 0
  1672  002264  C001  F078         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1673  002268  C002  F079         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1674  00226C  0012               	return		;funcret
  1675  00226E                     __end_of_EUSART1_SetOverrunErrorHandler:
  1676                           	opt stack 0
  1677                           tblptru	equ	0xFF8
  1678                           intcon	equ	0xFF2
  1679                           intcon2	equ	0xFF1
  1680                           postinc0	equ	0xFEE
  1681                           wreg	equ	0xFE8
  1682                           postdec1	equ	0xFE5
  1683                           fsr1h	equ	0xFE2
  1684                           fsr1l	equ	0xFE1
  1685                           status	equ	0xFD8
  1686                           
  1687 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1688 ;; Defined at:
  1689 ;;		line 175 in file "mcc_generated_files/eusart1.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1692 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;		None
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      void 
  1697 ;; Registers used:
  1698 ;;		wreg, status,2, status,0
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1708 ;;Total ram usage:        2 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		_EUSART1_Initialize
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text10
  1718  00226E                     __ptext10:
  1719                           	opt stack 0
  1720  00226E                     _EUSART1_SetFramingErrorHandler:
  1721                           	opt stack 28
  1722                           
  1723                           ;eusart1.c: 176: EUSART1_FramingErrorHandler = interruptHandler;
  1724                           
  1725                           ;incstack = 0
  1726  00226E  C001  F07A         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1727  002272  C002  F07B         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1728  002276  0012               	return		;funcret
  1729  002278                     __end_of_EUSART1_SetFramingErrorHandler:
  1730                           	opt stack 0
  1731                           tblptru	equ	0xFF8
  1732                           intcon	equ	0xFF2
  1733                           intcon2	equ	0xFF1
  1734                           postinc0	equ	0xFEE
  1735                           wreg	equ	0xFE8
  1736                           postdec1	equ	0xFE5
  1737                           fsr1h	equ	0xFE2
  1738                           fsr1l	equ	0xFE1
  1739                           status	equ	0xFD8
  1740                           
  1741 ;; *************** function _EUSART1_SetErrorHandler *****************
  1742 ;; Defined at:
  1743 ;;		line 183 in file "mcc_generated_files/eusart1.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1746 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;		None
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1762 ;;Total ram usage:        2 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_EUSART1_Initialize
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text11
  1772  002278                     __ptext11:
  1773                           	opt stack 0
  1774  002278                     _EUSART1_SetErrorHandler:
  1775                           	opt stack 28
  1776                           
  1777                           ;eusart1.c: 184: EUSART1_ErrorHandler = interruptHandler;
  1778                           
  1779                           ;incstack = 0
  1780  002278  C001  F076         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1781  00227C  C002  F077         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1782  002280  0012               	return		;funcret
  1783  002282                     __end_of_EUSART1_SetErrorHandler:
  1784                           	opt stack 0
  1785                           tblptru	equ	0xFF8
  1786                           intcon	equ	0xFF2
  1787                           intcon2	equ	0xFF1
  1788                           postinc0	equ	0xFEE
  1789                           wreg	equ	0xFE8
  1790                           postdec1	equ	0xFE5
  1791                           fsr1h	equ	0xFE2
  1792                           fsr1l	equ	0xFE1
  1793                           status	equ	0xFD8
  1794                           
  1795 ;; *************** function _I2C_buffClear *****************
  1796 ;; Defined at:
  1797 ;;		line 81 in file "I2C.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1815 ;;Total ram usage:        0 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    2
  1818 ;; This function calls:
  1819 ;;		_I2C_Write
  1820 ;;		_I2C_start
  1821 ;;		_I2C_stop
  1822 ;; This function is called by:
  1823 ;;		_main
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text12
  1828  00223C                     __ptext12:
  1829                           	opt stack 0
  1830  00223C                     _I2C_buffClear:
  1831                           	opt stack 28
  1832                           
  1833                           ;I2C.c: 82: I2C_start();
  1834                           
  1835                           ;incstack = 0
  1836  00223C  EC41  F011         	call	_I2C_start	;wreg free
  1837                           
  1838                           ;I2C.c: 83: I2C_Write(0x00);
  1839  002240  0E00               	movlw	0
  1840  002242  ECF9  F010         	call	_I2C_Write
  1841                           
  1842                           ;I2C.c: 84: I2C_stop();
  1843  002246  EC4B  F011         	call	_I2C_stop	;wreg free
  1844  00224A  0012               	return		;funcret
  1845  00224C                     __end_of_I2C_buffClear:
  1846                           	opt stack 0
  1847                           tblptru	equ	0xFF8
  1848                           intcon	equ	0xFF2
  1849                           intcon2	equ	0xFF1
  1850                           postinc0	equ	0xFEE
  1851                           wreg	equ	0xFE8
  1852                           postdec1	equ	0xFE5
  1853                           fsr1h	equ	0xFE2
  1854                           fsr1l	equ	0xFE1
  1855                           status	equ	0xFD8
  1856                           
  1857 ;; *************** function _EEPROM_24AA512_pageWrite *****************
  1858 ;; Defined at:
  1859 ;;		line 32 in file "_24AA512_EEPROM.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  page            1    wreg     unsigned char 
  1862 ;;  data            2   87[COMRAM] int 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;  page            1   17[BANK0 ] unsigned char 
  1865 ;;  index           2   20[BANK0 ] int 
  1866 ;;  address         2   18[BANK0 ] unsigned int 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      unsigned char 
  1869 ;; Registers used:
  1870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1877 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1879 ;;      Totals:         2      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1880 ;;Total ram usage:       13 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    5
  1883 ;; This function calls:
  1884 ;;		_I2C_Write
  1885 ;;		_I2C_start
  1886 ;;		_I2C_stop
  1887 ;;		___ftadd
  1888 ;;		___ftmul
  1889 ;;		___ftneg
  1890 ;;		___fttol
  1891 ;;		___lbtoft
  1892 ;;		_pow
  1893 ;; This function is called by:
  1894 ;;		_main
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text13
  1899  00156C                     __ptext13:
  1900                           	opt stack 0
  1901  00156C                     _EEPROM_24AA512_pageWrite:
  1902                           	opt stack 25
  1903                           
  1904                           ;incstack = 0
  1905                           ;EEPROM_24AA512_pageWrite@page stored from wreg
  1906  00156C  0100               	movlb	0	; () banked
  1907  00156E  6F8D               	movwf	EEPROM_24AA512_pageWrite@page& (0+255),b
  1908                           
  1909                           ;_24AA512_EEPROM.c: 33: uint16_t address = (page * pow(2, 7) - pow(2, 7));
  1910  001570  0E00               	movlw	0
  1911  001572  6E55               	movwf	pow@y,c
  1912  001574  0EE0               	movlw	224
  1913  001576  6E56               	movwf	pow@y+1,c
  1914  001578  0E40               	movlw	64
  1915  00157A  6E57               	movwf	pow@y+2,c
  1916  00157C  0E00               	movlw	0
  1917  00157E  6E52               	movwf	pow@x,c
  1918  001580  0E00               	movlw	0
  1919  001582  6E53               	movwf	pow@x+1,c
  1920  001584  0E40               	movlw	64
  1921  001586  6E54               	movwf	pow@x+2,c
  1922  001588  EC69  F009         	call	_pow	;wreg free
  1923  00158C  C052  F087         	movff	?_pow,_EEPROM_24AA512_pageWrite$2631
  1924  001590  C053  F088         	movff	?_pow+1,_EEPROM_24AA512_pageWrite$2631+1
  1925  001594  C054  F089         	movff	?_pow+2,_EEPROM_24AA512_pageWrite$2631+2
  1926                           
  1927                           ;_24AA512_EEPROM.c: 33: uint16_t address = (page * pow(2, 7) - pow(2, 7));
  1928  001598  0E00               	movlw	0
  1929  00159A  6E55               	movwf	pow@y,c
  1930  00159C  0EE0               	movlw	224
  1931  00159E  6E56               	movwf	pow@y+1,c
  1932  0015A0  0E40               	movlw	64
  1933  0015A2  6E57               	movwf	pow@y+2,c
  1934  0015A4  0E00               	movlw	0
  1935  0015A6  6E52               	movwf	pow@x,c
  1936  0015A8  0E00               	movlw	0
  1937  0015AA  6E53               	movwf	pow@x+1,c
  1938  0015AC  0E40               	movlw	64
  1939  0015AE  6E54               	movwf	pow@x+2,c
  1940  0015B0  EC69  F009         	call	_pow	;wreg free
  1941  0015B4  C052  F08A         	movff	?_pow,_EEPROM_24AA512_pageWrite$2632
  1942  0015B8  C053  F08B         	movff	?_pow+1,_EEPROM_24AA512_pageWrite$2632+1
  1943  0015BC  C054  F08C         	movff	?_pow+2,_EEPROM_24AA512_pageWrite$2632+2
  1944                           
  1945                           ;_24AA512_EEPROM.c: 33: uint16_t address = (page * pow(2, 7) - pow(2, 7));
  1946  0015C0  C087  F001         	movff	_EEPROM_24AA512_pageWrite$2631,___ftneg@f1
  1947  0015C4  C088  F002         	movff	_EEPROM_24AA512_pageWrite$2631+1,___ftneg@f1+1
  1948  0015C8  C089  F003         	movff	_EEPROM_24AA512_pageWrite$2631+2,___ftneg@f1+2
  1949  0015CC  ECD5  F010         	call	___ftneg	;wreg free
  1950  0015D0  C001  F01F         	movff	?___ftneg,___ftadd@f2
  1951  0015D4  C002  F020         	movff	?___ftneg+1,___ftadd@f2+1
  1952  0015D8  C003  F021         	movff	?___ftneg+2,___ftadd@f2+2
  1953  0015DC  C08A  F010         	movff	_EEPROM_24AA512_pageWrite$2632,___ftmul@f2
  1954  0015E0  C08B  F011         	movff	_EEPROM_24AA512_pageWrite$2632+1,___ftmul@f2+1
  1955  0015E4  C08C  F012         	movff	_EEPROM_24AA512_pageWrite$2632+2,___ftmul@f2+2
  1956  0015E8  0100               	movlb	0	; () banked
  1957  0015EA  518D               	movf	EEPROM_24AA512_pageWrite@page& (0+255),w,b
  1958  0015EC  ECE7  F010         	call	___lbtoft
  1959  0015F0  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  1960  0015F4  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  1961  0015F8  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  1962  0015FC  ECB2  F00B         	call	___ftmul	;wreg free
  1963  001600  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  1964  001604  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  1965  001608  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  1966  00160C  EC93  F008         	call	___ftadd	;wreg free
  1967  001610  C01C  F028         	movff	?___ftadd,___fttol@f1
  1968  001614  C01D  F029         	movff	?___ftadd+1,___fttol@f1+1
  1969  001618  C01E  F02A         	movff	?___ftadd+2,___fttol@f1+2
  1970  00161C  EC38  F00B         	call	___fttol	;wreg free
  1971  001620  C028  F08E         	movff	?___fttol,EEPROM_24AA512_pageWrite@address
  1972  001624  C029  F08F         	movff	?___fttol+1,EEPROM_24AA512_pageWrite@address+1
  1973                           
  1974                           ;_24AA512_EEPROM.c: 34: I2C_start();
  1975  001628  EC41  F011         	call	_I2C_start	;wreg free
  1976                           
  1977                           ;_24AA512_EEPROM.c: 35: I2C_Write(0xA0);
  1978  00162C  0EA0               	movlw	160
  1979  00162E  ECF9  F010         	call	_I2C_Write
  1980                           
  1981                           ;_24AA512_EEPROM.c: 36: I2C_Write(address >> 8);
  1982  001632  0100               	movlb	0	; () banked
  1983  001634  518F               	movf	(EEPROM_24AA512_pageWrite@address+1)& (0+255),w,b
  1984  001636  ECF9  F010         	call	_I2C_Write
  1985                           
  1986                           ;_24AA512_EEPROM.c: 37: I2C_Write((address - (address >> 8)*256));
  1987  00163A  0100               	movlb	0	; () banked
  1988  00163C  518E               	movf	EEPROM_24AA512_pageWrite@address& (0+255),w,b
  1989  00163E  ECF9  F010         	call	_I2C_Write
  1990                           
  1991                           ;_24AA512_EEPROM.c: 38: for(int index = 0; index <128; index++){
  1992  001642  0E00               	movlw	0
  1993  001644  0100               	movlb	0	; () banked
  1994  001646  6F91               	movwf	(EEPROM_24AA512_pageWrite@index+1)& (0+255),b
  1995  001648  0E00               	movlw	0
  1996  00164A  6F90               	movwf	EEPROM_24AA512_pageWrite@index& (0+255),b
  1997  00164C                     l2989:
  1998                           
  1999                           ; BSR set to: 0
  2000  00164C  BF91               	btfsc	(EEPROM_24AA512_pageWrite@index+1)& (0+255),7,b
  2001  00164E  D006               	goto	l552
  2002  001650  5191               	movf	(EEPROM_24AA512_pageWrite@index+1)& (0+255),w,b
  2003  001652  E10B               	bnz	l2999
  2004  001654  0E80               	movlw	128
  2005  001656  5D90               	subwf	EEPROM_24AA512_pageWrite@index& (0+255),w,b
  2006  001658  B0D8               	btfsc	status,0,c
  2007  00165A  D007               	goto	u2490
  2008  00165C                     l552:
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;_24AA512_EEPROM.c: 39: I2C_Write(data);
  2012                           
  2013                           ; BSR set to: 0
  2014  00165C  5058               	movf	EEPROM_24AA512_pageWrite@data,w,c
  2015  00165E  ECF9  F010         	call	_I2C_Write
  2016  001662  0100               	movlb	0	; () banked
  2017  001664  4B90               	infsnz	EEPROM_24AA512_pageWrite@index& (0+255),f,b
  2018  001666  2B91               	incf	(EEPROM_24AA512_pageWrite@index+1)& (0+255),f,b
  2019  001668  D7F1               	goto	l2989
  2020  00166A                     u2490:
  2021  00166A                     l2999:
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;_24AA512_EEPROM.c: 40: }
  2025                           ;_24AA512_EEPROM.c: 41: I2C_stop();
  2026  00166A  EC4B  F011         	call	_I2C_stop	;wreg free
  2027  00166E  0012               	return		;funcret
  2028  001670                     __end_of_EEPROM_24AA512_pageWrite:
  2029                           	opt stack 0
  2030                           tblptru	equ	0xFF8
  2031                           intcon	equ	0xFF2
  2032                           intcon2	equ	0xFF1
  2033                           postinc0	equ	0xFEE
  2034                           wreg	equ	0xFE8
  2035                           postdec1	equ	0xFE5
  2036                           fsr1h	equ	0xFE2
  2037                           fsr1l	equ	0xFE1
  2038                           status	equ	0xFD8
  2039                           
  2040 ;; *************** function _pow *****************
  2041 ;; Defined at:
  2042 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\pow.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  x               3   81[COMRAM] unsigned char 
  2045 ;;  y               3   84[COMRAM] unsigned char 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  yi              4    7[BANK0 ] unsigned long 
  2048 ;;  sign            1    6[BANK0 ] unsigned char 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  3   81[COMRAM] unsigned char 
  2051 ;; Registers used:
  2052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2058 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2059 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2061 ;;      Totals:         6      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2062 ;;Total ram usage:       17 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; Hardware stack levels required when called:    4
  2065 ;; This function calls:
  2066 ;;		___ftge
  2067 ;;		___ftmul
  2068 ;;		___ftneg
  2069 ;;		___fttol
  2070 ;;		___lltoft
  2071 ;;		_exp
  2072 ;;		_log
  2073 ;; This function is called by:
  2074 ;;		_EEPROM_24AA512_pageWrite
  2075 ;;		_MCP9801_get_temp
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text14
  2080  0012D2                     __ptext14:
  2081                           	opt stack 0
  2082  0012D2                     _pow:
  2083                           	opt stack 25
  2084                           
  2085                           ;incstack = 0
  2086  0012D2  0E00               	movlw	0
  2087  0012D4  0100               	movlb	0	; () banked
  2088  0012D6  6F82               	movwf	pow@sign& (0+255),b
  2089                           
  2090                           ; BSR set to: 0
  2091  0012D8  5052               	movf	pow@x,w,c
  2092  0012DA  1053               	iorwf	pow@x+1,w,c
  2093  0012DC  1054               	iorwf	pow@x+2,w,c
  2094  0012DE  A4D8               	btfss	status,2,c
  2095  0012E0  D01C               	goto	l1002
  2096                           
  2097                           ; BSR set to: 0
  2098  0012E2  0E00               	movlw	0
  2099  0012E4  6E01               	movwf	___ftge@ff1,c
  2100  0012E6  0E00               	movlw	0
  2101  0012E8  6E02               	movwf	___ftge@ff1+1,c
  2102  0012EA  0E00               	movlw	0
  2103  0012EC  6E03               	movwf	___ftge@ff1+2,c
  2104  0012EE  C055  F004         	movff	pow@y,___ftge@ff2
  2105  0012F2  C056  F005         	movff	pow@y+1,___ftge@ff2+1
  2106  0012F6  C057  F006         	movff	pow@y+2,___ftge@ff2+2
  2107  0012FA  ECDF  F00E         	call	___ftge	;wreg free
  2108  0012FE  A0D8               	btfss	status,0,c
  2109  001300  D005               	goto	l1003
  2110  001302  0E00               	movlw	0
  2111  001304  0100               	movlb	0	; () banked
  2112  001306  6F75               	movwf	(_errno+1)& (0+255),b
  2113  001308  0E21               	movlw	33
  2114  00130A  6F74               	movwf	_errno& (0+255),b
  2115  00130C                     l1003:
  2116  00130C  0E00               	movlw	0
  2117  00130E  6E52               	movwf	?_pow,c
  2118  001310  0E00               	movlw	0
  2119  001312  6E53               	movwf	?_pow+1,c
  2120  001314  0E00               	movlw	0
  2121  001316  6E54               	movwf	?_pow+2,c
  2122  001318  0012               	return	
  2123  00131A                     l1002:
  2124  00131A  5055               	movf	pow@y,w,c
  2125  00131C  1056               	iorwf	pow@y+1,w,c
  2126  00131E  1057               	iorwf	pow@y+2,w,c
  2127  001320  A4D8               	btfss	status,2,c
  2128  001322  D007               	goto	l1005
  2129  001324  0E00               	movlw	0
  2130  001326  6E52               	movwf	?_pow,c
  2131  001328  0E80               	movlw	128
  2132  00132A  6E53               	movwf	?_pow+1,c
  2133  00132C  0E3F               	movlw	63
  2134  00132E  6E54               	movwf	?_pow+2,c
  2135  001330  0012               	return	
  2136  001332                     l1005:
  2137  001332  AE54               	btfss	pow@x+2,7,c
  2138  001334  D042               	goto	l1006
  2139  001336  C055  F028         	movff	pow@y,___fttol@f1
  2140  00133A  C056  F029         	movff	pow@y+1,___fttol@f1+1
  2141  00133E  C057  F02A         	movff	pow@y+2,___fttol@f1+2
  2142  001342  EC38  F00B         	call	___fttol	;wreg free
  2143  001346  C028  F083         	movff	?___fttol,pow@yi
  2144  00134A  C029  F084         	movff	?___fttol+1,pow@yi+1
  2145  00134E  C02A  F085         	movff	?___fttol+2,pow@yi+2
  2146  001352  C02B  F086         	movff	?___fttol+3,pow@yi+3
  2147  001356  C083  F009         	movff	pow@yi,___lltoft@c
  2148  00135A  C084  F00A         	movff	pow@yi+1,___lltoft@c+1
  2149  00135E  C085  F00B         	movff	pow@yi+2,___lltoft@c+2
  2150  001362  C086  F00C         	movff	pow@yi+3,___lltoft@c+3
  2151  001366  ECA7  F00F         	call	___lltoft	;wreg free
  2152  00136A  5055               	movf	pow@y,w,c
  2153  00136C  1809               	xorwf	?___lltoft,w,c
  2154  00136E  E107               	bnz	u2460
  2155  001370  5056               	movf	pow@y+1,w,c
  2156  001372  180A               	xorwf	?___lltoft+1,w,c
  2157  001374  E104               	bnz	u2460
  2158  001376  5057               	movf	pow@y+2,w,c
  2159  001378  180B               	xorwf	?___lltoft+2,w,c
  2160  00137A  B4D8               	btfsc	status,2,c
  2161  00137C  D00C               	goto	l1007
  2162  00137E                     u2460:
  2163  00137E  0E00               	movlw	0
  2164  001380  0100               	movlb	0	; () banked
  2165  001382  6F75               	movwf	(_errno+1)& (0+255),b
  2166  001384  0E21               	movlw	33
  2167  001386  6F74               	movwf	_errno& (0+255),b
  2168  001388  0E00               	movlw	0
  2169  00138A  6E52               	movwf	?_pow,c
  2170  00138C  0E00               	movlw	0
  2171  00138E  6E53               	movwf	?_pow+1,c
  2172  001390  0E00               	movlw	0
  2173  001392  6E54               	movwf	?_pow+2,c
  2174                           
  2175                           ; BSR set to: 0
  2176  001394  0012               	return	
  2177  001396                     l1007:
  2178                           
  2179                           ; BSR set to: 0
  2180  001396  0100               	movlb	0	; () banked
  2181  001398  5183               	movf	pow@yi& (0+255),w,b
  2182  00139A  0B01               	andlw	1
  2183  00139C  6F82               	movwf	pow@sign& (0+255),b
  2184                           
  2185                           ; BSR set to: 0
  2186  00139E  C052  F001         	movff	pow@x,___ftneg@f1
  2187  0013A2  C053  F002         	movff	pow@x+1,___ftneg@f1+1
  2188  0013A6  C054  F003         	movff	pow@x+2,___ftneg@f1+2
  2189  0013AA  ECD5  F010         	call	___ftneg	;wreg free
  2190  0013AE  C001  F052         	movff	?___ftneg,pow@x
  2191  0013B2  C002  F053         	movff	?___ftneg+1,pow@x+1
  2192  0013B6  C003  F054         	movff	?___ftneg+2,pow@x+2
  2193  0013BA                     l1006:
  2194  0013BA  C052  F034         	movff	pow@x,log@x
  2195  0013BE  C053  F035         	movff	pow@x+1,log@x+1
  2196  0013C2  C054  F036         	movff	pow@x+2,log@x+2
  2197  0013C6  EC27  F00A         	call	_log	;wreg free
  2198  0013CA  C034  F07C         	movff	?_log,_pow$2633
  2199  0013CE  C035  F07D         	movff	?_log+1,_pow$2633+1
  2200  0013D2  C036  F07E         	movff	?_log+2,_pow$2633+2
  2201  0013D6  C07C  F00D         	movff	_pow$2633,___ftmul@f1
  2202  0013DA  C07D  F00E         	movff	_pow$2633+1,___ftmul@f1+1
  2203  0013DE  C07E  F00F         	movff	_pow$2633+2,___ftmul@f1+2
  2204  0013E2  C055  F010         	movff	pow@y,___ftmul@f2
  2205  0013E6  C056  F011         	movff	pow@y+1,___ftmul@f2+1
  2206  0013EA  C057  F012         	movff	pow@y+2,___ftmul@f2+2
  2207  0013EE  ECB2  F00B         	call	___ftmul	;wreg free
  2208  0013F2  C00D  F07F         	movff	?___ftmul,_pow$2634
  2209  0013F6  C00E  F080         	movff	?___ftmul+1,_pow$2634+1
  2210  0013FA  C00F  F081         	movff	?___ftmul+2,_pow$2634+2
  2211  0013FE  C07F  F049         	movff	_pow$2634,exp@x
  2212  001402  C080  F04A         	movff	_pow$2634+1,exp@x+1
  2213  001406  C081  F04B         	movff	_pow$2634+2,exp@x+2
  2214  00140A  EC9F  F007         	call	_exp	;wreg free
  2215  00140E  C049  F052         	movff	?_exp,pow@x
  2216  001412  C04A  F053         	movff	?_exp+1,pow@x+1
  2217  001416  C04B  F054         	movff	?_exp+2,pow@x+2
  2218  00141A  0100               	movlb	0	; () banked
  2219  00141C  5182               	movf	pow@sign& (0+255),w,b
  2220  00141E  B4D8               	btfsc	status,2,c
  2221  001420  D00F               	goto	l1008
  2222                           
  2223                           ; BSR set to: 0
  2224  001422  C052  F001         	movff	pow@x,___ftneg@f1
  2225  001426  C053  F002         	movff	pow@x+1,___ftneg@f1+1
  2226  00142A  C054  F003         	movff	pow@x+2,___ftneg@f1+2
  2227  00142E  ECD5  F010         	call	___ftneg	;wreg free
  2228  001432  C001  F052         	movff	?___ftneg,?_pow
  2229  001436  C002  F053         	movff	?___ftneg+1,?_pow+1
  2230  00143A  C003  F054         	movff	?___ftneg+2,?_pow+2
  2231  00143E  0012               	return	
  2232  001440                     l1008:
  2233                           
  2234                           ; BSR set to: 0
  2235  001440  C052  F052         	movff	pow@x,?_pow
  2236  001444  C053  F053         	movff	pow@x+1,?_pow+1
  2237  001448  C054  F054         	movff	pow@x+2,?_pow+2
  2238  00144C  0012               	return		;funcret
  2239  00144E                     __end_of_pow:
  2240                           	opt stack 0
  2241                           tblptru	equ	0xFF8
  2242                           intcon	equ	0xFF2
  2243                           intcon2	equ	0xFF1
  2244                           postinc0	equ	0xFEE
  2245                           wreg	equ	0xFE8
  2246                           postdec1	equ	0xFE5
  2247                           fsr1h	equ	0xFE2
  2248                           fsr1l	equ	0xFE1
  2249                           status	equ	0xFD8
  2250                           
  2251 ;; *************** function _log *****************
  2252 ;; Defined at:
  2253 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  x               3   51[COMRAM] unsigned char 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  exponent        2   54[COMRAM] int 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  3   51[COMRAM] int 
  2260 ;; Registers used:
  2261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2267 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2268 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2270 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2271 ;;Total ram usage:        5 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    3
  2274 ;; This function calls:
  2275 ;;		___awtoft
  2276 ;;		___ftadd
  2277 ;;		___ftmul
  2278 ;;		_eval_poly
  2279 ;;		_frexp
  2280 ;; This function is called by:
  2281 ;;		_pow
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text15
  2286  00144E                     __ptext15:
  2287                           	opt stack 0
  2288  00144E                     _log:
  2289                           	opt stack 25
  2290                           
  2291                           ;incstack = 0
  2292  00144E  AE36               	btfss	log@x+2,7,c
  2293  001450  D00C               	goto	l1204
  2294  001452  0E00               	movlw	0
  2295  001454  0100               	movlb	0	; () banked
  2296  001456  6F75               	movwf	(_errno+1)& (0+255),b
  2297  001458  0E21               	movlw	33
  2298  00145A  6F74               	movwf	_errno& (0+255),b
  2299  00145C  0E00               	movlw	0
  2300  00145E  6E34               	movwf	?_log,c
  2301  001460  0E00               	movlw	0
  2302  001462  6E35               	movwf	?_log+1,c
  2303  001464  0E00               	movlw	0
  2304  001466  6E36               	movwf	?_log+2,c
  2305                           
  2306                           ; BSR set to: 0
  2307  001468  0012               	return	
  2308  00146A                     l1204:
  2309                           
  2310                           ; BSR set to: 0
  2311  00146A  5034               	movf	log@x,w,c
  2312  00146C  1035               	iorwf	log@x+1,w,c
  2313  00146E  1036               	iorwf	log@x+2,w,c
  2314  001470  A4D8               	btfss	status,2,c
  2315  001472  D00C               	goto	l1206
  2316  001474  0E00               	movlw	0
  2317  001476  0100               	movlb	0	; () banked
  2318  001478  6F75               	movwf	(_errno+1)& (0+255),b
  2319  00147A  0E22               	movlw	34
  2320  00147C  6F74               	movwf	_errno& (0+255),b
  2321  00147E  0E00               	movlw	0
  2322  001480  6E34               	movwf	?_log,c
  2323  001482  0E00               	movlw	0
  2324  001484  6E35               	movwf	?_log+1,c
  2325  001486  0E00               	movlw	0
  2326  001488  6E36               	movwf	?_log+2,c
  2327                           
  2328                           ; BSR set to: 0
  2329  00148A  0012               	return	
  2330  00148C                     l1206:
  2331                           
  2332                           ; BSR set to: 0
  2333  00148C  0E00               	movlw	0
  2334  00148E  6E10               	movwf	___ftmul@f2,c
  2335  001490  0E00               	movlw	0
  2336  001492  6E11               	movwf	___ftmul@f2+1,c
  2337  001494  0E40               	movlw	64
  2338  001496  6E12               	movwf	___ftmul@f2+2,c
  2339  001498  0E37               	movlw	low log@exponent
  2340  00149A  6E04               	movwf	frexp@eptr,c
  2341  00149C  0E00               	movlw	high log@exponent
  2342  00149E  6E05               	movwf	frexp@eptr+1,c
  2343  0014A0  C034  F001         	movff	log@x,frexp@value
  2344  0014A4  C035  F002         	movff	log@x+1,frexp@value+1
  2345  0014A8  C036  F003         	movff	log@x+2,frexp@value+2
  2346  0014AC  EC97  F00E         	call	_frexp	;wreg free
  2347  0014B0  C001  F00D         	movff	?_frexp,___ftmul@f1
  2348  0014B4  C002  F00E         	movff	?_frexp+1,___ftmul@f1+1
  2349  0014B8  C003  F00F         	movff	?_frexp+2,___ftmul@f1+2
  2350  0014BC  ECB2  F00B         	call	___ftmul	;wreg free
  2351  0014C0  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  2352  0014C4  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  2353  0014C8  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  2354  0014CC  0E00               	movlw	0
  2355  0014CE  6E1F               	movwf	___ftadd@f2,c
  2356  0014D0  0E80               	movlw	128
  2357  0014D2  6E20               	movwf	___ftadd@f2+1,c
  2358  0014D4  0EBF               	movlw	191
  2359  0014D6  6E21               	movwf	___ftadd@f2+2,c
  2360  0014D8  EC93  F008         	call	___ftadd	;wreg free
  2361  0014DC  C01C  F034         	movff	?___ftadd,log@x
  2362  0014E0  C01D  F035         	movff	?___ftadd+1,log@x+1
  2363  0014E4  C01E  F036         	movff	?___ftadd+2,log@x+2
  2364  0014E8  0637               	decf	log@exponent,f,c
  2365  0014EA  A0D8               	btfss	status,0,c
  2366  0014EC  0638               	decf	log@exponent+1,f,c
  2367  0014EE  C034  F028         	movff	log@x,eval_poly@x
  2368  0014F2  C035  F029         	movff	log@x+1,eval_poly@x+1
  2369  0014F6  C036  F02A         	movff	log@x+2,eval_poly@x+2
  2370  0014FA  0E1F               	movlw	low log@coeff
  2371  0014FC  6E2B               	movwf	eval_poly@d,c
  2372  0014FE  0E0F               	movlw	high log@coeff
  2373  001500  6E2C               	movwf	eval_poly@d+1,c
  2374  001502  0E00               	movlw	0
  2375  001504  6E2E               	movwf	eval_poly@n+1,c
  2376  001506  0E08               	movlw	8
  2377  001508  6E2D               	movwf	eval_poly@n,c
  2378  00150A  EC0E  F00D         	call	_eval_poly	;wreg free
  2379  00150E  C028  F034         	movff	?_eval_poly,log@x
  2380  001512  C029  F035         	movff	?_eval_poly+1,log@x+1
  2381  001516  C02A  F036         	movff	?_eval_poly+2,log@x+2
  2382  00151A  0E72               	movlw	114
  2383  00151C  6E10               	movwf	___ftmul@f2,c
  2384  00151E  0E31               	movlw	49
  2385  001520  6E11               	movwf	___ftmul@f2+1,c
  2386  001522  0E3F               	movlw	63
  2387  001524  6E12               	movwf	___ftmul@f2+2,c
  2388  001526  C037  F009         	movff	log@exponent,___awtoft@c
  2389  00152A  C038  F00A         	movff	log@exponent+1,___awtoft@c+1
  2390  00152E  EC60  F010         	call	___awtoft	;wreg free
  2391  001532  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2392  001536  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2393  00153A  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2394  00153E  ECB2  F00B         	call	___ftmul	;wreg free
  2395  001542  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  2396  001546  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  2397  00154A  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  2398  00154E  C034  F01F         	movff	log@x,___ftadd@f2
  2399  001552  C035  F020         	movff	log@x+1,___ftadd@f2+1
  2400  001556  C036  F021         	movff	log@x+2,___ftadd@f2+2
  2401  00155A  EC93  F008         	call	___ftadd	;wreg free
  2402  00155E  C01C  F034         	movff	?___ftadd,?_log
  2403  001562  C01D  F035         	movff	?___ftadd+1,?_log+1
  2404  001566  C01E  F036         	movff	?___ftadd+2,?_log+2
  2405  00156A  0012               	return	
  2406  00156C                     __end_of_log:
  2407                           	opt stack 0
  2408                           tblptru	equ	0xFF8
  2409                           intcon	equ	0xFF2
  2410                           intcon2	equ	0xFF1
  2411                           postinc0	equ	0xFEE
  2412                           wreg	equ	0xFE8
  2413                           postdec1	equ	0xFE5
  2414                           fsr1h	equ	0xFE2
  2415                           fsr1l	equ	0xFE1
  2416                           status	equ	0xFD8
  2417                           
  2418 ;; *************** function _exp *****************
  2419 ;; Defined at:
  2420 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\exp.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  x               3   72[COMRAM] int 
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  exponent        2   78[COMRAM] int 
  2425 ;;  sign            1   80[COMRAM] unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  3   72[COMRAM] unsigned char 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2435 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2436 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2438 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2439 ;;Total ram usage:        9 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    3
  2442 ;; This function calls:
  2443 ;;		___awtoft
  2444 ;;		___ftdiv
  2445 ;;		___ftge
  2446 ;;		___ftmul
  2447 ;;		___ftneg
  2448 ;;		___ftsub
  2449 ;;		___fttol
  2450 ;;		_eval_poly
  2451 ;;		_floor
  2452 ;;		_ldexp
  2453 ;; This function is called by:
  2454 ;;		_pow
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text16
  2459  000F3E                     __ptext16:
  2460                           	opt stack 0
  2461  000F3E                     _exp:
  2462                           	opt stack 25
  2463                           
  2464                           ;incstack = 0
  2465  000F3E  5049               	movf	exp@x,w,c
  2466  000F40  104A               	iorwf	exp@x+1,w,c
  2467  000F42  104B               	iorwf	exp@x+2,w,c
  2468  000F44  A4D8               	btfss	status,2,c
  2469  000F46  D007               	goto	l1162
  2470  000F48  0E00               	movlw	0
  2471  000F4A  6E49               	movwf	?_exp,c
  2472  000F4C  0E80               	movlw	128
  2473  000F4E  6E4A               	movwf	?_exp+1,c
  2474  000F50  0E3F               	movlw	63
  2475  000F52  6E4B               	movwf	?_exp+2,c
  2476  000F54  0012               	return	
  2477  000F56                     l1162:
  2478  000F56  0E72               	movlw	114
  2479  000F58  6E01               	movwf	___ftge@ff1,c
  2480  000F5A  0E31               	movlw	49
  2481  000F5C  6E02               	movwf	___ftge@ff1+1,c
  2482  000F5E  0E44               	movlw	68
  2483  000F60  6E03               	movwf	___ftge@ff1+2,c
  2484  000F62  C049  F004         	movff	exp@x,___ftge@ff2
  2485  000F66  C04A  F005         	movff	exp@x+1,___ftge@ff2+1
  2486  000F6A  C04B  F006         	movff	exp@x+2,___ftge@ff2+2
  2487  000F6E  ECDF  F00E         	call	___ftge	;wreg free
  2488  000F72  B0D8               	btfsc	status,0,c
  2489  000F74  D00C               	goto	l1164
  2490  000F76  0E00               	movlw	0
  2491  000F78  0100               	movlb	0	; () banked
  2492  000F7A  6F75               	movwf	(_errno+1)& (0+255),b
  2493  000F7C  0E22               	movlw	34
  2494  000F7E  6F74               	movwf	_errno& (0+255),b
  2495  000F80  0EFF               	movlw	255
  2496  000F82  6E49               	movwf	?_exp,c
  2497  000F84  0E7F               	movlw	127
  2498  000F86  6E4A               	movwf	?_exp+1,c
  2499  000F88  0E7F               	movlw	127
  2500  000F8A  6E4B               	movwf	?_exp+2,c
  2501                           
  2502                           ; BSR set to: 0
  2503  000F8C  0012               	return	
  2504  000F8E                     l1164:
  2505                           
  2506                           ; BSR set to: 0
  2507  000F8E  C049  F001         	movff	exp@x,___ftge@ff1
  2508  000F92  C04A  F002         	movff	exp@x+1,___ftge@ff1+1
  2509  000F96  C04B  F003         	movff	exp@x+2,___ftge@ff1+2
  2510  000F9A  0E49               	movlw	73
  2511  000F9C  6E04               	movwf	___ftge@ff2,c
  2512  000F9E  0E3A               	movlw	58
  2513  000FA0  6E05               	movwf	___ftge@ff2+1,c
  2514  000FA2  0EC4               	movlw	196
  2515  000FA4  6E06               	movwf	___ftge@ff2+2,c
  2516  000FA6  ECDF  F00E         	call	___ftge	;wreg free
  2517  000FAA  B0D8               	btfsc	status,0,c
  2518  000FAC  D00C               	goto	l1165
  2519  000FAE  0E00               	movlw	0
  2520  000FB0  0100               	movlb	0	; () banked
  2521  000FB2  6F75               	movwf	(_errno+1)& (0+255),b
  2522  000FB4  0E22               	movlw	34
  2523  000FB6  6F74               	movwf	_errno& (0+255),b
  2524  000FB8  0E00               	movlw	0
  2525  000FBA  6E49               	movwf	?_exp,c
  2526  000FBC  0E00               	movlw	0
  2527  000FBE  6E4A               	movwf	?_exp+1,c
  2528  000FC0  0E00               	movlw	0
  2529  000FC2  6E4B               	movwf	?_exp+2,c
  2530                           
  2531                           ; BSR set to: 0
  2532  000FC4  0012               	return	
  2533  000FC6                     l1165:
  2534                           
  2535                           ; BSR set to: 0
  2536  000FC6  AE4B               	btfss	exp@x+2,7,c
  2537  000FC8  D002               	goto	u2300
  2538  000FCA  0E01               	movlw	1
  2539  000FCC  D001               	goto	u2310
  2540  000FCE                     u2300:
  2541  000FCE  0E00               	movlw	0
  2542  000FD0                     u2310:
  2543  000FD0  6E51               	movwf	exp@sign,c
  2544  000FD2  5051               	movf	exp@sign,w,c
  2545  000FD4  B4D8               	btfsc	status,2,c
  2546  000FD6  D00E               	goto	l1166
  2547  000FD8  C049  F001         	movff	exp@x,___ftneg@f1
  2548  000FDC  C04A  F002         	movff	exp@x+1,___ftneg@f1+1
  2549  000FE0  C04B  F003         	movff	exp@x+2,___ftneg@f1+2
  2550  000FE4  ECD5  F010         	call	___ftneg	;wreg free
  2551  000FE8  C001  F049         	movff	?___ftneg,exp@x
  2552  000FEC  C002  F04A         	movff	?___ftneg+1,exp@x+1
  2553  000FF0  C003  F04B         	movff	?___ftneg+2,exp@x+2
  2554  000FF4                     l1166:
  2555  000FF4  C049  F00D         	movff	exp@x,___ftmul@f1
  2556  000FF8  C04A  F00E         	movff	exp@x+1,___ftmul@f1+1
  2557  000FFC  C04B  F00F         	movff	exp@x+2,___ftmul@f1+2
  2558  001000  0EAA               	movlw	170
  2559  001002  6E10               	movwf	___ftmul@f2,c
  2560  001004  0EB8               	movlw	184
  2561  001006  6E11               	movwf	___ftmul@f2+1,c
  2562  001008  0E3F               	movlw	63
  2563  00100A  6E12               	movwf	___ftmul@f2+2,c
  2564  00100C  ECB2  F00B         	call	___ftmul	;wreg free
  2565  001010  C00D  F049         	movff	?___ftmul,exp@x
  2566  001014  C00E  F04A         	movff	?___ftmul+1,exp@x+1
  2567  001018  C00F  F04B         	movff	?___ftmul+2,exp@x+2
  2568  00101C  C049  F041         	movff	exp@x,floor@x
  2569  001020  C04A  F042         	movff	exp@x+1,floor@x+1
  2570  001024  C04B  F043         	movff	exp@x+2,floor@x+2
  2571  001028  EC9F  F00C         	call	_floor	;wreg free
  2572  00102C  C041  F04C         	movff	?_floor,_exp$2635
  2573  001030  C042  F04D         	movff	?_floor+1,_exp$2635+1
  2574  001034  C043  F04E         	movff	?_floor+2,_exp$2635+2
  2575  001038  C04C  F028         	movff	_exp$2635,___fttol@f1
  2576  00103C  C04D  F029         	movff	_exp$2635+1,___fttol@f1+1
  2577  001040  C04E  F02A         	movff	_exp$2635+2,___fttol@f1+2
  2578  001044  EC38  F00B         	call	___fttol	;wreg free
  2579  001048  C028  F04F         	movff	?___fttol,exp@exponent
  2580  00104C  C029  F050         	movff	?___fttol+1,exp@exponent+1
  2581  001050  C049  F028         	movff	exp@x,___ftsub@f1
  2582  001054  C04A  F029         	movff	exp@x+1,___ftsub@f1+1
  2583  001058  C04B  F02A         	movff	exp@x+2,___ftsub@f1+2
  2584  00105C  C04F  F009         	movff	exp@exponent,___awtoft@c
  2585  001060  C050  F00A         	movff	exp@exponent+1,___awtoft@c+1
  2586  001064  EC60  F010         	call	___awtoft	;wreg free
  2587  001068  C009  F02B         	movff	?___awtoft,___ftsub@f2
  2588  00106C  C00A  F02C         	movff	?___awtoft+1,___ftsub@f2+1
  2589  001070  C00B  F02D         	movff	?___awtoft+2,___ftsub@f2+2
  2590  001074  EC21  F010         	call	___ftsub	;wreg free
  2591  001078  C028  F049         	movff	?___ftsub,exp@x
  2592  00107C  C029  F04A         	movff	?___ftsub+1,exp@x+1
  2593  001080  C02A  F04B         	movff	?___ftsub+2,exp@x+2
  2594  001084  C049  F028         	movff	exp@x,eval_poly@x
  2595  001088  C04A  F029         	movff	exp@x+1,eval_poly@x+1
  2596  00108C  C04B  F02A         	movff	exp@x+2,eval_poly@x+2
  2597  001090  0E01               	movlw	low exp@coeff
  2598  001092  6E2B               	movwf	eval_poly@d,c
  2599  001094  0E0F               	movlw	high exp@coeff
  2600  001096  6E2C               	movwf	eval_poly@d+1,c
  2601  001098  0E00               	movlw	0
  2602  00109A  6E2E               	movwf	eval_poly@n+1,c
  2603  00109C  0E09               	movlw	9
  2604  00109E  6E2D               	movwf	eval_poly@n,c
  2605  0010A0  EC0E  F00D         	call	_eval_poly	;wreg free
  2606  0010A4  C028  F034         	movff	?_eval_poly,ldexp@value
  2607  0010A8  C029  F035         	movff	?_eval_poly+1,ldexp@value+1
  2608  0010AC  C02A  F036         	movff	?_eval_poly+2,ldexp@value+2
  2609  0010B0  C04F  F037         	movff	exp@exponent,ldexp@newexp
  2610  0010B4  C050  F038         	movff	exp@exponent+1,ldexp@newexp+1
  2611  0010B8  ECDD  F00D         	call	_ldexp	;wreg free
  2612  0010BC  C034  F049         	movff	?_ldexp,exp@x
  2613  0010C0  C035  F04A         	movff	?_ldexp+1,exp@x+1
  2614  0010C4  C036  F04B         	movff	?_ldexp+2,exp@x+2
  2615  0010C8  5051               	movf	exp@sign,w,c
  2616  0010CA  B4D8               	btfsc	status,2,c
  2617  0010CC  D025               	goto	l1167
  2618  0010CE  2849               	incf	exp@x,w,c
  2619  0010D0  E10E               	bnz	l2881
  2620  0010D2  0E7F               	movlw	127
  2621  0010D4  184A               	xorwf	exp@x+1,w,c
  2622  0010D6  E10B               	bnz	l2881
  2623  0010D8  0E7F               	movlw	127
  2624  0010DA  184B               	xorwf	exp@x+2,w,c
  2625  0010DC  A4D8               	btfss	status,2,c
  2626  0010DE  D007               	goto	l1168
  2627  0010E0  0E00               	movlw	0
  2628  0010E2  6E49               	movwf	?_exp,c
  2629  0010E4  0E00               	movlw	0
  2630  0010E6  6E4A               	movwf	?_exp+1,c
  2631  0010E8  0E00               	movlw	0
  2632  0010EA  6E4B               	movwf	?_exp+2,c
  2633  0010EC  0012               	return	
  2634  0010EE                     l1168:
  2635  0010EE                     l2881:
  2636  0010EE  0E00               	movlw	0
  2637  0010F0  6E09               	movwf	___ftdiv@f1,c
  2638  0010F2  0E80               	movlw	128
  2639  0010F4  6E0A               	movwf	___ftdiv@f1+1,c
  2640  0010F6  0E3F               	movlw	63
  2641  0010F8  6E0B               	movwf	___ftdiv@f1+2,c
  2642  0010FA  C049  F00C         	movff	exp@x,___ftdiv@f2
  2643  0010FE  C04A  F00D         	movff	exp@x+1,___ftdiv@f2+1
  2644  001102  C04B  F00E         	movff	exp@x+2,___ftdiv@f2+2
  2645  001106  EC2C  F00C         	call	___ftdiv	;wreg free
  2646  00110A  C009  F049         	movff	?___ftdiv,?_exp
  2647  00110E  C00A  F04A         	movff	?___ftdiv+1,?_exp+1
  2648  001112  C00B  F04B         	movff	?___ftdiv+2,?_exp+2
  2649  001116  0012               	return	
  2650  001118                     l1167:
  2651  001118  C049  F049         	movff	exp@x,?_exp
  2652  00111C  C04A  F04A         	movff	exp@x+1,?_exp+1
  2653  001120  C04B  F04B         	movff	exp@x+2,?_exp+2
  2654  001124  0012               	return		;funcret
  2655  001126                     __end_of_exp:
  2656                           	opt stack 0
  2657                           tblptru	equ	0xFF8
  2658                           intcon	equ	0xFF2
  2659                           intcon2	equ	0xFF1
  2660                           postinc0	equ	0xFEE
  2661                           wreg	equ	0xFE8
  2662                           postdec1	equ	0xFE5
  2663                           fsr1h	equ	0xFE2
  2664                           fsr1l	equ	0xFE1
  2665                           status	equ	0xFD8
  2666                           
  2667 ;; *************** function _ldexp *****************
  2668 ;; Defined at:
  2669 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  value           3   51[COMRAM] unsigned char 
  2672 ;;  newexp          2   54[COMRAM] int 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;		None
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  3   51[COMRAM] int 
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, status,0
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2684 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2686 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2687 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2688 ;;Total ram usage:        7 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; This function calls:
  2691 ;;		Nothing
  2692 ;; This function is called by:
  2693 ;;		_exp
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text17
  2698  001BBA                     __ptext17:
  2699                           	opt stack 0
  2700  001BBA                     _ldexp:
  2701                           	opt stack 27
  2702                           
  2703                           ;incstack = 0
  2704  001BBA  5034               	movf	ldexp@value,w,c
  2705  001BBC  1035               	iorwf	ldexp@value+1,w,c
  2706  001BBE  1036               	iorwf	ldexp@value+2,w,c
  2707  001BC0  A4D8               	btfss	status,2,c
  2708  001BC2  D007               	goto	l1186
  2709  001BC4  0E00               	movlw	0
  2710  001BC6  6E34               	movwf	?_ldexp,c
  2711  001BC8  0E00               	movlw	0
  2712  001BCA  6E35               	movwf	?_ldexp+1,c
  2713  001BCC  0E00               	movlw	0
  2714  001BCE  6E36               	movwf	?_ldexp+2,c
  2715  001BD0  0012               	return	
  2716  001BD2                     l1186:
  2717  001BD2  5036               	movf	ldexp@value+2,w,c
  2718  001BD4  0B7F               	andlw	127
  2719  001BD6  6E39               	movwf	??_ldexp& (0+255),c
  2720  001BD8  6A3A               	clrf	(??_ldexp+1)& (0+255),c
  2721  001BDA  90D8               	bcf	status,0,c
  2722  001BDC  3639               	rlcf	??_ldexp,f,c
  2723  001BDE  363A               	rlcf	??_ldexp+1,f,c
  2724  001BE0  5039               	movf	??_ldexp,w,c
  2725  001BE2  2637               	addwf	ldexp@newexp,f,c
  2726  001BE4  503A               	movf	??_ldexp+1,w,c
  2727  001BE6  2238               	addwfc	ldexp@newexp+1,f,c
  2728  001BE8  AE35               	btfss	ldexp@value+1,7,c
  2729  001BEA  D003               	goto	u2130
  2730  001BEC  6A39               	clrf	??_ldexp& (0+255),c
  2731  001BEE  2A39               	incf	??_ldexp& (0+255),f,c
  2732  001BF0  D001               	goto	u2138
  2733  001BF2                     u2130:
  2734  001BF2  6A39               	clrf	??_ldexp& (0+255),c
  2735  001BF4                     u2138:
  2736  001BF4  5039               	movf	??_ldexp,w,c
  2737  001BF6  2637               	addwf	ldexp@newexp,f,c
  2738  001BF8  0E00               	movlw	0
  2739  001BFA  2238               	addwfc	ldexp@newexp+1,f,c
  2740  001BFC  AE38               	btfss	ldexp@newexp+1,7,c
  2741  001BFE  D00C               	goto	l1188
  2742  001C00  0E00               	movlw	0
  2743  001C02  0100               	movlb	0	; () banked
  2744  001C04  6F75               	movwf	(_errno+1)& (0+255),b
  2745  001C06  0E22               	movlw	34
  2746  001C08  6F74               	movwf	_errno& (0+255),b
  2747  001C0A  0E00               	movlw	0
  2748  001C0C  6E34               	movwf	?_ldexp,c
  2749  001C0E  0E00               	movlw	0
  2750  001C10  6E35               	movwf	?_ldexp+1,c
  2751  001C12  0E00               	movlw	0
  2752  001C14                     L1:
  2753  001C14  6E36               	movwf	?_ldexp+2,c
  2754                           
  2755                           ; BSR set to: 0
  2756  001C16  0012               	return	
  2757  001C18                     l1188:
  2758                           
  2759                           ; BSR set to: 0
  2760  001C18  BE38               	btfsc	ldexp@newexp+1,7,c
  2761  001C1A  D016               	goto	l1190
  2762  001C1C  0438               	decf	ldexp@newexp+1,w,c
  2763  001C1E  A0D8               	btfss	status,0,c
  2764  001C20  D013               	goto	l1190
  2765  001C22  0E00               	movlw	0
  2766  001C24  0100               	movlb	0	; () banked
  2767  001C26  6F75               	movwf	(_errno+1)& (0+255),b
  2768  001C28  0E22               	movlw	34
  2769  001C2A  6F74               	movwf	_errno& (0+255),b
  2770                           
  2771                           ; BSR set to: 0
  2772  001C2C  AE36               	btfss	ldexp@value+2,7,c
  2773  001C2E  D006               	goto	l1191
  2774                           
  2775                           ; BSR set to: 0
  2776  001C30  0EFF               	movlw	255
  2777  001C32  6E34               	movwf	?_ldexp,c
  2778  001C34  0E7F               	movlw	127
  2779  001C36  6E35               	movwf	?_ldexp+1,c
  2780  001C38  0EFF               	movlw	255
  2781  001C3A  D7EC               	goto	L1
  2782  001C3C                     l1191:
  2783                           
  2784                           ; BSR set to: 0
  2785                           
  2786                           ; BSR set to: 0
  2787  001C3C  0EFF               	movlw	255
  2788  001C3E  6E34               	movwf	?_ldexp,c
  2789  001C40  0E7F               	movlw	127
  2790  001C42  6E35               	movwf	?_ldexp+1,c
  2791  001C44  0E7F               	movlw	127
  2792  001C46  D7E6               	goto	L1
  2793  001C48                     l1190:
  2794                           
  2795                           ; BSR set to: 0
  2796  001C48  3438               	rlcf	ldexp@newexp+1,w,c
  2797  001C4A  3038               	rrcf	ldexp@newexp+1,w,c
  2798  001C4C  6E3A               	movwf	(??_ldexp+1)& (0+255),c
  2799  001C4E  3037               	rrcf	ldexp@newexp,w,c
  2800  001C50  6E39               	movwf	??_ldexp& (0+255),c
  2801  001C52  5036               	movf	ldexp@value+2,w,c
  2802  001C54  1839               	xorwf	??_ldexp,w,c
  2803  001C56  0B80               	andlw	-128
  2804  001C58  1839               	xorwf	??_ldexp,w,c
  2805  001C5A  6E36               	movwf	ldexp@value+2,c
  2806  001C5C  C037  F039         	movff	ldexp@newexp,??_ldexp
  2807  001C60  0E01               	movlw	1
  2808  001C62  1639               	andwf	??_ldexp,f,c
  2809  001C64  3239               	rrcf	??_ldexp,f,c
  2810  001C66  3239               	rrcf	??_ldexp,f,c
  2811  001C68  5035               	movf	ldexp@value+1,w,c
  2812  001C6A  1839               	xorwf	??_ldexp,w,c
  2813  001C6C  0B7F               	andlw	-129
  2814  001C6E  1839               	xorwf	??_ldexp,w,c
  2815  001C70  6E35               	movwf	ldexp@value+1,c
  2816  001C72  C034  F034         	movff	ldexp@value,?_ldexp
  2817  001C76  C035  F035         	movff	ldexp@value+1,?_ldexp+1
  2818  001C7A  C036  F036         	movff	ldexp@value+2,?_ldexp+2
  2819  001C7E  0012               	return	
  2820  001C80                     __end_of_ldexp:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           intcon	equ	0xFF2
  2824                           intcon2	equ	0xFF1
  2825                           postinc0	equ	0xFEE
  2826                           wreg	equ	0xFE8
  2827                           postdec1	equ	0xFE5
  2828                           fsr1h	equ	0xFE2
  2829                           fsr1l	equ	0xFE1
  2830                           status	equ	0xFD8
  2831                           
  2832 ;; *************** function _floor *****************
  2833 ;; Defined at:
  2834 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  x               3   64[COMRAM] int 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  i               3   67[COMRAM] int 
  2839 ;;  expon           2   70[COMRAM] int 
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  3   64[COMRAM] int 
  2842 ;; Registers used:
  2843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2849 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2850 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2852 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2853 ;;Total ram usage:        8 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:    2
  2856 ;; This function calls:
  2857 ;;		___altoft
  2858 ;;		___ftadd
  2859 ;;		___ftge
  2860 ;;		___fttol
  2861 ;;		_frexp
  2862 ;; This function is called by:
  2863 ;;		_exp
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	text18
  2868  00193E                     __ptext18:
  2869                           	opt stack 0
  2870  00193E                     _floor:
  2871                           	opt stack 25
  2872                           
  2873                           ;incstack = 0
  2874  00193E  C041  F001         	movff	floor@x,frexp@value
  2875  001942  C042  F002         	movff	floor@x+1,frexp@value+1
  2876  001946  C043  F003         	movff	floor@x+2,frexp@value+2
  2877  00194A  0E47               	movlw	low floor@expon
  2878  00194C  6E04               	movwf	frexp@eptr,c
  2879  00194E  0E00               	movlw	high floor@expon
  2880  001950  6E05               	movwf	frexp@eptr+1,c
  2881  001952  EC97  F00E         	call	_frexp	;wreg free
  2882  001956  AE48               	btfss	floor@expon+1,7,c
  2883  001958  D010               	goto	l1173
  2884  00195A  AE43               	btfss	floor@x+2,7,c
  2885  00195C  D007               	goto	l1174
  2886  00195E  0E00               	movlw	0
  2887  001960  6E41               	movwf	?_floor,c
  2888  001962  0E80               	movlw	128
  2889  001964  6E42               	movwf	?_floor+1,c
  2890  001966  0EBF               	movlw	191
  2891  001968  6E43               	movwf	?_floor+2,c
  2892  00196A  0012               	return	
  2893  00196C                     l1174:
  2894  00196C  0E00               	movlw	0
  2895  00196E  6E41               	movwf	?_floor,c
  2896  001970  0E00               	movlw	0
  2897  001972  6E42               	movwf	?_floor+1,c
  2898  001974  0E00               	movlw	0
  2899  001976  6E43               	movwf	?_floor+2,c
  2900  001978  0012               	return	
  2901  00197A                     l1173:
  2902  00197A  5048               	movf	floor@expon+1,w,c
  2903  00197C  E104               	bnz	u2090
  2904  00197E  0E15               	movlw	21
  2905  001980  5C47               	subwf	floor@expon,w,c
  2906  001982  A0D8               	btfss	status,0,c
  2907  001984  D007               	goto	l1176
  2908  001986                     u2090:
  2909  001986  C041  F041         	movff	floor@x,?_floor
  2910  00198A  C042  F042         	movff	floor@x+1,?_floor+1
  2911  00198E  C043  F043         	movff	floor@x+2,?_floor+2
  2912  001992  0012               	return	
  2913  001994                     l1176:
  2914  001994  C041  F028         	movff	floor@x,___fttol@f1
  2915  001998  C042  F029         	movff	floor@x+1,___fttol@f1+1
  2916  00199C  C043  F02A         	movff	floor@x+2,___fttol@f1+2
  2917  0019A0  EC38  F00B         	call	___fttol	;wreg free
  2918  0019A4  C028  F037         	movff	?___fttol,___altoft@c
  2919  0019A8  C029  F038         	movff	?___fttol+1,___altoft@c+1
  2920  0019AC  C02A  F039         	movff	?___fttol+2,___altoft@c+2
  2921  0019B0  C02B  F03A         	movff	?___fttol+3,___altoft@c+3
  2922  0019B4  EC6B  F00F         	call	___altoft	;wreg free
  2923  0019B8  C037  F044         	movff	?___altoft,floor@i
  2924  0019BC  C038  F045         	movff	?___altoft+1,floor@i+1
  2925  0019C0  C039  F046         	movff	?___altoft+2,floor@i+2
  2926  0019C4  C041  F001         	movff	floor@x,___ftge@ff1
  2927  0019C8  C042  F002         	movff	floor@x+1,___ftge@ff1+1
  2928  0019CC  C043  F003         	movff	floor@x+2,___ftge@ff1+2
  2929  0019D0  C044  F004         	movff	floor@i,___ftge@ff2
  2930  0019D4  C045  F005         	movff	floor@i+1,___ftge@ff2+1
  2931  0019D8  C046  F006         	movff	floor@i+2,___ftge@ff2+2
  2932  0019DC  ECDF  F00E         	call	___ftge	;wreg free
  2933  0019E0  B0D8               	btfsc	status,0,c
  2934  0019E2  D015               	goto	l1177
  2935  0019E4  C044  F01C         	movff	floor@i,___ftadd@f1
  2936  0019E8  C045  F01D         	movff	floor@i+1,___ftadd@f1+1
  2937  0019EC  C046  F01E         	movff	floor@i+2,___ftadd@f1+2
  2938  0019F0  0E00               	movlw	0
  2939  0019F2  6E1F               	movwf	___ftadd@f2,c
  2940  0019F4  0E80               	movlw	128
  2941  0019F6  6E20               	movwf	___ftadd@f2+1,c
  2942  0019F8  0EBF               	movlw	191
  2943  0019FA  6E21               	movwf	___ftadd@f2+2,c
  2944  0019FC  EC93  F008         	call	___ftadd	;wreg free
  2945  001A00  C01C  F041         	movff	?___ftadd,?_floor
  2946  001A04  C01D  F042         	movff	?___ftadd+1,?_floor+1
  2947  001A08  C01E  F043         	movff	?___ftadd+2,?_floor+2
  2948  001A0C  0012               	return	
  2949  001A0E                     l1177:
  2950  001A0E  C044  F041         	movff	floor@i,?_floor
  2951  001A12  C045  F042         	movff	floor@i+1,?_floor+1
  2952  001A16  C046  F043         	movff	floor@i+2,?_floor+2
  2953  001A1A  0012               	return		;funcret
  2954  001A1C                     __end_of_floor:
  2955                           	opt stack 0
  2956                           tblptru	equ	0xFF8
  2957                           intcon	equ	0xFF2
  2958                           intcon2	equ	0xFF1
  2959                           postinc0	equ	0xFEE
  2960                           wreg	equ	0xFE8
  2961                           postdec1	equ	0xFE5
  2962                           fsr1h	equ	0xFE2
  2963                           fsr1l	equ	0xFE1
  2964                           status	equ	0xFD8
  2965                           
  2966 ;; *************** function _frexp *****************
  2967 ;; Defined at:
  2968 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  value           3    0[COMRAM] int 
  2971 ;;  eptr            2    3[COMRAM] PTR int 
  2972 ;;		 -> log@exponent(2), floor@expon(2), 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  3    0[COMRAM] PTR int 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2984 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2986 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2987 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2988 ;;Total ram usage:        7 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; This function calls:
  2991 ;;		Nothing
  2992 ;; This function is called by:
  2993 ;;		_floor
  2994 ;;		_log
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text19
  2999  001D2E                     __ptext19:
  3000                           	opt stack 0
  3001  001D2E                     _frexp:
  3002                           	opt stack 27
  3003                           
  3004                           ;incstack = 0
  3005  001D2E  5001               	movf	frexp@value,w,c
  3006  001D30  1002               	iorwf	frexp@value+1,w,c
  3007  001D32  1003               	iorwf	frexp@value+2,w,c
  3008  001D34  A4D8               	btfss	status,2,c
  3009  001D36  D00F               	goto	l1182
  3010  001D38  C004  FFD9         	movff	frexp@eptr,fsr2l
  3011  001D3C  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3012  001D40  0E00               	movlw	0
  3013  001D42  6EDE               	movwf	postinc2,c
  3014  001D44  0E00               	movlw	0
  3015  001D46  6EDD               	movwf	postdec2,c
  3016  001D48  0E00               	movlw	0
  3017  001D4A  6E01               	movwf	?_frexp,c
  3018  001D4C  0E00               	movlw	0
  3019  001D4E  6E02               	movwf	?_frexp+1,c
  3020  001D50  0E00               	movlw	0
  3021  001D52  6E03               	movwf	?_frexp+2,c
  3022  001D54  0012               	return	
  3023  001D56                     l1182:
  3024  001D56  5003               	movf	frexp@value+2,w,c
  3025  001D58  0B7F               	andlw	127
  3026  001D5A  6E06               	movwf	??_frexp& (0+255),c
  3027  001D5C  6A07               	clrf	(??_frexp+1)& (0+255),c
  3028  001D5E  90D8               	bcf	status,0,c
  3029  001D60  3606               	rlcf	??_frexp,f,c
  3030  001D62  3607               	rlcf	??_frexp+1,f,c
  3031  001D64  C004  FFD9         	movff	frexp@eptr,fsr2l
  3032  001D68  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3033  001D6C  C006  FFDE         	movff	??_frexp,postinc2
  3034  001D70  C007  FFDD         	movff	??_frexp+1,postdec2
  3035  001D74  AE02               	btfss	frexp@value+1,7,c
  3036  001D76  D003               	goto	u1980
  3037  001D78  6A06               	clrf	??_frexp& (0+255),c
  3038  001D7A  2A06               	incf	??_frexp& (0+255),f,c
  3039  001D7C  D001               	goto	u1988
  3040  001D7E                     u1980:
  3041  001D7E  6A06               	clrf	??_frexp& (0+255),c
  3042  001D80                     u1988:
  3043  001D80  5006               	movf	??_frexp,w,c
  3044  001D82  C004  FFD9         	movff	frexp@eptr,fsr2l
  3045  001D86  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3046  001D8A  12DE               	iorwf	postinc2,f,c
  3047  001D8C  0E00               	movlw	0
  3048  001D8E  12DD               	iorwf	postdec2,f,c
  3049  001D90  C004  FFD9         	movff	frexp@eptr,fsr2l
  3050  001D94  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  3051  001D98  0E82               	movlw	130
  3052  001D9A  26DE               	addwf	postinc2,f,c
  3053  001D9C  0EFF               	movlw	255
  3054  001D9E  22DD               	addwfc	postdec2,f,c
  3055  001DA0  8003               	bsf	frexp@value+2,0,c
  3056  001DA2  8203               	bsf	frexp@value+2,1,c
  3057  001DA4  8403               	bsf	frexp@value+2,2,c
  3058  001DA6  8603               	bsf	frexp@value+2,3,c
  3059  001DA8  8803               	bsf	frexp@value+2,4,c
  3060  001DAA  8A03               	bsf	frexp@value+2,5,c
  3061  001DAC  9C03               	bcf	frexp@value+2,6,c
  3062  001DAE  9E02               	bcf	frexp@value+1,7,c
  3063  001DB0  C001  F001         	movff	frexp@value,?_frexp
  3064  001DB4  C002  F002         	movff	frexp@value+1,?_frexp+1
  3065  001DB8  C003  F003         	movff	frexp@value+2,?_frexp+2
  3066  001DBC  0012               	return	
  3067  001DBE                     __end_of_frexp:
  3068                           	opt stack 0
  3069                           tblptru	equ	0xFF8
  3070                           intcon	equ	0xFF2
  3071                           intcon2	equ	0xFF1
  3072                           postinc0	equ	0xFEE
  3073                           wreg	equ	0xFE8
  3074                           postdec1	equ	0xFE5
  3075                           fsr1h	equ	0xFE2
  3076                           fsr1l	equ	0xFE1
  3077                           postinc2	equ	0xFDE
  3078                           postdec2	equ	0xFDD
  3079                           fsr2h	equ	0xFDA
  3080                           fsr2l	equ	0xFD9
  3081                           status	equ	0xFD8
  3082                           
  3083 ;; *************** function ___fttol *****************
  3084 ;; Defined at:
  3085 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  f1              3   39[COMRAM] float 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  lval            4   49[COMRAM] unsigned long 
  3090 ;;  exp1            1   53[COMRAM] unsigned char 
  3091 ;;  sign1           1   48[COMRAM] unsigned char 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  4   39[COMRAM] long 
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3101 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3102 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3103 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3104 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3105 ;;Total ram usage:       15 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; This function calls:
  3108 ;;		Nothing
  3109 ;; This function is called by:
  3110 ;;		_EEPROM_24AA512_pageWrite
  3111 ;;		_pow
  3112 ;;		_exp
  3113 ;;		_floor
  3114 ;;		_MCP9801_get_temp
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text20
  3119  001670                     __ptext20:
  3120                           	opt stack 0
  3121  001670                     ___fttol:
  3122                           	opt stack 26
  3123                           
  3124                           ;incstack = 0
  3125  001670  C02A  F02C         	movff	___fttol@f1+2,??___fttol
  3126  001674  6A2D               	clrf	(??___fttol+1)& (0+255),c
  3127  001676  6A2E               	clrf	(??___fttol+2)& (0+255),c
  3128  001678  3429               	rlcf	___fttol@f1+1,w,c
  3129  00167A  362C               	rlcf	??___fttol& (0+255),f,c
  3130  00167C  E301               	bnc	u1891
  3131  00167E  802D               	bsf	(??___fttol+1)& (0+255),0,c
  3132  001680                     u1891:
  3133  001680  502C               	movf	??___fttol,w,c
  3134  001682  6E36               	movwf	___fttol@exp1,c
  3135  001684  5036               	movf	___fttol@exp1,w,c
  3136  001686  A4D8               	btfss	status,2,c
  3137  001688  D009               	goto	l869
  3138  00168A  0E00               	movlw	0
  3139  00168C  6E28               	movwf	?___fttol,c
  3140  00168E  0E00               	movlw	0
  3141  001690  6E29               	movwf	?___fttol+1,c
  3142  001692  0E00               	movlw	0
  3143  001694  6E2A               	movwf	?___fttol+2,c
  3144  001696  0E00               	movlw	0
  3145  001698  6E2B               	movwf	?___fttol+3,c
  3146  00169A  0012               	return	
  3147  00169C                     l869:
  3148  00169C  0E17               	movlw	23
  3149  00169E  6E2C               	movwf	??___fttol& (0+255),c
  3150  0016A0  C028  F02D         	movff	___fttol@f1,??___fttol+1
  3151  0016A4  C029  F02E         	movff	___fttol@f1+1,??___fttol+2
  3152  0016A8  C02A  F02F         	movff	___fttol@f1+2,??___fttol+3
  3153  0016AC  282C               	incf	??___fttol,w,c
  3154  0016AE  6E30               	movwf	(??___fttol+4)& (0+255),c
  3155  0016B0  D004               	goto	u1910
  3156  0016B2                     u1915:
  3157  0016B2  90D8               	bcf	status,0,c
  3158  0016B4  322F               	rrcf	??___fttol+3,f,c
  3159  0016B6  322E               	rrcf	??___fttol+2,f,c
  3160  0016B8  322D               	rrcf	??___fttol+1,f,c
  3161  0016BA                     u1910:
  3162  0016BA  2E30               	decfsz	(??___fttol+4)& (0+255),f,c
  3163  0016BC  D7FA               	goto	u1915
  3164  0016BE  502D               	movf	??___fttol+1,w,c
  3165  0016C0  6E31               	movwf	___fttol@sign1,c
  3166  0016C2  8E29               	bsf	___fttol@f1+1,7,c
  3167  0016C4  0EFF               	movlw	255
  3168  0016C6  1628               	andwf	___fttol@f1,f,c
  3169  0016C8  0EFF               	movlw	255
  3170  0016CA  1629               	andwf	___fttol@f1+1,f,c
  3171  0016CC  0E00               	movlw	0
  3172  0016CE  162A               	andwf	___fttol@f1+2,f,c
  3173  0016D0  5028               	movf	___fttol@f1,w,c
  3174  0016D2  6E32               	movwf	___fttol@lval,c
  3175  0016D4  5029               	movf	___fttol@f1+1,w,c
  3176  0016D6  6E33               	movwf	___fttol@lval+1,c
  3177  0016D8  502A               	movf	___fttol@f1+2,w,c
  3178  0016DA  6E34               	movwf	___fttol@lval+2,c
  3179  0016DC  6A35               	clrf	___fttol@lval+3,c
  3180  0016DE  0E8E               	movlw	142
  3181  0016E0  5E36               	subwf	___fttol@exp1,f,c
  3182  0016E2  AE36               	btfss	___fttol@exp1,7,c
  3183  0016E4  D016               	goto	l871
  3184  0016E6  5036               	movf	___fttol@exp1,w,c
  3185  0016E8  0A80               	xorlw	128
  3186  0016EA  0F8F               	addlw	143
  3187  0016EC  B0D8               	btfsc	status,0,c
  3188  0016EE  D009               	goto	l872
  3189  0016F0  0E00               	movlw	0
  3190  0016F2  6E28               	movwf	?___fttol,c
  3191  0016F4  0E00               	movlw	0
  3192  0016F6  6E29               	movwf	?___fttol+1,c
  3193  0016F8  0E00               	movlw	0
  3194  0016FA  6E2A               	movwf	?___fttol+2,c
  3195  0016FC  0E00               	movlw	0
  3196  0016FE  6E2B               	movwf	?___fttol+3,c
  3197  001700  0012               	return	
  3198  001702                     l872:
  3199  001702  90D8               	bcf	status,0,c
  3200  001704  3235               	rrcf	___fttol@lval+3,f,c
  3201  001706  3234               	rrcf	___fttol@lval+2,f,c
  3202  001708  3233               	rrcf	___fttol@lval+1,f,c
  3203  00170A  3232               	rrcf	___fttol@lval,f,c
  3204  00170C  3E36               	incfsz	___fttol@exp1,f,c
  3205  00170E  D7F9               	goto	l872
  3206  001710  D015               	goto	u1950
  3207  001712                     l871:
  3208  001712  0E17               	movlw	23
  3209  001714  6436               	cpfsgt	___fttol@exp1,c
  3210  001716  D00F               	goto	l877
  3211  001718  0E00               	movlw	0
  3212  00171A  6E28               	movwf	?___fttol,c
  3213  00171C  0E00               	movlw	0
  3214  00171E  6E29               	movwf	?___fttol+1,c
  3215  001720  0E00               	movlw	0
  3216  001722  6E2A               	movwf	?___fttol+2,c
  3217  001724  0E00               	movlw	0
  3218  001726  6E2B               	movwf	?___fttol+3,c
  3219  001728  0012               	return	
  3220  00172A  90D8               	bcf	status,0,c
  3221  00172C  3632               	rlcf	___fttol@lval,f,c
  3222  00172E  3633               	rlcf	___fttol@lval+1,f,c
  3223  001730  3634               	rlcf	___fttol@lval+2,f,c
  3224  001732  3635               	rlcf	___fttol@lval+3,f,c
  3225  001734  0636               	decf	___fttol@exp1,f,c
  3226  001736                     l877:
  3227  001736  5036               	movf	___fttol@exp1,w,c
  3228  001738  A4D8               	btfss	status,2,c
  3229  00173A  D7F7               	goto	l878
  3230  00173C                     u1950:
  3231  00173C  5031               	movf	___fttol@sign1,w,c
  3232  00173E  B4D8               	btfsc	status,2,c
  3233  001740  D008               	goto	l880
  3234  001742  1E35               	comf	___fttol@lval+3,f,c
  3235  001744  1E34               	comf	___fttol@lval+2,f,c
  3236  001746  1E33               	comf	___fttol@lval+1,f,c
  3237  001748  6C32               	negf	___fttol@lval,c
  3238  00174A  0E00               	movlw	0
  3239  00174C  2233               	addwfc	___fttol@lval+1,f,c
  3240  00174E  2234               	addwfc	___fttol@lval+2,f,c
  3241  001750  2235               	addwfc	___fttol@lval+3,f,c
  3242  001752                     l880:
  3243  001752  C032  F028         	movff	___fttol@lval,?___fttol
  3244  001756  C033  F029         	movff	___fttol@lval+1,?___fttol+1
  3245  00175A  C034  F02A         	movff	___fttol@lval+2,?___fttol+2
  3246  00175E  C035  F02B         	movff	___fttol@lval+3,?___fttol+3
  3247  001762  0012               	return	
  3248  001764                     __end_of___fttol:
  3249                           	opt stack 0
  3250                           tblptru	equ	0xFF8
  3251                           intcon	equ	0xFF2
  3252                           intcon2	equ	0xFF1
  3253                           postinc0	equ	0xFEE
  3254                           wreg	equ	0xFE8
  3255                           postdec1	equ	0xFE5
  3256                           fsr1h	equ	0xFE2
  3257                           fsr1l	equ	0xFE1
  3258                           postinc2	equ	0xFDE
  3259                           postdec2	equ	0xFDD
  3260                           fsr2h	equ	0xFDA
  3261                           fsr2l	equ	0xFD9
  3262                           status	equ	0xFD8
  3263                           
  3264 ;; *************** function ___ftge *****************
  3265 ;; Defined at:
  3266 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  ff1             3    0[COMRAM] float 
  3269 ;;  ff2             3    3[COMRAM] float 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;		None
  3272 ;; Return value:  Size  Location     Type
  3273 ;;		None               void
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3281 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3283 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3284 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3285 ;;Total ram usage:        9 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		_pow
  3291 ;;		_exp
  3292 ;;		_floor
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text21
  3297  001DBE                     __ptext21:
  3298                           	opt stack 0
  3299  001DBE                     ___ftge:
  3300                           	opt stack 26
  3301                           
  3302                           ;incstack = 0
  3303  001DBE  AE03               	btfss	___ftge@ff1+2,7,c
  3304  001DC0  D016               	goto	l841
  3305  001DC2  C001  F007         	movff	___ftge@ff1,??___ftge
  3306  001DC6  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3307  001DCA  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3308  001DCE  1E07               	comf	??___ftge,f,c
  3309  001DD0  1E08               	comf	??___ftge+1,f,c
  3310  001DD2  1E09               	comf	??___ftge+2,f,c
  3311  001DD4  2A07               	incf	??___ftge,f,c
  3312  001DD6  0E00               	movlw	0
  3313  001DD8  2208               	addwfc	??___ftge+1,f,c
  3314  001DDA  2209               	addwfc	??___ftge+2,f,c
  3315  001DDC  0E00               	movlw	0
  3316  001DDE  2407               	addwf	??___ftge,w,c
  3317  001DE0  6E01               	movwf	___ftge@ff1,c
  3318  001DE2  0E00               	movlw	0
  3319  001DE4  2008               	addwfc	??___ftge+1,w,c
  3320  001DE6  6E02               	movwf	___ftge@ff1+1,c
  3321  001DE8  0E80               	movlw	128
  3322  001DEA  2009               	addwfc	??___ftge+2,w,c
  3323  001DEC  6E03               	movwf	___ftge@ff1+2,c
  3324  001DEE                     l841:
  3325  001DEE  AE06               	btfss	___ftge@ff2+2,7,c
  3326  001DF0  D016               	goto	l842
  3327  001DF2  C004  F007         	movff	___ftge@ff2,??___ftge
  3328  001DF6  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3329  001DFA  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3330  001DFE  1E07               	comf	??___ftge,f,c
  3331  001E00  1E08               	comf	??___ftge+1,f,c
  3332  001E02  1E09               	comf	??___ftge+2,f,c
  3333  001E04  2A07               	incf	??___ftge,f,c
  3334  001E06  0E00               	movlw	0
  3335  001E08  2208               	addwfc	??___ftge+1,f,c
  3336  001E0A  2209               	addwfc	??___ftge+2,f,c
  3337  001E0C  0E00               	movlw	0
  3338  001E0E  2407               	addwf	??___ftge,w,c
  3339  001E10  6E04               	movwf	___ftge@ff2,c
  3340  001E12  0E00               	movlw	0
  3341  001E14  2008               	addwfc	??___ftge+1,w,c
  3342  001E16  6E05               	movwf	___ftge@ff2+1,c
  3343  001E18  0E80               	movlw	128
  3344  001E1A  2009               	addwfc	??___ftge+2,w,c
  3345  001E1C  6E06               	movwf	___ftge@ff2+2,c
  3346  001E1E                     l842:
  3347  001E1E  0E00               	movlw	0
  3348  001E20  1A01               	xorwf	___ftge@ff1,f,c
  3349  001E22  0E00               	movlw	0
  3350  001E24  1A02               	xorwf	___ftge@ff1+1,f,c
  3351  001E26  0E80               	movlw	128
  3352  001E28  1A03               	xorwf	___ftge@ff1+2,f,c
  3353  001E2A  0E00               	movlw	0
  3354  001E2C  1A04               	xorwf	___ftge@ff2,f,c
  3355  001E2E  0E00               	movlw	0
  3356  001E30  1A05               	xorwf	___ftge@ff2+1,f,c
  3357  001E32  0E80               	movlw	128
  3358  001E34  1A06               	xorwf	___ftge@ff2+2,f,c
  3359  001E36  5004               	movf	___ftge@ff2,w,c
  3360  001E38  5C01               	subwf	___ftge@ff1,w,c
  3361  001E3A  5005               	movf	___ftge@ff2+1,w,c
  3362  001E3C  5802               	subwfb	___ftge@ff1+1,w,c
  3363  001E3E  5006               	movf	___ftge@ff2+2,w,c
  3364  001E40  5803               	subwfb	___ftge@ff1+2,w,c
  3365  001E42  B0D8               	btfsc	status,0,c
  3366  001E44  D002               	goto	l2357
  3367  001E46  90D8               	bcf	status,0,c
  3368  001E48  0012               	return	
  3369  001E4A                     l2357:
  3370  001E4A  80D8               	bsf	status,0,c
  3371  001E4C  0012               	return	
  3372  001E4E                     __end_of___ftge:
  3373                           	opt stack 0
  3374                           tblptru	equ	0xFF8
  3375                           intcon	equ	0xFF2
  3376                           intcon2	equ	0xFF1
  3377                           postinc0	equ	0xFEE
  3378                           wreg	equ	0xFE8
  3379                           postdec1	equ	0xFE5
  3380                           fsr1h	equ	0xFE2
  3381                           fsr1l	equ	0xFE1
  3382                           postinc2	equ	0xFDE
  3383                           postdec2	equ	0xFDD
  3384                           fsr2h	equ	0xFDA
  3385                           fsr2l	equ	0xFD9
  3386                           status	equ	0xFD8
  3387                           
  3388 ;; *************** function ___altoft *****************
  3389 ;; Defined at:
  3390 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  c               4   54[COMRAM] long 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  sign            1   63[COMRAM] unsigned char 
  3395 ;;  exp             1   62[COMRAM] unsigned char 
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  3   54[COMRAM] float 
  3398 ;; Registers used:
  3399 ;;		wreg, status,2, status,0, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3405 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3406 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3407 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3408 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3409 ;;Total ram usage:       10 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; Hardware stack levels required when called:    1
  3412 ;; This function calls:
  3413 ;;		___ftpack
  3414 ;; This function is called by:
  3415 ;;		_floor
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text22
  3420  001ED6                     __ptext22:
  3421                           	opt stack 0
  3422  001ED6                     ___altoft:
  3423                           	opt stack 25
  3424                           
  3425                           ;incstack = 0
  3426  001ED6  0E00               	movlw	0
  3427  001ED8  6E40               	movwf	___altoft@sign,c
  3428  001EDA  0E8E               	movlw	142
  3429  001EDC  6E3F               	movwf	___altoft@exp,c
  3430  001EDE  AE3A               	btfss	___altoft@c+3,7,c
  3431  001EE0  D011               	goto	l639
  3432  001EE2  1E3A               	comf	___altoft@c+3,f,c
  3433  001EE4  1E39               	comf	___altoft@c+2,f,c
  3434  001EE6  1E38               	comf	___altoft@c+1,f,c
  3435  001EE8  6C37               	negf	___altoft@c,c
  3436  001EEA  0E00               	movlw	0
  3437  001EEC  2238               	addwfc	___altoft@c+1,f,c
  3438  001EEE  2239               	addwfc	___altoft@c+2,f,c
  3439  001EF0  223A               	addwfc	___altoft@c+3,f,c
  3440  001EF2  0E01               	movlw	1
  3441  001EF4  6E40               	movwf	___altoft@sign,c
  3442  001EF6  D006               	goto	l639
  3443  001EF8  90D8               	bcf	status,0,c
  3444  001EFA  323A               	rrcf	___altoft@c+3,f,c
  3445  001EFC  3239               	rrcf	___altoft@c+2,f,c
  3446  001EFE  3238               	rrcf	___altoft@c+1,f,c
  3447  001F00  3237               	rrcf	___altoft@c,f,c
  3448  001F02  2A3F               	incf	___altoft@exp,f,c
  3449  001F04                     l639:
  3450  001F04  0E00               	movlw	0
  3451  001F06  1437               	andwf	___altoft@c,w,c
  3452  001F08  6E3B               	movwf	??___altoft& (0+255),c
  3453  001F0A  0E00               	movlw	0
  3454  001F0C  1438               	andwf	___altoft@c+1,w,c
  3455  001F0E  6E3C               	movwf	(??___altoft+1)& (0+255),c
  3456  001F10  0E00               	movlw	0
  3457  001F12  1439               	andwf	___altoft@c+2,w,c
  3458  001F14  6E3D               	movwf	(??___altoft+2)& (0+255),c
  3459  001F16  0EFF               	movlw	255
  3460  001F18  143A               	andwf	___altoft@c+3,w,c
  3461  001F1A  6E3E               	movwf	(??___altoft+3)& (0+255),c
  3462  001F1C  503B               	movf	??___altoft,w,c
  3463  001F1E  103C               	iorwf	??___altoft+1,w,c
  3464  001F20  103D               	iorwf	??___altoft+2,w,c
  3465  001F22  103E               	iorwf	??___altoft+3,w,c
  3466  001F24  A4D8               	btfss	status,2,c
  3467  001F26  D7E8               	goto	l640
  3468  001F28  C037  F001         	movff	___altoft@c,___ftpack@arg
  3469  001F2C  C038  F002         	movff	___altoft@c+1,___ftpack@arg+1
  3470  001F30  C039  F003         	movff	___altoft@c+2,___ftpack@arg+2
  3471  001F34  C03F  F004         	movff	___altoft@exp,___ftpack@exp
  3472  001F38  C040  F005         	movff	___altoft@sign,___ftpack@sign
  3473  001F3C  EC40  F00E         	call	___ftpack	;wreg free
  3474  001F40  C001  F037         	movff	?___ftpack,?___altoft
  3475  001F44  C002  F038         	movff	?___ftpack+1,?___altoft+1
  3476  001F48  C003  F039         	movff	?___ftpack+2,?___altoft+2
  3477  001F4C  0012               	return	
  3478  001F4E                     __end_of___altoft:
  3479                           	opt stack 0
  3480                           tblptru	equ	0xFF8
  3481                           intcon	equ	0xFF2
  3482                           intcon2	equ	0xFF1
  3483                           postinc0	equ	0xFEE
  3484                           wreg	equ	0xFE8
  3485                           postdec1	equ	0xFE5
  3486                           fsr1h	equ	0xFE2
  3487                           fsr1l	equ	0xFE1
  3488                           postinc2	equ	0xFDE
  3489                           postdec2	equ	0xFDD
  3490                           fsr2h	equ	0xFDA
  3491                           fsr2l	equ	0xFD9
  3492                           status	equ	0xFD8
  3493                           
  3494 ;; *************** function _eval_poly *****************
  3495 ;; Defined at:
  3496 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  x               3   39[COMRAM] float 
  3499 ;;  d               2   42[COMRAM] PTR const 
  3500 ;;		 -> log@coeff(27), exp@coeff(30), 
  3501 ;;  n               2   44[COMRAM] int 
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;  res             3   48[COMRAM] int 
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  3   39[COMRAM] int 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3513 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3514 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3515 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3516 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3517 ;;Total ram usage:       12 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:    2
  3520 ;; This function calls:
  3521 ;;		___ftadd
  3522 ;;		___ftmul
  3523 ;;		___wmul
  3524 ;; This function is called by:
  3525 ;;		_exp
  3526 ;;		_log
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text23
  3531  001A1C                     __ptext23:
  3532                           	opt stack 0
  3533  001A1C                     _eval_poly:
  3534                           	opt stack 25
  3535                           
  3536                           ;incstack = 0
  3537  001A1C  C02D  F001         	movff	eval_poly@n,___wmul@multiplier
  3538  001A20  C02E  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  3539  001A24  0E00               	movlw	0
  3540  001A26  6E04               	movwf	___wmul@multiplicand+1,c
  3541  001A28  0E03               	movlw	3
  3542  001A2A  6E03               	movwf	___wmul@multiplicand,c
  3543  001A2C  ECC2  F010         	call	___wmul	;wreg free
  3544  001A30  C02B  F02F         	movff	eval_poly@d,??_eval_poly
  3545  001A34  C02C  F030         	movff	eval_poly@d+1,??_eval_poly+1
  3546  001A38  5001               	movf	?___wmul,w,c
  3547  001A3A  262F               	addwf	??_eval_poly,f,c
  3548  001A3C  5002               	movf	?___wmul+1,w,c
  3549  001A3E  2230               	addwfc	??_eval_poly+1,f,c
  3550  001A40  C02F  FFF6         	movff	??_eval_poly,tblptrl
  3551  001A44  C030  FFF7         	movff	??_eval_poly+1,tblptrh
  3552  001A48                     	if	0	;tblptru may be non-zero
  3553  001A48                     	endif
  3554  001A48                     	if	0	;tblptru may be non-zero
  3555  001A48                     	endif
  3556  001A48  0009               	tblrd		*+
  3557  001A4A  CFF5 F031          	movff	tablat,eval_poly@res
  3558  001A4E  0009               	tblrd		*+
  3559  001A50  CFF5 F032          	movff	tablat,eval_poly@res+1
  3560  001A54  000A               	tblrd		*-
  3561  001A56  CFF5 F033          	movff	tablat,eval_poly@res+2
  3562  001A5A  D03E               	goto	l1212
  3563  001A5C  C031  F010         	movff	eval_poly@res,___ftmul@f2
  3564  001A60  C032  F011         	movff	eval_poly@res+1,___ftmul@f2+1
  3565  001A64  C033  F012         	movff	eval_poly@res+2,___ftmul@f2+2
  3566  001A68  C028  F00D         	movff	eval_poly@x,___ftmul@f1
  3567  001A6C  C029  F00E         	movff	eval_poly@x+1,___ftmul@f1+1
  3568  001A70  C02A  F00F         	movff	eval_poly@x+2,___ftmul@f1+2
  3569  001A74  ECB2  F00B         	call	___ftmul	;wreg free
  3570  001A78  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  3571  001A7C  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  3572  001A80  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  3573  001A84  0E00               	movlw	0
  3574  001A86  6E04               	movwf	___wmul@multiplicand+1,c
  3575  001A88  0E03               	movlw	3
  3576  001A8A  6E03               	movwf	___wmul@multiplicand,c
  3577  001A8C  062D               	decf	eval_poly@n,f,c
  3578  001A8E  A0D8               	btfss	status,0,c
  3579  001A90  062E               	decf	eval_poly@n+1,f,c
  3580  001A92  C02D  F001         	movff	eval_poly@n,___wmul@multiplier
  3581  001A96  C02E  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  3582  001A9A  ECC2  F010         	call	___wmul	;wreg free
  3583  001A9E  C02B  F02F         	movff	eval_poly@d,??_eval_poly
  3584  001AA2  C02C  F030         	movff	eval_poly@d+1,??_eval_poly+1
  3585  001AA6  5001               	movf	?___wmul,w,c
  3586  001AA8  262F               	addwf	??_eval_poly,f,c
  3587  001AAA  5002               	movf	?___wmul+1,w,c
  3588  001AAC  2230               	addwfc	??_eval_poly+1,f,c
  3589  001AAE  C02F  FFF6         	movff	??_eval_poly,tblptrl
  3590  001AB2  C030  FFF7         	movff	??_eval_poly+1,tblptrh
  3591  001AB6                     	if	0	;tblptru may be non-zero
  3592  001AB6                     	endif
  3593  001AB6                     	if	0	;tblptru may be non-zero
  3594  001AB6                     	endif
  3595  001AB6  0009               	tblrd		*+
  3596  001AB8  CFF5 F01F          	movff	tablat,___ftadd@f2
  3597  001ABC  0009               	tblrd		*+
  3598  001ABE  CFF5 F020          	movff	tablat,___ftadd@f2+1
  3599  001AC2  000A               	tblrd		*-
  3600  001AC4  CFF5 F021          	movff	tablat,___ftadd@f2+2
  3601  001AC8  EC93  F008         	call	___ftadd	;wreg free
  3602  001ACC  C01C  F031         	movff	?___ftadd,eval_poly@res
  3603  001AD0  C01D  F032         	movff	?___ftadd+1,eval_poly@res+1
  3604  001AD4  C01E  F033         	movff	?___ftadd+2,eval_poly@res+2
  3605  001AD8                     l1212:
  3606  001AD8  502D               	movf	eval_poly@n,w,c
  3607  001ADA  102E               	iorwf	eval_poly@n+1,w,c
  3608  001ADC  A4D8               	btfss	status,2,c
  3609  001ADE  D7BE               	goto	l1213
  3610  001AE0  C031  F028         	movff	eval_poly@res,?_eval_poly
  3611  001AE4  C032  F029         	movff	eval_poly@res+1,?_eval_poly+1
  3612  001AE8  C033  F02A         	movff	eval_poly@res+2,?_eval_poly+2
  3613  001AEC  0012               	return		;funcret
  3614  001AEE                     __end_of_eval_poly:
  3615                           	opt stack 0
  3616                           tblptru	equ	0xFF8
  3617                           tblptrh	equ	0xFF7
  3618                           tblptrl	equ	0xFF6
  3619                           tablat	equ	0xFF5
  3620                           intcon	equ	0xFF2
  3621                           intcon2	equ	0xFF1
  3622                           postinc0	equ	0xFEE
  3623                           wreg	equ	0xFE8
  3624                           postdec1	equ	0xFE5
  3625                           fsr1h	equ	0xFE2
  3626                           fsr1l	equ	0xFE1
  3627                           postinc2	equ	0xFDE
  3628                           postdec2	equ	0xFDD
  3629                           fsr2h	equ	0xFDA
  3630                           fsr2l	equ	0xFD9
  3631                           status	equ	0xFD8
  3632                           
  3633 ;; *************** function ___wmul *****************
  3634 ;; Defined at:
  3635 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;  multiplier      2    0[COMRAM] unsigned int 
  3638 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;  product         2    4[COMRAM] unsigned int 
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  2    0[COMRAM] unsigned int 
  3643 ;; Registers used:
  3644 ;;		wreg, status,2, status,0, prodl, prodh
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3651 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3653 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3654 ;;Total ram usage:        6 bytes
  3655 ;; Hardware stack levels used:    1
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_I2C_Init
  3660 ;;		_eval_poly
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text24
  3665  002184                     __ptext24:
  3666                           	opt stack 0
  3667  002184                     ___wmul:
  3668                           	opt stack 28
  3669                           
  3670                           ;incstack = 0
  3671  002184  5001               	movf	___wmul@multiplier,w,c
  3672  002186  0203               	mulwf	___wmul@multiplicand,c
  3673  002188  CFF3 F005          	movff	prodl,___wmul@product
  3674  00218C  CFF4 F006          	movff	prodh,___wmul@product+1
  3675  002190  5001               	movf	___wmul@multiplier,w,c
  3676  002192  0204               	mulwf	___wmul@multiplicand+1,c
  3677  002194  50F3               	movf	prodl,w,c
  3678  002196  2606               	addwf	___wmul@product+1,f,c
  3679  002198  5002               	movf	___wmul@multiplier+1,w,c
  3680  00219A  0203               	mulwf	___wmul@multiplicand,c
  3681  00219C  50F3               	movf	prodl,w,c
  3682  00219E  2606               	addwf	___wmul@product+1,f,c
  3683  0021A0  C005  F001         	movff	___wmul@product,?___wmul
  3684  0021A4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3685  0021A8  0012               	return	
  3686  0021AA                     __end_of___wmul:
  3687                           	opt stack 0
  3688                           tblptru	equ	0xFF8
  3689                           tblptrh	equ	0xFF7
  3690                           tblptrl	equ	0xFF6
  3691                           tablat	equ	0xFF5
  3692                           prodh	equ	0xFF4
  3693                           prodl	equ	0xFF3
  3694                           intcon	equ	0xFF2
  3695                           intcon2	equ	0xFF1
  3696                           postinc0	equ	0xFEE
  3697                           wreg	equ	0xFE8
  3698                           postdec1	equ	0xFE5
  3699                           fsr1h	equ	0xFE2
  3700                           fsr1l	equ	0xFE1
  3701                           postinc2	equ	0xFDE
  3702                           postdec2	equ	0xFDD
  3703                           fsr2h	equ	0xFDA
  3704                           fsr2l	equ	0xFD9
  3705                           status	equ	0xFD8
  3706                           
  3707 ;; *************** function ___ftmul *****************
  3708 ;; Defined at:
  3709 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  f1              3   12[COMRAM] float 
  3712 ;;  f2              3   15[COMRAM] float 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  3715 ;;  sign            1   26[COMRAM] unsigned char 
  3716 ;;  cntr            1   25[COMRAM] unsigned char 
  3717 ;;  exp             1   21[COMRAM] unsigned char 
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  3   12[COMRAM] float 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2, status,0, cstack
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3727 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3728 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3729 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3730 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3731 ;;Total ram usage:       15 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    1
  3734 ;; This function calls:
  3735 ;;		___ftpack
  3736 ;; This function is called by:
  3737 ;;		_EEPROM_24AA512_pageWrite
  3738 ;;		_pow
  3739 ;;		_exp
  3740 ;;		_log
  3741 ;;		_eval_poly
  3742 ;;		_MCP9801_get_temp
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text25
  3747  001764                     __ptext25:
  3748                           	opt stack 0
  3749  001764                     ___ftmul:
  3750                           	opt stack 25
  3751                           
  3752                           ;incstack = 0
  3753  001764  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  3754  001768  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3755  00176A  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3756  00176C  340E               	rlcf	___ftmul@f1+1,w,c
  3757  00176E  3613               	rlcf	??___ftmul& (0+255),f,c
  3758  001770  E301               	bnc	u1801
  3759  001772  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3760  001774                     u1801:
  3761  001774  5013               	movf	??___ftmul,w,c
  3762  001776  6E16               	movwf	___ftmul@exp,c
  3763  001778  5016               	movf	___ftmul@exp,w,c
  3764  00177A  A4D8               	btfss	status,2,c
  3765  00177C  D007               	goto	l848
  3766  00177E  0E00               	movlw	0
  3767  001780  6E0D               	movwf	?___ftmul,c
  3768  001782  0E00               	movlw	0
  3769  001784  6E0E               	movwf	?___ftmul+1,c
  3770  001786  0E00               	movlw	0
  3771  001788  6E0F               	movwf	?___ftmul+2,c
  3772  00178A  0012               	return	
  3773  00178C                     l848:
  3774  00178C  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  3775  001790  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3776  001792  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3777  001794  3411               	rlcf	___ftmul@f2+1,w,c
  3778  001796  3613               	rlcf	??___ftmul& (0+255),f,c
  3779  001798  E301               	bnc	u1821
  3780  00179A  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3781  00179C                     u1821:
  3782  00179C  5013               	movf	??___ftmul,w,c
  3783  00179E  6E1B               	movwf	___ftmul@sign,c
  3784  0017A0  501B               	movf	___ftmul@sign,w,c
  3785  0017A2  A4D8               	btfss	status,2,c
  3786  0017A4  D007               	goto	l850
  3787  0017A6  0E00               	movlw	0
  3788  0017A8  6E0D               	movwf	?___ftmul,c
  3789  0017AA  0E00               	movlw	0
  3790  0017AC  6E0E               	movwf	?___ftmul+1,c
  3791  0017AE  0E00               	movlw	0
  3792  0017B0  6E0F               	movwf	?___ftmul+2,c
  3793  0017B2  0012               	return	
  3794  0017B4                     l850:
  3795  0017B4  501B               	movf	___ftmul@sign,w,c
  3796  0017B6  0F7B               	addlw	123
  3797  0017B8  2616               	addwf	___ftmul@exp,f,c
  3798  0017BA  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  3799  0017BE  5012               	movf	___ftmul@f2+2,w,c
  3800  0017C0  1A1B               	xorwf	___ftmul@sign,f,c
  3801  0017C2  0E80               	movlw	128
  3802  0017C4  161B               	andwf	___ftmul@sign,f,c
  3803  0017C6  8E0E               	bsf	___ftmul@f1+1,7,c
  3804  0017C8  8E11               	bsf	___ftmul@f2+1,7,c
  3805  0017CA  0EFF               	movlw	255
  3806  0017CC  1610               	andwf	___ftmul@f2,f,c
  3807  0017CE  0EFF               	movlw	255
  3808  0017D0  1611               	andwf	___ftmul@f2+1,f,c
  3809  0017D2  0E00               	movlw	0
  3810  0017D4  1612               	andwf	___ftmul@f2+2,f,c
  3811  0017D6  0E00               	movlw	0
  3812  0017D8  6E17               	movwf	___ftmul@f3_as_product,c
  3813  0017DA  0E00               	movlw	0
  3814  0017DC  6E18               	movwf	___ftmul@f3_as_product+1,c
  3815  0017DE  0E00               	movlw	0
  3816  0017E0  6E19               	movwf	___ftmul@f3_as_product+2,c
  3817  0017E2  0E07               	movlw	7
  3818  0017E4  6E1A               	movwf	___ftmul@cntr,c
  3819  0017E6  A00D               	btfss	___ftmul@f1,0,c
  3820  0017E8  D006               	goto	l852
  3821  0017EA  5010               	movf	___ftmul@f2,w,c
  3822  0017EC  2617               	addwf	___ftmul@f3_as_product,f,c
  3823  0017EE  5011               	movf	___ftmul@f2+1,w,c
  3824  0017F0  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  3825  0017F2  5012               	movf	___ftmul@f2+2,w,c
  3826  0017F4  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  3827  0017F6                     l852:
  3828  0017F6  90D8               	bcf	status,0,c
  3829  0017F8  320F               	rrcf	___ftmul@f1+2,f,c
  3830  0017FA  320E               	rrcf	___ftmul@f1+1,f,c
  3831  0017FC  320D               	rrcf	___ftmul@f1,f,c
  3832  0017FE  90D8               	bcf	status,0,c
  3833  001800  3610               	rlcf	___ftmul@f2,f,c
  3834  001802  3611               	rlcf	___ftmul@f2+1,f,c
  3835  001804  3612               	rlcf	___ftmul@f2+2,f,c
  3836  001806  2E1A               	decfsz	___ftmul@cntr,f,c
  3837  001808  D7EE               	goto	l851
  3838  00180A  0E09               	movlw	9
  3839  00180C  6E1A               	movwf	___ftmul@cntr,c
  3840  00180E  A00D               	btfss	___ftmul@f1,0,c
  3841  001810  D006               	goto	l855
  3842  001812  5010               	movf	___ftmul@f2,w,c
  3843  001814  2617               	addwf	___ftmul@f3_as_product,f,c
  3844  001816  5011               	movf	___ftmul@f2+1,w,c
  3845  001818  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  3846  00181A  5012               	movf	___ftmul@f2+2,w,c
  3847  00181C  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  3848  00181E                     l855:
  3849  00181E  90D8               	bcf	status,0,c
  3850  001820  320F               	rrcf	___ftmul@f1+2,f,c
  3851  001822  320E               	rrcf	___ftmul@f1+1,f,c
  3852  001824  320D               	rrcf	___ftmul@f1,f,c
  3853  001826  90D8               	bcf	status,0,c
  3854  001828  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  3855  00182A  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  3856  00182C  3217               	rrcf	___ftmul@f3_as_product,f,c
  3857  00182E  2E1A               	decfsz	___ftmul@cntr,f,c
  3858  001830  D7EE               	goto	l854
  3859  001832  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3860  001836  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3861  00183A  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3862  00183E  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  3863  001842  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  3864  001846  EC40  F00E         	call	___ftpack	;wreg free
  3865  00184A  C001  F00D         	movff	?___ftpack,?___ftmul
  3866  00184E  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  3867  001852  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  3868  001856  0012               	return	
  3869  001858                     __end_of___ftmul:
  3870                           	opt stack 0
  3871                           tblptru	equ	0xFF8
  3872                           tblptrh	equ	0xFF7
  3873                           tblptrl	equ	0xFF6
  3874                           tablat	equ	0xFF5
  3875                           prodh	equ	0xFF4
  3876                           prodl	equ	0xFF3
  3877                           intcon	equ	0xFF2
  3878                           intcon2	equ	0xFF1
  3879                           postinc0	equ	0xFEE
  3880                           wreg	equ	0xFE8
  3881                           postdec1	equ	0xFE5
  3882                           fsr1h	equ	0xFE2
  3883                           fsr1l	equ	0xFE1
  3884                           postinc2	equ	0xFDE
  3885                           postdec2	equ	0xFDD
  3886                           fsr2h	equ	0xFDA
  3887                           fsr2l	equ	0xFD9
  3888                           status	equ	0xFD8
  3889                           
  3890 ;; *************** function ___ftsub *****************
  3891 ;; Defined at:
  3892 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  f1              3   39[COMRAM] float 
  3895 ;;  f2              3   42[COMRAM] float 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  3   39[COMRAM] float 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3907 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3910 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3911 ;;Total ram usage:        6 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    2
  3914 ;; This function calls:
  3915 ;;		___ftadd
  3916 ;; This function is called by:
  3917 ;;		_exp
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text26
  3922  002042                     __ptext26:
  3923                           	opt stack 0
  3924  002042                     ___ftsub:
  3925                           	opt stack 25
  3926                           
  3927                           ;incstack = 0
  3928  002042  502B               	movf	___ftsub@f2,w,c
  3929  002044  102C               	iorwf	___ftsub@f2+1,w,c
  3930  002046  102D               	iorwf	___ftsub@f2+2,w,c
  3931  002048  B4D8               	btfsc	status,2,c
  3932  00204A  D006               	goto	l865
  3933  00204C  0E00               	movlw	0
  3934  00204E  1A2B               	xorwf	___ftsub@f2,f,c
  3935  002050  0E00               	movlw	0
  3936  002052  1A2C               	xorwf	___ftsub@f2+1,f,c
  3937  002054  0E80               	movlw	128
  3938  002056  1A2D               	xorwf	___ftsub@f2+2,f,c
  3939  002058                     l865:
  3940  002058  C028  F01C         	movff	___ftsub@f1,___ftadd@f1
  3941  00205C  C029  F01D         	movff	___ftsub@f1+1,___ftadd@f1+1
  3942  002060  C02A  F01E         	movff	___ftsub@f1+2,___ftadd@f1+2
  3943  002064  C02B  F01F         	movff	___ftsub@f2,___ftadd@f2
  3944  002068  C02C  F020         	movff	___ftsub@f2+1,___ftadd@f2+1
  3945  00206C  C02D  F021         	movff	___ftsub@f2+2,___ftadd@f2+2
  3946  002070  EC93  F008         	call	___ftadd	;wreg free
  3947  002074  C01C  F028         	movff	?___ftadd,?___ftsub
  3948  002078  C01D  F029         	movff	?___ftadd+1,?___ftsub+1
  3949  00207C  C01E  F02A         	movff	?___ftadd+2,?___ftsub+2
  3950  002080  0012               	return	
  3951  002082                     __end_of___ftsub:
  3952                           	opt stack 0
  3953                           tblptru	equ	0xFF8
  3954                           tblptrh	equ	0xFF7
  3955                           tblptrl	equ	0xFF6
  3956                           tablat	equ	0xFF5
  3957                           prodh	equ	0xFF4
  3958                           prodl	equ	0xFF3
  3959                           intcon	equ	0xFF2
  3960                           intcon2	equ	0xFF1
  3961                           postinc0	equ	0xFEE
  3962                           wreg	equ	0xFE8
  3963                           postdec1	equ	0xFE5
  3964                           fsr1h	equ	0xFE2
  3965                           fsr1l	equ	0xFE1
  3966                           postinc2	equ	0xFDE
  3967                           postdec2	equ	0xFDD
  3968                           fsr2h	equ	0xFDA
  3969                           fsr2l	equ	0xFD9
  3970                           status	equ	0xFD8
  3971                           
  3972 ;; *************** function ___ftadd *****************
  3973 ;; Defined at:
  3974 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  f1              3   27[COMRAM] float 
  3977 ;;  f2              3   30[COMRAM] float 
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;  exp1            1   38[COMRAM] unsigned char 
  3980 ;;  exp2            1   37[COMRAM] unsigned char 
  3981 ;;  sign            1   36[COMRAM] unsigned char 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  3   27[COMRAM] float 
  3984 ;; Registers used:
  3985 ;;		wreg, status,2, status,0, cstack
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3991 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3992 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3993 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3994 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3995 ;;Total ram usage:       12 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    1
  3998 ;; This function calls:
  3999 ;;		___ftpack
  4000 ;; This function is called by:
  4001 ;;		_EEPROM_24AA512_pageWrite
  4002 ;;		___ftsub
  4003 ;;		_floor
  4004 ;;		_log
  4005 ;;		_eval_poly
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text27
  4010  001126                     __ptext27:
  4011                           	opt stack 0
  4012  001126                     ___ftadd:
  4013                           	opt stack 25
  4014                           
  4015                           ;incstack = 0
  4016  001126  C01E  F022         	movff	___ftadd@f1+2,??___ftadd
  4017  00112A  6A23               	clrf	(??___ftadd+1)& (0+255),c
  4018  00112C  6A24               	clrf	(??___ftadd+2)& (0+255),c
  4019  00112E  341D               	rlcf	___ftadd@f1+1,w,c
  4020  001130  3622               	rlcf	??___ftadd& (0+255),f,c
  4021  001132  E301               	bnc	u1591
  4022  001134  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  4023  001136                     u1591:
  4024  001136  5022               	movf	??___ftadd,w,c
  4025  001138  6E27               	movwf	___ftadd@exp1,c
  4026  00113A  C021  F022         	movff	___ftadd@f2+2,??___ftadd
  4027  00113E  6A23               	clrf	(??___ftadd+1)& (0+255),c
  4028  001140  6A24               	clrf	(??___ftadd+2)& (0+255),c
  4029  001142  3420               	rlcf	___ftadd@f2+1,w,c
  4030  001144  3622               	rlcf	??___ftadd& (0+255),f,c
  4031  001146  E301               	bnc	u1601
  4032  001148  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  4033  00114A                     u1601:
  4034  00114A  5022               	movf	??___ftadd,w,c
  4035  00114C  6E26               	movwf	___ftadd@exp2,c
  4036  00114E  5027               	movf	___ftadd@exp1,w,c
  4037  001150  B4D8               	btfsc	status,2,c
  4038  001152  D00B               	goto	u1630
  4039  001154  5026               	movf	___ftadd@exp2,w,c
  4040  001156  5C27               	subwf	___ftadd@exp1,w,c
  4041  001158  B0D8               	btfsc	status,0,c
  4042  00115A  D00E               	goto	l800
  4043  00115C  5027               	movf	___ftadd@exp1,w,c
  4044  00115E  0800               	sublw	0
  4045  001160  2426               	addwf	___ftadd@exp2,w,c
  4046  001162  6E22               	movwf	??___ftadd& (0+255),c
  4047  001164  0E18               	movlw	24
  4048  001166  6422               	cpfsgt	??___ftadd,c
  4049  001168  D007               	goto	l800
  4050  00116A                     u1630:
  4051  00116A  C01F  F01C         	movff	___ftadd@f2,?___ftadd
  4052  00116E  C020  F01D         	movff	___ftadd@f2+1,?___ftadd+1
  4053  001172  C021  F01E         	movff	___ftadd@f2+2,?___ftadd+2
  4054  001176  0012               	return	
  4055  001178                     l800:
  4056  001178  5026               	movf	___ftadd@exp2,w,c
  4057  00117A  B4D8               	btfsc	status,2,c
  4058  00117C  D00B               	goto	u1660
  4059  00117E  5027               	movf	___ftadd@exp1,w,c
  4060  001180  5C26               	subwf	___ftadd@exp2,w,c
  4061  001182  B0D8               	btfsc	status,0,c
  4062  001184  D00E               	goto	l804
  4063  001186  5026               	movf	___ftadd@exp2,w,c
  4064  001188  0800               	sublw	0
  4065  00118A  2427               	addwf	___ftadd@exp1,w,c
  4066  00118C  6E22               	movwf	??___ftadd& (0+255),c
  4067  00118E  0E18               	movlw	24
  4068  001190  6422               	cpfsgt	??___ftadd,c
  4069  001192  D007               	goto	l804
  4070  001194                     u1660:
  4071  001194  C01C  F01C         	movff	___ftadd@f1,?___ftadd
  4072  001198  C01D  F01D         	movff	___ftadd@f1+1,?___ftadd+1
  4073  00119C  C01E  F01E         	movff	___ftadd@f1+2,?___ftadd+2
  4074  0011A0  0012               	return	
  4075  0011A2                     l804:
  4076  0011A2  0E06               	movlw	6
  4077  0011A4  6E25               	movwf	___ftadd@sign,c
  4078  0011A6  BE1E               	btfsc	___ftadd@f1+2,7,c
  4079  0011A8  8E25               	bsf	___ftadd@sign,7,c
  4080  0011AA  BE21               	btfsc	___ftadd@f2+2,7,c
  4081  0011AC  8C25               	bsf	___ftadd@sign,6,c
  4082  0011AE  8E1D               	bsf	___ftadd@f1+1,7,c
  4083  0011B0  0EFF               	movlw	255
  4084  0011B2  161C               	andwf	___ftadd@f1,f,c
  4085  0011B4  0EFF               	movlw	255
  4086  0011B6  161D               	andwf	___ftadd@f1+1,f,c
  4087  0011B8  0E00               	movlw	0
  4088  0011BA  161E               	andwf	___ftadd@f1+2,f,c
  4089  0011BC  8E20               	bsf	___ftadd@f2+1,7,c
  4090  0011BE  0EFF               	movlw	255
  4091  0011C0  161F               	andwf	___ftadd@f2,f,c
  4092  0011C2  0EFF               	movlw	255
  4093  0011C4  1620               	andwf	___ftadd@f2+1,f,c
  4094  0011C6  0E00               	movlw	0
  4095  0011C8  1621               	andwf	___ftadd@f2+2,f,c
  4096  0011CA  5026               	movf	___ftadd@exp2,w,c
  4097  0011CC  5C27               	subwf	___ftadd@exp1,w,c
  4098  0011CE  B0D8               	btfsc	status,0,c
  4099  0011D0  D01B               	goto	l809
  4100  0011D2                     u1690:
  4101  0011D2  90D8               	bcf	status,0,c
  4102  0011D4  361F               	rlcf	___ftadd@f2,f,c
  4103  0011D6  3620               	rlcf	___ftadd@f2+1,f,c
  4104  0011D8  3621               	rlcf	___ftadd@f2+2,f,c
  4105  0011DA  0626               	decf	___ftadd@exp2,f,c
  4106  0011DC  5027               	movf	___ftadd@exp1,w,c
  4107  0011DE  1826               	xorwf	___ftadd@exp2,w,c
  4108  0011E0  B4D8               	btfsc	status,2,c
  4109  0011E2  D00D               	goto	l814
  4110  0011E4  0625               	decf	___ftadd@sign,f,c
  4111  0011E6  C025  F022         	movff	___ftadd@sign,??___ftadd
  4112  0011EA  0E07               	movlw	7
  4113  0011EC  1622               	andwf	??___ftadd,f,c
  4114  0011EE  B4D8               	btfsc	status,2,c
  4115  0011F0  D006               	goto	l814
  4116  0011F2  D7EF               	goto	u1690
  4117  0011F4  90D8               	bcf	status,0,c
  4118  0011F6  321E               	rrcf	___ftadd@f1+2,f,c
  4119  0011F8  321D               	rrcf	___ftadd@f1+1,f,c
  4120  0011FA  321C               	rrcf	___ftadd@f1,f,c
  4121  0011FC  2A27               	incf	___ftadd@exp1,f,c
  4122  0011FE                     l814:
  4123  0011FE  5026               	movf	___ftadd@exp2,w,c
  4124  001200  1827               	xorwf	___ftadd@exp1,w,c
  4125  001202  B4D8               	btfsc	status,2,c
  4126  001204  D01F               	goto	u1760
  4127  001206  D7F6               	goto	l815
  4128  001208                     l809:
  4129  001208  5027               	movf	___ftadd@exp1,w,c
  4130  00120A  5C26               	subwf	___ftadd@exp2,w,c
  4131  00120C  B0D8               	btfsc	status,0,c
  4132  00120E  D01A               	goto	u1760
  4133  001210                     u1730:
  4134  001210  90D8               	bcf	status,0,c
  4135  001212  361C               	rlcf	___ftadd@f1,f,c
  4136  001214  361D               	rlcf	___ftadd@f1+1,f,c
  4137  001216  361E               	rlcf	___ftadd@f1+2,f,c
  4138  001218  0627               	decf	___ftadd@exp1,f,c
  4139  00121A  5027               	movf	___ftadd@exp1,w,c
  4140  00121C  1826               	xorwf	___ftadd@exp2,w,c
  4141  00121E  B4D8               	btfsc	status,2,c
  4142  001220  D00D               	goto	l823
  4143  001222  0625               	decf	___ftadd@sign,f,c
  4144  001224  C025  F022         	movff	___ftadd@sign,??___ftadd
  4145  001228  0E07               	movlw	7
  4146  00122A  1622               	andwf	??___ftadd,f,c
  4147  00122C  B4D8               	btfsc	status,2,c
  4148  00122E  D006               	goto	l823
  4149  001230  D7EF               	goto	u1730
  4150  001232  90D8               	bcf	status,0,c
  4151  001234  3221               	rrcf	___ftadd@f2+2,f,c
  4152  001236  3220               	rrcf	___ftadd@f2+1,f,c
  4153  001238  321F               	rrcf	___ftadd@f2,f,c
  4154  00123A  2A26               	incf	___ftadd@exp2,f,c
  4155  00123C                     l823:
  4156  00123C  5026               	movf	___ftadd@exp2,w,c
  4157  00123E  1827               	xorwf	___ftadd@exp1,w,c
  4158  001240  A4D8               	btfss	status,2,c
  4159  001242  D7F7               	goto	l824
  4160  001244                     u1760:
  4161  001244  AE25               	btfss	___ftadd@sign,7,c
  4162  001246  D00C               	goto	l826
  4163  001248  0EFF               	movlw	255
  4164  00124A  1A1C               	xorwf	___ftadd@f1,f,c
  4165  00124C  0EFF               	movlw	255
  4166  00124E  1A1D               	xorwf	___ftadd@f1+1,f,c
  4167  001250  0EFF               	movlw	255
  4168  001252  1A1E               	xorwf	___ftadd@f1+2,f,c
  4169  001254  0E01               	movlw	1
  4170  001256  261C               	addwf	___ftadd@f1,f,c
  4171  001258  0E00               	movlw	0
  4172  00125A  221D               	addwfc	___ftadd@f1+1,f,c
  4173  00125C  0E00               	movlw	0
  4174  00125E  221E               	addwfc	___ftadd@f1+2,f,c
  4175  001260                     l826:
  4176  001260  AC25               	btfss	___ftadd@sign,6,c
  4177  001262  D00C               	goto	l827
  4178  001264  0EFF               	movlw	255
  4179  001266  1A1F               	xorwf	___ftadd@f2,f,c
  4180  001268  0EFF               	movlw	255
  4181  00126A  1A20               	xorwf	___ftadd@f2+1,f,c
  4182  00126C  0EFF               	movlw	255
  4183  00126E  1A21               	xorwf	___ftadd@f2+2,f,c
  4184  001270  0E01               	movlw	1
  4185  001272  261F               	addwf	___ftadd@f2,f,c
  4186  001274  0E00               	movlw	0
  4187  001276  2220               	addwfc	___ftadd@f2+1,f,c
  4188  001278  0E00               	movlw	0
  4189  00127A  2221               	addwfc	___ftadd@f2+2,f,c
  4190  00127C                     l827:
  4191  00127C  0E00               	movlw	0
  4192  00127E  6E25               	movwf	___ftadd@sign,c
  4193  001280  501C               	movf	___ftadd@f1,w,c
  4194  001282  261F               	addwf	___ftadd@f2,f,c
  4195  001284  501D               	movf	___ftadd@f1+1,w,c
  4196  001286  2220               	addwfc	___ftadd@f2+1,f,c
  4197  001288  501E               	movf	___ftadd@f1+2,w,c
  4198  00128A  2221               	addwfc	___ftadd@f2+2,f,c
  4199  00128C  AE21               	btfss	___ftadd@f2+2,7,c
  4200  00128E  D00E               	goto	l828
  4201  001290  0EFF               	movlw	255
  4202  001292  1A1F               	xorwf	___ftadd@f2,f,c
  4203  001294  0EFF               	movlw	255
  4204  001296  1A20               	xorwf	___ftadd@f2+1,f,c
  4205  001298  0EFF               	movlw	255
  4206  00129A  1A21               	xorwf	___ftadd@f2+2,f,c
  4207  00129C  0E01               	movlw	1
  4208  00129E  261F               	addwf	___ftadd@f2,f,c
  4209  0012A0  0E00               	movlw	0
  4210  0012A2  2220               	addwfc	___ftadd@f2+1,f,c
  4211  0012A4  0E00               	movlw	0
  4212  0012A6  2221               	addwfc	___ftadd@f2+2,f,c
  4213  0012A8  0E01               	movlw	1
  4214  0012AA  6E25               	movwf	___ftadd@sign,c
  4215  0012AC                     l828:
  4216  0012AC  C01F  F001         	movff	___ftadd@f2,___ftpack@arg
  4217  0012B0  C020  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4218  0012B4  C021  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4219  0012B8  C027  F004         	movff	___ftadd@exp1,___ftpack@exp
  4220  0012BC  C025  F005         	movff	___ftadd@sign,___ftpack@sign
  4221  0012C0  EC40  F00E         	call	___ftpack	;wreg free
  4222  0012C4  C001  F01C         	movff	?___ftpack,?___ftadd
  4223  0012C8  C002  F01D         	movff	?___ftpack+1,?___ftadd+1
  4224  0012CC  C003  F01E         	movff	?___ftpack+2,?___ftadd+2
  4225  0012D0  0012               	return	
  4226  0012D2                     __end_of___ftadd:
  4227                           	opt stack 0
  4228                           tblptru	equ	0xFF8
  4229                           tblptrh	equ	0xFF7
  4230                           tblptrl	equ	0xFF6
  4231                           tablat	equ	0xFF5
  4232                           prodh	equ	0xFF4
  4233                           prodl	equ	0xFF3
  4234                           intcon	equ	0xFF2
  4235                           intcon2	equ	0xFF1
  4236                           postinc0	equ	0xFEE
  4237                           wreg	equ	0xFE8
  4238                           postdec1	equ	0xFE5
  4239                           fsr1h	equ	0xFE2
  4240                           fsr1l	equ	0xFE1
  4241                           postinc2	equ	0xFDE
  4242                           postdec2	equ	0xFDD
  4243                           fsr2h	equ	0xFDA
  4244                           fsr2l	equ	0xFD9
  4245                           status	equ	0xFD8
  4246                           
  4247 ;; *************** function ___ftneg *****************
  4248 ;; Defined at:
  4249 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  f1              3    0[COMRAM] float 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;		None
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  3    0[COMRAM] float 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4263 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4266 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4267 ;;Total ram usage:        3 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_EEPROM_24AA512_pageWrite
  4273 ;;		_pow
  4274 ;;		_exp
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           	psect	text28
  4279  0021AA                     __ptext28:
  4280                           	opt stack 0
  4281  0021AA                     ___ftneg:
  4282                           	opt stack 27
  4283                           
  4284                           ;incstack = 0
  4285  0021AA  5001               	movf	___ftneg@f1,w,c
  4286  0021AC  1002               	iorwf	___ftneg@f1+1,w,c
  4287  0021AE  1003               	iorwf	___ftneg@f1+2,w,c
  4288  0021B0  B4D8               	btfsc	status,2,c
  4289  0021B2  D006               	goto	l859
  4290  0021B4  0E00               	movlw	0
  4291  0021B6  1A01               	xorwf	___ftneg@f1,f,c
  4292  0021B8  0E00               	movlw	0
  4293  0021BA  1A02               	xorwf	___ftneg@f1+1,f,c
  4294  0021BC  0E80               	movlw	128
  4295  0021BE  1A03               	xorwf	___ftneg@f1+2,f,c
  4296  0021C0                     l859:
  4297  0021C0  C001  F001         	movff	___ftneg@f1,?___ftneg
  4298  0021C4  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4299  0021C8  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4300  0021CC  0012               	return		;funcret
  4301  0021CE                     __end_of___ftneg:
  4302                           	opt stack 0
  4303                           tblptru	equ	0xFF8
  4304                           tblptrh	equ	0xFF7
  4305                           tblptrl	equ	0xFF6
  4306                           tablat	equ	0xFF5
  4307                           prodh	equ	0xFF4
  4308                           prodl	equ	0xFF3
  4309                           intcon	equ	0xFF2
  4310                           intcon2	equ	0xFF1
  4311                           postinc0	equ	0xFEE
  4312                           wreg	equ	0xFE8
  4313                           postdec1	equ	0xFE5
  4314                           fsr1h	equ	0xFE2
  4315                           fsr1l	equ	0xFE1
  4316                           postinc2	equ	0xFDE
  4317                           postdec2	equ	0xFDD
  4318                           fsr2h	equ	0xFDA
  4319                           fsr2l	equ	0xFD9
  4320                           status	equ	0xFD8
  4321                           
  4322 ;; *************** function ___ftdiv *****************
  4323 ;; Defined at:
  4324 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  f1              3    8[COMRAM] float 
  4327 ;;  f2              3   11[COMRAM] float 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  f3              3   18[COMRAM] float 
  4330 ;;  sign            1   22[COMRAM] unsigned char 
  4331 ;;  exp             1   21[COMRAM] unsigned char 
  4332 ;;  cntr            1   17[COMRAM] unsigned char 
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  3    8[COMRAM] float 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0, cstack
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4342 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4343 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4344 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4345 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4346 ;;Total ram usage:       15 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:    1
  4349 ;; This function calls:
  4350 ;;		___ftpack
  4351 ;; This function is called by:
  4352 ;;		_exp
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text29
  4357  001858                     __ptext29:
  4358                           	opt stack 0
  4359  001858                     ___ftdiv:
  4360                           	opt stack 26
  4361                           
  4362                           ;incstack = 0
  4363  001858  C00B  F00F         	movff	___ftdiv@f1+2,??___ftdiv
  4364  00185C  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  4365  00185E  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  4366  001860  340A               	rlcf	___ftdiv@f1+1,w,c
  4367  001862  360F               	rlcf	??___ftdiv& (0+255),f,c
  4368  001864  E301               	bnc	u1991
  4369  001866  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  4370  001868                     u1991:
  4371  001868  500F               	movf	??___ftdiv,w,c
  4372  00186A  6E16               	movwf	___ftdiv@exp,c
  4373  00186C  5016               	movf	___ftdiv@exp,w,c
  4374  00186E  A4D8               	btfss	status,2,c
  4375  001870  D007               	goto	l833
  4376  001872  0E00               	movlw	0
  4377  001874  6E09               	movwf	?___ftdiv,c
  4378  001876  0E00               	movlw	0
  4379  001878  6E0A               	movwf	?___ftdiv+1,c
  4380  00187A  0E00               	movlw	0
  4381  00187C  6E0B               	movwf	?___ftdiv+2,c
  4382  00187E  0012               	return	
  4383  001880                     l833:
  4384  001880  C00E  F00F         	movff	___ftdiv@f2+2,??___ftdiv
  4385  001884  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  4386  001886  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  4387  001888  340D               	rlcf	___ftdiv@f2+1,w,c
  4388  00188A  360F               	rlcf	??___ftdiv& (0+255),f,c
  4389  00188C  E301               	bnc	u2011
  4390  00188E  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  4391  001890                     u2011:
  4392  001890  500F               	movf	??___ftdiv,w,c
  4393  001892  6E17               	movwf	___ftdiv@sign,c
  4394  001894  5017               	movf	___ftdiv@sign,w,c
  4395  001896  A4D8               	btfss	status,2,c
  4396  001898  D007               	goto	l835
  4397  00189A  0E00               	movlw	0
  4398  00189C  6E09               	movwf	?___ftdiv,c
  4399  00189E  0E00               	movlw	0
  4400  0018A0  6E0A               	movwf	?___ftdiv+1,c
  4401  0018A2  0E00               	movlw	0
  4402  0018A4  6E0B               	movwf	?___ftdiv+2,c
  4403  0018A6  0012               	return	
  4404  0018A8                     l835:
  4405  0018A8  0E00               	movlw	0
  4406  0018AA  6E13               	movwf	___ftdiv@f3,c
  4407  0018AC  0E00               	movlw	0
  4408  0018AE  6E14               	movwf	___ftdiv@f3+1,c
  4409  0018B0  0E00               	movlw	0
  4410  0018B2  6E15               	movwf	___ftdiv@f3+2,c
  4411  0018B4  5017               	movf	___ftdiv@sign,w,c
  4412  0018B6  0F89               	addlw	137
  4413  0018B8  5E16               	subwf	___ftdiv@exp,f,c
  4414  0018BA  C00B  F017         	movff	___ftdiv@f1+2,___ftdiv@sign
  4415  0018BE  500E               	movf	___ftdiv@f2+2,w,c
  4416  0018C0  1A17               	xorwf	___ftdiv@sign,f,c
  4417  0018C2  0E80               	movlw	128
  4418  0018C4  1617               	andwf	___ftdiv@sign,f,c
  4419  0018C6  8E0A               	bsf	___ftdiv@f1+1,7,c
  4420  0018C8  0EFF               	movlw	255
  4421  0018CA  1609               	andwf	___ftdiv@f1,f,c
  4422  0018CC  0EFF               	movlw	255
  4423  0018CE  160A               	andwf	___ftdiv@f1+1,f,c
  4424  0018D0  0E00               	movlw	0
  4425  0018D2  160B               	andwf	___ftdiv@f1+2,f,c
  4426  0018D4  8E0D               	bsf	___ftdiv@f2+1,7,c
  4427  0018D6  0EFF               	movlw	255
  4428  0018D8  160C               	andwf	___ftdiv@f2,f,c
  4429  0018DA  0EFF               	movlw	255
  4430  0018DC  160D               	andwf	___ftdiv@f2+1,f,c
  4431  0018DE  0E00               	movlw	0
  4432  0018E0  160E               	andwf	___ftdiv@f2+2,f,c
  4433  0018E2  0E18               	movlw	24
  4434  0018E4  6E12               	movwf	___ftdiv@cntr,c
  4435  0018E6  90D8               	bcf	status,0,c
  4436  0018E8  3613               	rlcf	___ftdiv@f3,f,c
  4437  0018EA  3614               	rlcf	___ftdiv@f3+1,f,c
  4438  0018EC  3615               	rlcf	___ftdiv@f3+2,f,c
  4439  0018EE  500C               	movf	___ftdiv@f2,w,c
  4440  0018F0  5C09               	subwf	___ftdiv@f1,w,c
  4441  0018F2  500D               	movf	___ftdiv@f2+1,w,c
  4442  0018F4  580A               	subwfb	___ftdiv@f1+1,w,c
  4443  0018F6  500E               	movf	___ftdiv@f2+2,w,c
  4444  0018F8  580B               	subwfb	___ftdiv@f1+2,w,c
  4445  0018FA  A0D8               	btfss	status,0,c
  4446  0018FC  D007               	goto	l837
  4447  0018FE  500C               	movf	___ftdiv@f2,w,c
  4448  001900  5E09               	subwf	___ftdiv@f1,f,c
  4449  001902  500D               	movf	___ftdiv@f2+1,w,c
  4450  001904  5A0A               	subwfb	___ftdiv@f1+1,f,c
  4451  001906  500E               	movf	___ftdiv@f2+2,w,c
  4452  001908  5A0B               	subwfb	___ftdiv@f1+2,f,c
  4453  00190A  8013               	bsf	___ftdiv@f3,0,c
  4454  00190C                     l837:
  4455  00190C  90D8               	bcf	status,0,c
  4456  00190E  3609               	rlcf	___ftdiv@f1,f,c
  4457  001910  360A               	rlcf	___ftdiv@f1+1,f,c
  4458  001912  360B               	rlcf	___ftdiv@f1+2,f,c
  4459  001914  2E12               	decfsz	___ftdiv@cntr,f,c
  4460  001916  D7E7               	goto	l836
  4461  001918  C013  F001         	movff	___ftdiv@f3,___ftpack@arg
  4462  00191C  C014  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4463  001920  C015  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4464  001924  C016  F004         	movff	___ftdiv@exp,___ftpack@exp
  4465  001928  C017  F005         	movff	___ftdiv@sign,___ftpack@sign
  4466  00192C  EC40  F00E         	call	___ftpack	;wreg free
  4467  001930  C001  F009         	movff	?___ftpack,?___ftdiv
  4468  001934  C002  F00A         	movff	?___ftpack+1,?___ftdiv+1
  4469  001938  C003  F00B         	movff	?___ftpack+2,?___ftdiv+2
  4470  00193C  0012               	return	
  4471  00193E                     __end_of___ftdiv:
  4472                           	opt stack 0
  4473                           tblptru	equ	0xFF8
  4474                           tblptrh	equ	0xFF7
  4475                           tblptrl	equ	0xFF6
  4476                           tablat	equ	0xFF5
  4477                           prodh	equ	0xFF4
  4478                           prodl	equ	0xFF3
  4479                           intcon	equ	0xFF2
  4480                           intcon2	equ	0xFF1
  4481                           postinc0	equ	0xFEE
  4482                           wreg	equ	0xFE8
  4483                           postdec1	equ	0xFE5
  4484                           fsr1h	equ	0xFE2
  4485                           fsr1l	equ	0xFE1
  4486                           postinc2	equ	0xFDE
  4487                           postdec2	equ	0xFDD
  4488                           fsr2h	equ	0xFDA
  4489                           fsr2l	equ	0xFD9
  4490                           status	equ	0xFD8
  4491                           
  4492 ;; *************** function ___awtoft *****************
  4493 ;; Defined at:
  4494 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  c               2    8[COMRAM] int 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  sign            1   11[COMRAM] unsigned char 
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  3    8[COMRAM] float 
  4501 ;; Registers used:
  4502 ;;		wreg, status,2, status,0, cstack
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4508 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4509 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4511 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4512 ;;Total ram usage:        4 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; Hardware stack levels required when called:    1
  4515 ;; This function calls:
  4516 ;;		___ftpack
  4517 ;; This function is called by:
  4518 ;;		_exp
  4519 ;;		_log
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text30
  4524  0020C0                     __ptext30:
  4525                           	opt stack 0
  4526  0020C0                     ___awtoft:
  4527                           	opt stack 26
  4528                           
  4529                           ;incstack = 0
  4530  0020C0  0E00               	movlw	0
  4531  0020C2  6E0C               	movwf	___awtoft@sign,c
  4532  0020C4  AE0A               	btfss	___awtoft@c+1,7,c
  4533  0020C6  D006               	goto	l750
  4534  0020C8  6C09               	negf	___awtoft@c,c
  4535  0020CA  1E0A               	comf	___awtoft@c+1,f,c
  4536  0020CC  B0D8               	btfsc	status,0,c
  4537  0020CE  2A0A               	incf	___awtoft@c+1,f,c
  4538  0020D0  0E01               	movlw	1
  4539  0020D2  6E0C               	movwf	___awtoft@sign,c
  4540  0020D4                     l750:
  4541  0020D4  C009  F001         	movff	___awtoft@c,___ftpack@arg
  4542  0020D8  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  4543  0020DC  6A03               	clrf	___ftpack@arg+2,c
  4544  0020DE  0E8E               	movlw	142
  4545  0020E0  6E04               	movwf	___ftpack@exp,c
  4546  0020E2  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  4547  0020E6  EC40  F00E         	call	___ftpack	;wreg free
  4548  0020EA  C001  F009         	movff	?___ftpack,?___awtoft
  4549  0020EE  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  4550  0020F2  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  4551  0020F6  0012               	return	
  4552  0020F8                     __end_of___awtoft:
  4553                           	opt stack 0
  4554                           tblptru	equ	0xFF8
  4555                           tblptrh	equ	0xFF7
  4556                           tblptrl	equ	0xFF6
  4557                           tablat	equ	0xFF5
  4558                           prodh	equ	0xFF4
  4559                           prodl	equ	0xFF3
  4560                           intcon	equ	0xFF2
  4561                           intcon2	equ	0xFF1
  4562                           postinc0	equ	0xFEE
  4563                           wreg	equ	0xFE8
  4564                           postdec1	equ	0xFE5
  4565                           fsr1h	equ	0xFE2
  4566                           fsr1l	equ	0xFE1
  4567                           postinc2	equ	0xFDE
  4568                           postdec2	equ	0xFDD
  4569                           fsr2h	equ	0xFDA
  4570                           fsr2l	equ	0xFD9
  4571                           status	equ	0xFD8
  4572                           
  4573 ;; *************** function ___lltoft *****************
  4574 ;; Defined at:
  4575 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  c               4    8[COMRAM] unsigned long 
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;  exp             1   16[COMRAM] unsigned char 
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  3    8[COMRAM] float 
  4582 ;; Registers used:
  4583 ;;		wreg, status,2, status,0, cstack
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4589 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4591 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4592 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4593 ;;Total ram usage:        9 bytes
  4594 ;; Hardware stack levels used:    1
  4595 ;; Hardware stack levels required when called:    1
  4596 ;; This function calls:
  4597 ;;		___ftpack
  4598 ;; This function is called by:
  4599 ;;		_pow
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text31
  4604  001F4E                     __ptext31:
  4605                           	opt stack 0
  4606  001F4E                     ___lltoft:
  4607                           	opt stack 27
  4608                           
  4609                           ;incstack = 0
  4610  001F4E  0E8E               	movlw	142
  4611  001F50  6E11               	movwf	___lltoft@exp,c
  4612  001F52  D006               	goto	l940
  4613  001F54  90D8               	bcf	status,0,c
  4614  001F56  320C               	rrcf	___lltoft@c+3,f,c
  4615  001F58  320B               	rrcf	___lltoft@c+2,f,c
  4616  001F5A  320A               	rrcf	___lltoft@c+1,f,c
  4617  001F5C  3209               	rrcf	___lltoft@c,f,c
  4618  001F5E  2A11               	incf	___lltoft@exp,f,c
  4619  001F60                     l940:
  4620  001F60  0E00               	movlw	0
  4621  001F62  1409               	andwf	___lltoft@c,w,c
  4622  001F64  6E0D               	movwf	??___lltoft& (0+255),c
  4623  001F66  0E00               	movlw	0
  4624  001F68  140A               	andwf	___lltoft@c+1,w,c
  4625  001F6A  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  4626  001F6C  0E00               	movlw	0
  4627  001F6E  140B               	andwf	___lltoft@c+2,w,c
  4628  001F70  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  4629  001F72  0EFF               	movlw	255
  4630  001F74  140C               	andwf	___lltoft@c+3,w,c
  4631  001F76  6E10               	movwf	(??___lltoft+3)& (0+255),c
  4632  001F78  500D               	movf	??___lltoft,w,c
  4633  001F7A  100E               	iorwf	??___lltoft+1,w,c
  4634  001F7C  100F               	iorwf	??___lltoft+2,w,c
  4635  001F7E  1010               	iorwf	??___lltoft+3,w,c
  4636  001F80  A4D8               	btfss	status,2,c
  4637  001F82  D7E8               	goto	l941
  4638  001F84  C009  F001         	movff	___lltoft@c,___ftpack@arg
  4639  001F88  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  4640  001F8C  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  4641  001F90  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4642  001F94  0E00               	movlw	0
  4643  001F96  6E05               	movwf	___ftpack@sign,c
  4644  001F98  EC40  F00E         	call	___ftpack	;wreg free
  4645  001F9C  C001  F009         	movff	?___ftpack,?___lltoft
  4646  001FA0  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4647  001FA4  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4648  001FA8  0012               	return	
  4649  001FAA                     __end_of___lltoft:
  4650                           	opt stack 0
  4651                           tblptru	equ	0xFF8
  4652                           tblptrh	equ	0xFF7
  4653                           tblptrl	equ	0xFF6
  4654                           tablat	equ	0xFF5
  4655                           prodh	equ	0xFF4
  4656                           prodl	equ	0xFF3
  4657                           intcon	equ	0xFF2
  4658                           intcon2	equ	0xFF1
  4659                           postinc0	equ	0xFEE
  4660                           wreg	equ	0xFE8
  4661                           postdec1	equ	0xFE5
  4662                           fsr1h	equ	0xFE2
  4663                           fsr1l	equ	0xFE1
  4664                           postinc2	equ	0xFDE
  4665                           postdec2	equ	0xFDD
  4666                           fsr2h	equ	0xFDA
  4667                           fsr2l	equ	0xFD9
  4668                           status	equ	0xFD8
  4669                           
  4670 ;; *************** function ___lbtoft *****************
  4671 ;; Defined at:
  4672 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbtoft.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;  c               1    wreg     unsigned char 
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;  c               1   11[COMRAM] unsigned char 
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  3    8[COMRAM] float 
  4679 ;; Registers used:
  4680 ;;		wreg, status,2, status,0, cstack
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4686 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4689 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4690 ;;Total ram usage:        4 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:    1
  4693 ;; This function calls:
  4694 ;;		___ftpack
  4695 ;; This function is called by:
  4696 ;;		_EEPROM_24AA512_pageWrite
  4697 ;;		_MCP9801_get_temp
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           	psect	text32
  4702  0021CE                     __ptext32:
  4703                           	opt stack 0
  4704  0021CE                     ___lbtoft:
  4705                           	opt stack 28
  4706                           
  4707                           ;incstack = 0
  4708                           ;___lbtoft@c stored from wreg
  4709  0021CE  6E0C               	movwf	___lbtoft@c,c
  4710  0021D0  500C               	movf	___lbtoft@c,w,c
  4711  0021D2  6E01               	movwf	___ftpack@arg,c
  4712  0021D4  6A02               	clrf	___ftpack@arg+1,c
  4713  0021D6  6A03               	clrf	___ftpack@arg+2,c
  4714  0021D8  0E8E               	movlw	142
  4715  0021DA  6E04               	movwf	___ftpack@exp,c
  4716  0021DC  0E00               	movlw	0
  4717  0021DE  6E05               	movwf	___ftpack@sign,c
  4718  0021E0  EC40  F00E         	call	___ftpack	;wreg free
  4719  0021E4  C001  F009         	movff	?___ftpack,?___lbtoft
  4720  0021E8  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  4721  0021EC  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  4722  0021F0  0012               	return	
  4723  0021F2                     __end_of___lbtoft:
  4724                           	opt stack 0
  4725                           tblptru	equ	0xFF8
  4726                           tblptrh	equ	0xFF7
  4727                           tblptrl	equ	0xFF6
  4728                           tablat	equ	0xFF5
  4729                           prodh	equ	0xFF4
  4730                           prodl	equ	0xFF3
  4731                           intcon	equ	0xFF2
  4732                           intcon2	equ	0xFF1
  4733                           postinc0	equ	0xFEE
  4734                           wreg	equ	0xFE8
  4735                           postdec1	equ	0xFE5
  4736                           fsr1h	equ	0xFE2
  4737                           fsr1l	equ	0xFE1
  4738                           postinc2	equ	0xFDE
  4739                           postdec2	equ	0xFDD
  4740                           fsr2h	equ	0xFDA
  4741                           fsr2l	equ	0xFD9
  4742                           status	equ	0xFD8
  4743                           
  4744 ;; *************** function ___ftpack *****************
  4745 ;; Defined at:
  4746 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  arg             3    0[COMRAM] unsigned um
  4749 ;;  exp             1    3[COMRAM] unsigned char 
  4750 ;;  sign            1    4[COMRAM] unsigned char 
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;		None
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  3    0[COMRAM] float 
  4755 ;; Registers used:
  4756 ;;		wreg, status,2, status,0
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4762 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4764 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4765 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4766 ;;Total ram usage:        8 bytes
  4767 ;; Hardware stack levels used:    1
  4768 ;; This function calls:
  4769 ;;		Nothing
  4770 ;; This function is called by:
  4771 ;;		___altoft
  4772 ;;		___awtoft
  4773 ;;		___ftadd
  4774 ;;		___ftdiv
  4775 ;;		___ftmul
  4776 ;;		___lbtoft
  4777 ;;		___lltoft
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text33
  4782  001C80                     __ptext33:
  4783                           	opt stack 0
  4784  001C80                     ___ftpack:
  4785                           	opt stack 25
  4786                           
  4787                           ;incstack = 0
  4788  001C80  5004               	movf	___ftpack@exp,w,c
  4789  001C82  B4D8               	btfsc	status,2,c
  4790  001C84  D005               	goto	u1500
  4791  001C86  5001               	movf	___ftpack@arg,w,c
  4792  001C88  1002               	iorwf	___ftpack@arg+1,w,c
  4793  001C8A  1003               	iorwf	___ftpack@arg+2,w,c
  4794  001C8C  A4D8               	btfss	status,2,c
  4795  001C8E  D00C               	goto	l769
  4796  001C90                     u1500:
  4797  001C90  0E00               	movlw	0
  4798  001C92  6E01               	movwf	?___ftpack,c
  4799  001C94  0E00               	movlw	0
  4800  001C96  6E02               	movwf	?___ftpack+1,c
  4801  001C98  0E00               	movlw	0
  4802  001C9A  6E03               	movwf	?___ftpack+2,c
  4803  001C9C  0012               	return	
  4804  001C9E  2A04               	incf	___ftpack@exp,f,c
  4805  001CA0  90D8               	bcf	status,0,c
  4806  001CA2  3203               	rrcf	___ftpack@arg+2,f,c
  4807  001CA4  3202               	rrcf	___ftpack@arg+1,f,c
  4808  001CA6  3201               	rrcf	___ftpack@arg,f,c
  4809  001CA8                     l769:
  4810  001CA8  0E00               	movlw	0
  4811  001CAA  1401               	andwf	___ftpack@arg,w,c
  4812  001CAC  6E06               	movwf	??___ftpack& (0+255),c
  4813  001CAE  0E00               	movlw	0
  4814  001CB0  1402               	andwf	___ftpack@arg+1,w,c
  4815  001CB2  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4816  001CB4  0EFE               	movlw	254
  4817  001CB6  1403               	andwf	___ftpack@arg+2,w,c
  4818  001CB8  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4819  001CBA  5006               	movf	??___ftpack,w,c
  4820  001CBC  1007               	iorwf	??___ftpack+1,w,c
  4821  001CBE  1008               	iorwf	??___ftpack+2,w,c
  4822  001CC0  B4D8               	btfsc	status,2,c
  4823  001CC2  D00C               	goto	l772
  4824  001CC4  D7EC               	goto	l770
  4825  001CC6  2A04               	incf	___ftpack@exp,f,c
  4826  001CC8  0E01               	movlw	1
  4827  001CCA  2601               	addwf	___ftpack@arg,f,c
  4828  001CCC  0E00               	movlw	0
  4829  001CCE  2202               	addwfc	___ftpack@arg+1,f,c
  4830  001CD0  0E00               	movlw	0
  4831  001CD2  2203               	addwfc	___ftpack@arg+2,f,c
  4832  001CD4  90D8               	bcf	status,0,c
  4833  001CD6  3203               	rrcf	___ftpack@arg+2,f,c
  4834  001CD8  3202               	rrcf	___ftpack@arg+1,f,c
  4835  001CDA  3201               	rrcf	___ftpack@arg,f,c
  4836  001CDC                     l772:
  4837  001CDC  0E00               	movlw	0
  4838  001CDE  1401               	andwf	___ftpack@arg,w,c
  4839  001CE0  6E06               	movwf	??___ftpack& (0+255),c
  4840  001CE2  0E00               	movlw	0
  4841  001CE4  1402               	andwf	___ftpack@arg+1,w,c
  4842  001CE6  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4843  001CE8  0EFF               	movlw	255
  4844  001CEA  1403               	andwf	___ftpack@arg+2,w,c
  4845  001CEC  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4846  001CEE  5006               	movf	??___ftpack,w,c
  4847  001CF0  1007               	iorwf	??___ftpack+1,w,c
  4848  001CF2  1008               	iorwf	??___ftpack+2,w,c
  4849  001CF4  B4D8               	btfsc	status,2,c
  4850  001CF6  D006               	goto	l775
  4851  001CF8  D7E6               	goto	l773
  4852  001CFA  0604               	decf	___ftpack@exp,f,c
  4853  001CFC  90D8               	bcf	status,0,c
  4854  001CFE  3601               	rlcf	___ftpack@arg,f,c
  4855  001D00  3602               	rlcf	___ftpack@arg+1,f,c
  4856  001D02  3603               	rlcf	___ftpack@arg+2,f,c
  4857  001D04                     l775:
  4858  001D04  BE02               	btfsc	___ftpack@arg+1,7,c
  4859  001D06  D003               	goto	u1540
  4860  001D08  0E02               	movlw	2
  4861  001D0A  6004               	cpfslt	___ftpack@exp,c
  4862  001D0C  D7F6               	goto	l776
  4863  001D0E                     u1540:
  4864  001D0E  A004               	btfss	___ftpack@exp,0,c
  4865  001D10  9E02               	bcf	___ftpack@arg+1,7,c
  4866  001D12  90D8               	bcf	status,0,c
  4867  001D14  3204               	rrcf	___ftpack@exp,f,c
  4868  001D16  5004               	movf	___ftpack@exp,w,c
  4869  001D18  1203               	iorwf	___ftpack@arg+2,f,c
  4870  001D1A  5005               	movf	___ftpack@sign,w,c
  4871  001D1C  A4D8               	btfss	status,2,c
  4872  001D1E  8E03               	bsf	___ftpack@arg+2,7,c
  4873  001D20  C001  F001         	movff	___ftpack@arg,?___ftpack
  4874  001D24  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  4875  001D28  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  4876  001D2C  0012               	return	
  4877  001D2E                     __end_of___ftpack:
  4878                           	opt stack 0
  4879                           tblptru	equ	0xFF8
  4880                           tblptrh	equ	0xFF7
  4881                           tblptrl	equ	0xFF6
  4882                           tablat	equ	0xFF5
  4883                           prodh	equ	0xFF4
  4884                           prodl	equ	0xFF3
  4885                           intcon	equ	0xFF2
  4886                           intcon2	equ	0xFF1
  4887                           postinc0	equ	0xFEE
  4888                           wreg	equ	0xFE8
  4889                           postdec1	equ	0xFE5
  4890                           fsr1h	equ	0xFE2
  4891                           fsr1l	equ	0xFE1
  4892                           postinc2	equ	0xFDE
  4893                           postdec2	equ	0xFDD
  4894                           fsr2h	equ	0xFDA
  4895                           fsr2l	equ	0xFD9
  4896                           status	equ	0xFD8
  4897                           
  4898 ;; *************** function _EEPROM_24AA512_Read *****************
  4899 ;; Defined at:
  4900 ;;		line 21 in file "_24AA512_EEPROM.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;  addHigh         2    2[COMRAM] int 
  4903 ;;  addLow          2    4[COMRAM] int 
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;		None
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  1    wreg      unsigned char 
  4908 ;; Registers used:
  4909 ;;		wreg, status,2, cstack
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4915 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4918 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4919 ;;Total ram usage:        4 bytes
  4920 ;; Hardware stack levels used:    1
  4921 ;; Hardware stack levels required when called:    2
  4922 ;; This function calls:
  4923 ;;		_I2C_Write
  4924 ;;		_I2C_read
  4925 ;;		_I2C_repeated_Start
  4926 ;;		_I2C_start
  4927 ;;		_I2C_stop
  4928 ;; This function is called by:
  4929 ;;		_main
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text34
  4934  0020F8                     __ptext34:
  4935                           	opt stack 0
  4936  0020F8                     _EEPROM_24AA512_Read:
  4937                           	opt stack 28
  4938                           
  4939                           ;_24AA512_EEPROM.c: 22: I2C_start();
  4940                           
  4941                           ;incstack = 0
  4942  0020F8  EC41  F011         	call	_I2C_start	;wreg free
  4943                           
  4944                           ;_24AA512_EEPROM.c: 23: I2C_Write(0xA0);
  4945  0020FC  0EA0               	movlw	160
  4946  0020FE  ECF9  F010         	call	_I2C_Write
  4947                           
  4948                           ;_24AA512_EEPROM.c: 24: I2C_Write(addHigh);
  4949  002102  5003               	movf	EEPROM_24AA512_Read@addHigh,w,c
  4950  002104  ECF9  F010         	call	_I2C_Write
  4951                           
  4952                           ;_24AA512_EEPROM.c: 25: I2C_Write(addLow);
  4953  002108  5005               	movf	EEPROM_24AA512_Read@addLow,w,c
  4954  00210A  ECF9  F010         	call	_I2C_Write
  4955                           
  4956                           ;_24AA512_EEPROM.c: 26: I2C_repeated_Start();
  4957  00210E  EC46  F011         	call	_I2C_repeated_Start	;wreg free
  4958                           
  4959                           ;_24AA512_EEPROM.c: 27: I2C_Write(0xA0 | 0x01);
  4960  002112  0EA1               	movlw	161
  4961  002114  ECF9  F010         	call	_I2C_Write
  4962                           
  4963                           ;_24AA512_EEPROM.c: 28: I2C_read(1);
  4964  002118  0E00               	movlw	0
  4965  00211A  6E02               	movwf	I2C_read@ACK_NACK+1,c
  4966  00211C  0E01               	movlw	1
  4967  00211E  6E01               	movwf	I2C_read@ACK_NACK,c
  4968  002120  EC12  F011         	call	_I2C_read	;wreg free
  4969                           
  4970                           ;_24AA512_EEPROM.c: 29: I2C_stop();
  4971  002124  EC4B  F011         	call	_I2C_stop	;wreg free
  4972  002128  0012               	return		;funcret
  4973  00212A                     __end_of_EEPROM_24AA512_Read:
  4974                           	opt stack 0
  4975                           tblptru	equ	0xFF8
  4976                           tblptrh	equ	0xFF7
  4977                           tblptrl	equ	0xFF6
  4978                           tablat	equ	0xFF5
  4979                           prodh	equ	0xFF4
  4980                           prodl	equ	0xFF3
  4981                           intcon	equ	0xFF2
  4982                           intcon2	equ	0xFF1
  4983                           postinc0	equ	0xFEE
  4984                           wreg	equ	0xFE8
  4985                           postdec1	equ	0xFE5
  4986                           fsr1h	equ	0xFE2
  4987                           fsr1l	equ	0xFE1
  4988                           postinc2	equ	0xFDE
  4989                           postdec2	equ	0xFDD
  4990                           fsr2h	equ	0xFDA
  4991                           fsr2l	equ	0xFD9
  4992                           status	equ	0xFD8
  4993                           
  4994 ;; *************** function _I2C_start *****************
  4995 ;; Defined at:
  4996 ;;		line 51 in file "I2C.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;		None
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;		None
  5001 ;; Return value:  Size  Location     Type
  5002 ;;                  1    wreg      void 
  5003 ;; Registers used:
  5004 ;;		None
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5014 ;;Total ram usage:        0 bytes
  5015 ;; Hardware stack levels used:    1
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		_I2C_buffClear
  5020 ;;		_EEPROM_24AA512_Read
  5021 ;;		_EEPROM_24AA512_pageWrite
  5022 ;;		_I2C_BusSCan
  5023 ;;		_MCP23008_Init
  5024 ;;		_MCP23008_Write
  5025 ;;		_MCP23008_read
  5026 ;;		_MCP9801_Init
  5027 ;;		_MCP9801_get_temp
  5028 ;;		_EEPROM_24AA512_Write
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text35
  5033  002282                     __ptext35:
  5034                           	opt stack 0
  5035  002282                     _I2C_start:
  5036                           	opt stack 29
  5037                           
  5038                           ;I2C.c: 52: SSP2CON2bits.SEN = 1;
  5039                           
  5040                           ;incstack = 0
  5041  002282  8071               	bsf	3953,0,c	;volatile
  5042  002284  B071               	btfsc	3953,0,c	;volatile
  5043  002286  D7FE               	goto	l439
  5044                           
  5045                           ;I2C.c: 54: PIR3bits.SSP2IF = 0;
  5046  002288  9EA4               	bcf	4004,7,c	;volatile
  5047  00228A  0012               	return		;funcret
  5048  00228C                     __end_of_I2C_start:
  5049                           	opt stack 0
  5050                           tblptru	equ	0xFF8
  5051                           tblptrh	equ	0xFF7
  5052                           tblptrl	equ	0xFF6
  5053                           tablat	equ	0xFF5
  5054                           prodh	equ	0xFF4
  5055                           prodl	equ	0xFF3
  5056                           intcon	equ	0xFF2
  5057                           intcon2	equ	0xFF1
  5058                           postinc0	equ	0xFEE
  5059                           wreg	equ	0xFE8
  5060                           postdec1	equ	0xFE5
  5061                           fsr1h	equ	0xFE2
  5062                           fsr1l	equ	0xFE1
  5063                           postinc2	equ	0xFDE
  5064                           postdec2	equ	0xFDD
  5065                           fsr2h	equ	0xFDA
  5066                           fsr2l	equ	0xFD9
  5067                           status	equ	0xFD8
  5068                           
  5069 ;; *************** function _I2C_repeated_Start *****************
  5070 ;; Defined at:
  5071 ;;		line 57 in file "I2C.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;		None
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;		None
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      void 
  5078 ;; Registers used:
  5079 ;;		None
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5089 ;;Total ram usage:        0 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; This function calls:
  5092 ;;		Nothing
  5093 ;; This function is called by:
  5094 ;;		_EEPROM_24AA512_Read
  5095 ;;		_MCP23008_read
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text36
  5100  00228C                     __ptext36:
  5101                           	opt stack 0
  5102  00228C                     _I2C_repeated_Start:
  5103                           	opt stack 29
  5104                           
  5105                           ;I2C.c: 58: SSP2CON2bits.RSEN = 1;
  5106                           
  5107                           ;incstack = 0
  5108  00228C  8271               	bsf	3953,1,c	;volatile
  5109  00228E  B271               	btfsc	3953,1,c	;volatile
  5110  002290  D7FE               	goto	l445
  5111                           
  5112                           ;I2C.c: 60: PIR3bits.SSP2IF = 0;
  5113  002292  9EA4               	bcf	4004,7,c	;volatile
  5114  002294  0012               	return		;funcret
  5115  002296                     __end_of_I2C_repeated_Start:
  5116                           	opt stack 0
  5117                           tblptru	equ	0xFF8
  5118                           tblptrh	equ	0xFF7
  5119                           tblptrl	equ	0xFF6
  5120                           tablat	equ	0xFF5
  5121                           prodh	equ	0xFF4
  5122                           prodl	equ	0xFF3
  5123                           intcon	equ	0xFF2
  5124                           intcon2	equ	0xFF1
  5125                           postinc0	equ	0xFEE
  5126                           wreg	equ	0xFE8
  5127                           postdec1	equ	0xFE5
  5128                           fsr1h	equ	0xFE2
  5129                           fsr1l	equ	0xFE1
  5130                           postinc2	equ	0xFDE
  5131                           postdec2	equ	0xFDD
  5132                           fsr2h	equ	0xFDA
  5133                           fsr2l	equ	0xFD9
  5134                           status	equ	0xFD8
  5135                           
  5136 ;; *************** function _I2C_read *****************
  5137 ;; Defined at:
  5138 ;;		line 43 in file "I2C.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  ACK_NACK        2    0[COMRAM] int 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;		None
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  2    0[COMRAM] int 
  5145 ;; Registers used:
  5146 ;;		wreg
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5152 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5155 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5156 ;;Total ram usage:        2 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; This function calls:
  5159 ;;		Nothing
  5160 ;; This function is called by:
  5161 ;;		_EEPROM_24AA512_Read
  5162 ;;		_MCP23008_read
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166                           	psect	text37
  5167  002224                     __ptext37:
  5168                           	opt stack 0
  5169  002224                     _I2C_read:
  5170                           	opt stack 29
  5171                           
  5172                           ;I2C.c: 44: SSP2CON2bits.RCEN = 1;
  5173                           
  5174                           ;incstack = 0
  5175  002224  8671               	bsf	3953,3,c	;volatile
  5176  002226  A073               	btfss	3955,0,c	;volatile
  5177  002228  D7FE               	goto	l430
  5178                           
  5179                           ;I2C.c: 46: SSP2CON2bits.ACKDT = ACK_NACK;
  5180  00222A  B001               	btfsc	I2C_read@ACK_NACK,0,c
  5181  00222C  D002               	bra	u2395
  5182  00222E  9A71               	bcf	3953,5,c	;volatile
  5183  002230  D001               	bra	u2396
  5184  002232                     u2395:
  5185  002232  8A71               	bsf	3953,5,c	;volatile
  5186  002234                     u2396:
  5187                           
  5188                           ;I2C.c: 47: while (SSP2CON2bits.ACKEN);
  5189  002234  B871               	btfsc	3953,4,c	;volatile
  5190  002236  D7FE               	goto	u2396
  5191                           
  5192                           ;I2C.c: 48: return SSP2BUF;
  5193                           ;	Return value of _I2C_read is never used
  5194  002238  5075               	movf	3957,w,c	;volatile
  5195  00223A  0012               	return	
  5196  00223C                     __end_of_I2C_read:
  5197                           	opt stack 0
  5198                           tblptru	equ	0xFF8
  5199                           tblptrh	equ	0xFF7
  5200                           tblptrl	equ	0xFF6
  5201                           tablat	equ	0xFF5
  5202                           prodh	equ	0xFF4
  5203                           prodl	equ	0xFF3
  5204                           intcon	equ	0xFF2
  5205                           intcon2	equ	0xFF1
  5206                           postinc0	equ	0xFEE
  5207                           wreg	equ	0xFE8
  5208                           postdec1	equ	0xFE5
  5209                           fsr1h	equ	0xFE2
  5210                           fsr1l	equ	0xFE1
  5211                           postinc2	equ	0xFDE
  5212                           postdec2	equ	0xFDD
  5213                           fsr2h	equ	0xFDA
  5214                           fsr2l	equ	0xFD9
  5215                           status	equ	0xFD8
  5216                           
  5217 ;; *************** function _I2C_Write *****************
  5218 ;; Defined at:
  5219 ;;		line 32 in file "I2C.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;  data            1    wreg     unsigned char 
  5222 ;; Auto vars:     Size  Location     Type
  5223 ;;  data            1    0[COMRAM] unsigned char 
  5224 ;; Return value:  Size  Location     Type
  5225 ;;                  1    wreg      void 
  5226 ;; Registers used:
  5227 ;;		wreg, cstack
  5228 ;; Tracked objects:
  5229 ;;		On entry : 0/0
  5230 ;;		On exit  : 0/0
  5231 ;;		Unchanged: 0/0
  5232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5236 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5237 ;;Total ram usage:        1 bytes
  5238 ;; Hardware stack levels used:    1
  5239 ;; Hardware stack levels required when called:    1
  5240 ;; This function calls:
  5241 ;;		_I2C_stop
  5242 ;; This function is called by:
  5243 ;;		_I2C_buffClear
  5244 ;;		_EEPROM_24AA512_Read
  5245 ;;		_EEPROM_24AA512_pageWrite
  5246 ;;		_I2C_BusSCan
  5247 ;;		_MCP23008_Init
  5248 ;;		_MCP23008_Write
  5249 ;;		_MCP23008_read
  5250 ;;		_MCP9801_Init
  5251 ;;		_MCP9801_get_temp
  5252 ;;		_EEPROM_24AA512_Write
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           	psect	text38
  5257  0021F2                     __ptext38:
  5258                           	opt stack 0
  5259  0021F2                     _I2C_Write:
  5260                           	opt stack 28
  5261                           
  5262                           ;incstack = 0
  5263                           ;I2C_Write@data stored from wreg
  5264  0021F2  6E01               	movwf	I2C_Write@data,c
  5265                           
  5266                           ;I2C.c: 33: SSP2BUF = data;
  5267  0021F4  C001  FF75         	movff	I2C_Write@data,3957	;volatile
  5268  0021F8  A073               	btfss	3955,0,c	;volatile
  5269  0021FA  D7FE               	goto	l420
  5270  0021FC                     u2350:
  5271                           
  5272                           ;I2C.c: 35: while (!PIR3bits.SSP2IF);
  5273  0021FC  AEA4               	btfss	4004,7,c	;volatile
  5274  0021FE  D7FE               	goto	u2350
  5275                           
  5276                           ;I2C.c: 36: PIR3bits.SSP2IF = 0;
  5277  002200  9EA4               	bcf	4004,7,c	;volatile
  5278                           
  5279                           ;I2C.c: 37: if (SSP2CON2bits.ACKSTAT) {
  5280  002202  AC71               	btfss	3953,6,c	;volatile
  5281  002204  0012               	return	
  5282                           
  5283                           ;I2C.c: 38: I2C_stop();
  5284  002206  EC4B  F011         	call	_I2C_stop	;wreg free
  5285                           
  5286                           ;I2C.c: 39: return;
  5287  00220A  0012               	return	
  5288  00220C                     __end_of_I2C_Write:
  5289                           	opt stack 0
  5290                           tblptru	equ	0xFF8
  5291                           tblptrh	equ	0xFF7
  5292                           tblptrl	equ	0xFF6
  5293                           tablat	equ	0xFF5
  5294                           prodh	equ	0xFF4
  5295                           prodl	equ	0xFF3
  5296                           intcon	equ	0xFF2
  5297                           intcon2	equ	0xFF1
  5298                           postinc0	equ	0xFEE
  5299                           wreg	equ	0xFE8
  5300                           postdec1	equ	0xFE5
  5301                           fsr1h	equ	0xFE2
  5302                           fsr1l	equ	0xFE1
  5303                           postinc2	equ	0xFDE
  5304                           postdec2	equ	0xFDD
  5305                           fsr2h	equ	0xFDA
  5306                           fsr2l	equ	0xFD9
  5307                           status	equ	0xFD8
  5308                           
  5309 ;; *************** function _I2C_stop *****************
  5310 ;; Defined at:
  5311 ;;		line 63 in file "I2C.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;		None
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;		None
  5316 ;; Return value:  Size  Location     Type
  5317 ;;                  1    wreg      void 
  5318 ;; Registers used:
  5319 ;;		None
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5329 ;;Total ram usage:        0 bytes
  5330 ;; Hardware stack levels used:    1
  5331 ;; This function calls:
  5332 ;;		Nothing
  5333 ;; This function is called by:
  5334 ;;		_I2C_Write
  5335 ;;		_I2C_buffClear
  5336 ;;		_EEPROM_24AA512_Read
  5337 ;;		_EEPROM_24AA512_pageWrite
  5338 ;;		_I2C_BusSCan
  5339 ;;		_MCP23008_Init
  5340 ;;		_MCP23008_Write
  5341 ;;		_MCP23008_read
  5342 ;;		_MCP9801_Init
  5343 ;;		_MCP9801_get_temp
  5344 ;;		_EEPROM_24AA512_Write
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348                           	psect	text39
  5349  002296                     __ptext39:
  5350                           	opt stack 0
  5351  002296                     _I2C_stop:
  5352                           	opt stack 29
  5353                           
  5354                           ;I2C.c: 64: SSP2CON2bits.PEN = 1;
  5355                           
  5356                           ;incstack = 0
  5357  002296  8471               	bsf	3953,2,c	;volatile
  5358  002298  B471               	btfsc	3953,2,c	;volatile
  5359  00229A  D7FE               	goto	l451
  5360                           
  5361                           ;I2C.c: 66: PIR3bits.SSP2IF = 0;
  5362  00229C  9EA4               	bcf	4004,7,c	;volatile
  5363  00229E  0012               	return		;funcret
  5364  0022A0                     __end_of_I2C_stop:
  5365                           	opt stack 0
  5366                           tblptru	equ	0xFF8
  5367                           tblptrh	equ	0xFF7
  5368                           tblptrl	equ	0xFF6
  5369                           tablat	equ	0xFF5
  5370                           prodh	equ	0xFF4
  5371                           prodl	equ	0xFF3
  5372                           intcon	equ	0xFF2
  5373                           intcon2	equ	0xFF1
  5374                           postinc0	equ	0xFEE
  5375                           wreg	equ	0xFE8
  5376                           postdec1	equ	0xFE5
  5377                           fsr1h	equ	0xFE2
  5378                           fsr1l	equ	0xFE1
  5379                           postinc2	equ	0xFDE
  5380                           postdec2	equ	0xFDD
  5381                           fsr2h	equ	0xFDA
  5382                           fsr2l	equ	0xFD9
  5383                           status	equ	0xFD8
  5384                           tblptru	equ	0xFF8
  5385                           tblptrh	equ	0xFF7
  5386                           tblptrl	equ	0xFF6
  5387                           tablat	equ	0xFF5
  5388                           prodh	equ	0xFF4
  5389                           prodl	equ	0xFF3
  5390                           intcon	equ	0xFF2
  5391                           intcon2	equ	0xFF1
  5392                           postinc0	equ	0xFEE
  5393                           wreg	equ	0xFE8
  5394                           postdec1	equ	0xFE5
  5395                           fsr1h	equ	0xFE2
  5396                           fsr1l	equ	0xFE1
  5397                           postinc2	equ	0xFDE
  5398                           postdec2	equ	0xFDD
  5399                           fsr2h	equ	0xFDA
  5400                           fsr2l	equ	0xFD9
  5401                           status	equ	0xFD8
  5402                           
  5403                           	psect	rparam
  5404  0000                     tblptru	equ	0xFF8
  5405                           tblptrh	equ	0xFF7
  5406                           tblptrl	equ	0xFF6
  5407                           tablat	equ	0xFF5
  5408                           prodh	equ	0xFF4
  5409                           prodl	equ	0xFF3
  5410                           intcon	equ	0xFF2
  5411                           intcon2	equ	0xFF1
  5412                           postinc0	equ	0xFEE
  5413                           wreg	equ	0xFE8
  5414                           postdec1	equ	0xFE5
  5415                           fsr1h	equ	0xFE2
  5416                           fsr1l	equ	0xFE1
  5417                           postinc2	equ	0xFDE
  5418                           postdec2	equ	0xFDD
  5419                           fsr2h	equ	0xFDA
  5420                           fsr2l	equ	0xFD9
  5421                           status	equ	0xFD8


Data Sizes:
    Strings     2
    Constant    57
    Data        0
    BSS         287
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     91      94
    BANK0           160     22      50
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->_EEPROM_24AA512_pageWrite
    _SYSTEM_Initialize->_I2C_Init
    _I2C_Init->___aldiv
    ___aldiv->___wmul
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _I2C_buffClear->_I2C_Write
    _EEPROM_24AA512_pageWrite->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftadd
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftmul->___lbtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lbtoft->___ftpack
    _EEPROM_24AA512_Read->_I2C_read

Critical Paths under _main in BANK0

    _main->_EEPROM_24AA512_pageWrite
    _EEPROM_24AA512_pageWrite->_pow

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   83124
                                             89 COMRAM     2     2      0
                _EEPROM_24AA512_Read
           _EEPROM_24AA512_pageWrite
                      _I2C_buffClear
                  _SYSTEM_Initialize
                     _interrupt_Init
 ---------------------------------------------------------------------------------
 (1) _interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1383
                 _EUSART1_Initialize
                           _I2C_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             1     1      0    1089
                                             20 COMRAM     1     1      0
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              6 COMRAM    14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_buffClear                                        0     0      0      22
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (1) _EEPROM_24AA512_pageWrite                            13    11      2   81327
                                             87 COMRAM     2     0      2
                                             11 BANK0     11    11      0
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 17    11      6   68776
                                             81 COMRAM     6     0      6
                                              0 BANK0     11    11      0
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  5     2      3   22279
                                             51 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                  9     6      3   37004
                                             72 COMRAM     9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                7     2      5     400
                                             51 COMRAM     7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                                8     5      3    9489
                                             64 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     528
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     632
                                             39 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     744
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) ___altoft                                            10     6      4    2797
                                             54 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           12     5      7    9935
                                             39 COMRAM    12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    4225
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    4806
                                             39 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    4461
                                             27 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     349
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    3141
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    2826
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2728
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2605
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2583
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _EEPROM_24AA512_Read                                  4     0      4     392
                                              2 COMRAM     4     0      4
                          _I2C_Write
                           _I2C_read
                 _I2C_repeated_Start
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_repeated_Start                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_read                                             2     0      2     174
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_24AA512_Read
     _I2C_Write
       _I2C_stop
     _I2C_read
     _I2C_repeated_Start
     _I2C_start
     _I2C_stop
   _EEPROM_24AA512_pageWrite
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       _frexp (ARG)
     ___ftneg
     ___fttol
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
     _pow
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg
       ___fttol
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
       _exp
         ___awtoft
           ___ftpack
         ___ftdiv
           ___ftpack
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _frexp (ARG)
         ___fttol
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _frexp
       _log
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _frexp
   _I2C_buffClear
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _I2C_Init
       ___aldiv
         ___wmul (ARG)
       ___wmul
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   _interrupt_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0     100       8      100.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      32       5       31.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5B      5E       1       98.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     190       6        0.0%
DATA                 0      0     190       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Apr 04 20:00:59 2020

                                  ___altoft@exp 003F                                   ___altoft@sign 0040  
                            __size_of_I2C_Write 001A                             ___wmul@multiplicand 0003  
                        __end_of_interrupt_Init 2264                                    __CFG_CP0$OFF 000000  
                            __size_of_I2C_start 000A                                     __CFG_OSC$HS 000000  
                                  ___ftadd@exp1 0027                                    ___ftadd@exp2 0026  
                                  ___ftadd@sign 0025                                             l420 21F8  
                                           l252 1E8C                                             l430 2226  
                                           _ADC 005C                                             l610 1B0A  
                                           l451 2298                                             l611 1B22  
                                           l445 228E                                             l613 1B50  
                                           l614 1B44                                             l439 2284  
                                           l800 1178                                             l640 1EF8  
                                           l552 165C                                             l617 1B84  
                                           l618 1B92                                             l619 1BA8  
                                           l804 11A2                                             l750 20D4  
                                           l814 11FE                                             l823 123C  
                                           l815 11F4                                             l639 1F04  
                                           l824 1232                                             l833 1880  
                                           l809 1208                                             l841 1DEE  
                                           l770 1C9E                                             l826 1260  
                                           l850 17B4                                             l842 1E1E  
                                           l835 18A8                                             l827 127C  
                                           l851 17E6                                             l772 1CDC  
                                           l940 1F60                                             l836 18E6  
                                           l828 12AC                                             l852 17F6  
                                           l773 1CC6                                             l941 1F54  
                                           l837 190C                                             l854 180E  
                                           l775 1D04                                             l855 181E  
                                           l871 1712                                             l776 1CFA  
                                           l848 178C                                             l880 1752  
                                           l872 1702                                             l769 1CA8  
                                           l865 2058                                             l859 21C0  
                                           l877 1736                                             l869 169C  
                                           l878 172A                                             _exp 0F3E  
                                           _log 144E                                             _tem 0060  
                                           _pow 12D2                                             wreg 000FE8  
                                    _TXSTA1bits 000FAD                                    __CFG_IESO$ON 000000  
               EEPROM_24AA512_pageWrite@address 008E                                    ___ftdiv@cntr 0012  
                                  ___ftdiv@sign 0017                                            l1002 131A  
                                          l1003 130C                                            l1005 1332  
                                          l1006 13BA                                            l1007 1396  
                                          l1008 1440                                            l1212 1AD8  
                                          l1204 146A                                            l1213 1A5C  
                                          l1206 148C                   _EEPROM_24AA512_pageWrite$2631 0087  
                 _EEPROM_24AA512_pageWrite$2632 008A                                            l1162 0F56  
                                          l1164 0F8E                                            l1173 197A  
                                          l1165 0FC6                                            l1182 1D56  
                                          l1174 196C                                            l1190 1C48  
                                          l1166 0FF4                                            l1191 1C3C  
                                          l1167 1118                                            l1176 1994  
                                          l1168 10EE                                            l1177 1A0E  
                                          l1186 1BD2                                            l1188 1C18  
                                          l2357 1E4A                                            l2881 10EE  
                                          ?_exp 0049                                            l2989 164C  
                                          ?_log 0034                                            l2999 166A  
                                          ?_pow 0052                                            STR_1 0F3A  
                                          u2011 1890                                            u2130 1BF2  
                                          u2210 1B54                                            u1500 1C90  
                                          u2300 0FCE                                            _LATA 000F89  
                                          u2310 0FD0                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _LATD 000F8C  
                                          u1601 114A                                            _LATE 000F8D  
                                          u2090 1986                                            u2138 1BF4  
                                          u1540 1D0E                                            u2350 21FC  
                                          u1630 116A                                            u2520 1EC0  
                                          u1801 1774                                            u1730 1210  
                                          u1660 1194                                            u2460 137E  
                                          u1821 179C                                            u1910 16BA  
                                          u2526 1EC2                                            u1591 1136  
                                          u2607 1E96                                            u1760 1244  
                                          u2617 1EAC                                            u1690 11D2  
                                          u2490 166A                                            u2395 2232  
                                          u1915 16B2                                            u2627 2176  
                                          u2396 2234                                            u1950 173C  
                                          u1891 1680                                            u1980 1D7E  
                                          u2597 1E6E                                            u1991 1868  
                                          u1988 1D80                                   __CFG_FCMEN$ON 000000  
                                          _main 1E4E                                    ___ftpack@arg 0001  
                                  ___ftpack@exp 0004                                __end_of_I2C_Init 1FFE  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          fsr1l 000FE1                                            fsr2l 000FD9  
                                          exp@x 0049                                            log@x 0034  
                                          pow@x 0052                                            pow@y 0055  
                              __end_of_I2C_read 223C                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0000  
                              __end_of_I2C_stop 22A0                                    ___ftmul@cntr 001A  
                                  ___param_bank 000000                                    ___ftmul@sign 001B  
                                  ___fttol@exp1 0036                                           ??_exp 004C  
                                         ??_log 0037                                    ___fttol@lval 0032  
                                         ??_pow 0058                                   __CFG_PLLDIV$1 000000  
                __size_of_OSCILLATOR_Initialize 002A                   __end_of_OSCILLATOR_Initialize 2184  
                               ?_interrupt_Init 0001                                 __end_of___aldiv 1BBA  
                                         ?_main 0001                                 __end_of___ftadd 12D2  
                               __end_of___ftdiv 193E                                 __end_of___ftneg 21CE  
                               __end_of___ftmul 1858                                 __end_of___ftsub 2082  
                               __end_of___fttol 1764                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                                  ___lltoft@exp 0011                                           _sData 006A  
                                 ___awtoft@sign 000C                                           _floor 193E  
                                         _ldexp 1BBA                                           _frexp 1D2E  
                                         _errno 0074                                  __CFG_CLKOEC$ON 000000  
                                 ___ftpack@sign 0005                               __end_of_I2C_Write 220C  
                                         tablat 000FF5                                           pow@yi 0083  
                                         status 000FD8                               __end_of_I2C_start 228C  
            _EUSART1_DefaultFramingErrorHandler 000000                        __size_of_SPI1_Initialize 000E  
                                   exp@exponent 004F                         __CFG_DSWDTOSC$INTOSCREF 000000  
                                   ldexp@newexp 0037                                 __initialization 212A  
                                   log@exponent 0037                      __end_of_EUSART1_Initialize 20C0  
                                  __end_of_main 1ED6                                          ??_main 005A  
                                 ___fttol@sign1 0031                                   __activetblptr 000002  
                                        ?_floor 0041                                          ?_ldexp 0034  
                                        ?_frexp 0001                                __end_of___altoft 1F4E  
                                        _ANCON0 000F48                                          _ANCON1 000F49  
                              __end_of___awtoft 20F8                                __end_of___ftpack 1D2E  
                              __end_of___lbtoft 21F2                                __end_of___lltoft 1FAA  
                                        _ODCON1 000F42                                          _ODCON2 000F41  
                                        _ODCON3 000F40                                  __CFG_WDTEN$OFF 000000  
                                        _RCREG1 000FAF                                          _RCSTA1 000FAC  
                                        _OSCCON 000FD3                                          _SPBRG1 000FB0  
                                __CFG_WPCFG$OFF 000000                                          _TXREG1 000FAE  
                                        _TXSTA1 000FAD                                  __CFG_WPDIS$OFF 000000  
                                __CFG_XINST$OFF 000000                                          _TxData 0100  
                                        ___ftge 1DBE                                       ??___aldiv 000F  
                                        ___wmul 2184                                       ??___ftadd 0022  
                                __CFG_STVREN$ON 000000                                       ??___ftdiv 000F  
                                     ??___ftneg 0004                                       ??___ftmul 0013  
                                     ??___ftsub 002E                                       ??___fttol 002C  
                        __size_of_I2C_buffClear 0010                        ?_EUSART1_SetErrorHandler 0001  
                                        clear_0 2132                                          clear_1 2144  
              ??_EUSART1_SetOverrunErrorHandler 0003                 ?_EUSART1_SetOverrunErrorHandler 0001  
                                        floor@i 0044                                          floor@x 0041  
                         ___ftmul@f3_as_product 0017                                       ?_I2C_Init 0001  
                                  __mediumconst 0000                                       ?_I2C_read 0001  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                       ?_I2C_stop 0001  
              __end_of_EEPROM_24AA512_pageWrite 1670                                 __CFG_DSBOREN$ON 000000  
                              __end_ofexp@coeff 0F1F                               _SYSTEM_Initialize 220C  
                              __end_oflog@coeff 0F3A                                      __accesstop 0060  
                       __end_of__initialization 2150                                      ___altoft@c 0037  
                                    ___ftadd@f1 001C                                      ___ftadd@f2 001F  
                                    ___ftge@ff1 0001                                      ___ftge@ff2 0004  
                            ?_SYSTEM_Initialize 0001                                    eval_poly@res 0031  
                                 ___rparam_used 000001                      __end_of_I2C_repeated_Start 2296  
                                    ___ftdiv@f1 0009                                      ___ftdiv@f2 000C  
                                    ___ftdiv@f3 0013                                      ___ftneg@f1 0001  
                               __CFG_IOL1WAY$ON 000000                                      ___awtoft@c 0009  
                                    ___lbtoft@c 000C                            __CFG_WPEND$PAGE_WPFP 000000  
                                    ___ftmul@f1 000D                                      ___ftmul@f2 0010  
                   __end_of_EEPROM_24AA512_Read 212A                                      ___ftsub@f1 0028  
                                    ___ftsub@f2 002B                                      ___fttol@f1 0028  
                                __pcstackCOMRAM 0001                             ??_SYSTEM_Initialize 0016  
                                    ___lltoft@c 0009                                   __end_of_floor 1A1C  
                                 __end_of_ldexp 1C80                                   __end_of_frexp 1DBE  
                             ??_SPI1_Initialize 0001                                 __CFG_DSWDTEN$ON 000000  
                               __CFG_DSWDTPS$G2 000000                                      ??_I2C_Init 0015  
                                    ??_I2C_read 0003                                      ??_I2C_stop 0001  
                                       ??_floor 0044                                         ??_ldexp 0039  
                                       ??_frexp 0006                       __end_of_SYSTEM_Initialize 2224  
                                 _I2C_buffClear 223C                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                              __size_of_eval_poly 00D2  
               __end_of_EUSART1_SetErrorHandler 2282                               __CFG_PLLSEL$PLL4X 000000  
                              ??_interrupt_Init 0001                                         ?___ftge 0001  
                                       ?___wmul 0001                                       ?___altoft 0037  
                                     ?___awtoft 0009                                       ?___ftpack 0001  
                                     ?___lbtoft 0009                                       ?___lltoft 0009  
        __end_of_EUSART1_SetFramingErrorHandler 2278         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 226E                                         _REFOCON 000F3D  
                                       _OSCCON2 000F87                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000F7F                                         _SSP1ADD 000FC8  
                                       _SSP2ADD 000F74                                         _SSP1BUF 000FC9  
                                       _SSP2BUF 000F75                                  ?_I2C_buffClear 0001  
                              I2C_read@ACK_NACK 0001                        _EEPROM_24AA512_pageWrite 156C  
                                     _I2C_Write 21F2                                         __Hparam 0000  
                                       __Lparam 0000                                       _I2C_start 2282  
                                       ___aldiv 1AEE                                 __size_of___ftge 0090  
                                       ___ftadd 1126                                         ___ftdiv 1858  
                                       ___ftneg 21AA                                 __size_of___wmul 0026  
                                       ___ftmul 1764                                         ___ftsub 2042  
                                       ___fttol 1670                                    __psmallconst 0F00  
                                    ??___altoft 003B                                         __pcinit 212A  
                                    ??___awtoft 000C                                      ??___ftpack 0006  
                                    ??___lbtoft 000C                               __end_of_eval_poly 1AEE  
                                       __ramtop 0F00                                      ??___lltoft 000D  
                                       __ptext0 1E4E                                         __ptext1 225A  
                                       __ptext2 220C                                         __ptext3 224C  
                                       __ptext4 1FFE                                         __ptext5 215A  
                                       __ptext6 1FAA                                         __ptext7 1AEE  
                                       __ptext8 2082                                         __ptext9 2264  
                         _OSCILLATOR_Initialize 215A                                    __size_of_exp 01E8  
                                  __size_of_log 011E                                    __size_of_pow 017C  
                              ___aldiv@dividend 0007                              _EUSART1_Initialize 2082  
                      ??_PIN_MANAGER_Initialize 0001                      __size_of_SYSTEM_Initialize 0018  
                          end_of_initialization 2150                                         exp@sign 0051  
                           ?_EUSART1_Initialize 0001                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 0078                                      ?_I2C_Write 0001  
                                       pow@sign 0082                                      ?_I2C_start 0001  
                              ___aldiv@quotient 0011                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc2 000FDE                            ??_EUSART1_Initialize 0003  
                                     _PORTBbits 000F81                                 ??_I2C_buffClear 0002  
                                     _TRISDbits 000F95                                       _TRISEbits 000F96  
                             __size_of_I2C_Init 0054                __size_of_EUSART1_SetErrorHandler 000A  
                             __size_of_I2C_read 0018                               __size_of_I2C_stop 000A  
                                   ___ftdiv@exp 0016                                 _SPI1_Initialize 224C  
                             __CFG_WPFP$PAGE_63 000000                             __CFG_MSSP7B_EN$MSK7 000000  
                                   ___ftmul@exp 0016                                  __end_of___ftge 1E4E  
                                __end_of___wmul 21AA                              _I2C_repeated_Start 228C  
                        ?_OSCILLATOR_Initialize 0001                                      floor@expon 0047  
                           start_initialization 212A                                      eval_poly@d 002B  
                                    eval_poly@n 002D                                      eval_poly@x 0028  
                                    ldexp@value 0034                 __size_of_PIN_MANAGER_Initialize 0044  
                           ?_I2C_repeated_Start 0001                                     __end_of_exp 1126  
                                   __end_of_log 156C                   EEPROM_24AA512_pageWrite@index 0090  
                                   __end_of_pow 144E                                      frexp@value 0001  
                                   ??_I2C_Write 0001                                     ??_I2C_start 0001  
                          ??_I2C_repeated_Start 0001                                        ??___ftge 0007  
                                      ??___wmul 0005                               __CFG_ADCSEL$BIT10 000000  
                               I2C_Init@F_clock 0015                    __size_of_EEPROM_24AA512_Read 0032  
                             __size_of___altoft 0078                               __size_of___awtoft 0038  
                             __size_of___ftpack 00AE                               __size_of___lbtoft 0024  
                             __size_of___lltoft 005C                                     __pbssCOMRAM 005C  
                    ??_EEPROM_24AA512_pageWrite 005A                                   __pcstackBANK0 007C  
                       __end_of_SPI1_Initialize 225A                ??_EUSART1_SetFramingErrorHandler 0003  
               ?_EUSART1_SetFramingErrorHandler 0001                          _PIN_MANAGER_Initialize 1FFE  
                    EEPROM_24AA512_Read@addHigh 0003                                        ?___aldiv 0007  
                                      ?___ftadd 001C                                        ?___ftdiv 0009  
                                      ?___ftneg 0001                                        ?___ftmul 000D  
                                      ?___ftsub 0028                                        ?___fttol 0028  
                                   __smallconst 0F00                                        _BAUDCON1 000F7E  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        _I2C_Init 1FAA  
                                     _eval_poly 1A1C                            _EUSART1_ErrorHandler 0076  
                          __CFG_RTCOSC$T1OSCREF 000000                                        _I2C_read 2224  
                                      _I2C_stop 2296                         _EUSART1_SetErrorHandler 2278  
                                __size_of_floor 00DE                                  __size_of_ldexp 00C6  
                                __size_of_frexp 0090                                 ___aldiv@divisor 000B  
                               ___aldiv@counter 000F                                  ___wmul@product 0005  
       EUSART1_SetErrorHandler@interruptHandler 0001                                        _LATBbits 000F8A  
                                      _LATCbits 000F8B                                        _PIE3bits 000FA3  
                                      _PIR1bits 000F9E                                        _PIR3bits 000FA4  
                              __CFG_WDTPS$32768 000000                                        _SSP1CON1 000FC6  
                                      _SSP1STAT 000FC7                               ___wmul@multiplier 0001  
                              __CFG_SOSCSEL$DIG 000000                         __size_of_interrupt_Init 000A  
                                    ?_eval_poly 0028                               __CFG_CFGPLLEN$OFF 000000  
                              ?_SPI1_Initialize 0001                                     _INTCON2bits 000FF1  
                                     frexp@eptr 0004                                        __Hrparam 0000  
                                      __Lrparam 0000                                   I2C_Write@data 0001  
                       ??_OSCILLATOR_Initialize 0001                                __size_of___aldiv 00CC  
                              __size_of___ftadd 01AC                                __size_of___ftdiv 00E6  
                              __size_of___ftneg 0024                                        ___altoft 1ED6  
                              __size_of___ftmul 00F4                                __size_of___ftsub 0040  
                              __size_of___fttol 00F4                     __size_of_EUSART1_Initialize 003E  
                                      ___awtoft 20C0                                        ___ftpack 1C80  
                                      ___lbtoft 21CE                                        ___lltoft 1F4E  
                     ??_EUSART1_SetErrorHandler 0003                     _EUSART1_DefaultErrorHandler 000000  
                                      _exp$2635 004C                       EEPROM_24AA512_Read@addLow 0005  
                                      __ptext10 226E                                        __ptext11 2278  
                                      __ptext20 1670                                        __ptext12 223C  
                                      __ptext21 1DBE                                        __ptext13 156C  
                                      __ptext30 20C0                                        __ptext22 1ED6  
                                      __ptext14 12D2                                        __ptext31 1F4E  
                                      __ptext23 1A1C                                        __ptext15 144E  
                                      __ptext32 21CE                                        __ptext24 2184  
                                      __ptext16 0F3E                                        __ptext33 1C80  
                                      __ptext25 1764                                        __ptext17 1BBA  
                                      __ptext34 20F8                                        __ptext26 2042  
                                      __ptext18 193E                                        __ptext35 2282  
                                      __ptext27 1126                                        __ptext19 1D2E  
                                      __ptext36 228C                                        __ptext28 21AA  
                                      __ptext37 2224                                        __ptext29 1858  
                                      __ptext38 21F2                                        __ptext39 2296  
                         __end_of_I2C_buffClear 224C                                    _SSP1CON1bits 000FC6  
                                  _SSP2CON1bits 000F72                                    _SSP2CON2bits 000F71  
                                      _pow$2633 007C                                        _pow$2634 007F  
                           _EEPROM_24AA512_Read 20F8                                   __size_of_main 0088  
EUSART1_SetOverrunErrorHandler@interruptHandler 0001                                    _SSP1STATbits 000FC7  
                   _EUSART1_FramingErrorHandler 007A                            ?_EEPROM_24AA512_Read 0003  
                                  _SSP2STATbits 000F73                                        exp@coeff 0F01  
                                      log@coeff 0F1F                                      _INTCONbits 000FF2  
                                   ??_eval_poly 002F                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 226E         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 2264                                      _RCSTA1bits 000FAC  
                   __size_of_I2C_repeated_Start 000A  EUSART1_SetFramingErrorHandler@interruptHandler 0001  
                         ??_EEPROM_24AA512_Read 0007                              _eusart1RxLastError 005E  
                                _interrupt_Init 225A                                    ___aldiv@sign 0010  
                __end_of_PIN_MANAGER_Initialize 2042                    EEPROM_24AA512_pageWrite@data 0058  
                  EEPROM_24AA512_pageWrite@page 008D               __size_of_EEPROM_24AA512_pageWrite 0104  
                     ?_EEPROM_24AA512_pageWrite 0058  
