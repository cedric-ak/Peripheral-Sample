

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Apr 04 23:09:49 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46J13
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60  0000                     
    61                           ; Version 1.45
    62                           ; Generated 16/11/2017 GMT
    63                           ; 
    64                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18LF46J13 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    97  0000                     
    98 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    99  0000                     
   100 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   101  0000                     
   102                           	psect	smallconst
   103  000F00                     __psmallconst:
   104                           	opt stack 0
   105  000F00  00                 	db	0
   106  000F01                     exp@coeff:
   107                           	opt stack 0
   108  000F01  00                 	db	0
   109  000F02  80                 	db	128
   110  000F03  3F                 	db	63
   111  000F04  72                 	db	114
   112  000F05  31                 	db	49
   113  000F06  3F                 	db	63
   114  000F07  FE                 	db	254
   115  000F08  75                 	db	117
   116  000F09  3E                 	db	62
   117  000F0A  58                 	db	88
   118  000F0B  63                 	db	99
   119  000F0C  3D                 	db	61
   120  000F0D  95                 	db	149
   121  000F0E  1D                 	db	29
   122  000F0F  3C                 	db	60
   123  000F10  C5                 	db	197
   124  000F11  AE                 	db	174
   125  000F12  3A                 	db	58
   126  000F13  79                 	db	121
   127  000F14  21                 	db	33
   128  000F15  39                 	db	57
   129  000F16  94                 	db	148
   130  000F17  80                 	db	128
   131  000F18  37                 	db	55
   132  000F19  93                 	db	147
   133  000F1A  A7                 	db	167
   134  000F1B  35                 	db	53
   135  000F1C  56                 	db	86
   136  000F1D  15                 	db	21
   137  000F1E  34                 	db	52
   138  000F1F                     __end_ofexp@coeff:
   139                           	opt stack 0
   140  000F1F                     log@coeff:
   141                           	opt stack 0
   142  000F1F  00                 	db	0
   143  000F20  00                 	db	0
   144  000F21  00                 	db	0
   145  000F22  00                 	db	0
   146  000F23  80                 	db	128
   147  000F24  3F                 	db	63
   148  000F25  F0                 	db	240
   149  000F26  FF                 	db	255
   150  000F27  BE                 	db	190
   151  000F28  E2                 	db	226
   152  000F29  A9                 	db	169
   153  000F2A  3E                 	db	62
   154  000F2B  83                 	db	131
   155  000F2C  76                 	db	118
   156  000F2D  BE                 	db	190
   157  000F2E  AE                 	db	174
   158  000F2F  2B                 	db	43
   159  000F30  3E                 	db	62
   160  000F31  3C                 	db	60
   161  000F32  C3                 	db	195
   162  000F33  BD                 	db	189
   163  000F34  D2                 	db	210
   164  000F35  13                 	db	19
   165  000F36  3D                 	db	61
   166  000F37  78                 	db	120
   167  000F38  D3                 	db	211
   168  000F39  BB                 	db	187
   169  000F3A                     __end_oflog@coeff:
   170                           	opt stack 0
   171  0000                     _ODCON3	set	3904
   172  0000                     _ODCON2	set	3905
   173  0000                     _ODCON1	set	3906
   174  0000                     _ANCON1	set	3913
   175  0000                     _ANCON0	set	3912
   176  0000                     _REFOCON	set	3901
   177  0000                     _SSP2STATbits	set	3955
   178  0000                     _SSP2BUF	set	3957
   179  0000                     _SSP2ADD	set	3956
   180  0000                     _SSP2CON2bits	set	3953
   181  0000                     _SSP2CON1bits	set	3954
   182  0000                     _TRISDbits	set	3989
   183  0000                     _PIR3bits	set	4004
   184  0000                     _PIE3bits	set	4003
   185  0000                     _LATCbits	set	3979
   186  0000                     _LATBbits	set	3978
   187  0000                     _PORTBbits	set	3969
   188  0000                     _INTCONbits	set	4082
   189  0000                     _TRISEbits	set	3990
   190  0000                     _INTCON2bits	set	4081
   191  0000                     _TRISD	set	3989
   192  0000                     _TRISC	set	3988
   193  0000                     _TRISB	set	3987
   194  0000                     _TRISA	set	3986
   195  0000                     _TRISE	set	3990
   196  0000                     _LATC	set	3979
   197  0000                     _LATB	set	3978
   198  0000                     _LATA	set	3977
   199  0000                     _LATD	set	3980
   200  0000                     _LATE	set	3981
   201  0000                     _OSCCON2	set	3975
   202  0000                     _OSCTUNE	set	3995
   203  0000                     _OSCCON	set	4051
   204  0000                     _TXREG1	set	4014
   205  0000                     _RCREG1	set	4015
   206  0000                     _RCSTA1bits	set	4012
   207  0000                     _TXSTA1bits	set	4013
   208  0000                     _PIR1bits	set	3998
   209  0000                     _SPBRGH1	set	3967
   210  0000                     _SPBRG1	set	4016
   211  0000                     _TXSTA1	set	4013
   212  0000                     _RCSTA1	set	4012
   213  0000                     _BAUDCON1	set	3966
   214  0000                     _SSP1STATbits	set	4039
   215  0000                     _SSP1BUF	set	4041
   216  0000                     _SSP1CON1bits	set	4038
   217  0000                     _SSP1ADD	set	4040
   218  0000                     _SSP1CON1	set	4038
   219  0000                     _SSP1STAT	set	4039
   220  000F3A                     STR_1:
   221  000F3A  0D                 	db	13
   222  000F3B  00                 	db	0
   223                           
   224                           ; #config settings
   225  000F3C  00                 	db	0	; dummy byte at the end
   226  0000                     
   227                           	psect	cinit
   228  0022E8                     __pcinit:
   229                           	opt stack 0
   230  0022E8                     start_initialization:
   231                           	opt stack 0
   232  0022E8                     __initialization:
   233                           	opt stack 0
   234                           
   235                           ; Clear objects allocated to BANK1 (256 bytes)
   236  0022E8  EE01  F000         	lfsr	0,__pbssBANK1
   237  0022EC  EE11 F000          	lfsr	1,256
   238  0022F0                     clear_0:
   239  0022F0  6AEE               	clrf	postinc0,c
   240  0022F2  50E5               	movf	postdec1,w,c
   241  0022F4  50E1               	movf	fsr1l,w,c
   242  0022F6  E1FC               	bnz	clear_0
   243  0022F8  50E2               	movf	fsr1h,w,c
   244  0022FA  E1FA               	bnz	clear_0
   245                           
   246                           ; Clear objects allocated to BANK0 (20 bytes)
   247  0022FC  EE00  F060         	lfsr	0,__pbssBANK0
   248  002300  0E14               	movlw	20
   249  002302                     clear_1:
   250  002302  6AEE               	clrf	postinc0,c
   251  002304  06E8               	decf	wreg,f,c
   252  002306  E1FD               	bnz	clear_1
   253                           
   254                           ; Clear objects allocated to COMRAM (1 bytes)
   255  002308  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   256  00230A                     end_of_initialization:
   257                           	opt stack 0
   258  00230A                     __end_of__initialization:
   259                           	opt stack 0
   260  00230A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   261  00230C  6EF8               	movwf	tblptru,c
   262  00230E  0100               	movlb	0
   263  002310  EF9C  F00F         	goto	_main	;jump to C main() function
   264                           tblptru	equ	0xFF8
   265                           postinc0	equ	0xFEE
   266                           wreg	equ	0xFE8
   267                           postdec1	equ	0xFE5
   268                           fsr1h	equ	0xFE2
   269                           fsr1l	equ	0xFE1
   270                           
   271                           	psect	bssCOMRAM
   272  00005F                     __pbssCOMRAM:
   273                           	opt stack 0
   274  00005F                     _eusart1RxLastError:
   275                           	opt stack 0
   276  00005F                     	ds	1
   277                           tblptru	equ	0xFF8
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           postdec1	equ	0xFE5
   281                           fsr1h	equ	0xFE2
   282                           fsr1l	equ	0xFE1
   283                           
   284                           	psect	bssBANK0
   285  000060                     __pbssBANK0:
   286                           	opt stack 0
   287  000060                     _sData:
   288                           	opt stack 0
   289  000060                     	ds	10
   290  00006A                     _errno:
   291                           	opt stack 0
   292  00006A                     	ds	2
   293  00006C                     _ADC:
   294                           	opt stack 0
   295  00006C                     	ds	2
   296  00006E                     _EUSART1_ErrorHandler:
   297                           	opt stack 0
   298  00006E                     	ds	2
   299  000070                     _EUSART1_OverrunErrorHandler:
   300                           	opt stack 0
   301  000070                     	ds	2
   302  000072                     _EUSART1_FramingErrorHandler:
   303                           	opt stack 0
   304  000072                     	ds	2
   305                           tblptru	equ	0xFF8
   306                           postinc0	equ	0xFEE
   307                           wreg	equ	0xFE8
   308                           postdec1	equ	0xFE5
   309                           fsr1h	equ	0xFE2
   310                           fsr1l	equ	0xFE1
   311                           
   312                           	psect	bssBANK1
   313  000100                     __pbssBANK1:
   314                           	opt stack 0
   315  000100                     _TxData:
   316                           	opt stack 0
   317  000100                     	ds	256
   318                           tblptru	equ	0xFF8
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           postdec1	equ	0xFE5
   322                           fsr1h	equ	0xFE2
   323                           fsr1l	equ	0xFE1
   324                           
   325                           	psect	cstackBANK0
   326  000074                     __pcstackBANK0:
   327                           	opt stack 0
   328  000074                     EUSART1_itoa@data:
   329                           	opt stack 0
   330                           
   331                           ; 4 bytes @ 0x0
   332  000074                     	ds	4
   333  000078                     EUSART1_itoa@base:
   334                           	opt stack 0
   335                           
   336                           ; 2 bytes @ 0x4
   337  000078                     	ds	2
   338  00007A                     EUSART1_itoa@buf:
   339                           	opt stack 0
   340                           
   341                           ; 10 bytes @ 0x6
   342  00007A                     	ds	10
   343                           tblptru	equ	0xFF8
   344                           postinc0	equ	0xFEE
   345                           wreg	equ	0xFE8
   346                           postdec1	equ	0xFE5
   347                           fsr1h	equ	0xFE2
   348                           fsr1l	equ	0xFE1
   349                           
   350                           	psect	cstackCOMRAM
   351  000001                     __pcstackCOMRAM:
   352                           	opt stack 0
   353  000001                     ??_OSCILLATOR_Initialize:
   354  000001                     ?___wmul:
   355                           	opt stack 0
   356  000001                     ?___lwdiv:
   357                           	opt stack 0
   358  000001                     ?___lwmod:
   359                           	opt stack 0
   360  000001                     ?___ftpack:
   361                           	opt stack 0
   362  000001                     ?_frexp:
   363                           	opt stack 0
   364  000001                     ?___ftneg:
   365                           	opt stack 0
   366  000001                     I2C_Write@data:
   367                           	opt stack 0
   368  000001                     EUSART1_Write_Text@pbData:
   369                           	opt stack 0
   370  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
   371                           	opt stack 0
   372  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   373                           	opt stack 0
   374  000001                     EUSART1_SetErrorHandler@interruptHandler:
   375                           	opt stack 0
   376  000001                     I2C_read@ACK_NACK:
   377                           	opt stack 0
   378  000001                     ___wmul@multiplier:
   379                           	opt stack 0
   380  000001                     ___lwdiv@dividend:
   381                           	opt stack 0
   382  000001                     ___lwmod@dividend:
   383                           	opt stack 0
   384  000001                     ___ftpack@arg:
   385                           	opt stack 0
   386  000001                     ___ftge@ff1:
   387                           	opt stack 0
   388  000001                     ___ftneg@f1:
   389                           	opt stack 0
   390  000001                     frexp@value:
   391                           	opt stack 0
   392                           
   393                           ; 3 bytes @ 0x0
   394  000001                     	ds	1
   395  000002                     
   396                           ; 1 bytes @ 0x1
   397  000002                     	ds	1
   398  000003                     EUSART1_Write_Text@iSize:
   399                           	opt stack 0
   400  000003                     ___wmul@multiplicand:
   401                           	opt stack 0
   402  000003                     ___lwdiv@divisor:
   403                           	opt stack 0
   404  000003                     ___lwmod@divisor:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x2
   408  000003                     	ds	1
   409  000004                     ??_EUSART1_Write_Text:
   410  000004                     ___ftpack@exp:
   411                           	opt stack 0
   412  000004                     frexp@eptr:
   413                           	opt stack 0
   414  000004                     ___ftge@ff2:
   415                           	opt stack 0
   416                           
   417                           ; 3 bytes @ 0x3
   418  000004                     	ds	1
   419  000005                     ___ftpack@sign:
   420                           	opt stack 0
   421  000005                     ___lwmod@counter:
   422                           	opt stack 0
   423  000005                     ___wmul@product:
   424                           	opt stack 0
   425  000005                     ___lwdiv@quotient:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x4
   429  000005                     	ds	1
   430  000006                     ??___ftpack:
   431  000006                     ??_frexp:
   432  000006                     EUSART1_Write_Text@iSizeQueued:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x5
   436  000006                     	ds	1
   437  000007                     ??___ftge:
   438  000007                     ?___aldiv:
   439                           	opt stack 0
   440  000007                     ___lwdiv@counter:
   441                           	opt stack 0
   442  000007                     ___aldiv@dividend:
   443                           	opt stack 0
   444                           
   445                           ; 4 bytes @ 0x6
   446  000007                     	ds	1
   447  000008                     utoa@buf:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x7
   451  000008                     	ds	1
   452  000009                     ?___ftdiv:
   453                           	opt stack 0
   454  000009                     ?___awtoft:
   455                           	opt stack 0
   456  000009                     ?___lltoft:
   457                           	opt stack 0
   458  000009                     ?___lwtoft:
   459                           	opt stack 0
   460  000009                     ___awtoft@c:
   461                           	opt stack 0
   462  000009                     ___lwtoft@c:
   463                           	opt stack 0
   464  000009                     ___ftdiv@f1:
   465                           	opt stack 0
   466  000009                     ___lltoft@c:
   467                           	opt stack 0
   468                           
   469                           ; 4 bytes @ 0x8
   470  000009                     	ds	1
   471  00000A                     utoa@val:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x9
   475  00000A                     	ds	1
   476  00000B                     ___aldiv@divisor:
   477                           	opt stack 0
   478                           
   479                           ; 4 bytes @ 0xA
   480  00000B                     	ds	1
   481  00000C                     ___awtoft@sign:
   482                           	opt stack 0
   483  00000C                     utoa@base:
   484                           	opt stack 0
   485  00000C                     ___ftdiv@f2:
   486                           	opt stack 0
   487                           
   488                           ; 3 bytes @ 0xB
   489  00000C                     	ds	1
   490  00000D                     ??___lltoft:
   491  00000D                     ?___ftmul:
   492                           	opt stack 0
   493  00000D                     ___ftmul@f1:
   494                           	opt stack 0
   495                           
   496                           ; 3 bytes @ 0xC
   497  00000D                     	ds	1
   498  00000E                     utoa@v:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0xD
   502  00000E                     	ds	1
   503  00000F                     ??___ftdiv:
   504  00000F                     ___aldiv@counter:
   505                           	opt stack 0
   506                           
   507                           ; 1 bytes @ 0xE
   508  00000F                     	ds	1
   509  000010                     ___aldiv@sign:
   510                           	opt stack 0
   511  000010                     utoa@c:
   512                           	opt stack 0
   513  000010                     ___ftmul@f2:
   514                           	opt stack 0
   515                           
   516                           ; 3 bytes @ 0xF
   517  000010                     	ds	1
   518  000011                     ___lltoft@exp:
   519                           	opt stack 0
   520  000011                     itoa@buf:
   521                           	opt stack 0
   522  000011                     ___aldiv@quotient:
   523                           	opt stack 0
   524                           
   525                           ; 4 bytes @ 0x10
   526  000011                     	ds	1
   527  000012                     ___ftdiv@cntr:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x11
   531  000012                     	ds	1
   532  000013                     ??___ftmul:
   533  000013                     itoa@val:
   534                           	opt stack 0
   535  000013                     ___ftdiv@f3:
   536                           	opt stack 0
   537                           
   538                           ; 3 bytes @ 0x12
   539  000013                     	ds	2
   540  000015                     I2C_Init@F_clock:
   541                           	opt stack 0
   542  000015                     itoa@base:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x14
   546  000015                     	ds	1
   547  000016                     ___ftdiv@exp:
   548                           	opt stack 0
   549  000016                     ___ftmul@exp:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0x15
   553  000016                     	ds	1
   554  000017                     ___ftdiv@sign:
   555                           	opt stack 0
   556  000017                     itoa@cp:
   557                           	opt stack 0
   558  000017                     ___ftmul@f3_as_product:
   559                           	opt stack 0
   560                           
   561                           ; 3 bytes @ 0x16
   562  000017                     	ds	3
   563  00001A                     ___ftmul@cntr:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x19
   567  00001A                     	ds	1
   568  00001B                     ___ftmul@sign:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x1A
   572  00001B                     	ds	1
   573  00001C                     ?___ftadd:
   574                           	opt stack 0
   575  00001C                     ?___fttol:
   576                           	opt stack 0
   577  00001C                     ___ftadd@f1:
   578                           	opt stack 0
   579  00001C                     ___fttol@f1:
   580                           	opt stack 0
   581                           
   582                           ; 3 bytes @ 0x1B
   583  00001C                     	ds	3
   584  00001F                     ___ftadd@f2:
   585                           	opt stack 0
   586                           
   587                           ; 3 bytes @ 0x1E
   588  00001F                     	ds	1
   589  000020                     ??___fttol:
   590                           
   591                           ; 1 bytes @ 0x1F
   592  000020                     	ds	2
   593  000022                     ??___ftadd:
   594                           
   595                           ; 1 bytes @ 0x21
   596  000022                     	ds	3
   597  000025                     ___ftadd@sign:
   598                           	opt stack 0
   599  000025                     ___fttol@sign1:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x24
   603  000025                     	ds	1
   604  000026                     ___ftadd@exp2:
   605                           	opt stack 0
   606  000026                     ___fttol@lval:
   607                           	opt stack 0
   608                           
   609                           ; 4 bytes @ 0x25
   610  000026                     	ds	1
   611  000027                     ___ftadd@exp1:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x26
   615  000027                     	ds	1
   616  000028                     ?___ftsub:
   617                           	opt stack 0
   618  000028                     ?_eval_poly:
   619                           	opt stack 0
   620  000028                     ___ftsub@f1:
   621                           	opt stack 0
   622  000028                     eval_poly@x:
   623                           	opt stack 0
   624                           
   625                           ; 3 bytes @ 0x27
   626  000028                     	ds	2
   627  00002A                     ___fttol@exp1:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x29
   631  00002A                     	ds	1
   632  00002B                     ?___altoft:
   633                           	opt stack 0
   634  00002B                     eval_poly@d:
   635                           	opt stack 0
   636  00002B                     ___ftsub@f2:
   637                           	opt stack 0
   638  00002B                     ___altoft@c:
   639                           	opt stack 0
   640                           
   641                           ; 4 bytes @ 0x2A
   642  00002B                     	ds	2
   643  00002D                     eval_poly@n:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x2C
   647  00002D                     	ds	1
   648  00002E                     
   649                           ; 1 bytes @ 0x2D
   650  00002E                     	ds	1
   651  00002F                     ??_eval_poly:
   652  00002F                     ??___altoft:
   653                           
   654                           ; 1 bytes @ 0x2E
   655  00002F                     	ds	2
   656  000031                     eval_poly@res:
   657                           	opt stack 0
   658                           
   659                           ; 3 bytes @ 0x30
   660  000031                     	ds	2
   661  000033                     ___altoft@exp:
   662                           	opt stack 0
   663                           
   664                           ; 1 bytes @ 0x32
   665  000033                     	ds	1
   666  000034                     ?_log:
   667                           	opt stack 0
   668  000034                     ?_ldexp:
   669                           	opt stack 0
   670  000034                     ___altoft@sign:
   671                           	opt stack 0
   672  000034                     ldexp@value:
   673                           	opt stack 0
   674  000034                     log@x:
   675                           	opt stack 0
   676                           
   677                           ; 3 bytes @ 0x33
   678  000034                     	ds	1
   679  000035                     ?_floor:
   680                           	opt stack 0
   681  000035                     floor@x:
   682                           	opt stack 0
   683                           
   684                           ; 3 bytes @ 0x34
   685  000035                     	ds	2
   686  000037                     ldexp@newexp:
   687                           	opt stack 0
   688  000037                     log@exponent:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x36
   692  000037                     	ds	1
   693  000038                     floor@i:
   694                           	opt stack 0
   695                           
   696                           ; 3 bytes @ 0x37
   697  000038                     	ds	1
   698  000039                     ??_ldexp:
   699                           
   700                           ; 1 bytes @ 0x38
   701  000039                     	ds	2
   702  00003B                     floor@expon:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x3A
   706  00003B                     	ds	2
   707  00003D                     ?_exp:
   708                           	opt stack 0
   709  00003D                     exp@x:
   710                           	opt stack 0
   711                           
   712                           ; 3 bytes @ 0x3C
   713  00003D                     	ds	3
   714  000040                     _exp$2501:
   715                           	opt stack 0
   716                           
   717                           ; 3 bytes @ 0x3F
   718  000040                     	ds	3
   719  000043                     exp@exponent:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x42
   723  000043                     	ds	2
   724  000045                     exp@sign:
   725                           	opt stack 0
   726                           
   727                           ; 1 bytes @ 0x44
   728  000045                     	ds	1
   729  000046                     ?_pow:
   730                           	opt stack 0
   731  000046                     pow@x:
   732                           	opt stack 0
   733                           
   734                           ; 3 bytes @ 0x45
   735  000046                     	ds	3
   736  000049                     pow@y:
   737                           	opt stack 0
   738                           
   739                           ; 3 bytes @ 0x48
   740  000049                     	ds	3
   741  00004C                     _pow$2499:
   742                           	opt stack 0
   743                           
   744                           ; 3 bytes @ 0x4B
   745  00004C                     	ds	3
   746  00004F                     _pow$2500:
   747                           	opt stack 0
   748                           
   749                           ; 3 bytes @ 0x4E
   750  00004F                     	ds	3
   751  000052                     pow@sign:
   752                           	opt stack 0
   753                           
   754                           ; 1 bytes @ 0x51
   755  000052                     	ds	1
   756  000053                     pow@yi:
   757                           	opt stack 0
   758                           
   759                           ; 4 bytes @ 0x52
   760  000053                     	ds	4
   761  000057                     _MCP9801_TempRead$2495:
   762                           	opt stack 0
   763                           
   764                           ; 3 bytes @ 0x56
   765  000057                     	ds	3
   766  00005A                     _MCP9801_TempRead$2496:
   767                           	opt stack 0
   768                           
   769                           ; 3 bytes @ 0x59
   770  00005A                     	ds	3
   771  00005D                     ??_main:
   772                           
   773                           ; 1 bytes @ 0x5C
   774  00005D                     	ds	2
   775                           tblptru	equ	0xFF8
   776                           postinc0	equ	0xFEE
   777                           wreg	equ	0xFE8
   778                           postdec1	equ	0xFE5
   779                           fsr1h	equ	0xFE2
   780                           fsr1l	equ	0xFE1
   781                           
   782 ;;
   783 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   784 ;;
   785 ;; *************** function _main *****************
   786 ;; Defined at:
   787 ;;		line 5 in file "main.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   803 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   804 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   805 ;;Total ram usage:        2 bytes
   806 ;; Hardware stack levels required when called:    6
   807 ;; This function calls:
   808 ;;		_EUSART1_itoa
   809 ;;		_I2C_buffClear
   810 ;;		_MCP9801_Init
   811 ;;		_MCP9801_TempRead
   812 ;;		_SYSTEM_Initialize
   813 ;;		_interrupt_Init
   814 ;; This function is called by:
   815 ;;		Startup code after reset
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text0
   820  001F38                     __ptext0:
   821                           	opt stack 0
   822  001F38                     _main:
   823                           	opt stack 25
   824                           
   825                           ;main.c: 7: interrupt_Init();
   826                           
   827                           ;incstack = 0
   828  001F38  EC17  F012         	call	_interrupt_Init	;wreg free
   829                           
   830                           ;main.c: 8: SYSTEM_Initialize();
   831  001F3C  ECF1  F011         	call	_SYSTEM_Initialize	;wreg free
   832                           
   833                           ;main.c: 9: I2C_buffClear();
   834  001F40  EC08  F012         	call	_I2C_buffClear	;wreg free
   835                           
   836                           ;main.c: 10: MCP9801_Init();
   837  001F44  ECD6  F011         	call	_MCP9801_Init	;wreg free
   838  001F48                     
   839                           ;main.c: 13: EUSART1_itoa(MCP9801_TempRead(), 10);
   840  001F48  EC58  F00D         	call	_MCP9801_TempRead	;wreg free
   841  001F4C  6E5D               	movwf	??_main& (0+255),c
   842  001F4E  505D               	movf	??_main,w,c
   843  001F50  0100               	movlb	0	; () banked
   844  001F52  6F74               	movwf	EUSART1_itoa@data& (0+255),b
   845  001F54  6B75               	clrf	(EUSART1_itoa@data+1)& (0+255),b
   846  001F56  6B76               	clrf	(EUSART1_itoa@data+2)& (0+255),b
   847  001F58  6B77               	clrf	(EUSART1_itoa@data+3)& (0+255),b
   848  001F5A  0E00               	movlw	0
   849  001F5C  6F79               	movwf	(EUSART1_itoa@base+1)& (0+255),b
   850  001F5E  0E0A               	movlw	10
   851  001F60  6F78               	movwf	EUSART1_itoa@base& (0+255),b
   852  001F62  EC39  F011         	call	_EUSART1_itoa	;wreg free
   853                           
   854                           ;main.c: 14: _delay((unsigned long)((200)*(16000000/4000.0)));
   855  001F66  0E05               	movlw	5
   856  001F68  6E5E               	movwf	(??_main+1)& (0+255),c
   857  001F6A  0E0F               	movlw	15
   858  001F6C  6E5D               	movwf	??_main& (0+255),c
   859  001F6E  0EF1               	movlw	241
   860  001F70                     u2787:
   861  001F70  2EE8               	decfsz	wreg,f,c
   862  001F72  D7FE               	bra	u2787
   863  001F74  2E5D               	decfsz	??_main& (0+255),f,c
   864  001F76  D7FC               	bra	u2787
   865  001F78  2E5E               	decfsz	(??_main+1)& (0+255),f,c
   866  001F7A  D7FA               	bra	u2787
   867  001F7C  F000               	nop	
   868                           
   869                           ;main.c: 15: if (PORTBbits.RB0) {
   870  001F7E  A081               	btfss	3969,0,c	;volatile
   871  001F80  D7E3               	goto	l252
   872                           
   873                           ;main.c: 16: _delay((unsigned long)((10)*(16000000/4000.0)));
   874  001F82  0E34               	movlw	52
   875  001F84  6E5D               	movwf	??_main& (0+255),c
   876  001F86  0EF2               	movlw	242
   877  001F88                     u2797:
   878  001F88  2EE8               	decfsz	wreg,f,c
   879  001F8A  D7FE               	bra	u2797
   880  001F8C  2E5D               	decfsz	??_main& (0+255),f,c
   881  001F8E  D7FC               	bra	u2797
   882                           
   883                           ;main.c: 17: if (!PORTBbits.RB0) {
   884  001F90  B081               	btfsc	3969,0,c	;volatile
   885  001F92  D7DA               	goto	l252
   886                           
   887                           ;main.c: 18: do { LATBbits.LATB5 = ~LATBbits.LATB5; } while(0);
   888  001F94  AA8A               	btfss	3978,5,c	;volatile
   889  001F96  D002               	goto	u2720
   890  001F98  0E01               	movlw	1
   891  001F9A  D001               	goto	u2726
   892  001F9C                     u2720:
   893  001F9C  0E00               	movlw	0
   894  001F9E                     u2726:
   895  001F9E  0AFF               	xorlw	255
   896  001FA0  6E5D               	movwf	??_main& (0+255),c
   897  001FA2  3A5D               	swapf	??_main,f,c
   898  001FA4  465D               	rlncf	??_main,f,c
   899  001FA6  508A               	movf	3978,w,c	;volatile
   900  001FA8  185D               	xorwf	??_main,w,c
   901  001FAA  0BDF               	andlw	-33
   902  001FAC  185D               	xorwf	??_main,w,c
   903  001FAE  6E8A               	movwf	3978,c	;volatile
   904  001FB0  D7CB               	goto	l252
   905  001FB2                     __end_of_main:
   906                           	opt stack 0
   907                           tblptru	equ	0xFF8
   908                           postinc0	equ	0xFEE
   909                           wreg	equ	0xFE8
   910                           postdec1	equ	0xFE5
   911                           fsr1h	equ	0xFE2
   912                           fsr1l	equ	0xFE1
   913                           
   914 ;; *************** function _interrupt_Init *****************
   915 ;; Defined at:
   916 ;;		line 15 in file "Interrupt.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		None
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   934 ;;Total ram usage:        0 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		_main
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text1
   944  00242E                     __ptext1:
   945                           	opt stack 0
   946  00242E                     _interrupt_Init:
   947                           	opt stack 30
   948                           
   949                           ;Interrupt.c: 16: INTCONbits.GIE = 1;
   950                           
   951                           ;incstack = 0
   952  00242E  8EF2               	bsf	intcon,7,c	;volatile
   953                           
   954                           ;Interrupt.c: 17: INTCONbits.PEIE = 1;
   955  002430  8CF2               	bsf	intcon,6,c	;volatile
   956                           
   957                           ;Interrupt.c: 18: PIE3bits.SSP2IE = 1;
   958  002432  8EA3               	bsf	4003,7,c	;volatile
   959                           
   960                           ;Interrupt.c: 19: PIR3bits.SSP2IF = 0;
   961  002434  9EA4               	bcf	4004,7,c	;volatile
   962  002436  0012               	return		;funcret
   963  002438                     __end_of_interrupt_Init:
   964                           	opt stack 0
   965                           tblptru	equ	0xFF8
   966                           intcon	equ	0xFF2
   967                           postinc0	equ	0xFEE
   968                           wreg	equ	0xFE8
   969                           postdec1	equ	0xFE5
   970                           fsr1h	equ	0xFE2
   971                           fsr1l	equ	0xFE1
   972                           
   973 ;; *************** function _SYSTEM_Initialize *****************
   974 ;; Defined at:
   975 ;;		line 50 in file "mcc_generated_files/mcc.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;		None
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   993 ;;Total ram usage:        0 bytes
   994 ;; Hardware stack levels used:    1
   995 ;; Hardware stack levels required when called:    2
   996 ;; This function calls:
   997 ;;		_EUSART1_Initialize
   998 ;;		_I2C_Init
   999 ;;		_OSCILLATOR_Initialize
  1000 ;;		_PIN_MANAGER_Initialize
  1001 ;;		_SPI1_Initialize
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           	psect	text2
  1008  0023E2                     __ptext2:
  1009                           	opt stack 0
  1010  0023E2                     _SYSTEM_Initialize:
  1011                           	opt stack 28
  1012                           
  1013                           ;mcc.c: 52: PIN_MANAGER_Initialize();
  1014                           
  1015                           ;incstack = 0
  1016  0023E2  EC96  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  1017                           
  1018                           ;mcc.c: 53: OSCILLATOR_Initialize();
  1019  0023E6  EC8A  F011         	call	_OSCILLATOR_Initialize	;wreg free
  1020                           
  1021                           ;mcc.c: 54: SPI1_Initialize();
  1022  0023EA  EC10  F012         	call	_SPI1_Initialize	;wreg free
  1023                           
  1024                           ;mcc.c: 55: EUSART1_Initialize();
  1025  0023EE  EC1A  F011         	call	_EUSART1_Initialize	;wreg free
  1026                           
  1027                           ;mcc.c: 56: I2C_Init(100);
  1028  0023F2  0E64               	movlw	100
  1029  0023F4  EC43  F010         	call	_I2C_Init
  1030  0023F8  0012               	return		;funcret
  1031  0023FA                     __end_of_SYSTEM_Initialize:
  1032                           	opt stack 0
  1033                           tblptru	equ	0xFF8
  1034                           intcon	equ	0xFF2
  1035                           postinc0	equ	0xFEE
  1036                           wreg	equ	0xFE8
  1037                           postdec1	equ	0xFE5
  1038                           fsr1h	equ	0xFE2
  1039                           fsr1l	equ	0xFE1
  1040                           
  1041 ;; *************** function _SPI1_Initialize *****************
  1042 ;; Defined at:
  1043 ;;		line 65 in file "mcc_generated_files/spi1.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1061 ;;Total ram usage:        0 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; This function calls:
  1064 ;;		Nothing
  1065 ;; This function is called by:
  1066 ;;		_SYSTEM_Initialize
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text3
  1071  002420                     __ptext3:
  1072                           	opt stack 0
  1073  002420                     _SPI1_Initialize:
  1074                           	opt stack 29
  1075                           
  1076                           ;spi1.c: 70: SSP1STAT = 0x80;
  1077                           
  1078                           ;incstack = 0
  1079  002420  0E80               	movlw	128
  1080  002422  6EC7               	movwf	4039,c	;volatile
  1081                           
  1082                           ;spi1.c: 73: SSP1CON1 = 0x20;
  1083  002424  0E20               	movlw	32
  1084  002426  6EC6               	movwf	4038,c	;volatile
  1085                           
  1086                           ;spi1.c: 76: SSP1ADD = 0x00;
  1087  002428  0E00               	movlw	0
  1088  00242A  6EC8               	movwf	4040,c	;volatile
  1089  00242C  0012               	return		;funcret
  1090  00242E                     __end_of_SPI1_Initialize:
  1091                           	opt stack 0
  1092                           tblptru	equ	0xFF8
  1093                           intcon	equ	0xFF2
  1094                           postinc0	equ	0xFEE
  1095                           wreg	equ	0xFE8
  1096                           postdec1	equ	0xFE5
  1097                           fsr1h	equ	0xFE2
  1098                           fsr1l	equ	0xFE1
  1099                           
  1100 ;; *************** function _PIN_MANAGER_Initialize *****************
  1101 ;; Defined at:
  1102 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, status,2
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1120 ;;Total ram usage:        0 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; This function calls:
  1123 ;;		Nothing
  1124 ;; This function is called by:
  1125 ;;		_SYSTEM_Initialize
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           	psect	text4
  1130  00212C                     __ptext4:
  1131                           	opt stack 0
  1132  00212C                     _PIN_MANAGER_Initialize:
  1133                           	opt stack 29
  1134                           
  1135                           ;pin_manager.c: 57: LATE = 0x00;
  1136                           
  1137                           ;incstack = 0
  1138  00212C  0E00               	movlw	0
  1139  00212E  6E8D               	movwf	3981,c	;volatile
  1140                           
  1141                           ;pin_manager.c: 58: LATD = 0x00;
  1142  002130  0E00               	movlw	0
  1143  002132  6E8C               	movwf	3980,c	;volatile
  1144                           
  1145                           ;pin_manager.c: 59: LATA = 0x00;
  1146  002134  0E00               	movlw	0
  1147  002136  6E89               	movwf	3977,c	;volatile
  1148                           
  1149                           ;pin_manager.c: 60: LATB = 0x00;
  1150  002138  0E00               	movlw	0
  1151  00213A  6E8A               	movwf	3978,c	;volatile
  1152                           
  1153                           ;pin_manager.c: 61: LATC = 0x01;
  1154  00213C  0E01               	movlw	1
  1155  00213E  6E8B               	movwf	3979,c	;volatile
  1156                           
  1157                           ;pin_manager.c: 66: TRISE = 0xC7;
  1158  002140  0EC7               	movlw	199
  1159  002142  6E96               	movwf	3990,c	;volatile
  1160                           
  1161                           ;pin_manager.c: 67: TRISA = 0xEF;
  1162  002144  0EEF               	movlw	239
  1163  002146  6E92               	movwf	3986,c	;volatile
  1164                           
  1165                           ;pin_manager.c: 68: TRISB = 0xDF;
  1166  002148  0EDF               	movlw	223
  1167  00214A  6E93               	movwf	3987,c	;volatile
  1168                           
  1169                           ;pin_manager.c: 69: TRISC = 0x96;
  1170  00214C  0E96               	movlw	150
  1171  00214E  6E94               	movwf	3988,c	;volatile
  1172                           
  1173                           ;pin_manager.c: 70: TRISD = 0xFF;
  1174  002150  6895               	setf	3989,c	;volatile
  1175                           
  1176                           ;pin_manager.c: 75: ANCON0 = 0x00;
  1177  002152  0E00               	movlw	0
  1178  002154  010F               	movlb	15	; () banked
  1179  002156  6F48               	movwf	72,b	;volatile
  1180                           
  1181                           ;pin_manager.c: 76: ANCON1 = 0x10;
  1182  002158  0E10               	movlw	16
  1183  00215A  6F49               	movwf	73,b	;volatile
  1184                           
  1185                           ; BSR set to: 15
  1186                           ;pin_manager.c: 81: INTCON2bits.nRBPU = 1;
  1187  00215C  8EF1               	bsf	intcon2,7,c	;volatile
  1188                           
  1189                           ; BSR set to: 15
  1190                           ;pin_manager.c: 82: TRISEbits.RDPU = 1;
  1191  00215E  8E96               	bsf	3990,7,c	;volatile
  1192                           
  1193                           ; BSR set to: 15
  1194                           ;pin_manager.c: 83: TRISEbits.REPU = 1;
  1195  002160  8C96               	bsf	3990,6,c	;volatile
  1196                           
  1197                           ;pin_manager.c: 88: ODCON1 = 0x00;
  1198  002162  0E00               	movlw	0
  1199  002164  6F42               	movwf	66,b	;volatile
  1200                           
  1201                           ;pin_manager.c: 89: ODCON2 = 0x00;
  1202  002166  0E00               	movlw	0
  1203  002168  6F41               	movwf	65,b	;volatile
  1204                           
  1205                           ;pin_manager.c: 90: ODCON3 = 0x00;
  1206  00216A  0E00               	movlw	0
  1207  00216C  6F40               	movwf	64,b	;volatile
  1208                           
  1209                           ; BSR set to: 15
  1210  00216E  0012               	return		;funcret
  1211  002170                     __end_of_PIN_MANAGER_Initialize:
  1212                           	opt stack 0
  1213                           tblptru	equ	0xFF8
  1214                           intcon	equ	0xFF2
  1215                           intcon2	equ	0xFF1
  1216                           postinc0	equ	0xFEE
  1217                           wreg	equ	0xFE8
  1218                           postdec1	equ	0xFE5
  1219                           fsr1h	equ	0xFE2
  1220                           fsr1l	equ	0xFE1
  1221                           
  1222 ;; *************** function _OSCILLATOR_Initialize *****************
  1223 ;; Defined at:
  1224 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, status,2
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1240 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1241 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1242 ;;Total ram usage:        2 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; This function calls:
  1245 ;;		Nothing
  1246 ;; This function is called by:
  1247 ;;		_SYSTEM_Initialize
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text5
  1252  002314                     __ptext5:
  1253                           	opt stack 0
  1254  002314                     _OSCILLATOR_Initialize:
  1255                           	opt stack 29
  1256                           
  1257                           ;mcc.c: 62: OSCCON = 0x70;
  1258                           
  1259                           ; BSR set to: 15
  1260                           ;incstack = 0
  1261  002314  0E70               	movlw	112
  1262  002316  6ED3               	movwf	4051,c	;volatile
  1263                           
  1264                           ;mcc.c: 64: OSCTUNE = 0x00;
  1265  002318  0E00               	movlw	0
  1266  00231A  6E9B               	movwf	3995,c	;volatile
  1267                           
  1268                           ;mcc.c: 66: REFOCON = 0x00;
  1269  00231C  0E00               	movlw	0
  1270  00231E  010F               	movlb	15	; () banked
  1271  002320  6F3D               	movwf	61,b	;volatile
  1272                           
  1273                           ;mcc.c: 68: OSCCON2 = 0x14;
  1274  002322  0E14               	movlw	20
  1275  002324  6E87               	movwf	3975,c	;volatile
  1276                           
  1277                           ; BSR set to: 15
  1278                           ;mcc.c: 69: _delay((unsigned long)((500)*(16000000/4000.0)));
  1279  002326  0E0B               	movlw	11
  1280  002328  6E02               	movwf	(??_OSCILLATOR_Initialize+1)& (0+255),c
  1281  00232A  0E26               	movlw	38
  1282  00232C  6E01               	movwf	??_OSCILLATOR_Initialize& (0+255),c
  1283  00232E  0E5E               	movlw	94
  1284  002330                     u2807:
  1285  002330  2EE8               	decfsz	wreg,f,c
  1286  002332  D7FE               	bra	u2807
  1287  002334  2E01               	decfsz	??_OSCILLATOR_Initialize& (0+255),f,c
  1288  002336  D7FC               	bra	u2807
  1289  002338  2E02               	decfsz	(??_OSCILLATOR_Initialize+1)& (0+255),f,c
  1290  00233A  D7FA               	bra	u2807
  1291  00233C  0012               	return		;funcret
  1292  00233E                     __end_of_OSCILLATOR_Initialize:
  1293                           	opt stack 0
  1294                           tblptru	equ	0xFF8
  1295                           intcon	equ	0xFF2
  1296                           intcon2	equ	0xFF1
  1297                           postinc0	equ	0xFEE
  1298                           wreg	equ	0xFE8
  1299                           postdec1	equ	0xFE5
  1300                           fsr1h	equ	0xFE2
  1301                           fsr1l	equ	0xFE1
  1302                           
  1303 ;; *************** function _I2C_Init *****************
  1304 ;; Defined at:
  1305 ;;		line 20 in file "I2C.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  F_clock         1    wreg     unsigned char 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  F_clock         1   20[COMRAM] unsigned char 
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1320 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1322 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1323 ;;Total ram usage:        1 bytes
  1324 ;; Hardware stack levels used:    1
  1325 ;; Hardware stack levels required when called:    1
  1326 ;; This function calls:
  1327 ;;		___aldiv
  1328 ;;		___wmul
  1329 ;; This function is called by:
  1330 ;;		_SYSTEM_Initialize
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           	psect	text6
  1335  002086                     __ptext6:
  1336                           	opt stack 0
  1337  002086                     _I2C_Init:
  1338                           	opt stack 28
  1339                           
  1340                           ;incstack = 0
  1341                           ;I2C_Init@F_clock stored from wreg
  1342  002086  6E15               	movwf	I2C_Init@F_clock,c
  1343                           
  1344                           ;I2C.c: 21: TRISDbits.TRISD0 = 1;
  1345  002088  8095               	bsf	3989,0,c	;volatile
  1346                           
  1347                           ;I2C.c: 22: TRISDbits.TRISD1 = 1;
  1348  00208A  8295               	bsf	3989,1,c	;volatile
  1349                           
  1350                           ;I2C.c: 23: SSP2CON1bits.WCOL = 0;
  1351  00208C  9E72               	bcf	3954,7,c	;volatile
  1352                           
  1353                           ;I2C.c: 24: SSP2CON1bits.SSPEN = 1;
  1354  00208E  8A72               	bsf	3954,5,c	;volatile
  1355                           
  1356                           ;I2C.c: 25: SSP2CON1bits.SSPM = 0x08;
  1357  002090  5072               	movf	3954,w,c	;volatile
  1358  002092  0BF0               	andlw	-16
  1359  002094  0908               	iorlw	8
  1360  002096  6E72               	movwf	3954,c	;volatile
  1361                           
  1362                           ;I2C.c: 26: SSP2CON2bits.ACKDT = 0;
  1363  002098  9A71               	bcf	3953,5,c	;volatile
  1364                           
  1365                           ;I2C.c: 27: SSP2CON2bits.ACKEN = 1;
  1366  00209A  8871               	bsf	3953,4,c	;volatile
  1367                           
  1368                           ;I2C.c: 28: SSP2ADD = (16000000 / ((F_clock * 1000) * 4)) - 1;
  1369  00209C  0E00               	movlw	0
  1370  00209E  6E07               	movwf	___aldiv@dividend,c
  1371  0020A0  0E24               	movlw	36
  1372  0020A2  6E08               	movwf	___aldiv@dividend+1,c
  1373  0020A4  0EF4               	movlw	244
  1374  0020A6  6E09               	movwf	___aldiv@dividend+2,c
  1375  0020A8  0E00               	movlw	0
  1376  0020AA  6E0A               	movwf	___aldiv@dividend+3,c
  1377  0020AC  C015  F001         	movff	I2C_Init@F_clock,___wmul@multiplier
  1378  0020B0  6A02               	clrf	___wmul@multiplier+1,c
  1379  0020B2  0E0F               	movlw	15
  1380  0020B4  6E04               	movwf	___wmul@multiplicand+1,c
  1381  0020B6  0EA0               	movlw	160
  1382  0020B8  6E03               	movwf	___wmul@multiplicand,c
  1383  0020BA  EC9F  F011         	call	___wmul	;wreg free
  1384  0020BE  C001  F00B         	movff	?___wmul,___aldiv@divisor
  1385  0020C2  C002  F00C         	movff	?___wmul+1,___aldiv@divisor+1
  1386  0020C6  0E00               	movlw	0
  1387  0020C8  BE0C               	btfsc	___aldiv@divisor+1,7,c
  1388  0020CA  0EFF               	movlw	-1
  1389  0020CC  6E0D               	movwf	___aldiv@divisor+2,c
  1390  0020CE  6E0E               	movwf	___aldiv@divisor+3,c
  1391  0020D0  ECF2  F00C         	call	___aldiv	;wreg free
  1392  0020D4  0407               	decf	?___aldiv,w,c
  1393  0020D6  6E74               	movwf	3956,c	;volatile
  1394  0020D8  0012               	return		;funcret
  1395  0020DA                     __end_of_I2C_Init:
  1396                           	opt stack 0
  1397                           tblptru	equ	0xFF8
  1398                           intcon	equ	0xFF2
  1399                           intcon2	equ	0xFF1
  1400                           postinc0	equ	0xFEE
  1401                           wreg	equ	0xFE8
  1402                           postdec1	equ	0xFE5
  1403                           fsr1h	equ	0xFE2
  1404                           fsr1l	equ	0xFE1
  1405                           
  1406 ;; *************** function ___aldiv *****************
  1407 ;; Defined at:
  1408 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;  dividend        4    6[COMRAM] long 
  1411 ;;  divisor         4   10[COMRAM] long 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  quotient        4   16[COMRAM] long 
  1414 ;;  sign            1   15[COMRAM] unsigned char 
  1415 ;;  counter         1   14[COMRAM] unsigned char 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  4    6[COMRAM] long 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1425 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1426 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1428 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1429 ;;Total ram usage:       14 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; This function calls:
  1432 ;;		Nothing
  1433 ;; This function is called by:
  1434 ;;		_I2C_Init
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           	psect	text7
  1439  0019E4                     __ptext7:
  1440                           	opt stack 0
  1441  0019E4                     ___aldiv:
  1442                           	opt stack 28
  1443                           
  1444                           ;incstack = 0
  1445  0019E4  0E00               	movlw	0
  1446  0019E6  6E10               	movwf	___aldiv@sign,c
  1447  0019E8  AE0E               	btfss	___aldiv@divisor+3,7,c
  1448  0019EA  D00A               	goto	l599
  1449  0019EC  1E0E               	comf	___aldiv@divisor+3,f,c
  1450  0019EE  1E0D               	comf	___aldiv@divisor+2,f,c
  1451  0019F0  1E0C               	comf	___aldiv@divisor+1,f,c
  1452  0019F2  6C0B               	negf	___aldiv@divisor,c
  1453  0019F4  0E00               	movlw	0
  1454  0019F6  220C               	addwfc	___aldiv@divisor+1,f,c
  1455  0019F8  220D               	addwfc	___aldiv@divisor+2,f,c
  1456  0019FA  220E               	addwfc	___aldiv@divisor+3,f,c
  1457  0019FC  0E01               	movlw	1
  1458  0019FE  6E10               	movwf	___aldiv@sign,c
  1459  001A00                     l599:
  1460  001A00  AE0A               	btfss	___aldiv@dividend+3,7,c
  1461  001A02  D00A               	goto	l600
  1462  001A04  1E0A               	comf	___aldiv@dividend+3,f,c
  1463  001A06  1E09               	comf	___aldiv@dividend+2,f,c
  1464  001A08  1E08               	comf	___aldiv@dividend+1,f,c
  1465  001A0A  6C07               	negf	___aldiv@dividend,c
  1466  001A0C  0E00               	movlw	0
  1467  001A0E  2208               	addwfc	___aldiv@dividend+1,f,c
  1468  001A10  2209               	addwfc	___aldiv@dividend+2,f,c
  1469  001A12  220A               	addwfc	___aldiv@dividend+3,f,c
  1470  001A14  0E01               	movlw	1
  1471  001A16  1A10               	xorwf	___aldiv@sign,f,c
  1472  001A18                     l600:
  1473  001A18  0E00               	movlw	0
  1474  001A1A  6E11               	movwf	___aldiv@quotient,c
  1475  001A1C  0E00               	movlw	0
  1476  001A1E  6E12               	movwf	___aldiv@quotient+1,c
  1477  001A20  0E00               	movlw	0
  1478  001A22  6E13               	movwf	___aldiv@quotient+2,c
  1479  001A24  0E00               	movlw	0
  1480  001A26  6E14               	movwf	___aldiv@quotient+3,c
  1481  001A28  500B               	movf	___aldiv@divisor,w,c
  1482  001A2A  100C               	iorwf	___aldiv@divisor+1,w,c
  1483  001A2C  100D               	iorwf	___aldiv@divisor+2,w,c
  1484  001A2E  100E               	iorwf	___aldiv@divisor+3,w,c
  1485  001A30  B4D8               	btfsc	status,2,c
  1486  001A32  D02A               	goto	l607
  1487  001A34  0E01               	movlw	1
  1488  001A36  6E0F               	movwf	___aldiv@counter,c
  1489  001A38  D006               	goto	l602
  1490  001A3A  90D8               	bcf	status,0,c
  1491  001A3C  360B               	rlcf	___aldiv@divisor,f,c
  1492  001A3E  360C               	rlcf	___aldiv@divisor+1,f,c
  1493  001A40  360D               	rlcf	___aldiv@divisor+2,f,c
  1494  001A42  360E               	rlcf	___aldiv@divisor+3,f,c
  1495  001A44  2A0F               	incf	___aldiv@counter,f,c
  1496  001A46                     l602:
  1497  001A46  AE0E               	btfss	___aldiv@divisor+3,7,c
  1498  001A48  D7F8               	goto	l603
  1499  001A4A                     u2340:
  1500  001A4A  90D8               	bcf	status,0,c
  1501  001A4C  3611               	rlcf	___aldiv@quotient,f,c
  1502  001A4E  3612               	rlcf	___aldiv@quotient+1,f,c
  1503  001A50  3613               	rlcf	___aldiv@quotient+2,f,c
  1504  001A52  3614               	rlcf	___aldiv@quotient+3,f,c
  1505  001A54  500B               	movf	___aldiv@divisor,w,c
  1506  001A56  5C07               	subwf	___aldiv@dividend,w,c
  1507  001A58  500C               	movf	___aldiv@divisor+1,w,c
  1508  001A5A  5808               	subwfb	___aldiv@dividend+1,w,c
  1509  001A5C  500D               	movf	___aldiv@divisor+2,w,c
  1510  001A5E  5809               	subwfb	___aldiv@dividend+2,w,c
  1511  001A60  500E               	movf	___aldiv@divisor+3,w,c
  1512  001A62  580A               	subwfb	___aldiv@dividend+3,w,c
  1513  001A64  A0D8               	btfss	status,0,c
  1514  001A66  D009               	goto	l606
  1515  001A68  500B               	movf	___aldiv@divisor,w,c
  1516  001A6A  5E07               	subwf	___aldiv@dividend,f,c
  1517  001A6C  500C               	movf	___aldiv@divisor+1,w,c
  1518  001A6E  5A08               	subwfb	___aldiv@dividend+1,f,c
  1519  001A70  500D               	movf	___aldiv@divisor+2,w,c
  1520  001A72  5A09               	subwfb	___aldiv@dividend+2,f,c
  1521  001A74  500E               	movf	___aldiv@divisor+3,w,c
  1522  001A76  5A0A               	subwfb	___aldiv@dividend+3,f,c
  1523  001A78  8011               	bsf	___aldiv@quotient,0,c
  1524  001A7A                     l606:
  1525  001A7A  90D8               	bcf	status,0,c
  1526  001A7C  320E               	rrcf	___aldiv@divisor+3,f,c
  1527  001A7E  320D               	rrcf	___aldiv@divisor+2,f,c
  1528  001A80  320C               	rrcf	___aldiv@divisor+1,f,c
  1529  001A82  320B               	rrcf	___aldiv@divisor,f,c
  1530  001A84  2E0F               	decfsz	___aldiv@counter,f,c
  1531  001A86  D7E1               	goto	u2340
  1532  001A88                     l607:
  1533  001A88  5010               	movf	___aldiv@sign,w,c
  1534  001A8A  B4D8               	btfsc	status,2,c
  1535  001A8C  D008               	goto	l608
  1536  001A8E  1E14               	comf	___aldiv@quotient+3,f,c
  1537  001A90  1E13               	comf	___aldiv@quotient+2,f,c
  1538  001A92  1E12               	comf	___aldiv@quotient+1,f,c
  1539  001A94  6C11               	negf	___aldiv@quotient,c
  1540  001A96  0E00               	movlw	0
  1541  001A98  2212               	addwfc	___aldiv@quotient+1,f,c
  1542  001A9A  2213               	addwfc	___aldiv@quotient+2,f,c
  1543  001A9C  2214               	addwfc	___aldiv@quotient+3,f,c
  1544  001A9E                     l608:
  1545  001A9E  C011  F007         	movff	___aldiv@quotient,?___aldiv
  1546  001AA2  C012  F008         	movff	___aldiv@quotient+1,?___aldiv+1
  1547  001AA6  C013  F009         	movff	___aldiv@quotient+2,?___aldiv+2
  1548  001AAA  C014  F00A         	movff	___aldiv@quotient+3,?___aldiv+3
  1549  001AAE  0012               	return	
  1550  001AB0                     __end_of___aldiv:
  1551                           	opt stack 0
  1552                           tblptru	equ	0xFF8
  1553                           intcon	equ	0xFF2
  1554                           intcon2	equ	0xFF1
  1555                           postinc0	equ	0xFEE
  1556                           wreg	equ	0xFE8
  1557                           postdec1	equ	0xFE5
  1558                           fsr1h	equ	0xFE2
  1559                           fsr1l	equ	0xFE1
  1560                           status	equ	0xFD8
  1561                           
  1562 ;; *************** function _EUSART1_Initialize *****************
  1563 ;; Defined at:
  1564 ;;		line 69 in file "mcc_generated_files/eusart1.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;		None
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		wreg, status,2, status,0, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1582 ;;Total ram usage:        0 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:    1
  1585 ;; This function calls:
  1586 ;;		_EUSART1_SetErrorHandler
  1587 ;;		_EUSART1_SetFramingErrorHandler
  1588 ;;		_EUSART1_SetOverrunErrorHandler
  1589 ;; This function is called by:
  1590 ;;		_SYSTEM_Initialize
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text8
  1595  002234                     __ptext8:
  1596                           	opt stack 0
  1597  002234                     _EUSART1_Initialize:
  1598                           	opt stack 28
  1599                           
  1600                           ;eusart1.c: 74: BAUDCON1 = 0x18;
  1601                           
  1602                           ;incstack = 0
  1603  002234  0E18               	movlw	24
  1604  002236  6E7E               	movwf	3966,c	;volatile
  1605                           
  1606                           ;eusart1.c: 77: RCSTA1 = 0x98;
  1607  002238  0E98               	movlw	152
  1608  00223A  6EAC               	movwf	4012,c	;volatile
  1609                           
  1610                           ;eusart1.c: 80: TXSTA1 = 0x24;
  1611  00223C  0E24               	movlw	36
  1612  00223E  6EAD               	movwf	4013,c	;volatile
  1613                           
  1614                           ;eusart1.c: 83: SPBRG1 = 0xCF;
  1615  002240  0ECF               	movlw	207
  1616  002242  6EB0               	movwf	4016,c	;volatile
  1617                           
  1618                           ;eusart1.c: 86: SPBRGH1 = 0x00;
  1619  002244  0E00               	movlw	0
  1620  002246  6E7F               	movwf	3967,c	;volatile
  1621                           
  1622                           ;eusart1.c: 89: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  1623  002248  0E00               	movlw	0
  1624  00224A  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  1625  00224C  0E00               	movlw	0
  1626  00224E  6E02               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  1627  002250  EC21  F012         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1628                           
  1629                           ;eusart1.c: 90: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  1630  002254  0E00               	movlw	0
  1631  002256  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  1632  002258  0E00               	movlw	0
  1633  00225A  6E02               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  1634  00225C  EC1C  F012         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1635                           
  1636                           ;eusart1.c: 91: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  1637  002260  0E00               	movlw	0
  1638  002262  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  1639  002264  0E00               	movlw	0
  1640  002266  6E02               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  1641  002268  EC26  F012         	call	_EUSART1_SetErrorHandler	;wreg free
  1642                           
  1643                           ;eusart1.c: 93: eusart1RxLastError.status = 0;
  1644  00226C  0E00               	movlw	0
  1645  00226E  6E5F               	movwf	_eusart1RxLastError,c	;volatile
  1646  002270  0012               	return		;funcret
  1647  002272                     __end_of_EUSART1_Initialize:
  1648                           	opt stack 0
  1649                           tblptru	equ	0xFF8
  1650                           intcon	equ	0xFF2
  1651                           intcon2	equ	0xFF1
  1652                           postinc0	equ	0xFEE
  1653                           wreg	equ	0xFE8
  1654                           postdec1	equ	0xFE5
  1655                           fsr1h	equ	0xFE2
  1656                           fsr1l	equ	0xFE1
  1657                           status	equ	0xFD8
  1658                           
  1659 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1660 ;; Defined at:
  1661 ;;		line 179 in file "mcc_generated_files/eusart1.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1664 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;		None
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, status,2, status,0
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1679 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1680 ;;Total ram usage:        2 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_EUSART1_Initialize
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text9
  1690  002438                     __ptext9:
  1691                           	opt stack 0
  1692  002438                     _EUSART1_SetOverrunErrorHandler:
  1693                           	opt stack 28
  1694                           
  1695                           ;eusart1.c: 180: EUSART1_OverrunErrorHandler = interruptHandler;
  1696                           
  1697                           ;incstack = 0
  1698  002438  C001  F070         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1699  00243C  C002  F071         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1700  002440  0012               	return		;funcret
  1701  002442                     __end_of_EUSART1_SetOverrunErrorHandler:
  1702                           	opt stack 0
  1703                           tblptru	equ	0xFF8
  1704                           intcon	equ	0xFF2
  1705                           intcon2	equ	0xFF1
  1706                           postinc0	equ	0xFEE
  1707                           wreg	equ	0xFE8
  1708                           postdec1	equ	0xFE5
  1709                           fsr1h	equ	0xFE2
  1710                           fsr1l	equ	0xFE1
  1711                           status	equ	0xFD8
  1712                           
  1713 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1714 ;; Defined at:
  1715 ;;		line 175 in file "mcc_generated_files/eusart1.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1718 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2, status,0
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1734 ;;Total ram usage:        2 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_EUSART1_Initialize
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text10
  1744  002442                     __ptext10:
  1745                           	opt stack 0
  1746  002442                     _EUSART1_SetFramingErrorHandler:
  1747                           	opt stack 28
  1748                           
  1749                           ;eusart1.c: 176: EUSART1_FramingErrorHandler = interruptHandler;
  1750                           
  1751                           ;incstack = 0
  1752  002442  C001  F072         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1753  002446  C002  F073         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1754  00244A  0012               	return		;funcret
  1755  00244C                     __end_of_EUSART1_SetFramingErrorHandler:
  1756                           	opt stack 0
  1757                           tblptru	equ	0xFF8
  1758                           intcon	equ	0xFF2
  1759                           intcon2	equ	0xFF1
  1760                           postinc0	equ	0xFEE
  1761                           wreg	equ	0xFE8
  1762                           postdec1	equ	0xFE5
  1763                           fsr1h	equ	0xFE2
  1764                           fsr1l	equ	0xFE1
  1765                           status	equ	0xFD8
  1766                           
  1767 ;; *************** function _EUSART1_SetErrorHandler *****************
  1768 ;; Defined at:
  1769 ;;		line 183 in file "mcc_generated_files/eusart1.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1772 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;		None
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      void 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2, status,0
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1787 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1788 ;;Total ram usage:        2 bytes
  1789 ;; Hardware stack levels used:    1
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_EUSART1_Initialize
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text11
  1798  00244C                     __ptext11:
  1799                           	opt stack 0
  1800  00244C                     _EUSART1_SetErrorHandler:
  1801                           	opt stack 28
  1802                           
  1803                           ;eusart1.c: 184: EUSART1_ErrorHandler = interruptHandler;
  1804                           
  1805                           ;incstack = 0
  1806  00244C  C001  F06E         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1807  002450  C002  F06F         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1808  002454  0012               	return		;funcret
  1809  002456                     __end_of_EUSART1_SetErrorHandler:
  1810                           	opt stack 0
  1811                           tblptru	equ	0xFF8
  1812                           intcon	equ	0xFF2
  1813                           intcon2	equ	0xFF1
  1814                           postinc0	equ	0xFEE
  1815                           wreg	equ	0xFE8
  1816                           postdec1	equ	0xFE5
  1817                           fsr1h	equ	0xFE2
  1818                           fsr1l	equ	0xFE1
  1819                           status	equ	0xFD8
  1820                           
  1821 ;; *************** function _MCP9801_TempRead *****************
  1822 ;; Defined at:
  1823 ;;		line 21 in file "MCP9801_Temp_Sensor.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;		None
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;		None
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      unsigned char 
  1830 ;; Registers used:
  1831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1838 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1841 ;;Total ram usage:        6 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    5
  1844 ;; This function calls:
  1845 ;;		_I2C_Write
  1846 ;;		_I2C_read
  1847 ;;		_I2C_repeated_Start
  1848 ;;		_I2C_start
  1849 ;;		_I2C_stop
  1850 ;;		___ftmul
  1851 ;;		___fttol
  1852 ;;		___lwtoft
  1853 ;;		_pow
  1854 ;; This function is called by:
  1855 ;;		_main
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text12
  1860  001AB0                     __ptext12:
  1861                           	opt stack 0
  1862  001AB0                     _MCP9801_TempRead:
  1863                           	opt stack 25
  1864                           
  1865                           ;MCP9801_Temp_Sensor.c: 22: I2C_start();
  1866                           
  1867                           ;incstack = 0
  1868  001AB0  EC30  F012         	call	_I2C_start	;wreg free
  1869                           
  1870                           ;MCP9801_Temp_Sensor.c: 23: I2C_Write(0x90);
  1871  001AB4  0E90               	movlw	144
  1872  001AB6  ECE4  F011         	call	_I2C_Write
  1873                           
  1874                           ;MCP9801_Temp_Sensor.c: 24: I2C_Write(0x00);
  1875  001ABA  0E00               	movlw	0
  1876  001ABC  ECE4  F011         	call	_I2C_Write
  1877                           
  1878                           ;MCP9801_Temp_Sensor.c: 25: I2C_repeated_Start();
  1879  001AC0  EC2B  F012         	call	_I2C_repeated_Start	;wreg free
  1880                           
  1881                           ;MCP9801_Temp_Sensor.c: 26: I2C_Write(0x90 |0x01);
  1882  001AC4  0E91               	movlw	145
  1883  001AC6  ECE4  F011         	call	_I2C_Write
  1884                           
  1885                           ;MCP9801_Temp_Sensor.c: 27: I2C_read(0);
  1886  001ACA  0E00               	movlw	0
  1887  001ACC  6E02               	movwf	I2C_read@ACK_NACK+1,c
  1888  001ACE  0E00               	movlw	0
  1889  001AD0  6E01               	movwf	I2C_read@ACK_NACK,c
  1890  001AD2  ECFD  F011         	call	_I2C_read	;wreg free
  1891                           
  1892                           ;MCP9801_Temp_Sensor.c: 28: ADC.MSB_LSB[1] = SSP2BUF;
  1893  001AD6  CF75 F06D          	movff	3957,_ADC+1	;volatile
  1894                           
  1895                           ;MCP9801_Temp_Sensor.c: 29: I2C_read(1);
  1896  001ADA  0E00               	movlw	0
  1897  001ADC  6E02               	movwf	I2C_read@ACK_NACK+1,c
  1898  001ADE  0E01               	movlw	1
  1899  001AE0  6E01               	movwf	I2C_read@ACK_NACK,c
  1900  001AE2  ECFD  F011         	call	_I2C_read	;wreg free
  1901                           
  1902                           ;MCP9801_Temp_Sensor.c: 30: ADC.MSB_LSB[0] = SSP2BUF;
  1903  001AE6  CF75 F06C          	movff	3957,_ADC	;volatile
  1904                           
  1905                           ;MCP9801_Temp_Sensor.c: 31: I2C_stop();
  1906  001AEA  EC35  F012         	call	_I2C_stop	;wreg free
  1907                           
  1908                           ;MCP9801_Temp_Sensor.c: 32: return (ADC.TempData * pow(2, -4)*0.0625);
  1909  001AEE  0E00               	movlw	0
  1910  001AF0  6E49               	movwf	pow@y,c
  1911  001AF2  0E80               	movlw	128
  1912  001AF4  6E4A               	movwf	pow@y+1,c
  1913  001AF6  0EC0               	movlw	192
  1914  001AF8  6E4B               	movwf	pow@y+2,c
  1915  001AFA  0E00               	movlw	0
  1916  001AFC  6E46               	movwf	pow@x,c
  1917  001AFE  0E00               	movlw	0
  1918  001B00  6E47               	movwf	pow@x+1,c
  1919  001B02  0E40               	movlw	64
  1920  001B04  6E48               	movwf	pow@x+2,c
  1921  001B06  EC69  F009         	call	_pow	;wreg free
  1922  001B0A  C046  F057         	movff	?_pow,_MCP9801_TempRead$2495
  1923  001B0E  C047  F058         	movff	?_pow+1,_MCP9801_TempRead$2495+1
  1924  001B12  C048  F059         	movff	?_pow+2,_MCP9801_TempRead$2495+2
  1925                           
  1926                           ;MCP9801_Temp_Sensor.c: 32: return (ADC.TempData * pow(2, -4)*0.0625);
  1927  001B16  C057  F010         	movff	_MCP9801_TempRead$2495,___ftmul@f2
  1928  001B1A  C058  F011         	movff	_MCP9801_TempRead$2495+1,___ftmul@f2+1
  1929  001B1E  C059  F012         	movff	_MCP9801_TempRead$2495+2,___ftmul@f2+2
  1930  001B22  C06C  F009         	movff	_ADC,___lwtoft@c
  1931  001B26  C06D  F00A         	movff	_ADC+1,___lwtoft@c+1
  1932  001B2A  ECC4  F011         	call	___lwtoft	;wreg free
  1933  001B2E  C009  F00D         	movff	?___lwtoft,___ftmul@f1
  1934  001B32  C00A  F00E         	movff	?___lwtoft+1,___ftmul@f1+1
  1935  001B36  C00B  F00F         	movff	?___lwtoft+2,___ftmul@f1+2
  1936  001B3A  EC2D  F00B         	call	___ftmul	;wreg free
  1937  001B3E  C00D  F05A         	movff	?___ftmul,_MCP9801_TempRead$2496
  1938  001B42  C00E  F05B         	movff	?___ftmul+1,_MCP9801_TempRead$2496+1
  1939  001B46  C00F  F05C         	movff	?___ftmul+2,_MCP9801_TempRead$2496+2
  1940                           
  1941                           ;MCP9801_Temp_Sensor.c: 32: return (ADC.TempData * pow(2, -4)*0.0625);
  1942  001B4A  0E00               	movlw	0
  1943  001B4C  6E10               	movwf	___ftmul@f2,c
  1944  001B4E  0E80               	movlw	128
  1945  001B50  6E11               	movwf	___ftmul@f2+1,c
  1946  001B52  0E3D               	movlw	61
  1947  001B54  6E12               	movwf	___ftmul@f2+2,c
  1948  001B56  C05A  F00D         	movff	_MCP9801_TempRead$2496,___ftmul@f1
  1949  001B5A  C05B  F00E         	movff	_MCP9801_TempRead$2496+1,___ftmul@f1+1
  1950  001B5E  C05C  F00F         	movff	_MCP9801_TempRead$2496+2,___ftmul@f1+2
  1951  001B62  EC2D  F00B         	call	___ftmul	;wreg free
  1952  001B66  C00D  F01C         	movff	?___ftmul,___fttol@f1
  1953  001B6A  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  1954  001B6E  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  1955  001B72  ECB3  F00A         	call	___fttol	;wreg free
  1956  001B76  501C               	movf	?___fttol,w,c
  1957  001B78  0012               	return	
  1958  001B7A                     __end_of_MCP9801_TempRead:
  1959                           	opt stack 0
  1960                           tblptru	equ	0xFF8
  1961                           intcon	equ	0xFF2
  1962                           intcon2	equ	0xFF1
  1963                           postinc0	equ	0xFEE
  1964                           wreg	equ	0xFE8
  1965                           postdec1	equ	0xFE5
  1966                           fsr1h	equ	0xFE2
  1967                           fsr1l	equ	0xFE1
  1968                           status	equ	0xFD8
  1969                           
  1970 ;; *************** function _pow *****************
  1971 ;; Defined at:
  1972 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\pow.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  x               3   69[COMRAM] unsigned char 
  1975 ;;  y               3   72[COMRAM] unsigned char 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  yi              4   82[COMRAM] unsigned long 
  1978 ;;  sign            1   81[COMRAM] unsigned char 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  3   69[COMRAM] unsigned char 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1988 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1989 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1991 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1992 ;;Total ram usage:       17 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:    4
  1995 ;; This function calls:
  1996 ;;		___ftge
  1997 ;;		___ftmul
  1998 ;;		___ftneg
  1999 ;;		___fttol
  2000 ;;		___lltoft
  2001 ;;		_exp
  2002 ;;		_log
  2003 ;; This function is called by:
  2004 ;;		_MCP9801_TempRead
  2005 ;;		_EEPROM_24AA512_pageWrite
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text13
  2010  0012D2                     __ptext13:
  2011                           	opt stack 0
  2012  0012D2                     _pow:
  2013                           	opt stack 25
  2014                           
  2015                           ;incstack = 0
  2016  0012D2  0E00               	movlw	0
  2017  0012D4  6E52               	movwf	pow@sign,c
  2018  0012D6  5046               	movf	pow@x,w,c
  2019  0012D8  1047               	iorwf	pow@x+1,w,c
  2020  0012DA  1048               	iorwf	pow@x+2,w,c
  2021  0012DC  A4D8               	btfss	status,2,c
  2022  0012DE  D01C               	goto	l991
  2023  0012E0  0E00               	movlw	0
  2024  0012E2  6E01               	movwf	___ftge@ff1,c
  2025  0012E4  0E00               	movlw	0
  2026  0012E6  6E02               	movwf	___ftge@ff1+1,c
  2027  0012E8  0E00               	movlw	0
  2028  0012EA  6E03               	movwf	___ftge@ff1+2,c
  2029  0012EC  C049  F004         	movff	pow@y,___ftge@ff2
  2030  0012F0  C04A  F005         	movff	pow@y+1,___ftge@ff2+1
  2031  0012F4  C04B  F006         	movff	pow@y+2,___ftge@ff2+2
  2032  0012F8  EC11  F00F         	call	___ftge	;wreg free
  2033  0012FC  A0D8               	btfss	status,0,c
  2034  0012FE  D005               	goto	l992
  2035  001300  0E00               	movlw	0
  2036  001302  0100               	movlb	0	; () banked
  2037  001304  6F6B               	movwf	(_errno+1)& (0+255),b
  2038  001306  0E21               	movlw	33
  2039  001308  6F6A               	movwf	_errno& (0+255),b
  2040  00130A                     l992:
  2041  00130A  0E00               	movlw	0
  2042  00130C  6E46               	movwf	?_pow,c
  2043  00130E  0E00               	movlw	0
  2044  001310  6E47               	movwf	?_pow+1,c
  2045  001312  0E00               	movlw	0
  2046  001314  6E48               	movwf	?_pow+2,c
  2047  001316  0012               	return	
  2048  001318                     l991:
  2049  001318  5049               	movf	pow@y,w,c
  2050  00131A  104A               	iorwf	pow@y+1,w,c
  2051  00131C  104B               	iorwf	pow@y+2,w,c
  2052  00131E  A4D8               	btfss	status,2,c
  2053  001320  D007               	goto	l994
  2054  001322  0E00               	movlw	0
  2055  001324  6E46               	movwf	?_pow,c
  2056  001326  0E80               	movlw	128
  2057  001328  6E47               	movwf	?_pow+1,c
  2058  00132A  0E3F               	movlw	63
  2059  00132C  6E48               	movwf	?_pow+2,c
  2060  00132E  0012               	return	
  2061  001330                     l994:
  2062  001330  AE48               	btfss	pow@x+2,7,c
  2063  001332  D041               	goto	l995
  2064  001334  C049  F01C         	movff	pow@y,___fttol@f1
  2065  001338  C04A  F01D         	movff	pow@y+1,___fttol@f1+1
  2066  00133C  C04B  F01E         	movff	pow@y+2,___fttol@f1+2
  2067  001340  ECB3  F00A         	call	___fttol	;wreg free
  2068  001344  C01C  F053         	movff	?___fttol,pow@yi
  2069  001348  C01D  F054         	movff	?___fttol+1,pow@yi+1
  2070  00134C  C01E  F055         	movff	?___fttol+2,pow@yi+2
  2071  001350  C01F  F056         	movff	?___fttol+3,pow@yi+3
  2072  001354  C053  F009         	movff	pow@yi,___lltoft@c
  2073  001358  C054  F00A         	movff	pow@yi+1,___lltoft@c+1
  2074  00135C  C055  F00B         	movff	pow@yi+2,___lltoft@c+2
  2075  001360  C056  F00C         	movff	pow@yi+3,___lltoft@c+3
  2076  001364  EC15  F010         	call	___lltoft	;wreg free
  2077  001368  5049               	movf	pow@y,w,c
  2078  00136A  1809               	xorwf	?___lltoft,w,c
  2079  00136C  E107               	bnz	u2680
  2080  00136E  504A               	movf	pow@y+1,w,c
  2081  001370  180A               	xorwf	?___lltoft+1,w,c
  2082  001372  E104               	bnz	u2680
  2083  001374  504B               	movf	pow@y+2,w,c
  2084  001376  180B               	xorwf	?___lltoft+2,w,c
  2085  001378  B4D8               	btfsc	status,2,c
  2086  00137A  D00C               	goto	l996
  2087  00137C                     u2680:
  2088  00137C  0E00               	movlw	0
  2089  00137E  0100               	movlb	0	; () banked
  2090  001380  6F6B               	movwf	(_errno+1)& (0+255),b
  2091  001382  0E21               	movlw	33
  2092  001384  6F6A               	movwf	_errno& (0+255),b
  2093  001386  0E00               	movlw	0
  2094  001388  6E46               	movwf	?_pow,c
  2095  00138A  0E00               	movlw	0
  2096  00138C  6E47               	movwf	?_pow+1,c
  2097  00138E  0E00               	movlw	0
  2098  001390  6E48               	movwf	?_pow+2,c
  2099                           
  2100                           ; BSR set to: 0
  2101  001392  0012               	return	
  2102  001394                     l996:
  2103                           
  2104                           ; BSR set to: 0
  2105  001394  5053               	movf	pow@yi,w,c
  2106  001396  0B01               	andlw	1
  2107  001398  6E52               	movwf	pow@sign,c
  2108  00139A  C046  F001         	movff	pow@x,___ftneg@f1
  2109  00139E  C047  F002         	movff	pow@x+1,___ftneg@f1+1
  2110  0013A2  C048  F003         	movff	pow@x+2,___ftneg@f1+2
  2111  0013A6  ECB2  F011         	call	___ftneg	;wreg free
  2112  0013AA  C001  F046         	movff	?___ftneg,pow@x
  2113  0013AE  C002  F047         	movff	?___ftneg+1,pow@x+1
  2114  0013B2  C003  F048         	movff	?___ftneg+2,pow@x+2
  2115  0013B6                     l995:
  2116  0013B6  C046  F034         	movff	pow@x,log@x
  2117  0013BA  C047  F035         	movff	pow@x+1,log@x+1
  2118  0013BE  C048  F036         	movff	pow@x+2,log@x+2
  2119  0013C2  EC24  F00A         	call	_log	;wreg free
  2120  0013C6  C034  F04C         	movff	?_log,_pow$2499
  2121  0013CA  C035  F04D         	movff	?_log+1,_pow$2499+1
  2122  0013CE  C036  F04E         	movff	?_log+2,_pow$2499+2
  2123  0013D2  C04C  F00D         	movff	_pow$2499,___ftmul@f1
  2124  0013D6  C04D  F00E         	movff	_pow$2499+1,___ftmul@f1+1
  2125  0013DA  C04E  F00F         	movff	_pow$2499+2,___ftmul@f1+2
  2126  0013DE  C049  F010         	movff	pow@y,___ftmul@f2
  2127  0013E2  C04A  F011         	movff	pow@y+1,___ftmul@f2+1
  2128  0013E6  C04B  F012         	movff	pow@y+2,___ftmul@f2+2
  2129  0013EA  EC2D  F00B         	call	___ftmul	;wreg free
  2130  0013EE  C00D  F04F         	movff	?___ftmul,_pow$2500
  2131  0013F2  C00E  F050         	movff	?___ftmul+1,_pow$2500+1
  2132  0013F6  C00F  F051         	movff	?___ftmul+2,_pow$2500+2
  2133  0013FA  C04F  F03D         	movff	_pow$2500,exp@x
  2134  0013FE  C050  F03E         	movff	_pow$2500+1,exp@x+1
  2135  001402  C051  F03F         	movff	_pow$2500+2,exp@x+2
  2136  001406  EC9F  F007         	call	_exp	;wreg free
  2137  00140A  C03D  F046         	movff	?_exp,pow@x
  2138  00140E  C03E  F047         	movff	?_exp+1,pow@x+1
  2139  001412  C03F  F048         	movff	?_exp+2,pow@x+2
  2140  001416  5052               	movf	pow@sign,w,c
  2141  001418  B4D8               	btfsc	status,2,c
  2142  00141A  D00F               	goto	l997
  2143  00141C  C046  F001         	movff	pow@x,___ftneg@f1
  2144  001420  C047  F002         	movff	pow@x+1,___ftneg@f1+1
  2145  001424  C048  F003         	movff	pow@x+2,___ftneg@f1+2
  2146  001428  ECB2  F011         	call	___ftneg	;wreg free
  2147  00142C  C001  F046         	movff	?___ftneg,?_pow
  2148  001430  C002  F047         	movff	?___ftneg+1,?_pow+1
  2149  001434  C003  F048         	movff	?___ftneg+2,?_pow+2
  2150  001438  0012               	return	
  2151  00143A                     l997:
  2152  00143A  C046  F046         	movff	pow@x,?_pow
  2153  00143E  C047  F047         	movff	pow@x+1,?_pow+1
  2154  001442  C048  F048         	movff	pow@x+2,?_pow+2
  2155  001446  0012               	return		;funcret
  2156  001448                     __end_of_pow:
  2157                           	opt stack 0
  2158                           tblptru	equ	0xFF8
  2159                           intcon	equ	0xFF2
  2160                           intcon2	equ	0xFF1
  2161                           postinc0	equ	0xFEE
  2162                           wreg	equ	0xFE8
  2163                           postdec1	equ	0xFE5
  2164                           fsr1h	equ	0xFE2
  2165                           fsr1l	equ	0xFE1
  2166                           status	equ	0xFD8
  2167                           
  2168 ;; *************** function _log *****************
  2169 ;; Defined at:
  2170 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  x               3   51[COMRAM] unsigned char 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  exponent        2   54[COMRAM] int 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  3   51[COMRAM] int 
  2177 ;; Registers used:
  2178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2184 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2185 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2187 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2188 ;;Total ram usage:        5 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:    3
  2191 ;; This function calls:
  2192 ;;		___awtoft
  2193 ;;		___ftadd
  2194 ;;		___ftmul
  2195 ;;		_eval_poly
  2196 ;;		_frexp
  2197 ;; This function is called by:
  2198 ;;		_pow
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text14
  2203  001448                     __ptext14:
  2204                           	opt stack 0
  2205  001448                     _log:
  2206                           	opt stack 25
  2207                           
  2208                           ;incstack = 0
  2209  001448  AE36               	btfss	log@x+2,7,c
  2210  00144A  D00C               	goto	l1193
  2211  00144C  0E00               	movlw	0
  2212  00144E  0100               	movlb	0	; () banked
  2213  001450  6F6B               	movwf	(_errno+1)& (0+255),b
  2214  001452  0E21               	movlw	33
  2215  001454  6F6A               	movwf	_errno& (0+255),b
  2216  001456  0E00               	movlw	0
  2217  001458  6E34               	movwf	?_log,c
  2218  00145A  0E00               	movlw	0
  2219  00145C  6E35               	movwf	?_log+1,c
  2220  00145E  0E00               	movlw	0
  2221  001460  6E36               	movwf	?_log+2,c
  2222                           
  2223                           ; BSR set to: 0
  2224  001462  0012               	return	
  2225  001464                     l1193:
  2226                           
  2227                           ; BSR set to: 0
  2228  001464  5034               	movf	log@x,w,c
  2229  001466  1035               	iorwf	log@x+1,w,c
  2230  001468  1036               	iorwf	log@x+2,w,c
  2231  00146A  A4D8               	btfss	status,2,c
  2232  00146C  D00C               	goto	l1195
  2233  00146E  0E00               	movlw	0
  2234  001470  0100               	movlb	0	; () banked
  2235  001472  6F6B               	movwf	(_errno+1)& (0+255),b
  2236  001474  0E22               	movlw	34
  2237  001476  6F6A               	movwf	_errno& (0+255),b
  2238  001478  0E00               	movlw	0
  2239  00147A  6E34               	movwf	?_log,c
  2240  00147C  0E00               	movlw	0
  2241  00147E  6E35               	movwf	?_log+1,c
  2242  001480  0E00               	movlw	0
  2243  001482  6E36               	movwf	?_log+2,c
  2244                           
  2245                           ; BSR set to: 0
  2246  001484  0012               	return	
  2247  001486                     l1195:
  2248                           
  2249                           ; BSR set to: 0
  2250  001486  0E00               	movlw	0
  2251  001488  6E10               	movwf	___ftmul@f2,c
  2252  00148A  0E00               	movlw	0
  2253  00148C  6E11               	movwf	___ftmul@f2+1,c
  2254  00148E  0E40               	movlw	64
  2255  001490  6E12               	movwf	___ftmul@f2+2,c
  2256  001492  0E37               	movlw	low log@exponent
  2257  001494  6E04               	movwf	frexp@eptr,c
  2258  001496  0E00               	movlw	high log@exponent
  2259  001498  6E05               	movwf	frexp@eptr+1,c
  2260  00149A  C034  F001         	movff	log@x,frexp@value
  2261  00149E  C035  F002         	movff	log@x+1,frexp@value+1
  2262  0014A2  C036  F003         	movff	log@x+2,frexp@value+2
  2263  0014A6  ECC9  F00E         	call	_frexp	;wreg free
  2264  0014AA  C001  F00D         	movff	?_frexp,___ftmul@f1
  2265  0014AE  C002  F00E         	movff	?_frexp+1,___ftmul@f1+1
  2266  0014B2  C003  F00F         	movff	?_frexp+2,___ftmul@f1+2
  2267  0014B6  EC2D  F00B         	call	___ftmul	;wreg free
  2268  0014BA  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  2269  0014BE  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  2270  0014C2  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  2271  0014C6  0E00               	movlw	0
  2272  0014C8  6E1F               	movwf	___ftadd@f2,c
  2273  0014CA  0E80               	movlw	128
  2274  0014CC  6E20               	movwf	___ftadd@f2+1,c
  2275  0014CE  0EBF               	movlw	191
  2276  0014D0  6E21               	movwf	___ftadd@f2+2,c
  2277  0014D2  EC93  F008         	call	___ftadd	;wreg free
  2278  0014D6  C01C  F034         	movff	?___ftadd,log@x
  2279  0014DA  C01D  F035         	movff	?___ftadd+1,log@x+1
  2280  0014DE  C01E  F036         	movff	?___ftadd+2,log@x+2
  2281  0014E2  0637               	decf	log@exponent,f,c
  2282  0014E4  A0D8               	btfss	status,0,c
  2283  0014E6  0638               	decf	log@exponent+1,f,c
  2284  0014E8  C034  F028         	movff	log@x,eval_poly@x
  2285  0014EC  C035  F029         	movff	log@x+1,eval_poly@x+1
  2286  0014F0  C036  F02A         	movff	log@x+2,eval_poly@x+2
  2287  0014F4  0E1F               	movlw	low log@coeff
  2288  0014F6  6E2B               	movwf	eval_poly@d,c
  2289  0014F8  0E0F               	movlw	high log@coeff
  2290  0014FA  6E2C               	movwf	eval_poly@d+1,c
  2291  0014FC  0E00               	movlw	0
  2292  0014FE  6E2E               	movwf	eval_poly@n+1,c
  2293  001500  0E08               	movlw	8
  2294  001502  6E2D               	movwf	eval_poly@n,c
  2295  001504  EC89  F00C         	call	_eval_poly	;wreg free
  2296  001508  C028  F034         	movff	?_eval_poly,log@x
  2297  00150C  C029  F035         	movff	?_eval_poly+1,log@x+1
  2298  001510  C02A  F036         	movff	?_eval_poly+2,log@x+2
  2299  001514  0E72               	movlw	114
  2300  001516  6E10               	movwf	___ftmul@f2,c
  2301  001518  0E31               	movlw	49
  2302  00151A  6E11               	movwf	___ftmul@f2+1,c
  2303  00151C  0E3F               	movlw	63
  2304  00151E  6E12               	movwf	___ftmul@f2+2,c
  2305  001520  C037  F009         	movff	log@exponent,___awtoft@c
  2306  001524  C038  F00A         	movff	log@exponent+1,___awtoft@c+1
  2307  001528  EC58  F011         	call	___awtoft	;wreg free
  2308  00152C  C009  F00D         	movff	?___awtoft,___ftmul@f1
  2309  001530  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  2310  001534  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  2311  001538  EC2D  F00B         	call	___ftmul	;wreg free
  2312  00153C  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  2313  001540  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  2314  001544  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  2315  001548  C034  F01F         	movff	log@x,___ftadd@f2
  2316  00154C  C035  F020         	movff	log@x+1,___ftadd@f2+1
  2317  001550  C036  F021         	movff	log@x+2,___ftadd@f2+2
  2318  001554  EC93  F008         	call	___ftadd	;wreg free
  2319  001558  C01C  F034         	movff	?___ftadd,?_log
  2320  00155C  C01D  F035         	movff	?___ftadd+1,?_log+1
  2321  001560  C01E  F036         	movff	?___ftadd+2,?_log+2
  2322  001564  0012               	return	
  2323  001566                     __end_of_log:
  2324                           	opt stack 0
  2325                           tblptru	equ	0xFF8
  2326                           intcon	equ	0xFF2
  2327                           intcon2	equ	0xFF1
  2328                           postinc0	equ	0xFEE
  2329                           wreg	equ	0xFE8
  2330                           postdec1	equ	0xFE5
  2331                           fsr1h	equ	0xFE2
  2332                           fsr1l	equ	0xFE1
  2333                           status	equ	0xFD8
  2334                           
  2335 ;; *************** function _exp *****************
  2336 ;; Defined at:
  2337 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\exp.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  x               3   60[COMRAM] int 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  exponent        2   66[COMRAM] int 
  2342 ;;  sign            1   68[COMRAM] unsigned char 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  3   60[COMRAM] unsigned char 
  2345 ;; Registers used:
  2346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2352 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2353 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2355 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2356 ;;Total ram usage:        9 bytes
  2357 ;; Hardware stack levels used:    1
  2358 ;; Hardware stack levels required when called:    3
  2359 ;; This function calls:
  2360 ;;		___awtoft
  2361 ;;		___ftdiv
  2362 ;;		___ftge
  2363 ;;		___ftmul
  2364 ;;		___ftneg
  2365 ;;		___ftsub
  2366 ;;		___fttol
  2367 ;;		_eval_poly
  2368 ;;		_floor
  2369 ;;		_ldexp
  2370 ;; This function is called by:
  2371 ;;		_pow
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text15
  2376  000F3E                     __ptext15:
  2377                           	opt stack 0
  2378  000F3E                     _exp:
  2379                           	opt stack 25
  2380                           
  2381                           ;incstack = 0
  2382  000F3E  503D               	movf	exp@x,w,c
  2383  000F40  103E               	iorwf	exp@x+1,w,c
  2384  000F42  103F               	iorwf	exp@x+2,w,c
  2385  000F44  A4D8               	btfss	status,2,c
  2386  000F46  D007               	goto	l1151
  2387  000F48  0E00               	movlw	0
  2388  000F4A  6E3D               	movwf	?_exp,c
  2389  000F4C  0E80               	movlw	128
  2390  000F4E  6E3E               	movwf	?_exp+1,c
  2391  000F50  0E3F               	movlw	63
  2392  000F52  6E3F               	movwf	?_exp+2,c
  2393  000F54  0012               	return	
  2394  000F56                     l1151:
  2395  000F56  0E72               	movlw	114
  2396  000F58  6E01               	movwf	___ftge@ff1,c
  2397  000F5A  0E31               	movlw	49
  2398  000F5C  6E02               	movwf	___ftge@ff1+1,c
  2399  000F5E  0E44               	movlw	68
  2400  000F60  6E03               	movwf	___ftge@ff1+2,c
  2401  000F62  C03D  F004         	movff	exp@x,___ftge@ff2
  2402  000F66  C03E  F005         	movff	exp@x+1,___ftge@ff2+1
  2403  000F6A  C03F  F006         	movff	exp@x+2,___ftge@ff2+2
  2404  000F6E  EC11  F00F         	call	___ftge	;wreg free
  2405  000F72  B0D8               	btfsc	status,0,c
  2406  000F74  D00C               	goto	l1153
  2407  000F76  0E00               	movlw	0
  2408  000F78  0100               	movlb	0	; () banked
  2409  000F7A  6F6B               	movwf	(_errno+1)& (0+255),b
  2410  000F7C  0E22               	movlw	34
  2411  000F7E  6F6A               	movwf	_errno& (0+255),b
  2412  000F80  0EFF               	movlw	255
  2413  000F82  6E3D               	movwf	?_exp,c
  2414  000F84  0E7F               	movlw	127
  2415  000F86  6E3E               	movwf	?_exp+1,c
  2416  000F88  0E7F               	movlw	127
  2417  000F8A  6E3F               	movwf	?_exp+2,c
  2418                           
  2419                           ; BSR set to: 0
  2420  000F8C  0012               	return	
  2421  000F8E                     l1153:
  2422                           
  2423                           ; BSR set to: 0
  2424  000F8E  C03D  F001         	movff	exp@x,___ftge@ff1
  2425  000F92  C03E  F002         	movff	exp@x+1,___ftge@ff1+1
  2426  000F96  C03F  F003         	movff	exp@x+2,___ftge@ff1+2
  2427  000F9A  0E49               	movlw	73
  2428  000F9C  6E04               	movwf	___ftge@ff2,c
  2429  000F9E  0E3A               	movlw	58
  2430  000FA0  6E05               	movwf	___ftge@ff2+1,c
  2431  000FA2  0EC4               	movlw	196
  2432  000FA4  6E06               	movwf	___ftge@ff2+2,c
  2433  000FA6  EC11  F00F         	call	___ftge	;wreg free
  2434  000FAA  B0D8               	btfsc	status,0,c
  2435  000FAC  D00C               	goto	l1154
  2436  000FAE  0E00               	movlw	0
  2437  000FB0  0100               	movlb	0	; () banked
  2438  000FB2  6F6B               	movwf	(_errno+1)& (0+255),b
  2439  000FB4  0E22               	movlw	34
  2440  000FB6  6F6A               	movwf	_errno& (0+255),b
  2441  000FB8  0E00               	movlw	0
  2442  000FBA  6E3D               	movwf	?_exp,c
  2443  000FBC  0E00               	movlw	0
  2444  000FBE  6E3E               	movwf	?_exp+1,c
  2445  000FC0  0E00               	movlw	0
  2446  000FC2  6E3F               	movwf	?_exp+2,c
  2447                           
  2448                           ; BSR set to: 0
  2449  000FC4  0012               	return	
  2450  000FC6                     l1154:
  2451                           
  2452                           ; BSR set to: 0
  2453  000FC6  AE3F               	btfss	exp@x+2,7,c
  2454  000FC8  D002               	goto	u2460
  2455  000FCA  0E01               	movlw	1
  2456  000FCC  D001               	goto	u2470
  2457  000FCE                     u2460:
  2458  000FCE  0E00               	movlw	0
  2459  000FD0                     u2470:
  2460  000FD0  6E45               	movwf	exp@sign,c
  2461  000FD2  5045               	movf	exp@sign,w,c
  2462  000FD4  B4D8               	btfsc	status,2,c
  2463  000FD6  D00E               	goto	l1155
  2464  000FD8  C03D  F001         	movff	exp@x,___ftneg@f1
  2465  000FDC  C03E  F002         	movff	exp@x+1,___ftneg@f1+1
  2466  000FE0  C03F  F003         	movff	exp@x+2,___ftneg@f1+2
  2467  000FE4  ECB2  F011         	call	___ftneg	;wreg free
  2468  000FE8  C001  F03D         	movff	?___ftneg,exp@x
  2469  000FEC  C002  F03E         	movff	?___ftneg+1,exp@x+1
  2470  000FF0  C003  F03F         	movff	?___ftneg+2,exp@x+2
  2471  000FF4                     l1155:
  2472  000FF4  C03D  F00D         	movff	exp@x,___ftmul@f1
  2473  000FF8  C03E  F00E         	movff	exp@x+1,___ftmul@f1+1
  2474  000FFC  C03F  F00F         	movff	exp@x+2,___ftmul@f1+2
  2475  001000  0EAA               	movlw	170
  2476  001002  6E10               	movwf	___ftmul@f2,c
  2477  001004  0EB8               	movlw	184
  2478  001006  6E11               	movwf	___ftmul@f2+1,c
  2479  001008  0E3F               	movlw	63
  2480  00100A  6E12               	movwf	___ftmul@f2+2,c
  2481  00100C  EC2D  F00B         	call	___ftmul	;wreg free
  2482  001010  C00D  F03D         	movff	?___ftmul,exp@x
  2483  001014  C00E  F03E         	movff	?___ftmul+1,exp@x+1
  2484  001018  C00F  F03F         	movff	?___ftmul+2,exp@x+2
  2485  00101C  C03D  F035         	movff	exp@x,floor@x
  2486  001020  C03E  F036         	movff	exp@x+1,floor@x+1
  2487  001024  C03F  F037         	movff	exp@x+2,floor@x+2
  2488  001028  EC1A  F00C         	call	_floor	;wreg free
  2489  00102C  C035  F040         	movff	?_floor,_exp$2501
  2490  001030  C036  F041         	movff	?_floor+1,_exp$2501+1
  2491  001034  C037  F042         	movff	?_floor+2,_exp$2501+2
  2492  001038  C040  F01C         	movff	_exp$2501,___fttol@f1
  2493  00103C  C041  F01D         	movff	_exp$2501+1,___fttol@f1+1
  2494  001040  C042  F01E         	movff	_exp$2501+2,___fttol@f1+2
  2495  001044  ECB3  F00A         	call	___fttol	;wreg free
  2496  001048  C01C  F043         	movff	?___fttol,exp@exponent
  2497  00104C  C01D  F044         	movff	?___fttol+1,exp@exponent+1
  2498  001050  C03D  F028         	movff	exp@x,___ftsub@f1
  2499  001054  C03E  F029         	movff	exp@x+1,___ftsub@f1+1
  2500  001058  C03F  F02A         	movff	exp@x+2,___ftsub@f1+2
  2501  00105C  C043  F009         	movff	exp@exponent,___awtoft@c
  2502  001060  C044  F00A         	movff	exp@exponent+1,___awtoft@c+1
  2503  001064  EC58  F011         	call	___awtoft	;wreg free
  2504  001068  C009  F02B         	movff	?___awtoft,___ftsub@f2
  2505  00106C  C00A  F02C         	movff	?___awtoft+1,___ftsub@f2+1
  2506  001070  C00B  F02D         	movff	?___awtoft+2,___ftsub@f2+2
  2507  001074  ECFA  F010         	call	___ftsub	;wreg free
  2508  001078  C028  F03D         	movff	?___ftsub,exp@x
  2509  00107C  C029  F03E         	movff	?___ftsub+1,exp@x+1
  2510  001080  C02A  F03F         	movff	?___ftsub+2,exp@x+2
  2511  001084  C03D  F028         	movff	exp@x,eval_poly@x
  2512  001088  C03E  F029         	movff	exp@x+1,eval_poly@x+1
  2513  00108C  C03F  F02A         	movff	exp@x+2,eval_poly@x+2
  2514  001090  0E01               	movlw	low exp@coeff
  2515  001092  6E2B               	movwf	eval_poly@d,c
  2516  001094  0E0F               	movlw	high exp@coeff
  2517  001096  6E2C               	movwf	eval_poly@d+1,c
  2518  001098  0E00               	movlw	0
  2519  00109A  6E2E               	movwf	eval_poly@n+1,c
  2520  00109C  0E09               	movlw	9
  2521  00109E  6E2D               	movwf	eval_poly@n,c
  2522  0010A0  EC89  F00C         	call	_eval_poly	;wreg free
  2523  0010A4  C028  F034         	movff	?_eval_poly,ldexp@value
  2524  0010A8  C029  F035         	movff	?_eval_poly+1,ldexp@value+1
  2525  0010AC  C02A  F036         	movff	?_eval_poly+2,ldexp@value+2
  2526  0010B0  C043  F037         	movff	exp@exponent,ldexp@newexp
  2527  0010B4  C044  F038         	movff	exp@exponent+1,ldexp@newexp+1
  2528  0010B8  ECBD  F00D         	call	_ldexp	;wreg free
  2529  0010BC  C034  F03D         	movff	?_ldexp,exp@x
  2530  0010C0  C035  F03E         	movff	?_ldexp+1,exp@x+1
  2531  0010C4  C036  F03F         	movff	?_ldexp+2,exp@x+2
  2532  0010C8  5045               	movf	exp@sign,w,c
  2533  0010CA  B4D8               	btfsc	status,2,c
  2534  0010CC  D025               	goto	l1156
  2535  0010CE  283D               	incf	exp@x,w,c
  2536  0010D0  E10E               	bnz	l3012
  2537  0010D2  0E7F               	movlw	127
  2538  0010D4  183E               	xorwf	exp@x+1,w,c
  2539  0010D6  E10B               	bnz	l3012
  2540  0010D8  0E7F               	movlw	127
  2541  0010DA  183F               	xorwf	exp@x+2,w,c
  2542  0010DC  A4D8               	btfss	status,2,c
  2543  0010DE  D007               	goto	l1157
  2544  0010E0  0E00               	movlw	0
  2545  0010E2  6E3D               	movwf	?_exp,c
  2546  0010E4  0E00               	movlw	0
  2547  0010E6  6E3E               	movwf	?_exp+1,c
  2548  0010E8  0E00               	movlw	0
  2549  0010EA  6E3F               	movwf	?_exp+2,c
  2550  0010EC  0012               	return	
  2551  0010EE                     l1157:
  2552  0010EE                     l3012:
  2553  0010EE  0E00               	movlw	0
  2554  0010F0  6E09               	movwf	___ftdiv@f1,c
  2555  0010F2  0E80               	movlw	128
  2556  0010F4  6E0A               	movwf	___ftdiv@f1+1,c
  2557  0010F6  0E3F               	movlw	63
  2558  0010F8  6E0B               	movwf	___ftdiv@f1+2,c
  2559  0010FA  C03D  F00C         	movff	exp@x,___ftdiv@f2
  2560  0010FE  C03E  F00D         	movff	exp@x+1,___ftdiv@f2+1
  2561  001102  C03F  F00E         	movff	exp@x+2,___ftdiv@f2+2
  2562  001106  ECA7  F00B         	call	___ftdiv	;wreg free
  2563  00110A  C009  F03D         	movff	?___ftdiv,?_exp
  2564  00110E  C00A  F03E         	movff	?___ftdiv+1,?_exp+1
  2565  001112  C00B  F03F         	movff	?___ftdiv+2,?_exp+2
  2566  001116  0012               	return	
  2567  001118                     l1156:
  2568  001118  C03D  F03D         	movff	exp@x,?_exp
  2569  00111C  C03E  F03E         	movff	exp@x+1,?_exp+1
  2570  001120  C03F  F03F         	movff	exp@x+2,?_exp+2
  2571  001124  0012               	return		;funcret
  2572  001126                     __end_of_exp:
  2573                           	opt stack 0
  2574                           tblptru	equ	0xFF8
  2575                           intcon	equ	0xFF2
  2576                           intcon2	equ	0xFF1
  2577                           postinc0	equ	0xFEE
  2578                           wreg	equ	0xFE8
  2579                           postdec1	equ	0xFE5
  2580                           fsr1h	equ	0xFE2
  2581                           fsr1l	equ	0xFE1
  2582                           status	equ	0xFD8
  2583                           
  2584 ;; *************** function _ldexp *****************
  2585 ;; Defined at:
  2586 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  value           3   51[COMRAM] unsigned char 
  2589 ;;  newexp          2   54[COMRAM] int 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  3   51[COMRAM] int 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2601 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2603 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2604 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2605 ;;Total ram usage:        7 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_exp
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           	psect	text16
  2615  001B7A                     __ptext16:
  2616                           	opt stack 0
  2617  001B7A                     _ldexp:
  2618                           	opt stack 27
  2619                           
  2620                           ;incstack = 0
  2621  001B7A  5034               	movf	ldexp@value,w,c
  2622  001B7C  1035               	iorwf	ldexp@value+1,w,c
  2623  001B7E  1036               	iorwf	ldexp@value+2,w,c
  2624  001B80  A4D8               	btfss	status,2,c
  2625  001B82  D007               	goto	l1175
  2626  001B84  0E00               	movlw	0
  2627  001B86  6E34               	movwf	?_ldexp,c
  2628  001B88  0E00               	movlw	0
  2629  001B8A  6E35               	movwf	?_ldexp+1,c
  2630  001B8C  0E00               	movlw	0
  2631  001B8E  6E36               	movwf	?_ldexp+2,c
  2632  001B90  0012               	return	
  2633  001B92                     l1175:
  2634  001B92  5036               	movf	ldexp@value+2,w,c
  2635  001B94  0B7F               	andlw	127
  2636  001B96  6E39               	movwf	??_ldexp& (0+255),c
  2637  001B98  6A3A               	clrf	(??_ldexp+1)& (0+255),c
  2638  001B9A  90D8               	bcf	status,0,c
  2639  001B9C  3639               	rlcf	??_ldexp,f,c
  2640  001B9E  363A               	rlcf	??_ldexp+1,f,c
  2641  001BA0  5039               	movf	??_ldexp,w,c
  2642  001BA2  2637               	addwf	ldexp@newexp,f,c
  2643  001BA4  503A               	movf	??_ldexp+1,w,c
  2644  001BA6  2238               	addwfc	ldexp@newexp+1,f,c
  2645  001BA8  AE35               	btfss	ldexp@value+1,7,c
  2646  001BAA  D003               	goto	u2260
  2647  001BAC  6A39               	clrf	??_ldexp& (0+255),c
  2648  001BAE  2A39               	incf	??_ldexp& (0+255),f,c
  2649  001BB0  D001               	goto	u2268
  2650  001BB2                     u2260:
  2651  001BB2  6A39               	clrf	??_ldexp& (0+255),c
  2652  001BB4                     u2268:
  2653  001BB4  5039               	movf	??_ldexp,w,c
  2654  001BB6  2637               	addwf	ldexp@newexp,f,c
  2655  001BB8  0E00               	movlw	0
  2656  001BBA  2238               	addwfc	ldexp@newexp+1,f,c
  2657  001BBC  AE38               	btfss	ldexp@newexp+1,7,c
  2658  001BBE  D00C               	goto	l1177
  2659  001BC0  0E00               	movlw	0
  2660  001BC2  0100               	movlb	0	; () banked
  2661  001BC4  6F6B               	movwf	(_errno+1)& (0+255),b
  2662  001BC6  0E22               	movlw	34
  2663  001BC8  6F6A               	movwf	_errno& (0+255),b
  2664  001BCA  0E00               	movlw	0
  2665  001BCC  6E34               	movwf	?_ldexp,c
  2666  001BCE  0E00               	movlw	0
  2667  001BD0  6E35               	movwf	?_ldexp+1,c
  2668  001BD2  0E00               	movlw	0
  2669  001BD4                     L1:
  2670  001BD4  6E36               	movwf	?_ldexp+2,c
  2671                           
  2672                           ; BSR set to: 0
  2673  001BD6  0012               	return	
  2674  001BD8                     l1177:
  2675                           
  2676                           ; BSR set to: 0
  2677  001BD8  BE38               	btfsc	ldexp@newexp+1,7,c
  2678  001BDA  D016               	goto	l1179
  2679  001BDC  0438               	decf	ldexp@newexp+1,w,c
  2680  001BDE  A0D8               	btfss	status,0,c
  2681  001BE0  D013               	goto	l1179
  2682  001BE2  0E00               	movlw	0
  2683  001BE4  0100               	movlb	0	; () banked
  2684  001BE6  6F6B               	movwf	(_errno+1)& (0+255),b
  2685  001BE8  0E22               	movlw	34
  2686  001BEA  6F6A               	movwf	_errno& (0+255),b
  2687                           
  2688                           ; BSR set to: 0
  2689  001BEC  AE36               	btfss	ldexp@value+2,7,c
  2690  001BEE  D006               	goto	l1180
  2691                           
  2692                           ; BSR set to: 0
  2693  001BF0  0EFF               	movlw	255
  2694  001BF2  6E34               	movwf	?_ldexp,c
  2695  001BF4  0E7F               	movlw	127
  2696  001BF6  6E35               	movwf	?_ldexp+1,c
  2697  001BF8  0EFF               	movlw	255
  2698  001BFA  D7EC               	goto	L1
  2699  001BFC                     l1180:
  2700                           
  2701                           ; BSR set to: 0
  2702                           
  2703                           ; BSR set to: 0
  2704  001BFC  0EFF               	movlw	255
  2705  001BFE  6E34               	movwf	?_ldexp,c
  2706  001C00  0E7F               	movlw	127
  2707  001C02  6E35               	movwf	?_ldexp+1,c
  2708  001C04  0E7F               	movlw	127
  2709  001C06  D7E6               	goto	L1
  2710  001C08                     l1179:
  2711                           
  2712                           ; BSR set to: 0
  2713  001C08  3438               	rlcf	ldexp@newexp+1,w,c
  2714  001C0A  3038               	rrcf	ldexp@newexp+1,w,c
  2715  001C0C  6E3A               	movwf	(??_ldexp+1)& (0+255),c
  2716  001C0E  3037               	rrcf	ldexp@newexp,w,c
  2717  001C10  6E39               	movwf	??_ldexp& (0+255),c
  2718  001C12  5036               	movf	ldexp@value+2,w,c
  2719  001C14  1839               	xorwf	??_ldexp,w,c
  2720  001C16  0B80               	andlw	-128
  2721  001C18  1839               	xorwf	??_ldexp,w,c
  2722  001C1A  6E36               	movwf	ldexp@value+2,c
  2723  001C1C  C037  F039         	movff	ldexp@newexp,??_ldexp
  2724  001C20  0E01               	movlw	1
  2725  001C22  1639               	andwf	??_ldexp,f,c
  2726  001C24  3239               	rrcf	??_ldexp,f,c
  2727  001C26  3239               	rrcf	??_ldexp,f,c
  2728  001C28  5035               	movf	ldexp@value+1,w,c
  2729  001C2A  1839               	xorwf	??_ldexp,w,c
  2730  001C2C  0B7F               	andlw	-129
  2731  001C2E  1839               	xorwf	??_ldexp,w,c
  2732  001C30  6E35               	movwf	ldexp@value+1,c
  2733  001C32  C034  F034         	movff	ldexp@value,?_ldexp
  2734  001C36  C035  F035         	movff	ldexp@value+1,?_ldexp+1
  2735  001C3A  C036  F036         	movff	ldexp@value+2,?_ldexp+2
  2736  001C3E  0012               	return	
  2737  001C40                     __end_of_ldexp:
  2738                           	opt stack 0
  2739                           tblptru	equ	0xFF8
  2740                           intcon	equ	0xFF2
  2741                           intcon2	equ	0xFF1
  2742                           postinc0	equ	0xFEE
  2743                           wreg	equ	0xFE8
  2744                           postdec1	equ	0xFE5
  2745                           fsr1h	equ	0xFE2
  2746                           fsr1l	equ	0xFE1
  2747                           status	equ	0xFD8
  2748                           
  2749 ;; *************** function _floor *****************
  2750 ;; Defined at:
  2751 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  x               3   52[COMRAM] int 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  i               3   55[COMRAM] int 
  2756 ;;  expon           2   58[COMRAM] int 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  3   52[COMRAM] int 
  2759 ;; Registers used:
  2760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2766 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2767 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2769 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2770 ;;Total ram usage:        8 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    2
  2773 ;; This function calls:
  2774 ;;		___altoft
  2775 ;;		___ftadd
  2776 ;;		___ftge
  2777 ;;		___fttol
  2778 ;;		_frexp
  2779 ;; This function is called by:
  2780 ;;		_exp
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           	psect	text17
  2785  001834                     __ptext17:
  2786                           	opt stack 0
  2787  001834                     _floor:
  2788                           	opt stack 25
  2789                           
  2790                           ;incstack = 0
  2791  001834  C035  F001         	movff	floor@x,frexp@value
  2792  001838  C036  F002         	movff	floor@x+1,frexp@value+1
  2793  00183C  C037  F003         	movff	floor@x+2,frexp@value+2
  2794  001840  0E3B               	movlw	low floor@expon
  2795  001842  6E04               	movwf	frexp@eptr,c
  2796  001844  0E00               	movlw	high floor@expon
  2797  001846  6E05               	movwf	frexp@eptr+1,c
  2798  001848  ECC9  F00E         	call	_frexp	;wreg free
  2799  00184C  AE3C               	btfss	floor@expon+1,7,c
  2800  00184E  D010               	goto	l1162
  2801  001850  AE37               	btfss	floor@x+2,7,c
  2802  001852  D007               	goto	l1163
  2803  001854  0E00               	movlw	0
  2804  001856  6E35               	movwf	?_floor,c
  2805  001858  0E80               	movlw	128
  2806  00185A  6E36               	movwf	?_floor+1,c
  2807  00185C  0EBF               	movlw	191
  2808  00185E  6E37               	movwf	?_floor+2,c
  2809  001860  0012               	return	
  2810  001862                     l1163:
  2811  001862  0E00               	movlw	0
  2812  001864  6E35               	movwf	?_floor,c
  2813  001866  0E00               	movlw	0
  2814  001868  6E36               	movwf	?_floor+1,c
  2815  00186A  0E00               	movlw	0
  2816  00186C  6E37               	movwf	?_floor+2,c
  2817  00186E  0012               	return	
  2818  001870                     l1162:
  2819  001870  503C               	movf	floor@expon+1,w,c
  2820  001872  E104               	bnz	u2220
  2821  001874  0E15               	movlw	21
  2822  001876  5C3B               	subwf	floor@expon,w,c
  2823  001878  A0D8               	btfss	status,0,c
  2824  00187A  D007               	goto	l1165
  2825  00187C                     u2220:
  2826  00187C  C035  F035         	movff	floor@x,?_floor
  2827  001880  C036  F036         	movff	floor@x+1,?_floor+1
  2828  001884  C037  F037         	movff	floor@x+2,?_floor+2
  2829  001888  0012               	return	
  2830  00188A                     l1165:
  2831  00188A  C035  F01C         	movff	floor@x,___fttol@f1
  2832  00188E  C036  F01D         	movff	floor@x+1,___fttol@f1+1
  2833  001892  C037  F01E         	movff	floor@x+2,___fttol@f1+2
  2834  001896  ECB3  F00A         	call	___fttol	;wreg free
  2835  00189A  C01C  F02B         	movff	?___fttol,___altoft@c
  2836  00189E  C01D  F02C         	movff	?___fttol+1,___altoft@c+1
  2837  0018A2  C01E  F02D         	movff	?___fttol+2,___altoft@c+2
  2838  0018A6  C01F  F02E         	movff	?___fttol+3,___altoft@c+3
  2839  0018AA  ECD9  F00F         	call	___altoft	;wreg free
  2840  0018AE  C02B  F038         	movff	?___altoft,floor@i
  2841  0018B2  C02C  F039         	movff	?___altoft+1,floor@i+1
  2842  0018B6  C02D  F03A         	movff	?___altoft+2,floor@i+2
  2843  0018BA  C035  F001         	movff	floor@x,___ftge@ff1
  2844  0018BE  C036  F002         	movff	floor@x+1,___ftge@ff1+1
  2845  0018C2  C037  F003         	movff	floor@x+2,___ftge@ff1+2
  2846  0018C6  C038  F004         	movff	floor@i,___ftge@ff2
  2847  0018CA  C039  F005         	movff	floor@i+1,___ftge@ff2+1
  2848  0018CE  C03A  F006         	movff	floor@i+2,___ftge@ff2+2
  2849  0018D2  EC11  F00F         	call	___ftge	;wreg free
  2850  0018D6  B0D8               	btfsc	status,0,c
  2851  0018D8  D015               	goto	l1166
  2852  0018DA  C038  F01C         	movff	floor@i,___ftadd@f1
  2853  0018DE  C039  F01D         	movff	floor@i+1,___ftadd@f1+1
  2854  0018E2  C03A  F01E         	movff	floor@i+2,___ftadd@f1+2
  2855  0018E6  0E00               	movlw	0
  2856  0018E8  6E1F               	movwf	___ftadd@f2,c
  2857  0018EA  0E80               	movlw	128
  2858  0018EC  6E20               	movwf	___ftadd@f2+1,c
  2859  0018EE  0EBF               	movlw	191
  2860  0018F0  6E21               	movwf	___ftadd@f2+2,c
  2861  0018F2  EC93  F008         	call	___ftadd	;wreg free
  2862  0018F6  C01C  F035         	movff	?___ftadd,?_floor
  2863  0018FA  C01D  F036         	movff	?___ftadd+1,?_floor+1
  2864  0018FE  C01E  F037         	movff	?___ftadd+2,?_floor+2
  2865  001902  0012               	return	
  2866  001904                     l1166:
  2867  001904  C038  F035         	movff	floor@i,?_floor
  2868  001908  C039  F036         	movff	floor@i+1,?_floor+1
  2869  00190C  C03A  F037         	movff	floor@i+2,?_floor+2
  2870  001910  0012               	return		;funcret
  2871  001912                     __end_of_floor:
  2872                           	opt stack 0
  2873                           tblptru	equ	0xFF8
  2874                           intcon	equ	0xFF2
  2875                           intcon2	equ	0xFF1
  2876                           postinc0	equ	0xFEE
  2877                           wreg	equ	0xFE8
  2878                           postdec1	equ	0xFE5
  2879                           fsr1h	equ	0xFE2
  2880                           fsr1l	equ	0xFE1
  2881                           status	equ	0xFD8
  2882                           
  2883 ;; *************** function _frexp *****************
  2884 ;; Defined at:
  2885 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  value           3    0[COMRAM] int 
  2888 ;;  eptr            2    3[COMRAM] PTR int 
  2889 ;;		 -> log@exponent(2), floor@expon(2), 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;		None
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  3    0[COMRAM] PTR int 
  2894 ;; Registers used:
  2895 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2901 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2903 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2904 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2905 ;;Total ram usage:        7 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_floor
  2911 ;;		_log
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           	psect	text18
  2916  001D92                     __ptext18:
  2917                           	opt stack 0
  2918  001D92                     _frexp:
  2919                           	opt stack 27
  2920                           
  2921                           ;incstack = 0
  2922  001D92  5001               	movf	frexp@value,w,c
  2923  001D94  1002               	iorwf	frexp@value+1,w,c
  2924  001D96  1003               	iorwf	frexp@value+2,w,c
  2925  001D98  A4D8               	btfss	status,2,c
  2926  001D9A  D00F               	goto	l1171
  2927  001D9C  C004  FFD9         	movff	frexp@eptr,fsr2l
  2928  001DA0  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2929  001DA4  0E00               	movlw	0
  2930  001DA6  6EDE               	movwf	postinc2,c
  2931  001DA8  0E00               	movlw	0
  2932  001DAA  6EDD               	movwf	postdec2,c
  2933  001DAC  0E00               	movlw	0
  2934  001DAE  6E01               	movwf	?_frexp,c
  2935  001DB0  0E00               	movlw	0
  2936  001DB2  6E02               	movwf	?_frexp+1,c
  2937  001DB4  0E00               	movlw	0
  2938  001DB6  6E03               	movwf	?_frexp+2,c
  2939  001DB8  0012               	return	
  2940  001DBA                     l1171:
  2941  001DBA  5003               	movf	frexp@value+2,w,c
  2942  001DBC  0B7F               	andlw	127
  2943  001DBE  6E06               	movwf	??_frexp& (0+255),c
  2944  001DC0  6A07               	clrf	(??_frexp+1)& (0+255),c
  2945  001DC2  90D8               	bcf	status,0,c
  2946  001DC4  3606               	rlcf	??_frexp,f,c
  2947  001DC6  3607               	rlcf	??_frexp+1,f,c
  2948  001DC8  C004  FFD9         	movff	frexp@eptr,fsr2l
  2949  001DCC  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2950  001DD0  C006  FFDE         	movff	??_frexp,postinc2
  2951  001DD4  C007  FFDD         	movff	??_frexp+1,postdec2
  2952  001DD8  AE02               	btfss	frexp@value+1,7,c
  2953  001DDA  D003               	goto	u2050
  2954  001DDC  6A06               	clrf	??_frexp& (0+255),c
  2955  001DDE  2A06               	incf	??_frexp& (0+255),f,c
  2956  001DE0  D001               	goto	u2058
  2957  001DE2                     u2050:
  2958  001DE2  6A06               	clrf	??_frexp& (0+255),c
  2959  001DE4                     u2058:
  2960  001DE4  5006               	movf	??_frexp,w,c
  2961  001DE6  C004  FFD9         	movff	frexp@eptr,fsr2l
  2962  001DEA  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2963  001DEE  12DE               	iorwf	postinc2,f,c
  2964  001DF0  0E00               	movlw	0
  2965  001DF2  12DD               	iorwf	postdec2,f,c
  2966  001DF4  C004  FFD9         	movff	frexp@eptr,fsr2l
  2967  001DF8  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2968  001DFC  0E82               	movlw	130
  2969  001DFE  26DE               	addwf	postinc2,f,c
  2970  001E00  0EFF               	movlw	255
  2971  001E02  22DD               	addwfc	postdec2,f,c
  2972  001E04  8003               	bsf	frexp@value+2,0,c
  2973  001E06  8203               	bsf	frexp@value+2,1,c
  2974  001E08  8403               	bsf	frexp@value+2,2,c
  2975  001E0A  8603               	bsf	frexp@value+2,3,c
  2976  001E0C  8803               	bsf	frexp@value+2,4,c
  2977  001E0E  8A03               	bsf	frexp@value+2,5,c
  2978  001E10  9C03               	bcf	frexp@value+2,6,c
  2979  001E12  9E02               	bcf	frexp@value+1,7,c
  2980  001E14  C001  F001         	movff	frexp@value,?_frexp
  2981  001E18  C002  F002         	movff	frexp@value+1,?_frexp+1
  2982  001E1C  C003  F003         	movff	frexp@value+2,?_frexp+2
  2983  001E20  0012               	return	
  2984  001E22                     __end_of_frexp:
  2985                           	opt stack 0
  2986                           tblptru	equ	0xFF8
  2987                           intcon	equ	0xFF2
  2988                           intcon2	equ	0xFF1
  2989                           postinc0	equ	0xFEE
  2990                           wreg	equ	0xFE8
  2991                           postdec1	equ	0xFE5
  2992                           fsr1h	equ	0xFE2
  2993                           fsr1l	equ	0xFE1
  2994                           postinc2	equ	0xFDE
  2995                           postdec2	equ	0xFDD
  2996                           fsr2h	equ	0xFDA
  2997                           fsr2l	equ	0xFD9
  2998                           status	equ	0xFD8
  2999                           
  3000 ;; *************** function ___fttol *****************
  3001 ;; Defined at:
  3002 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  f1              3   27[COMRAM] float 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  lval            4   37[COMRAM] unsigned long 
  3007 ;;  exp1            1   41[COMRAM] unsigned char 
  3008 ;;  sign1           1   36[COMRAM] unsigned char 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  4   27[COMRAM] long 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3018 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3019 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3020 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3021 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3022 ;;Total ram usage:       15 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_MCP9801_TempRead
  3028 ;;		_pow
  3029 ;;		_exp
  3030 ;;		_floor
  3031 ;;		_EEPROM_24AA512_pageWrite
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           	psect	text19
  3036  001566                     __ptext19:
  3037                           	opt stack 0
  3038  001566                     ___fttol:
  3039                           	opt stack 26
  3040                           
  3041                           ;incstack = 0
  3042  001566  C01E  F020         	movff	___fttol@f1+2,??___fttol
  3043  00156A  6A21               	clrf	(??___fttol+1)& (0+255),c
  3044  00156C  6A22               	clrf	(??___fttol+2)& (0+255),c
  3045  00156E  341D               	rlcf	___fttol@f1+1,w,c
  3046  001570  3620               	rlcf	??___fttol& (0+255),f,c
  3047  001572  E301               	bnc	u1961
  3048  001574  8021               	bsf	(??___fttol+1)& (0+255),0,c
  3049  001576                     u1961:
  3050  001576  5020               	movf	??___fttol,w,c
  3051  001578  6E2A               	movwf	___fttol@exp1,c
  3052  00157A  502A               	movf	___fttol@exp1,w,c
  3053  00157C  A4D8               	btfss	status,2,c
  3054  00157E  D009               	goto	l858
  3055  001580  0E00               	movlw	0
  3056  001582  6E1C               	movwf	?___fttol,c
  3057  001584  0E00               	movlw	0
  3058  001586  6E1D               	movwf	?___fttol+1,c
  3059  001588  0E00               	movlw	0
  3060  00158A  6E1E               	movwf	?___fttol+2,c
  3061  00158C  0E00               	movlw	0
  3062  00158E  6E1F               	movwf	?___fttol+3,c
  3063  001590  0012               	return	
  3064  001592                     l858:
  3065  001592  0E17               	movlw	23
  3066  001594  6E20               	movwf	??___fttol& (0+255),c
  3067  001596  C01C  F021         	movff	___fttol@f1,??___fttol+1
  3068  00159A  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
  3069  00159E  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
  3070  0015A2  2820               	incf	??___fttol,w,c
  3071  0015A4  6E24               	movwf	(??___fttol+4)& (0+255),c
  3072  0015A6  D004               	goto	u1980
  3073  0015A8                     u1985:
  3074  0015A8  90D8               	bcf	status,0,c
  3075  0015AA  3223               	rrcf	??___fttol+3,f,c
  3076  0015AC  3222               	rrcf	??___fttol+2,f,c
  3077  0015AE  3221               	rrcf	??___fttol+1,f,c
  3078  0015B0                     u1980:
  3079  0015B0  2E24               	decfsz	(??___fttol+4)& (0+255),f,c
  3080  0015B2  D7FA               	goto	u1985
  3081  0015B4  5021               	movf	??___fttol+1,w,c
  3082  0015B6  6E25               	movwf	___fttol@sign1,c
  3083  0015B8  8E1D               	bsf	___fttol@f1+1,7,c
  3084  0015BA  0EFF               	movlw	255
  3085  0015BC  161C               	andwf	___fttol@f1,f,c
  3086  0015BE  0EFF               	movlw	255
  3087  0015C0  161D               	andwf	___fttol@f1+1,f,c
  3088  0015C2  0E00               	movlw	0
  3089  0015C4  161E               	andwf	___fttol@f1+2,f,c
  3090  0015C6  501C               	movf	___fttol@f1,w,c
  3091  0015C8  6E26               	movwf	___fttol@lval,c
  3092  0015CA  501D               	movf	___fttol@f1+1,w,c
  3093  0015CC  6E27               	movwf	___fttol@lval+1,c
  3094  0015CE  501E               	movf	___fttol@f1+2,w,c
  3095  0015D0  6E28               	movwf	___fttol@lval+2,c
  3096  0015D2  6A29               	clrf	___fttol@lval+3,c
  3097  0015D4  0E8E               	movlw	142
  3098  0015D6  5E2A               	subwf	___fttol@exp1,f,c
  3099  0015D8  AE2A               	btfss	___fttol@exp1,7,c
  3100  0015DA  D016               	goto	l860
  3101  0015DC  502A               	movf	___fttol@exp1,w,c
  3102  0015DE  0A80               	xorlw	128
  3103  0015E0  0F8F               	addlw	143
  3104  0015E2  B0D8               	btfsc	status,0,c
  3105  0015E4  D009               	goto	l861
  3106  0015E6  0E00               	movlw	0
  3107  0015E8  6E1C               	movwf	?___fttol,c
  3108  0015EA  0E00               	movlw	0
  3109  0015EC  6E1D               	movwf	?___fttol+1,c
  3110  0015EE  0E00               	movlw	0
  3111  0015F0  6E1E               	movwf	?___fttol+2,c
  3112  0015F2  0E00               	movlw	0
  3113  0015F4  6E1F               	movwf	?___fttol+3,c
  3114  0015F6  0012               	return	
  3115  0015F8                     l861:
  3116  0015F8  90D8               	bcf	status,0,c
  3117  0015FA  3229               	rrcf	___fttol@lval+3,f,c
  3118  0015FC  3228               	rrcf	___fttol@lval+2,f,c
  3119  0015FE  3227               	rrcf	___fttol@lval+1,f,c
  3120  001600  3226               	rrcf	___fttol@lval,f,c
  3121  001602  3E2A               	incfsz	___fttol@exp1,f,c
  3122  001604  D7F9               	goto	l861
  3123  001606  D015               	goto	u2020
  3124  001608                     l860:
  3125  001608  0E17               	movlw	23
  3126  00160A  642A               	cpfsgt	___fttol@exp1,c
  3127  00160C  D00F               	goto	l866
  3128  00160E  0E00               	movlw	0
  3129  001610  6E1C               	movwf	?___fttol,c
  3130  001612  0E00               	movlw	0
  3131  001614  6E1D               	movwf	?___fttol+1,c
  3132  001616  0E00               	movlw	0
  3133  001618  6E1E               	movwf	?___fttol+2,c
  3134  00161A  0E00               	movlw	0
  3135  00161C  6E1F               	movwf	?___fttol+3,c
  3136  00161E  0012               	return	
  3137  001620  90D8               	bcf	status,0,c
  3138  001622  3626               	rlcf	___fttol@lval,f,c
  3139  001624  3627               	rlcf	___fttol@lval+1,f,c
  3140  001626  3628               	rlcf	___fttol@lval+2,f,c
  3141  001628  3629               	rlcf	___fttol@lval+3,f,c
  3142  00162A  062A               	decf	___fttol@exp1,f,c
  3143  00162C                     l866:
  3144  00162C  502A               	movf	___fttol@exp1,w,c
  3145  00162E  A4D8               	btfss	status,2,c
  3146  001630  D7F7               	goto	l867
  3147  001632                     u2020:
  3148  001632  5025               	movf	___fttol@sign1,w,c
  3149  001634  B4D8               	btfsc	status,2,c
  3150  001636  D008               	goto	l869
  3151  001638  1E29               	comf	___fttol@lval+3,f,c
  3152  00163A  1E28               	comf	___fttol@lval+2,f,c
  3153  00163C  1E27               	comf	___fttol@lval+1,f,c
  3154  00163E  6C26               	negf	___fttol@lval,c
  3155  001640  0E00               	movlw	0
  3156  001642  2227               	addwfc	___fttol@lval+1,f,c
  3157  001644  2228               	addwfc	___fttol@lval+2,f,c
  3158  001646  2229               	addwfc	___fttol@lval+3,f,c
  3159  001648                     l869:
  3160  001648  C026  F01C         	movff	___fttol@lval,?___fttol
  3161  00164C  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
  3162  001650  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
  3163  001654  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
  3164  001658  0012               	return	
  3165  00165A                     __end_of___fttol:
  3166                           	opt stack 0
  3167                           tblptru	equ	0xFF8
  3168                           intcon	equ	0xFF2
  3169                           intcon2	equ	0xFF1
  3170                           postinc0	equ	0xFEE
  3171                           wreg	equ	0xFE8
  3172                           postdec1	equ	0xFE5
  3173                           fsr1h	equ	0xFE2
  3174                           fsr1l	equ	0xFE1
  3175                           postinc2	equ	0xFDE
  3176                           postdec2	equ	0xFDD
  3177                           fsr2h	equ	0xFDA
  3178                           fsr2l	equ	0xFD9
  3179                           status	equ	0xFD8
  3180                           
  3181 ;; *************** function ___ftge *****************
  3182 ;; Defined at:
  3183 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  ff1             3    0[COMRAM] float 
  3186 ;;  ff2             3    3[COMRAM] float 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;		None               void
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3198 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3200 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3201 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3202 ;;Total ram usage:        9 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_pow
  3208 ;;		_exp
  3209 ;;		_floor
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           	psect	text20
  3214  001E22                     __ptext20:
  3215                           	opt stack 0
  3216  001E22                     ___ftge:
  3217                           	opt stack 26
  3218                           
  3219                           ;incstack = 0
  3220  001E22  AE03               	btfss	___ftge@ff1+2,7,c
  3221  001E24  D016               	goto	l830
  3222  001E26  C001  F007         	movff	___ftge@ff1,??___ftge
  3223  001E2A  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3224  001E2E  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3225  001E32  1E07               	comf	??___ftge,f,c
  3226  001E34  1E08               	comf	??___ftge+1,f,c
  3227  001E36  1E09               	comf	??___ftge+2,f,c
  3228  001E38  2A07               	incf	??___ftge,f,c
  3229  001E3A  0E00               	movlw	0
  3230  001E3C  2208               	addwfc	??___ftge+1,f,c
  3231  001E3E  2209               	addwfc	??___ftge+2,f,c
  3232  001E40  0E00               	movlw	0
  3233  001E42  2407               	addwf	??___ftge,w,c
  3234  001E44  6E01               	movwf	___ftge@ff1,c
  3235  001E46  0E00               	movlw	0
  3236  001E48  2008               	addwfc	??___ftge+1,w,c
  3237  001E4A  6E02               	movwf	___ftge@ff1+1,c
  3238  001E4C  0E80               	movlw	128
  3239  001E4E  2009               	addwfc	??___ftge+2,w,c
  3240  001E50  6E03               	movwf	___ftge@ff1+2,c
  3241  001E52                     l830:
  3242  001E52  AE06               	btfss	___ftge@ff2+2,7,c
  3243  001E54  D016               	goto	l831
  3244  001E56  C004  F007         	movff	___ftge@ff2,??___ftge
  3245  001E5A  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3246  001E5E  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3247  001E62  1E07               	comf	??___ftge,f,c
  3248  001E64  1E08               	comf	??___ftge+1,f,c
  3249  001E66  1E09               	comf	??___ftge+2,f,c
  3250  001E68  2A07               	incf	??___ftge,f,c
  3251  001E6A  0E00               	movlw	0
  3252  001E6C  2208               	addwfc	??___ftge+1,f,c
  3253  001E6E  2209               	addwfc	??___ftge+2,f,c
  3254  001E70  0E00               	movlw	0
  3255  001E72  2407               	addwf	??___ftge,w,c
  3256  001E74  6E04               	movwf	___ftge@ff2,c
  3257  001E76  0E00               	movlw	0
  3258  001E78  2008               	addwfc	??___ftge+1,w,c
  3259  001E7A  6E05               	movwf	___ftge@ff2+1,c
  3260  001E7C  0E80               	movlw	128
  3261  001E7E  2009               	addwfc	??___ftge+2,w,c
  3262  001E80  6E06               	movwf	___ftge@ff2+2,c
  3263  001E82                     l831:
  3264  001E82  0E00               	movlw	0
  3265  001E84  1A01               	xorwf	___ftge@ff1,f,c
  3266  001E86  0E00               	movlw	0
  3267  001E88  1A02               	xorwf	___ftge@ff1+1,f,c
  3268  001E8A  0E80               	movlw	128
  3269  001E8C  1A03               	xorwf	___ftge@ff1+2,f,c
  3270  001E8E  0E00               	movlw	0
  3271  001E90  1A04               	xorwf	___ftge@ff2,f,c
  3272  001E92  0E00               	movlw	0
  3273  001E94  1A05               	xorwf	___ftge@ff2+1,f,c
  3274  001E96  0E80               	movlw	128
  3275  001E98  1A06               	xorwf	___ftge@ff2+2,f,c
  3276  001E9A  5004               	movf	___ftge@ff2,w,c
  3277  001E9C  5C01               	subwf	___ftge@ff1,w,c
  3278  001E9E  5005               	movf	___ftge@ff2+1,w,c
  3279  001EA0  5802               	subwfb	___ftge@ff1+1,w,c
  3280  001EA2  5006               	movf	___ftge@ff2+2,w,c
  3281  001EA4  5803               	subwfb	___ftge@ff1+2,w,c
  3282  001EA6  B0D8               	btfsc	status,0,c
  3283  001EA8  D002               	goto	l2420
  3284  001EAA  90D8               	bcf	status,0,c
  3285  001EAC  0012               	return	
  3286  001EAE                     l2420:
  3287  001EAE  80D8               	bsf	status,0,c
  3288  001EB0  0012               	return	
  3289  001EB2                     __end_of___ftge:
  3290                           	opt stack 0
  3291                           tblptru	equ	0xFF8
  3292                           intcon	equ	0xFF2
  3293                           intcon2	equ	0xFF1
  3294                           postinc0	equ	0xFEE
  3295                           wreg	equ	0xFE8
  3296                           postdec1	equ	0xFE5
  3297                           fsr1h	equ	0xFE2
  3298                           fsr1l	equ	0xFE1
  3299                           postinc2	equ	0xFDE
  3300                           postdec2	equ	0xFDD
  3301                           fsr2h	equ	0xFDA
  3302                           fsr2l	equ	0xFD9
  3303                           status	equ	0xFD8
  3304                           
  3305 ;; *************** function ___altoft *****************
  3306 ;; Defined at:
  3307 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  c               4   42[COMRAM] long 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  sign            1   51[COMRAM] unsigned char 
  3312 ;;  exp             1   50[COMRAM] unsigned char 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  3   42[COMRAM] float 
  3315 ;; Registers used:
  3316 ;;		wreg, status,2, status,0, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3322 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3323 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3324 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3325 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3326 ;;Total ram usage:       10 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    1
  3329 ;; This function calls:
  3330 ;;		___ftpack
  3331 ;; This function is called by:
  3332 ;;		_floor
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text21
  3337  001FB2                     __ptext21:
  3338                           	opt stack 0
  3339  001FB2                     ___altoft:
  3340                           	opt stack 25
  3341                           
  3342                           ;incstack = 0
  3343  001FB2  0E00               	movlw	0
  3344  001FB4  6E34               	movwf	___altoft@sign,c
  3345  001FB6  0E8E               	movlw	142
  3346  001FB8  6E33               	movwf	___altoft@exp,c
  3347  001FBA  AE2E               	btfss	___altoft@c+3,7,c
  3348  001FBC  D011               	goto	l628
  3349  001FBE  1E2E               	comf	___altoft@c+3,f,c
  3350  001FC0  1E2D               	comf	___altoft@c+2,f,c
  3351  001FC2  1E2C               	comf	___altoft@c+1,f,c
  3352  001FC4  6C2B               	negf	___altoft@c,c
  3353  001FC6  0E00               	movlw	0
  3354  001FC8  222C               	addwfc	___altoft@c+1,f,c
  3355  001FCA  222D               	addwfc	___altoft@c+2,f,c
  3356  001FCC  222E               	addwfc	___altoft@c+3,f,c
  3357  001FCE  0E01               	movlw	1
  3358  001FD0  6E34               	movwf	___altoft@sign,c
  3359  001FD2  D006               	goto	l628
  3360  001FD4  90D8               	bcf	status,0,c
  3361  001FD6  322E               	rrcf	___altoft@c+3,f,c
  3362  001FD8  322D               	rrcf	___altoft@c+2,f,c
  3363  001FDA  322C               	rrcf	___altoft@c+1,f,c
  3364  001FDC  322B               	rrcf	___altoft@c,f,c
  3365  001FDE  2A33               	incf	___altoft@exp,f,c
  3366  001FE0                     l628:
  3367  001FE0  0E00               	movlw	0
  3368  001FE2  142B               	andwf	___altoft@c,w,c
  3369  001FE4  6E2F               	movwf	??___altoft& (0+255),c
  3370  001FE6  0E00               	movlw	0
  3371  001FE8  142C               	andwf	___altoft@c+1,w,c
  3372  001FEA  6E30               	movwf	(??___altoft+1)& (0+255),c
  3373  001FEC  0E00               	movlw	0
  3374  001FEE  142D               	andwf	___altoft@c+2,w,c
  3375  001FF0  6E31               	movwf	(??___altoft+2)& (0+255),c
  3376  001FF2  0EFF               	movlw	255
  3377  001FF4  142E               	andwf	___altoft@c+3,w,c
  3378  001FF6  6E32               	movwf	(??___altoft+3)& (0+255),c
  3379  001FF8  502F               	movf	??___altoft,w,c
  3380  001FFA  1030               	iorwf	??___altoft+1,w,c
  3381  001FFC  1031               	iorwf	??___altoft+2,w,c
  3382  001FFE  1032               	iorwf	??___altoft+3,w,c
  3383  002000  A4D8               	btfss	status,2,c
  3384  002002  D7E8               	goto	l629
  3385  002004  C02B  F001         	movff	___altoft@c,___ftpack@arg
  3386  002008  C02C  F002         	movff	___altoft@c+1,___ftpack@arg+1
  3387  00200C  C02D  F003         	movff	___altoft@c+2,___ftpack@arg+2
  3388  002010  C033  F004         	movff	___altoft@exp,___ftpack@exp
  3389  002014  C034  F005         	movff	___altoft@sign,___ftpack@sign
  3390  002018  EC20  F00E         	call	___ftpack	;wreg free
  3391  00201C  C001  F02B         	movff	?___ftpack,?___altoft
  3392  002020  C002  F02C         	movff	?___ftpack+1,?___altoft+1
  3393  002024  C003  F02D         	movff	?___ftpack+2,?___altoft+2
  3394  002028  0012               	return	
  3395  00202A                     __end_of___altoft:
  3396                           	opt stack 0
  3397                           tblptru	equ	0xFF8
  3398                           intcon	equ	0xFF2
  3399                           intcon2	equ	0xFF1
  3400                           postinc0	equ	0xFEE
  3401                           wreg	equ	0xFE8
  3402                           postdec1	equ	0xFE5
  3403                           fsr1h	equ	0xFE2
  3404                           fsr1l	equ	0xFE1
  3405                           postinc2	equ	0xFDE
  3406                           postdec2	equ	0xFDD
  3407                           fsr2h	equ	0xFDA
  3408                           fsr2l	equ	0xFD9
  3409                           status	equ	0xFD8
  3410                           
  3411 ;; *************** function _eval_poly *****************
  3412 ;; Defined at:
  3413 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  x               3   39[COMRAM] float 
  3416 ;;  d               2   42[COMRAM] PTR const 
  3417 ;;		 -> log@coeff(27), exp@coeff(30), 
  3418 ;;  n               2   44[COMRAM] int 
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;  res             3   48[COMRAM] int 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  3   39[COMRAM] int 
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3430 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3431 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3432 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3433 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3434 ;;Total ram usage:       12 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:    2
  3437 ;; This function calls:
  3438 ;;		___ftadd
  3439 ;;		___ftmul
  3440 ;;		___wmul
  3441 ;; This function is called by:
  3442 ;;		_exp
  3443 ;;		_log
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text22
  3448  001912                     __ptext22:
  3449                           	opt stack 0
  3450  001912                     _eval_poly:
  3451                           	opt stack 25
  3452                           
  3453                           ;incstack = 0
  3454  001912  C02D  F001         	movff	eval_poly@n,___wmul@multiplier
  3455  001916  C02E  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  3456  00191A  0E00               	movlw	0
  3457  00191C  6E04               	movwf	___wmul@multiplicand+1,c
  3458  00191E  0E03               	movlw	3
  3459  001920  6E03               	movwf	___wmul@multiplicand,c
  3460  001922  EC9F  F011         	call	___wmul	;wreg free
  3461  001926  C02B  F02F         	movff	eval_poly@d,??_eval_poly
  3462  00192A  C02C  F030         	movff	eval_poly@d+1,??_eval_poly+1
  3463  00192E  5001               	movf	?___wmul,w,c
  3464  001930  262F               	addwf	??_eval_poly,f,c
  3465  001932  5002               	movf	?___wmul+1,w,c
  3466  001934  2230               	addwfc	??_eval_poly+1,f,c
  3467  001936  C02F  FFF6         	movff	??_eval_poly,tblptrl
  3468  00193A  C030  FFF7         	movff	??_eval_poly+1,tblptrh
  3469  00193E                     	if	0	;tblptru may be non-zero
  3470  00193E                     	endif
  3471  00193E                     	if	0	;tblptru may be non-zero
  3472  00193E                     	endif
  3473  00193E  0009               	tblrd		*+
  3474  001940  CFF5 F031          	movff	tablat,eval_poly@res
  3475  001944  0009               	tblrd		*+
  3476  001946  CFF5 F032          	movff	tablat,eval_poly@res+1
  3477  00194A  000A               	tblrd		*-
  3478  00194C  CFF5 F033          	movff	tablat,eval_poly@res+2
  3479  001950  D03E               	goto	l1201
  3480  001952  C031  F010         	movff	eval_poly@res,___ftmul@f2
  3481  001956  C032  F011         	movff	eval_poly@res+1,___ftmul@f2+1
  3482  00195A  C033  F012         	movff	eval_poly@res+2,___ftmul@f2+2
  3483  00195E  C028  F00D         	movff	eval_poly@x,___ftmul@f1
  3484  001962  C029  F00E         	movff	eval_poly@x+1,___ftmul@f1+1
  3485  001966  C02A  F00F         	movff	eval_poly@x+2,___ftmul@f1+2
  3486  00196A  EC2D  F00B         	call	___ftmul	;wreg free
  3487  00196E  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  3488  001972  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  3489  001976  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  3490  00197A  0E00               	movlw	0
  3491  00197C  6E04               	movwf	___wmul@multiplicand+1,c
  3492  00197E  0E03               	movlw	3
  3493  001980  6E03               	movwf	___wmul@multiplicand,c
  3494  001982  062D               	decf	eval_poly@n,f,c
  3495  001984  A0D8               	btfss	status,0,c
  3496  001986  062E               	decf	eval_poly@n+1,f,c
  3497  001988  C02D  F001         	movff	eval_poly@n,___wmul@multiplier
  3498  00198C  C02E  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  3499  001990  EC9F  F011         	call	___wmul	;wreg free
  3500  001994  C02B  F02F         	movff	eval_poly@d,??_eval_poly
  3501  001998  C02C  F030         	movff	eval_poly@d+1,??_eval_poly+1
  3502  00199C  5001               	movf	?___wmul,w,c
  3503  00199E  262F               	addwf	??_eval_poly,f,c
  3504  0019A0  5002               	movf	?___wmul+1,w,c
  3505  0019A2  2230               	addwfc	??_eval_poly+1,f,c
  3506  0019A4  C02F  FFF6         	movff	??_eval_poly,tblptrl
  3507  0019A8  C030  FFF7         	movff	??_eval_poly+1,tblptrh
  3508  0019AC                     	if	0	;tblptru may be non-zero
  3509  0019AC                     	endif
  3510  0019AC                     	if	0	;tblptru may be non-zero
  3511  0019AC                     	endif
  3512  0019AC  0009               	tblrd		*+
  3513  0019AE  CFF5 F01F          	movff	tablat,___ftadd@f2
  3514  0019B2  0009               	tblrd		*+
  3515  0019B4  CFF5 F020          	movff	tablat,___ftadd@f2+1
  3516  0019B8  000A               	tblrd		*-
  3517  0019BA  CFF5 F021          	movff	tablat,___ftadd@f2+2
  3518  0019BE  EC93  F008         	call	___ftadd	;wreg free
  3519  0019C2  C01C  F031         	movff	?___ftadd,eval_poly@res
  3520  0019C6  C01D  F032         	movff	?___ftadd+1,eval_poly@res+1
  3521  0019CA  C01E  F033         	movff	?___ftadd+2,eval_poly@res+2
  3522  0019CE                     l1201:
  3523  0019CE  502D               	movf	eval_poly@n,w,c
  3524  0019D0  102E               	iorwf	eval_poly@n+1,w,c
  3525  0019D2  A4D8               	btfss	status,2,c
  3526  0019D4  D7BE               	goto	l1202
  3527  0019D6  C031  F028         	movff	eval_poly@res,?_eval_poly
  3528  0019DA  C032  F029         	movff	eval_poly@res+1,?_eval_poly+1
  3529  0019DE  C033  F02A         	movff	eval_poly@res+2,?_eval_poly+2
  3530  0019E2  0012               	return		;funcret
  3531  0019E4                     __end_of_eval_poly:
  3532                           	opt stack 0
  3533                           tblptru	equ	0xFF8
  3534                           tblptrh	equ	0xFF7
  3535                           tblptrl	equ	0xFF6
  3536                           tablat	equ	0xFF5
  3537                           intcon	equ	0xFF2
  3538                           intcon2	equ	0xFF1
  3539                           postinc0	equ	0xFEE
  3540                           wreg	equ	0xFE8
  3541                           postdec1	equ	0xFE5
  3542                           fsr1h	equ	0xFE2
  3543                           fsr1l	equ	0xFE1
  3544                           postinc2	equ	0xFDE
  3545                           postdec2	equ	0xFDD
  3546                           fsr2h	equ	0xFDA
  3547                           fsr2l	equ	0xFD9
  3548                           status	equ	0xFD8
  3549                           
  3550 ;; *************** function ___wmul *****************
  3551 ;; Defined at:
  3552 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;  multiplier      2    0[COMRAM] unsigned int 
  3555 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  product         2    4[COMRAM] unsigned int 
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  2    0[COMRAM] unsigned int 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2, status,0, prodl, prodh
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3567 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3568 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3570 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3571 ;;Total ram usage:        6 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; This function calls:
  3574 ;;		Nothing
  3575 ;; This function is called by:
  3576 ;;		_I2C_Init
  3577 ;;		_eval_poly
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text23
  3582  00233E                     __ptext23:
  3583                           	opt stack 0
  3584  00233E                     ___wmul:
  3585                           	opt stack 28
  3586                           
  3587                           ;incstack = 0
  3588  00233E  5001               	movf	___wmul@multiplier,w,c
  3589  002340  0203               	mulwf	___wmul@multiplicand,c
  3590  002342  CFF3 F005          	movff	prodl,___wmul@product
  3591  002346  CFF4 F006          	movff	prodh,___wmul@product+1
  3592  00234A  5001               	movf	___wmul@multiplier,w,c
  3593  00234C  0204               	mulwf	___wmul@multiplicand+1,c
  3594  00234E  50F3               	movf	prodl,w,c
  3595  002350  2606               	addwf	___wmul@product+1,f,c
  3596  002352  5002               	movf	___wmul@multiplier+1,w,c
  3597  002354  0203               	mulwf	___wmul@multiplicand,c
  3598  002356  50F3               	movf	prodl,w,c
  3599  002358  2606               	addwf	___wmul@product+1,f,c
  3600  00235A  C005  F001         	movff	___wmul@product,?___wmul
  3601  00235E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3602  002362  0012               	return	
  3603  002364                     __end_of___wmul:
  3604                           	opt stack 0
  3605                           tblptru	equ	0xFF8
  3606                           tblptrh	equ	0xFF7
  3607                           tblptrl	equ	0xFF6
  3608                           tablat	equ	0xFF5
  3609                           prodh	equ	0xFF4
  3610                           prodl	equ	0xFF3
  3611                           intcon	equ	0xFF2
  3612                           intcon2	equ	0xFF1
  3613                           postinc0	equ	0xFEE
  3614                           wreg	equ	0xFE8
  3615                           postdec1	equ	0xFE5
  3616                           fsr1h	equ	0xFE2
  3617                           fsr1l	equ	0xFE1
  3618                           postinc2	equ	0xFDE
  3619                           postdec2	equ	0xFDD
  3620                           fsr2h	equ	0xFDA
  3621                           fsr2l	equ	0xFD9
  3622                           status	equ	0xFD8
  3623                           
  3624 ;; *************** function ___ftmul *****************
  3625 ;; Defined at:
  3626 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  f1              3   12[COMRAM] float 
  3629 ;;  f2              3   15[COMRAM] float 
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  3632 ;;  sign            1   26[COMRAM] unsigned char 
  3633 ;;  cntr            1   25[COMRAM] unsigned char 
  3634 ;;  exp             1   21[COMRAM] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  3   12[COMRAM] float 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, status,0, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3644 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3645 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3646 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3647 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3648 ;;Total ram usage:       15 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; Hardware stack levels required when called:    1
  3651 ;; This function calls:
  3652 ;;		___ftpack
  3653 ;; This function is called by:
  3654 ;;		_MCP9801_TempRead
  3655 ;;		_pow
  3656 ;;		_exp
  3657 ;;		_log
  3658 ;;		_eval_poly
  3659 ;;		_EEPROM_24AA512_pageWrite
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text24
  3664  00165A                     __ptext24:
  3665                           	opt stack 0
  3666  00165A                     ___ftmul:
  3667                           	opt stack 25
  3668                           
  3669                           ;incstack = 0
  3670  00165A  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  3671  00165E  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3672  001660  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3673  001662  340E               	rlcf	___ftmul@f1+1,w,c
  3674  001664  3613               	rlcf	??___ftmul& (0+255),f,c
  3675  001666  E301               	bnc	u1871
  3676  001668  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3677  00166A                     u1871:
  3678  00166A  5013               	movf	??___ftmul,w,c
  3679  00166C  6E16               	movwf	___ftmul@exp,c
  3680  00166E  5016               	movf	___ftmul@exp,w,c
  3681  001670  A4D8               	btfss	status,2,c
  3682  001672  D007               	goto	l837
  3683  001674  0E00               	movlw	0
  3684  001676  6E0D               	movwf	?___ftmul,c
  3685  001678  0E00               	movlw	0
  3686  00167A  6E0E               	movwf	?___ftmul+1,c
  3687  00167C  0E00               	movlw	0
  3688  00167E  6E0F               	movwf	?___ftmul+2,c
  3689  001680  0012               	return	
  3690  001682                     l837:
  3691  001682  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  3692  001686  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3693  001688  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3694  00168A  3411               	rlcf	___ftmul@f2+1,w,c
  3695  00168C  3613               	rlcf	??___ftmul& (0+255),f,c
  3696  00168E  E301               	bnc	u1891
  3697  001690  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3698  001692                     u1891:
  3699  001692  5013               	movf	??___ftmul,w,c
  3700  001694  6E1B               	movwf	___ftmul@sign,c
  3701  001696  501B               	movf	___ftmul@sign,w,c
  3702  001698  A4D8               	btfss	status,2,c
  3703  00169A  D007               	goto	l839
  3704  00169C  0E00               	movlw	0
  3705  00169E  6E0D               	movwf	?___ftmul,c
  3706  0016A0  0E00               	movlw	0
  3707  0016A2  6E0E               	movwf	?___ftmul+1,c
  3708  0016A4  0E00               	movlw	0
  3709  0016A6  6E0F               	movwf	?___ftmul+2,c
  3710  0016A8  0012               	return	
  3711  0016AA                     l839:
  3712  0016AA  501B               	movf	___ftmul@sign,w,c
  3713  0016AC  0F7B               	addlw	123
  3714  0016AE  2616               	addwf	___ftmul@exp,f,c
  3715  0016B0  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  3716  0016B4  5012               	movf	___ftmul@f2+2,w,c
  3717  0016B6  1A1B               	xorwf	___ftmul@sign,f,c
  3718  0016B8  0E80               	movlw	128
  3719  0016BA  161B               	andwf	___ftmul@sign,f,c
  3720  0016BC  8E0E               	bsf	___ftmul@f1+1,7,c
  3721  0016BE  8E11               	bsf	___ftmul@f2+1,7,c
  3722  0016C0  0EFF               	movlw	255
  3723  0016C2  1610               	andwf	___ftmul@f2,f,c
  3724  0016C4  0EFF               	movlw	255
  3725  0016C6  1611               	andwf	___ftmul@f2+1,f,c
  3726  0016C8  0E00               	movlw	0
  3727  0016CA  1612               	andwf	___ftmul@f2+2,f,c
  3728  0016CC  0E00               	movlw	0
  3729  0016CE  6E17               	movwf	___ftmul@f3_as_product,c
  3730  0016D0  0E00               	movlw	0
  3731  0016D2  6E18               	movwf	___ftmul@f3_as_product+1,c
  3732  0016D4  0E00               	movlw	0
  3733  0016D6  6E19               	movwf	___ftmul@f3_as_product+2,c
  3734  0016D8  0E07               	movlw	7
  3735  0016DA  6E1A               	movwf	___ftmul@cntr,c
  3736  0016DC  A00D               	btfss	___ftmul@f1,0,c
  3737  0016DE  D006               	goto	l841
  3738  0016E0  5010               	movf	___ftmul@f2,w,c
  3739  0016E2  2617               	addwf	___ftmul@f3_as_product,f,c
  3740  0016E4  5011               	movf	___ftmul@f2+1,w,c
  3741  0016E6  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  3742  0016E8  5012               	movf	___ftmul@f2+2,w,c
  3743  0016EA  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  3744  0016EC                     l841:
  3745  0016EC  90D8               	bcf	status,0,c
  3746  0016EE  320F               	rrcf	___ftmul@f1+2,f,c
  3747  0016F0  320E               	rrcf	___ftmul@f1+1,f,c
  3748  0016F2  320D               	rrcf	___ftmul@f1,f,c
  3749  0016F4  90D8               	bcf	status,0,c
  3750  0016F6  3610               	rlcf	___ftmul@f2,f,c
  3751  0016F8  3611               	rlcf	___ftmul@f2+1,f,c
  3752  0016FA  3612               	rlcf	___ftmul@f2+2,f,c
  3753  0016FC  2E1A               	decfsz	___ftmul@cntr,f,c
  3754  0016FE  D7EE               	goto	l840
  3755  001700  0E09               	movlw	9
  3756  001702  6E1A               	movwf	___ftmul@cntr,c
  3757  001704  A00D               	btfss	___ftmul@f1,0,c
  3758  001706  D006               	goto	l844
  3759  001708  5010               	movf	___ftmul@f2,w,c
  3760  00170A  2617               	addwf	___ftmul@f3_as_product,f,c
  3761  00170C  5011               	movf	___ftmul@f2+1,w,c
  3762  00170E  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  3763  001710  5012               	movf	___ftmul@f2+2,w,c
  3764  001712  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  3765  001714                     l844:
  3766  001714  90D8               	bcf	status,0,c
  3767  001716  320F               	rrcf	___ftmul@f1+2,f,c
  3768  001718  320E               	rrcf	___ftmul@f1+1,f,c
  3769  00171A  320D               	rrcf	___ftmul@f1,f,c
  3770  00171C  90D8               	bcf	status,0,c
  3771  00171E  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  3772  001720  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  3773  001722  3217               	rrcf	___ftmul@f3_as_product,f,c
  3774  001724  2E1A               	decfsz	___ftmul@cntr,f,c
  3775  001726  D7EE               	goto	l843
  3776  001728  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3777  00172C  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3778  001730  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3779  001734  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  3780  001738  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  3781  00173C  EC20  F00E         	call	___ftpack	;wreg free
  3782  001740  C001  F00D         	movff	?___ftpack,?___ftmul
  3783  001744  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  3784  001748  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  3785  00174C  0012               	return	
  3786  00174E                     __end_of___ftmul:
  3787                           	opt stack 0
  3788                           tblptru	equ	0xFF8
  3789                           tblptrh	equ	0xFF7
  3790                           tblptrl	equ	0xFF6
  3791                           tablat	equ	0xFF5
  3792                           prodh	equ	0xFF4
  3793                           prodl	equ	0xFF3
  3794                           intcon	equ	0xFF2
  3795                           intcon2	equ	0xFF1
  3796                           postinc0	equ	0xFEE
  3797                           wreg	equ	0xFE8
  3798                           postdec1	equ	0xFE5
  3799                           fsr1h	equ	0xFE2
  3800                           fsr1l	equ	0xFE1
  3801                           postinc2	equ	0xFDE
  3802                           postdec2	equ	0xFDD
  3803                           fsr2h	equ	0xFDA
  3804                           fsr2l	equ	0xFD9
  3805                           status	equ	0xFD8
  3806                           
  3807 ;; *************** function ___ftsub *****************
  3808 ;; Defined at:
  3809 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;  f1              3   39[COMRAM] float 
  3812 ;;  f2              3   42[COMRAM] float 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;		None
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  3   39[COMRAM] float 
  3817 ;; Registers used:
  3818 ;;		wreg, status,2, status,0, cstack
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3824 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3827 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3828 ;;Total ram usage:        6 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; Hardware stack levels required when called:    2
  3831 ;; This function calls:
  3832 ;;		___ftadd
  3833 ;; This function is called by:
  3834 ;;		_exp
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838                           	psect	text25
  3839  0021F4                     __ptext25:
  3840                           	opt stack 0
  3841  0021F4                     ___ftsub:
  3842                           	opt stack 25
  3843                           
  3844                           ;incstack = 0
  3845  0021F4  502B               	movf	___ftsub@f2,w,c
  3846  0021F6  102C               	iorwf	___ftsub@f2+1,w,c
  3847  0021F8  102D               	iorwf	___ftsub@f2+2,w,c
  3848  0021FA  B4D8               	btfsc	status,2,c
  3849  0021FC  D006               	goto	l854
  3850  0021FE  0E00               	movlw	0
  3851  002200  1A2B               	xorwf	___ftsub@f2,f,c
  3852  002202  0E00               	movlw	0
  3853  002204  1A2C               	xorwf	___ftsub@f2+1,f,c
  3854  002206  0E80               	movlw	128
  3855  002208  1A2D               	xorwf	___ftsub@f2+2,f,c
  3856  00220A                     l854:
  3857  00220A  C028  F01C         	movff	___ftsub@f1,___ftadd@f1
  3858  00220E  C029  F01D         	movff	___ftsub@f1+1,___ftadd@f1+1
  3859  002212  C02A  F01E         	movff	___ftsub@f1+2,___ftadd@f1+2
  3860  002216  C02B  F01F         	movff	___ftsub@f2,___ftadd@f2
  3861  00221A  C02C  F020         	movff	___ftsub@f2+1,___ftadd@f2+1
  3862  00221E  C02D  F021         	movff	___ftsub@f2+2,___ftadd@f2+2
  3863  002222  EC93  F008         	call	___ftadd	;wreg free
  3864  002226  C01C  F028         	movff	?___ftadd,?___ftsub
  3865  00222A  C01D  F029         	movff	?___ftadd+1,?___ftsub+1
  3866  00222E  C01E  F02A         	movff	?___ftadd+2,?___ftsub+2
  3867  002232  0012               	return	
  3868  002234                     __end_of___ftsub:
  3869                           	opt stack 0
  3870                           tblptru	equ	0xFF8
  3871                           tblptrh	equ	0xFF7
  3872                           tblptrl	equ	0xFF6
  3873                           tablat	equ	0xFF5
  3874                           prodh	equ	0xFF4
  3875                           prodl	equ	0xFF3
  3876                           intcon	equ	0xFF2
  3877                           intcon2	equ	0xFF1
  3878                           postinc0	equ	0xFEE
  3879                           wreg	equ	0xFE8
  3880                           postdec1	equ	0xFE5
  3881                           fsr1h	equ	0xFE2
  3882                           fsr1l	equ	0xFE1
  3883                           postinc2	equ	0xFDE
  3884                           postdec2	equ	0xFDD
  3885                           fsr2h	equ	0xFDA
  3886                           fsr2l	equ	0xFD9
  3887                           status	equ	0xFD8
  3888                           
  3889 ;; *************** function ___ftadd *****************
  3890 ;; Defined at:
  3891 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  f1              3   27[COMRAM] float 
  3894 ;;  f2              3   30[COMRAM] float 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  exp1            1   38[COMRAM] unsigned char 
  3897 ;;  exp2            1   37[COMRAM] unsigned char 
  3898 ;;  sign            1   36[COMRAM] unsigned char 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  3   27[COMRAM] float 
  3901 ;; Registers used:
  3902 ;;		wreg, status,2, status,0, cstack
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3908 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3909 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3910 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3911 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3912 ;;Total ram usage:       12 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:    1
  3915 ;; This function calls:
  3916 ;;		___ftpack
  3917 ;; This function is called by:
  3918 ;;		___ftsub
  3919 ;;		_floor
  3920 ;;		_log
  3921 ;;		_eval_poly
  3922 ;;		_EEPROM_24AA512_pageWrite
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text26
  3927  001126                     __ptext26:
  3928                           	opt stack 0
  3929  001126                     ___ftadd:
  3930                           	opt stack 25
  3931                           
  3932                           ;incstack = 0
  3933  001126  C01E  F022         	movff	___ftadd@f1+2,??___ftadd
  3934  00112A  6A23               	clrf	(??___ftadd+1)& (0+255),c
  3935  00112C  6A24               	clrf	(??___ftadd+2)& (0+255),c
  3936  00112E  341D               	rlcf	___ftadd@f1+1,w,c
  3937  001130  3622               	rlcf	??___ftadd& (0+255),f,c
  3938  001132  E301               	bnc	u1661
  3939  001134  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  3940  001136                     u1661:
  3941  001136  5022               	movf	??___ftadd,w,c
  3942  001138  6E27               	movwf	___ftadd@exp1,c
  3943  00113A  C021  F022         	movff	___ftadd@f2+2,??___ftadd
  3944  00113E  6A23               	clrf	(??___ftadd+1)& (0+255),c
  3945  001140  6A24               	clrf	(??___ftadd+2)& (0+255),c
  3946  001142  3420               	rlcf	___ftadd@f2+1,w,c
  3947  001144  3622               	rlcf	??___ftadd& (0+255),f,c
  3948  001146  E301               	bnc	u1671
  3949  001148  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  3950  00114A                     u1671:
  3951  00114A  5022               	movf	??___ftadd,w,c
  3952  00114C  6E26               	movwf	___ftadd@exp2,c
  3953  00114E  5027               	movf	___ftadd@exp1,w,c
  3954  001150  B4D8               	btfsc	status,2,c
  3955  001152  D00B               	goto	u1700
  3956  001154  5026               	movf	___ftadd@exp2,w,c
  3957  001156  5C27               	subwf	___ftadd@exp1,w,c
  3958  001158  B0D8               	btfsc	status,0,c
  3959  00115A  D00E               	goto	l789
  3960  00115C  5027               	movf	___ftadd@exp1,w,c
  3961  00115E  0800               	sublw	0
  3962  001160  2426               	addwf	___ftadd@exp2,w,c
  3963  001162  6E22               	movwf	??___ftadd& (0+255),c
  3964  001164  0E18               	movlw	24
  3965  001166  6422               	cpfsgt	??___ftadd,c
  3966  001168  D007               	goto	l789
  3967  00116A                     u1700:
  3968  00116A  C01F  F01C         	movff	___ftadd@f2,?___ftadd
  3969  00116E  C020  F01D         	movff	___ftadd@f2+1,?___ftadd+1
  3970  001172  C021  F01E         	movff	___ftadd@f2+2,?___ftadd+2
  3971  001176  0012               	return	
  3972  001178                     l789:
  3973  001178  5026               	movf	___ftadd@exp2,w,c
  3974  00117A  B4D8               	btfsc	status,2,c
  3975  00117C  D00B               	goto	u1730
  3976  00117E  5027               	movf	___ftadd@exp1,w,c
  3977  001180  5C26               	subwf	___ftadd@exp2,w,c
  3978  001182  B0D8               	btfsc	status,0,c
  3979  001184  D00E               	goto	l793
  3980  001186  5026               	movf	___ftadd@exp2,w,c
  3981  001188  0800               	sublw	0
  3982  00118A  2427               	addwf	___ftadd@exp1,w,c
  3983  00118C  6E22               	movwf	??___ftadd& (0+255),c
  3984  00118E  0E18               	movlw	24
  3985  001190  6422               	cpfsgt	??___ftadd,c
  3986  001192  D007               	goto	l793
  3987  001194                     u1730:
  3988  001194  C01C  F01C         	movff	___ftadd@f1,?___ftadd
  3989  001198  C01D  F01D         	movff	___ftadd@f1+1,?___ftadd+1
  3990  00119C  C01E  F01E         	movff	___ftadd@f1+2,?___ftadd+2
  3991  0011A0  0012               	return	
  3992  0011A2                     l793:
  3993  0011A2  0E06               	movlw	6
  3994  0011A4  6E25               	movwf	___ftadd@sign,c
  3995  0011A6  BE1E               	btfsc	___ftadd@f1+2,7,c
  3996  0011A8  8E25               	bsf	___ftadd@sign,7,c
  3997  0011AA  BE21               	btfsc	___ftadd@f2+2,7,c
  3998  0011AC  8C25               	bsf	___ftadd@sign,6,c
  3999  0011AE  8E1D               	bsf	___ftadd@f1+1,7,c
  4000  0011B0  0EFF               	movlw	255
  4001  0011B2  161C               	andwf	___ftadd@f1,f,c
  4002  0011B4  0EFF               	movlw	255
  4003  0011B6  161D               	andwf	___ftadd@f1+1,f,c
  4004  0011B8  0E00               	movlw	0
  4005  0011BA  161E               	andwf	___ftadd@f1+2,f,c
  4006  0011BC  8E20               	bsf	___ftadd@f2+1,7,c
  4007  0011BE  0EFF               	movlw	255
  4008  0011C0  161F               	andwf	___ftadd@f2,f,c
  4009  0011C2  0EFF               	movlw	255
  4010  0011C4  1620               	andwf	___ftadd@f2+1,f,c
  4011  0011C6  0E00               	movlw	0
  4012  0011C8  1621               	andwf	___ftadd@f2+2,f,c
  4013  0011CA  5026               	movf	___ftadd@exp2,w,c
  4014  0011CC  5C27               	subwf	___ftadd@exp1,w,c
  4015  0011CE  B0D8               	btfsc	status,0,c
  4016  0011D0  D01B               	goto	l798
  4017  0011D2                     u1760:
  4018  0011D2  90D8               	bcf	status,0,c
  4019  0011D4  361F               	rlcf	___ftadd@f2,f,c
  4020  0011D6  3620               	rlcf	___ftadd@f2+1,f,c
  4021  0011D8  3621               	rlcf	___ftadd@f2+2,f,c
  4022  0011DA  0626               	decf	___ftadd@exp2,f,c
  4023  0011DC  5027               	movf	___ftadd@exp1,w,c
  4024  0011DE  1826               	xorwf	___ftadd@exp2,w,c
  4025  0011E0  B4D8               	btfsc	status,2,c
  4026  0011E2  D00D               	goto	l803
  4027  0011E4  0625               	decf	___ftadd@sign,f,c
  4028  0011E6  C025  F022         	movff	___ftadd@sign,??___ftadd
  4029  0011EA  0E07               	movlw	7
  4030  0011EC  1622               	andwf	??___ftadd,f,c
  4031  0011EE  B4D8               	btfsc	status,2,c
  4032  0011F0  D006               	goto	l803
  4033  0011F2  D7EF               	goto	u1760
  4034  0011F4  90D8               	bcf	status,0,c
  4035  0011F6  321E               	rrcf	___ftadd@f1+2,f,c
  4036  0011F8  321D               	rrcf	___ftadd@f1+1,f,c
  4037  0011FA  321C               	rrcf	___ftadd@f1,f,c
  4038  0011FC  2A27               	incf	___ftadd@exp1,f,c
  4039  0011FE                     l803:
  4040  0011FE  5026               	movf	___ftadd@exp2,w,c
  4041  001200  1827               	xorwf	___ftadd@exp1,w,c
  4042  001202  B4D8               	btfsc	status,2,c
  4043  001204  D01F               	goto	u1830
  4044  001206  D7F6               	goto	l804
  4045  001208                     l798:
  4046  001208  5027               	movf	___ftadd@exp1,w,c
  4047  00120A  5C26               	subwf	___ftadd@exp2,w,c
  4048  00120C  B0D8               	btfsc	status,0,c
  4049  00120E  D01A               	goto	u1830
  4050  001210                     u1800:
  4051  001210  90D8               	bcf	status,0,c
  4052  001212  361C               	rlcf	___ftadd@f1,f,c
  4053  001214  361D               	rlcf	___ftadd@f1+1,f,c
  4054  001216  361E               	rlcf	___ftadd@f1+2,f,c
  4055  001218  0627               	decf	___ftadd@exp1,f,c
  4056  00121A  5027               	movf	___ftadd@exp1,w,c
  4057  00121C  1826               	xorwf	___ftadd@exp2,w,c
  4058  00121E  B4D8               	btfsc	status,2,c
  4059  001220  D00D               	goto	l812
  4060  001222  0625               	decf	___ftadd@sign,f,c
  4061  001224  C025  F022         	movff	___ftadd@sign,??___ftadd
  4062  001228  0E07               	movlw	7
  4063  00122A  1622               	andwf	??___ftadd,f,c
  4064  00122C  B4D8               	btfsc	status,2,c
  4065  00122E  D006               	goto	l812
  4066  001230  D7EF               	goto	u1800
  4067  001232  90D8               	bcf	status,0,c
  4068  001234  3221               	rrcf	___ftadd@f2+2,f,c
  4069  001236  3220               	rrcf	___ftadd@f2+1,f,c
  4070  001238  321F               	rrcf	___ftadd@f2,f,c
  4071  00123A  2A26               	incf	___ftadd@exp2,f,c
  4072  00123C                     l812:
  4073  00123C  5026               	movf	___ftadd@exp2,w,c
  4074  00123E  1827               	xorwf	___ftadd@exp1,w,c
  4075  001240  A4D8               	btfss	status,2,c
  4076  001242  D7F7               	goto	l813
  4077  001244                     u1830:
  4078  001244  AE25               	btfss	___ftadd@sign,7,c
  4079  001246  D00C               	goto	l815
  4080  001248  0EFF               	movlw	255
  4081  00124A  1A1C               	xorwf	___ftadd@f1,f,c
  4082  00124C  0EFF               	movlw	255
  4083  00124E  1A1D               	xorwf	___ftadd@f1+1,f,c
  4084  001250  0EFF               	movlw	255
  4085  001252  1A1E               	xorwf	___ftadd@f1+2,f,c
  4086  001254  0E01               	movlw	1
  4087  001256  261C               	addwf	___ftadd@f1,f,c
  4088  001258  0E00               	movlw	0
  4089  00125A  221D               	addwfc	___ftadd@f1+1,f,c
  4090  00125C  0E00               	movlw	0
  4091  00125E  221E               	addwfc	___ftadd@f1+2,f,c
  4092  001260                     l815:
  4093  001260  AC25               	btfss	___ftadd@sign,6,c
  4094  001262  D00C               	goto	l816
  4095  001264  0EFF               	movlw	255
  4096  001266  1A1F               	xorwf	___ftadd@f2,f,c
  4097  001268  0EFF               	movlw	255
  4098  00126A  1A20               	xorwf	___ftadd@f2+1,f,c
  4099  00126C  0EFF               	movlw	255
  4100  00126E  1A21               	xorwf	___ftadd@f2+2,f,c
  4101  001270  0E01               	movlw	1
  4102  001272  261F               	addwf	___ftadd@f2,f,c
  4103  001274  0E00               	movlw	0
  4104  001276  2220               	addwfc	___ftadd@f2+1,f,c
  4105  001278  0E00               	movlw	0
  4106  00127A  2221               	addwfc	___ftadd@f2+2,f,c
  4107  00127C                     l816:
  4108  00127C  0E00               	movlw	0
  4109  00127E  6E25               	movwf	___ftadd@sign,c
  4110  001280  501C               	movf	___ftadd@f1,w,c
  4111  001282  261F               	addwf	___ftadd@f2,f,c
  4112  001284  501D               	movf	___ftadd@f1+1,w,c
  4113  001286  2220               	addwfc	___ftadd@f2+1,f,c
  4114  001288  501E               	movf	___ftadd@f1+2,w,c
  4115  00128A  2221               	addwfc	___ftadd@f2+2,f,c
  4116  00128C  AE21               	btfss	___ftadd@f2+2,7,c
  4117  00128E  D00E               	goto	l817
  4118  001290  0EFF               	movlw	255
  4119  001292  1A1F               	xorwf	___ftadd@f2,f,c
  4120  001294  0EFF               	movlw	255
  4121  001296  1A20               	xorwf	___ftadd@f2+1,f,c
  4122  001298  0EFF               	movlw	255
  4123  00129A  1A21               	xorwf	___ftadd@f2+2,f,c
  4124  00129C  0E01               	movlw	1
  4125  00129E  261F               	addwf	___ftadd@f2,f,c
  4126  0012A0  0E00               	movlw	0
  4127  0012A2  2220               	addwfc	___ftadd@f2+1,f,c
  4128  0012A4  0E00               	movlw	0
  4129  0012A6  2221               	addwfc	___ftadd@f2+2,f,c
  4130  0012A8  0E01               	movlw	1
  4131  0012AA  6E25               	movwf	___ftadd@sign,c
  4132  0012AC                     l817:
  4133  0012AC  C01F  F001         	movff	___ftadd@f2,___ftpack@arg
  4134  0012B0  C020  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4135  0012B4  C021  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4136  0012B8  C027  F004         	movff	___ftadd@exp1,___ftpack@exp
  4137  0012BC  C025  F005         	movff	___ftadd@sign,___ftpack@sign
  4138  0012C0  EC20  F00E         	call	___ftpack	;wreg free
  4139  0012C4  C001  F01C         	movff	?___ftpack,?___ftadd
  4140  0012C8  C002  F01D         	movff	?___ftpack+1,?___ftadd+1
  4141  0012CC  C003  F01E         	movff	?___ftpack+2,?___ftadd+2
  4142  0012D0  0012               	return	
  4143  0012D2                     __end_of___ftadd:
  4144                           	opt stack 0
  4145                           tblptru	equ	0xFF8
  4146                           tblptrh	equ	0xFF7
  4147                           tblptrl	equ	0xFF6
  4148                           tablat	equ	0xFF5
  4149                           prodh	equ	0xFF4
  4150                           prodl	equ	0xFF3
  4151                           intcon	equ	0xFF2
  4152                           intcon2	equ	0xFF1
  4153                           postinc0	equ	0xFEE
  4154                           wreg	equ	0xFE8
  4155                           postdec1	equ	0xFE5
  4156                           fsr1h	equ	0xFE2
  4157                           fsr1l	equ	0xFE1
  4158                           postinc2	equ	0xFDE
  4159                           postdec2	equ	0xFDD
  4160                           fsr2h	equ	0xFDA
  4161                           fsr2l	equ	0xFD9
  4162                           status	equ	0xFD8
  4163                           
  4164 ;; *************** function ___ftneg *****************
  4165 ;; Defined at:
  4166 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  f1              3    0[COMRAM] float 
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;		None
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  3    0[COMRAM] float 
  4173 ;; Registers used:
  4174 ;;		wreg, status,2, status,0
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4180 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4183 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4184 ;;Total ram usage:        3 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; This function calls:
  4187 ;;		Nothing
  4188 ;; This function is called by:
  4189 ;;		_pow
  4190 ;;		_exp
  4191 ;;		_EEPROM_24AA512_pageWrite
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text27
  4196  002364                     __ptext27:
  4197                           	opt stack 0
  4198  002364                     ___ftneg:
  4199                           	opt stack 27
  4200                           
  4201                           ;incstack = 0
  4202  002364  5001               	movf	___ftneg@f1,w,c
  4203  002366  1002               	iorwf	___ftneg@f1+1,w,c
  4204  002368  1003               	iorwf	___ftneg@f1+2,w,c
  4205  00236A  B4D8               	btfsc	status,2,c
  4206  00236C  D006               	goto	l848
  4207  00236E  0E00               	movlw	0
  4208  002370  1A01               	xorwf	___ftneg@f1,f,c
  4209  002372  0E00               	movlw	0
  4210  002374  1A02               	xorwf	___ftneg@f1+1,f,c
  4211  002376  0E80               	movlw	128
  4212  002378  1A03               	xorwf	___ftneg@f1+2,f,c
  4213  00237A                     l848:
  4214  00237A  C001  F001         	movff	___ftneg@f1,?___ftneg
  4215  00237E  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4216  002382  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4217  002386  0012               	return		;funcret
  4218  002388                     __end_of___ftneg:
  4219                           	opt stack 0
  4220                           tblptru	equ	0xFF8
  4221                           tblptrh	equ	0xFF7
  4222                           tblptrl	equ	0xFF6
  4223                           tablat	equ	0xFF5
  4224                           prodh	equ	0xFF4
  4225                           prodl	equ	0xFF3
  4226                           intcon	equ	0xFF2
  4227                           intcon2	equ	0xFF1
  4228                           postinc0	equ	0xFEE
  4229                           wreg	equ	0xFE8
  4230                           postdec1	equ	0xFE5
  4231                           fsr1h	equ	0xFE2
  4232                           fsr1l	equ	0xFE1
  4233                           postinc2	equ	0xFDE
  4234                           postdec2	equ	0xFDD
  4235                           fsr2h	equ	0xFDA
  4236                           fsr2l	equ	0xFD9
  4237                           status	equ	0xFD8
  4238                           
  4239 ;; *************** function ___ftdiv *****************
  4240 ;; Defined at:
  4241 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;  f1              3    8[COMRAM] float 
  4244 ;;  f2              3   11[COMRAM] float 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;  f3              3   18[COMRAM] float 
  4247 ;;  sign            1   22[COMRAM] unsigned char 
  4248 ;;  exp             1   21[COMRAM] unsigned char 
  4249 ;;  cntr            1   17[COMRAM] unsigned char 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  3    8[COMRAM] float 
  4252 ;; Registers used:
  4253 ;;		wreg, status,2, status,0, cstack
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4259 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4260 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4261 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4262 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4263 ;;Total ram usage:       15 bytes
  4264 ;; Hardware stack levels used:    1
  4265 ;; Hardware stack levels required when called:    1
  4266 ;; This function calls:
  4267 ;;		___ftpack
  4268 ;; This function is called by:
  4269 ;;		_exp
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	text28
  4274  00174E                     __ptext28:
  4275                           	opt stack 0
  4276  00174E                     ___ftdiv:
  4277                           	opt stack 26
  4278                           
  4279                           ;incstack = 0
  4280  00174E  C00B  F00F         	movff	___ftdiv@f1+2,??___ftdiv
  4281  001752  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  4282  001754  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  4283  001756  340A               	rlcf	___ftdiv@f1+1,w,c
  4284  001758  360F               	rlcf	??___ftdiv& (0+255),f,c
  4285  00175A  E301               	bnc	u2061
  4286  00175C  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  4287  00175E                     u2061:
  4288  00175E  500F               	movf	??___ftdiv,w,c
  4289  001760  6E16               	movwf	___ftdiv@exp,c
  4290  001762  5016               	movf	___ftdiv@exp,w,c
  4291  001764  A4D8               	btfss	status,2,c
  4292  001766  D007               	goto	l822
  4293  001768  0E00               	movlw	0
  4294  00176A  6E09               	movwf	?___ftdiv,c
  4295  00176C  0E00               	movlw	0
  4296  00176E  6E0A               	movwf	?___ftdiv+1,c
  4297  001770  0E00               	movlw	0
  4298  001772  6E0B               	movwf	?___ftdiv+2,c
  4299  001774  0012               	return	
  4300  001776                     l822:
  4301  001776  C00E  F00F         	movff	___ftdiv@f2+2,??___ftdiv
  4302  00177A  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  4303  00177C  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  4304  00177E  340D               	rlcf	___ftdiv@f2+1,w,c
  4305  001780  360F               	rlcf	??___ftdiv& (0+255),f,c
  4306  001782  E301               	bnc	u2081
  4307  001784  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  4308  001786                     u2081:
  4309  001786  500F               	movf	??___ftdiv,w,c
  4310  001788  6E17               	movwf	___ftdiv@sign,c
  4311  00178A  5017               	movf	___ftdiv@sign,w,c
  4312  00178C  A4D8               	btfss	status,2,c
  4313  00178E  D007               	goto	l824
  4314  001790  0E00               	movlw	0
  4315  001792  6E09               	movwf	?___ftdiv,c
  4316  001794  0E00               	movlw	0
  4317  001796  6E0A               	movwf	?___ftdiv+1,c
  4318  001798  0E00               	movlw	0
  4319  00179A  6E0B               	movwf	?___ftdiv+2,c
  4320  00179C  0012               	return	
  4321  00179E                     l824:
  4322  00179E  0E00               	movlw	0
  4323  0017A0  6E13               	movwf	___ftdiv@f3,c
  4324  0017A2  0E00               	movlw	0
  4325  0017A4  6E14               	movwf	___ftdiv@f3+1,c
  4326  0017A6  0E00               	movlw	0
  4327  0017A8  6E15               	movwf	___ftdiv@f3+2,c
  4328  0017AA  5017               	movf	___ftdiv@sign,w,c
  4329  0017AC  0F89               	addlw	137
  4330  0017AE  5E16               	subwf	___ftdiv@exp,f,c
  4331  0017B0  C00B  F017         	movff	___ftdiv@f1+2,___ftdiv@sign
  4332  0017B4  500E               	movf	___ftdiv@f2+2,w,c
  4333  0017B6  1A17               	xorwf	___ftdiv@sign,f,c
  4334  0017B8  0E80               	movlw	128
  4335  0017BA  1617               	andwf	___ftdiv@sign,f,c
  4336  0017BC  8E0A               	bsf	___ftdiv@f1+1,7,c
  4337  0017BE  0EFF               	movlw	255
  4338  0017C0  1609               	andwf	___ftdiv@f1,f,c
  4339  0017C2  0EFF               	movlw	255
  4340  0017C4  160A               	andwf	___ftdiv@f1+1,f,c
  4341  0017C6  0E00               	movlw	0
  4342  0017C8  160B               	andwf	___ftdiv@f1+2,f,c
  4343  0017CA  8E0D               	bsf	___ftdiv@f2+1,7,c
  4344  0017CC  0EFF               	movlw	255
  4345  0017CE  160C               	andwf	___ftdiv@f2,f,c
  4346  0017D0  0EFF               	movlw	255
  4347  0017D2  160D               	andwf	___ftdiv@f2+1,f,c
  4348  0017D4  0E00               	movlw	0
  4349  0017D6  160E               	andwf	___ftdiv@f2+2,f,c
  4350  0017D8  0E18               	movlw	24
  4351  0017DA  6E12               	movwf	___ftdiv@cntr,c
  4352  0017DC  90D8               	bcf	status,0,c
  4353  0017DE  3613               	rlcf	___ftdiv@f3,f,c
  4354  0017E0  3614               	rlcf	___ftdiv@f3+1,f,c
  4355  0017E2  3615               	rlcf	___ftdiv@f3+2,f,c
  4356  0017E4  500C               	movf	___ftdiv@f2,w,c
  4357  0017E6  5C09               	subwf	___ftdiv@f1,w,c
  4358  0017E8  500D               	movf	___ftdiv@f2+1,w,c
  4359  0017EA  580A               	subwfb	___ftdiv@f1+1,w,c
  4360  0017EC  500E               	movf	___ftdiv@f2+2,w,c
  4361  0017EE  580B               	subwfb	___ftdiv@f1+2,w,c
  4362  0017F0  A0D8               	btfss	status,0,c
  4363  0017F2  D007               	goto	l826
  4364  0017F4  500C               	movf	___ftdiv@f2,w,c
  4365  0017F6  5E09               	subwf	___ftdiv@f1,f,c
  4366  0017F8  500D               	movf	___ftdiv@f2+1,w,c
  4367  0017FA  5A0A               	subwfb	___ftdiv@f1+1,f,c
  4368  0017FC  500E               	movf	___ftdiv@f2+2,w,c
  4369  0017FE  5A0B               	subwfb	___ftdiv@f1+2,f,c
  4370  001800  8013               	bsf	___ftdiv@f3,0,c
  4371  001802                     l826:
  4372  001802  90D8               	bcf	status,0,c
  4373  001804  3609               	rlcf	___ftdiv@f1,f,c
  4374  001806  360A               	rlcf	___ftdiv@f1+1,f,c
  4375  001808  360B               	rlcf	___ftdiv@f1+2,f,c
  4376  00180A  2E12               	decfsz	___ftdiv@cntr,f,c
  4377  00180C  D7E7               	goto	l825
  4378  00180E  C013  F001         	movff	___ftdiv@f3,___ftpack@arg
  4379  001812  C014  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4380  001816  C015  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4381  00181A  C016  F004         	movff	___ftdiv@exp,___ftpack@exp
  4382  00181E  C017  F005         	movff	___ftdiv@sign,___ftpack@sign
  4383  001822  EC20  F00E         	call	___ftpack	;wreg free
  4384  001826  C001  F009         	movff	?___ftpack,?___ftdiv
  4385  00182A  C002  F00A         	movff	?___ftpack+1,?___ftdiv+1
  4386  00182E  C003  F00B         	movff	?___ftpack+2,?___ftdiv+2
  4387  001832  0012               	return	
  4388  001834                     __end_of___ftdiv:
  4389                           	opt stack 0
  4390                           tblptru	equ	0xFF8
  4391                           tblptrh	equ	0xFF7
  4392                           tblptrl	equ	0xFF6
  4393                           tablat	equ	0xFF5
  4394                           prodh	equ	0xFF4
  4395                           prodl	equ	0xFF3
  4396                           intcon	equ	0xFF2
  4397                           intcon2	equ	0xFF1
  4398                           postinc0	equ	0xFEE
  4399                           wreg	equ	0xFE8
  4400                           postdec1	equ	0xFE5
  4401                           fsr1h	equ	0xFE2
  4402                           fsr1l	equ	0xFE1
  4403                           postinc2	equ	0xFDE
  4404                           postdec2	equ	0xFDD
  4405                           fsr2h	equ	0xFDA
  4406                           fsr2l	equ	0xFD9
  4407                           status	equ	0xFD8
  4408                           
  4409 ;; *************** function ___awtoft *****************
  4410 ;; Defined at:
  4411 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  c               2    8[COMRAM] int 
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  sign            1   11[COMRAM] unsigned char 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  3    8[COMRAM] float 
  4418 ;; Registers used:
  4419 ;;		wreg, status,2, status,0, cstack
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4425 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4428 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4429 ;;Total ram usage:        4 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; Hardware stack levels required when called:    1
  4432 ;; This function calls:
  4433 ;;		___ftpack
  4434 ;; This function is called by:
  4435 ;;		_exp
  4436 ;;		_log
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text29
  4441  0022B0                     __ptext29:
  4442                           	opt stack 0
  4443  0022B0                     ___awtoft:
  4444                           	opt stack 26
  4445                           
  4446                           ;incstack = 0
  4447  0022B0  0E00               	movlw	0
  4448  0022B2  6E0C               	movwf	___awtoft@sign,c
  4449  0022B4  AE0A               	btfss	___awtoft@c+1,7,c
  4450  0022B6  D006               	goto	l739
  4451  0022B8  6C09               	negf	___awtoft@c,c
  4452  0022BA  1E0A               	comf	___awtoft@c+1,f,c
  4453  0022BC  B0D8               	btfsc	status,0,c
  4454  0022BE  2A0A               	incf	___awtoft@c+1,f,c
  4455  0022C0  0E01               	movlw	1
  4456  0022C2  6E0C               	movwf	___awtoft@sign,c
  4457  0022C4                     l739:
  4458  0022C4  C009  F001         	movff	___awtoft@c,___ftpack@arg
  4459  0022C8  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  4460  0022CC  6A03               	clrf	___ftpack@arg+2,c
  4461  0022CE  0E8E               	movlw	142
  4462  0022D0  6E04               	movwf	___ftpack@exp,c
  4463  0022D2  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  4464  0022D6  EC20  F00E         	call	___ftpack	;wreg free
  4465  0022DA  C001  F009         	movff	?___ftpack,?___awtoft
  4466  0022DE  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  4467  0022E2  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  4468  0022E6  0012               	return	
  4469  0022E8                     __end_of___awtoft:
  4470                           	opt stack 0
  4471                           tblptru	equ	0xFF8
  4472                           tblptrh	equ	0xFF7
  4473                           tblptrl	equ	0xFF6
  4474                           tablat	equ	0xFF5
  4475                           prodh	equ	0xFF4
  4476                           prodl	equ	0xFF3
  4477                           intcon	equ	0xFF2
  4478                           intcon2	equ	0xFF1
  4479                           postinc0	equ	0xFEE
  4480                           wreg	equ	0xFE8
  4481                           postdec1	equ	0xFE5
  4482                           fsr1h	equ	0xFE2
  4483                           fsr1l	equ	0xFE1
  4484                           postinc2	equ	0xFDE
  4485                           postdec2	equ	0xFDD
  4486                           fsr2h	equ	0xFDA
  4487                           fsr2l	equ	0xFD9
  4488                           status	equ	0xFD8
  4489                           
  4490 ;; *************** function ___lltoft *****************
  4491 ;; Defined at:
  4492 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  c               4    8[COMRAM] unsigned long 
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;  exp             1   16[COMRAM] unsigned char 
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  3    8[COMRAM] float 
  4499 ;; Registers used:
  4500 ;;		wreg, status,2, status,0, cstack
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4506 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4508 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4509 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4510 ;;Total ram usage:        9 bytes
  4511 ;; Hardware stack levels used:    1
  4512 ;; Hardware stack levels required when called:    1
  4513 ;; This function calls:
  4514 ;;		___ftpack
  4515 ;; This function is called by:
  4516 ;;		_pow
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           	psect	text30
  4521  00202A                     __ptext30:
  4522                           	opt stack 0
  4523  00202A                     ___lltoft:
  4524                           	opt stack 27
  4525                           
  4526                           ;incstack = 0
  4527  00202A  0E8E               	movlw	142
  4528  00202C  6E11               	movwf	___lltoft@exp,c
  4529  00202E  D006               	goto	l929
  4530  002030  90D8               	bcf	status,0,c
  4531  002032  320C               	rrcf	___lltoft@c+3,f,c
  4532  002034  320B               	rrcf	___lltoft@c+2,f,c
  4533  002036  320A               	rrcf	___lltoft@c+1,f,c
  4534  002038  3209               	rrcf	___lltoft@c,f,c
  4535  00203A  2A11               	incf	___lltoft@exp,f,c
  4536  00203C                     l929:
  4537  00203C  0E00               	movlw	0
  4538  00203E  1409               	andwf	___lltoft@c,w,c
  4539  002040  6E0D               	movwf	??___lltoft& (0+255),c
  4540  002042  0E00               	movlw	0
  4541  002044  140A               	andwf	___lltoft@c+1,w,c
  4542  002046  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  4543  002048  0E00               	movlw	0
  4544  00204A  140B               	andwf	___lltoft@c+2,w,c
  4545  00204C  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  4546  00204E  0EFF               	movlw	255
  4547  002050  140C               	andwf	___lltoft@c+3,w,c
  4548  002052  6E10               	movwf	(??___lltoft+3)& (0+255),c
  4549  002054  500D               	movf	??___lltoft,w,c
  4550  002056  100E               	iorwf	??___lltoft+1,w,c
  4551  002058  100F               	iorwf	??___lltoft+2,w,c
  4552  00205A  1010               	iorwf	??___lltoft+3,w,c
  4553  00205C  A4D8               	btfss	status,2,c
  4554  00205E  D7E8               	goto	l930
  4555  002060  C009  F001         	movff	___lltoft@c,___ftpack@arg
  4556  002064  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  4557  002068  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  4558  00206C  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4559  002070  0E00               	movlw	0
  4560  002072  6E05               	movwf	___ftpack@sign,c
  4561  002074  EC20  F00E         	call	___ftpack	;wreg free
  4562  002078  C001  F009         	movff	?___ftpack,?___lltoft
  4563  00207C  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4564  002080  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4565  002084  0012               	return	
  4566  002086                     __end_of___lltoft:
  4567                           	opt stack 0
  4568                           tblptru	equ	0xFF8
  4569                           tblptrh	equ	0xFF7
  4570                           tblptrl	equ	0xFF6
  4571                           tablat	equ	0xFF5
  4572                           prodh	equ	0xFF4
  4573                           prodl	equ	0xFF3
  4574                           intcon	equ	0xFF2
  4575                           intcon2	equ	0xFF1
  4576                           postinc0	equ	0xFEE
  4577                           wreg	equ	0xFE8
  4578                           postdec1	equ	0xFE5
  4579                           fsr1h	equ	0xFE2
  4580                           fsr1l	equ	0xFE1
  4581                           postinc2	equ	0xFDE
  4582                           postdec2	equ	0xFDD
  4583                           fsr2h	equ	0xFDA
  4584                           fsr2l	equ	0xFD9
  4585                           status	equ	0xFD8
  4586                           
  4587 ;; *************** function ___lwtoft *****************
  4588 ;; Defined at:
  4589 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;  c               2    8[COMRAM] unsigned int 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;		None
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  3    8[COMRAM] float 
  4596 ;; Registers used:
  4597 ;;		wreg, status,2, status,0, cstack
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4603 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4606 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4607 ;;Total ram usage:        3 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:    1
  4610 ;; This function calls:
  4611 ;;		___ftpack
  4612 ;; This function is called by:
  4613 ;;		_MCP9801_TempRead
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           	psect	text31
  4618  002388                     __ptext31:
  4619                           	opt stack 0
  4620  002388                     ___lwtoft:
  4621                           	opt stack 28
  4622                           
  4623                           ;incstack = 0
  4624  002388  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  4625  00238C  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  4626  002390  6A03               	clrf	___ftpack@arg+2,c
  4627  002392  0E8E               	movlw	142
  4628  002394  6E04               	movwf	___ftpack@exp,c
  4629  002396  0E00               	movlw	0
  4630  002398  6E05               	movwf	___ftpack@sign,c
  4631  00239A  EC20  F00E         	call	___ftpack	;wreg free
  4632  00239E  C001  F009         	movff	?___ftpack,?___lwtoft
  4633  0023A2  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  4634  0023A6  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  4635  0023AA  0012               	return	
  4636  0023AC                     __end_of___lwtoft:
  4637                           	opt stack 0
  4638                           tblptru	equ	0xFF8
  4639                           tblptrh	equ	0xFF7
  4640                           tblptrl	equ	0xFF6
  4641                           tablat	equ	0xFF5
  4642                           prodh	equ	0xFF4
  4643                           prodl	equ	0xFF3
  4644                           intcon	equ	0xFF2
  4645                           intcon2	equ	0xFF1
  4646                           postinc0	equ	0xFEE
  4647                           wreg	equ	0xFE8
  4648                           postdec1	equ	0xFE5
  4649                           fsr1h	equ	0xFE2
  4650                           fsr1l	equ	0xFE1
  4651                           postinc2	equ	0xFDE
  4652                           postdec2	equ	0xFDD
  4653                           fsr2h	equ	0xFDA
  4654                           fsr2l	equ	0xFD9
  4655                           status	equ	0xFD8
  4656                           
  4657 ;; *************** function ___ftpack *****************
  4658 ;; Defined at:
  4659 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  arg             3    0[COMRAM] unsigned um
  4662 ;;  exp             1    3[COMRAM] unsigned char 
  4663 ;;  sign            1    4[COMRAM] unsigned char 
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;		None
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  3    0[COMRAM] float 
  4668 ;; Registers used:
  4669 ;;		wreg, status,2, status,0
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4675 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4677 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4678 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4679 ;;Total ram usage:        8 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		___altoft
  4685 ;;		___awtoft
  4686 ;;		___ftadd
  4687 ;;		___ftdiv
  4688 ;;		___ftmul
  4689 ;;		___lltoft
  4690 ;;		___lwtoft
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694                           	psect	text32
  4695  001C40                     __ptext32:
  4696                           	opt stack 0
  4697  001C40                     ___ftpack:
  4698                           	opt stack 25
  4699                           
  4700                           ;incstack = 0
  4701  001C40  5004               	movf	___ftpack@exp,w,c
  4702  001C42  B4D8               	btfsc	status,2,c
  4703  001C44  D005               	goto	u1570
  4704  001C46  5001               	movf	___ftpack@arg,w,c
  4705  001C48  1002               	iorwf	___ftpack@arg+1,w,c
  4706  001C4A  1003               	iorwf	___ftpack@arg+2,w,c
  4707  001C4C  A4D8               	btfss	status,2,c
  4708  001C4E  D00C               	goto	l758
  4709  001C50                     u1570:
  4710  001C50  0E00               	movlw	0
  4711  001C52  6E01               	movwf	?___ftpack,c
  4712  001C54  0E00               	movlw	0
  4713  001C56  6E02               	movwf	?___ftpack+1,c
  4714  001C58  0E00               	movlw	0
  4715  001C5A  6E03               	movwf	?___ftpack+2,c
  4716  001C5C  0012               	return	
  4717  001C5E  2A04               	incf	___ftpack@exp,f,c
  4718  001C60  90D8               	bcf	status,0,c
  4719  001C62  3203               	rrcf	___ftpack@arg+2,f,c
  4720  001C64  3202               	rrcf	___ftpack@arg+1,f,c
  4721  001C66  3201               	rrcf	___ftpack@arg,f,c
  4722  001C68                     l758:
  4723  001C68  0E00               	movlw	0
  4724  001C6A  1401               	andwf	___ftpack@arg,w,c
  4725  001C6C  6E06               	movwf	??___ftpack& (0+255),c
  4726  001C6E  0E00               	movlw	0
  4727  001C70  1402               	andwf	___ftpack@arg+1,w,c
  4728  001C72  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4729  001C74  0EFE               	movlw	254
  4730  001C76  1403               	andwf	___ftpack@arg+2,w,c
  4731  001C78  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4732  001C7A  5006               	movf	??___ftpack,w,c
  4733  001C7C  1007               	iorwf	??___ftpack+1,w,c
  4734  001C7E  1008               	iorwf	??___ftpack+2,w,c
  4735  001C80  B4D8               	btfsc	status,2,c
  4736  001C82  D00C               	goto	l761
  4737  001C84  D7EC               	goto	l759
  4738  001C86  2A04               	incf	___ftpack@exp,f,c
  4739  001C88  0E01               	movlw	1
  4740  001C8A  2601               	addwf	___ftpack@arg,f,c
  4741  001C8C  0E00               	movlw	0
  4742  001C8E  2202               	addwfc	___ftpack@arg+1,f,c
  4743  001C90  0E00               	movlw	0
  4744  001C92  2203               	addwfc	___ftpack@arg+2,f,c
  4745  001C94  90D8               	bcf	status,0,c
  4746  001C96  3203               	rrcf	___ftpack@arg+2,f,c
  4747  001C98  3202               	rrcf	___ftpack@arg+1,f,c
  4748  001C9A  3201               	rrcf	___ftpack@arg,f,c
  4749  001C9C                     l761:
  4750  001C9C  0E00               	movlw	0
  4751  001C9E  1401               	andwf	___ftpack@arg,w,c
  4752  001CA0  6E06               	movwf	??___ftpack& (0+255),c
  4753  001CA2  0E00               	movlw	0
  4754  001CA4  1402               	andwf	___ftpack@arg+1,w,c
  4755  001CA6  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4756  001CA8  0EFF               	movlw	255
  4757  001CAA  1403               	andwf	___ftpack@arg+2,w,c
  4758  001CAC  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4759  001CAE  5006               	movf	??___ftpack,w,c
  4760  001CB0  1007               	iorwf	??___ftpack+1,w,c
  4761  001CB2  1008               	iorwf	??___ftpack+2,w,c
  4762  001CB4  B4D8               	btfsc	status,2,c
  4763  001CB6  D006               	goto	l764
  4764  001CB8  D7E6               	goto	l762
  4765  001CBA  0604               	decf	___ftpack@exp,f,c
  4766  001CBC  90D8               	bcf	status,0,c
  4767  001CBE  3601               	rlcf	___ftpack@arg,f,c
  4768  001CC0  3602               	rlcf	___ftpack@arg+1,f,c
  4769  001CC2  3603               	rlcf	___ftpack@arg+2,f,c
  4770  001CC4                     l764:
  4771  001CC4  BE02               	btfsc	___ftpack@arg+1,7,c
  4772  001CC6  D003               	goto	u1610
  4773  001CC8  0E02               	movlw	2
  4774  001CCA  6004               	cpfslt	___ftpack@exp,c
  4775  001CCC  D7F6               	goto	l765
  4776  001CCE                     u1610:
  4777  001CCE  A004               	btfss	___ftpack@exp,0,c
  4778  001CD0  9E02               	bcf	___ftpack@arg+1,7,c
  4779  001CD2  90D8               	bcf	status,0,c
  4780  001CD4  3204               	rrcf	___ftpack@exp,f,c
  4781  001CD6  5004               	movf	___ftpack@exp,w,c
  4782  001CD8  1203               	iorwf	___ftpack@arg+2,f,c
  4783  001CDA  5005               	movf	___ftpack@sign,w,c
  4784  001CDC  A4D8               	btfss	status,2,c
  4785  001CDE  8E03               	bsf	___ftpack@arg+2,7,c
  4786  001CE0  C001  F001         	movff	___ftpack@arg,?___ftpack
  4787  001CE4  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  4788  001CE8  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  4789  001CEC  0012               	return	
  4790  001CEE                     __end_of___ftpack:
  4791                           	opt stack 0
  4792                           tblptru	equ	0xFF8
  4793                           tblptrh	equ	0xFF7
  4794                           tblptrl	equ	0xFF6
  4795                           tablat	equ	0xFF5
  4796                           prodh	equ	0xFF4
  4797                           prodl	equ	0xFF3
  4798                           intcon	equ	0xFF2
  4799                           intcon2	equ	0xFF1
  4800                           postinc0	equ	0xFEE
  4801                           wreg	equ	0xFE8
  4802                           postdec1	equ	0xFE5
  4803                           fsr1h	equ	0xFE2
  4804                           fsr1l	equ	0xFE1
  4805                           postinc2	equ	0xFDE
  4806                           postdec2	equ	0xFDD
  4807                           fsr2h	equ	0xFDA
  4808                           fsr2l	equ	0xFD9
  4809                           status	equ	0xFD8
  4810                           
  4811 ;; *************** function _I2C_repeated_Start *****************
  4812 ;; Defined at:
  4813 ;;		line 57 in file "I2C.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;		None
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;		None
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		None
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4831 ;;Total ram usage:        0 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		_MCP9801_TempRead
  4837 ;;		_MCP23008_read
  4838 ;;		_EEPROM_24AA512_Read
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           	psect	text33
  4843  002456                     __ptext33:
  4844                           	opt stack 0
  4845  002456                     _I2C_repeated_Start:
  4846                           	opt stack 29
  4847                           
  4848                           ;I2C.c: 58: SSP2CON2bits.RSEN = 1;
  4849                           
  4850                           ;incstack = 0
  4851  002456  8271               	bsf	3953,1,c	;volatile
  4852  002458  B271               	btfsc	3953,1,c	;volatile
  4853  00245A  D7FE               	goto	l445
  4854                           
  4855                           ;I2C.c: 60: PIR3bits.SSP2IF = 0;
  4856  00245C  9EA4               	bcf	4004,7,c	;volatile
  4857  00245E  0012               	return		;funcret
  4858  002460                     __end_of_I2C_repeated_Start:
  4859                           	opt stack 0
  4860                           tblptru	equ	0xFF8
  4861                           tblptrh	equ	0xFF7
  4862                           tblptrl	equ	0xFF6
  4863                           tablat	equ	0xFF5
  4864                           prodh	equ	0xFF4
  4865                           prodl	equ	0xFF3
  4866                           intcon	equ	0xFF2
  4867                           intcon2	equ	0xFF1
  4868                           postinc0	equ	0xFEE
  4869                           wreg	equ	0xFE8
  4870                           postdec1	equ	0xFE5
  4871                           fsr1h	equ	0xFE2
  4872                           fsr1l	equ	0xFE1
  4873                           postinc2	equ	0xFDE
  4874                           postdec2	equ	0xFDD
  4875                           fsr2h	equ	0xFDA
  4876                           fsr2l	equ	0xFD9
  4877                           status	equ	0xFD8
  4878                           
  4879 ;; *************** function _I2C_read *****************
  4880 ;; Defined at:
  4881 ;;		line 43 in file "I2C.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;  ACK_NACK        2    0[COMRAM] int 
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;		None
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  2    0[COMRAM] int 
  4888 ;; Registers used:
  4889 ;;		None
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4895 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4898 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4899 ;;Total ram usage:        2 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; This function calls:
  4902 ;;		Nothing
  4903 ;; This function is called by:
  4904 ;;		_MCP9801_TempRead
  4905 ;;		_MCP23008_read
  4906 ;;		_EEPROM_24AA512_Read
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text34
  4911  0023FA                     __ptext34:
  4912                           	opt stack 0
  4913  0023FA                     _I2C_read:
  4914                           	opt stack 29
  4915                           
  4916                           ;I2C.c: 44: SSP2CON2bits.RCEN = 1;
  4917                           
  4918                           ;incstack = 0
  4919  0023FA  8671               	bsf	3953,3,c	;volatile
  4920  0023FC  A073               	btfss	3955,0,c	;volatile
  4921  0023FE  D7FE               	goto	l430
  4922                           
  4923                           ;I2C.c: 46: SSP2CON2bits.ACKDT = ACK_NACK;
  4924  002400  B001               	btfsc	I2C_read@ACK_NACK,0,c
  4925  002402  D002               	bra	u2605
  4926  002404  9A71               	bcf	3953,5,c	;volatile
  4927  002406  D001               	bra	u2606
  4928  002408                     u2605:
  4929  002408  8A71               	bsf	3953,5,c	;volatile
  4930  00240A                     u2606:
  4931                           
  4932                           ;I2C.c: 47: while (SSP2CON2bits.ACKEN);
  4933  00240A  A871               	btfss	3953,4,c	;volatile
  4934  00240C  0012               	return	
  4935  00240E  D7FD               	goto	u2606
  4936  002410                     __end_of_I2C_read:
  4937                           	opt stack 0
  4938                           tblptru	equ	0xFF8
  4939                           tblptrh	equ	0xFF7
  4940                           tblptrl	equ	0xFF6
  4941                           tablat	equ	0xFF5
  4942                           prodh	equ	0xFF4
  4943                           prodl	equ	0xFF3
  4944                           intcon	equ	0xFF2
  4945                           intcon2	equ	0xFF1
  4946                           postinc0	equ	0xFEE
  4947                           wreg	equ	0xFE8
  4948                           postdec1	equ	0xFE5
  4949                           fsr1h	equ	0xFE2
  4950                           fsr1l	equ	0xFE1
  4951                           postinc2	equ	0xFDE
  4952                           postdec2	equ	0xFDD
  4953                           fsr2h	equ	0xFDA
  4954                           fsr2l	equ	0xFD9
  4955                           status	equ	0xFD8
  4956                           
  4957 ;; *************** function _MCP9801_Init *****************
  4958 ;; Defined at:
  4959 ;;		line 12 in file "MCP9801_Temp_Sensor.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;		None
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;		None
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  1    wreg      void 
  4966 ;; Registers used:
  4967 ;;		wreg, cstack
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4977 ;;Total ram usage:        0 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; Hardware stack levels required when called:    2
  4980 ;; This function calls:
  4981 ;;		_I2C_Write
  4982 ;;		_I2C_start
  4983 ;;		_I2C_stop
  4984 ;; This function is called by:
  4985 ;;		_main
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           	psect	text35
  4990  0023AC                     __ptext35:
  4991                           	opt stack 0
  4992  0023AC                     _MCP9801_Init:
  4993                           	opt stack 28
  4994                           
  4995                           ;MCP9801_Temp_Sensor.c: 13: I2C_start();
  4996                           
  4997                           ;incstack = 0
  4998  0023AC  EC30  F012         	call	_I2C_start	;wreg free
  4999                           
  5000                           ;MCP9801_Temp_Sensor.c: 14: I2C_Write(0x90);
  5001  0023B0  0E90               	movlw	144
  5002  0023B2  ECE4  F011         	call	_I2C_Write
  5003                           
  5004                           ;MCP9801_Temp_Sensor.c: 15: I2C_Write(0x01);
  5005  0023B6  0E01               	movlw	1
  5006  0023B8  ECE4  F011         	call	_I2C_Write
  5007                           
  5008                           ;MCP9801_Temp_Sensor.c: 16: I2C_Write(0x60);
  5009  0023BC  0E60               	movlw	96
  5010  0023BE  ECE4  F011         	call	_I2C_Write
  5011                           
  5012                           ;MCP9801_Temp_Sensor.c: 17: I2C_stop();
  5013  0023C2  EC35  F012         	call	_I2C_stop	;wreg free
  5014  0023C6  0012               	return		;funcret
  5015  0023C8                     __end_of_MCP9801_Init:
  5016                           	opt stack 0
  5017                           tblptru	equ	0xFF8
  5018                           tblptrh	equ	0xFF7
  5019                           tblptrl	equ	0xFF6
  5020                           tablat	equ	0xFF5
  5021                           prodh	equ	0xFF4
  5022                           prodl	equ	0xFF3
  5023                           intcon	equ	0xFF2
  5024                           intcon2	equ	0xFF1
  5025                           postinc0	equ	0xFEE
  5026                           wreg	equ	0xFE8
  5027                           postdec1	equ	0xFE5
  5028                           fsr1h	equ	0xFE2
  5029                           fsr1l	equ	0xFE1
  5030                           postinc2	equ	0xFDE
  5031                           postdec2	equ	0xFDD
  5032                           fsr2h	equ	0xFDA
  5033                           fsr2l	equ	0xFD9
  5034                           status	equ	0xFD8
  5035                           
  5036 ;; *************** function _I2C_buffClear *****************
  5037 ;; Defined at:
  5038 ;;		line 81 in file "I2C.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      void 
  5045 ;; Registers used:
  5046 ;;		wreg, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5056 ;;Total ram usage:        0 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    2
  5059 ;; This function calls:
  5060 ;;		_I2C_Write
  5061 ;;		_I2C_start
  5062 ;;		_I2C_stop
  5063 ;; This function is called by:
  5064 ;;		_main
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text36
  5069  002410                     __ptext36:
  5070                           	opt stack 0
  5071  002410                     _I2C_buffClear:
  5072                           	opt stack 28
  5073                           
  5074                           ;I2C.c: 82: I2C_start();
  5075                           
  5076                           ;incstack = 0
  5077  002410  EC30  F012         	call	_I2C_start	;wreg free
  5078                           
  5079                           ;I2C.c: 83: I2C_Write(0x00);
  5080  002414  0E00               	movlw	0
  5081  002416  ECE4  F011         	call	_I2C_Write
  5082                           
  5083                           ;I2C.c: 84: I2C_stop();
  5084  00241A  EC35  F012         	call	_I2C_stop	;wreg free
  5085  00241E  0012               	return		;funcret
  5086  002420                     __end_of_I2C_buffClear:
  5087                           	opt stack 0
  5088                           tblptru	equ	0xFF8
  5089                           tblptrh	equ	0xFF7
  5090                           tblptrl	equ	0xFF6
  5091                           tablat	equ	0xFF5
  5092                           prodh	equ	0xFF4
  5093                           prodl	equ	0xFF3
  5094                           intcon	equ	0xFF2
  5095                           intcon2	equ	0xFF1
  5096                           postinc0	equ	0xFEE
  5097                           wreg	equ	0xFE8
  5098                           postdec1	equ	0xFE5
  5099                           fsr1h	equ	0xFE2
  5100                           fsr1l	equ	0xFE1
  5101                           postinc2	equ	0xFDE
  5102                           postdec2	equ	0xFDD
  5103                           fsr2h	equ	0xFDA
  5104                           fsr2l	equ	0xFD9
  5105                           status	equ	0xFD8
  5106                           
  5107 ;; *************** function _I2C_start *****************
  5108 ;; Defined at:
  5109 ;;		line 51 in file "I2C.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;		None
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      void 
  5116 ;; Registers used:
  5117 ;;		None
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5127 ;;Total ram usage:        0 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; This function calls:
  5130 ;;		Nothing
  5131 ;; This function is called by:
  5132 ;;		_I2C_buffClear
  5133 ;;		_MCP9801_Init
  5134 ;;		_MCP9801_TempRead
  5135 ;;		_I2C_BusSCan
  5136 ;;		_MCP23008_Init
  5137 ;;		_MCP23008_Write
  5138 ;;		_MCP23008_read
  5139 ;;		_EEPROM_24AA512_Write
  5140 ;;		_EEPROM_24AA512_Read
  5141 ;;		_EEPROM_24AA512_pageWrite
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           	psect	text37
  5146  002460                     __ptext37:
  5147                           	opt stack 0
  5148  002460                     _I2C_start:
  5149                           	opt stack 29
  5150                           
  5151                           ;I2C.c: 52: SSP2CON2bits.SEN = 1;
  5152                           
  5153                           ;incstack = 0
  5154  002460  8071               	bsf	3953,0,c	;volatile
  5155  002462  B071               	btfsc	3953,0,c	;volatile
  5156  002464  D7FE               	goto	l439
  5157                           
  5158                           ;I2C.c: 54: PIR3bits.SSP2IF = 0;
  5159  002466  9EA4               	bcf	4004,7,c	;volatile
  5160  002468  0012               	return		;funcret
  5161  00246A                     __end_of_I2C_start:
  5162                           	opt stack 0
  5163                           tblptru	equ	0xFF8
  5164                           tblptrh	equ	0xFF7
  5165                           tblptrl	equ	0xFF6
  5166                           tablat	equ	0xFF5
  5167                           prodh	equ	0xFF4
  5168                           prodl	equ	0xFF3
  5169                           intcon	equ	0xFF2
  5170                           intcon2	equ	0xFF1
  5171                           postinc0	equ	0xFEE
  5172                           wreg	equ	0xFE8
  5173                           postdec1	equ	0xFE5
  5174                           fsr1h	equ	0xFE2
  5175                           fsr1l	equ	0xFE1
  5176                           postinc2	equ	0xFDE
  5177                           postdec2	equ	0xFDD
  5178                           fsr2h	equ	0xFDA
  5179                           fsr2l	equ	0xFD9
  5180                           status	equ	0xFD8
  5181                           
  5182 ;; *************** function _I2C_Write *****************
  5183 ;; Defined at:
  5184 ;;		line 32 in file "I2C.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  data            1    wreg     unsigned char 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  data            1    0[COMRAM] unsigned char 
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  1    wreg      void 
  5191 ;; Registers used:
  5192 ;;		wreg, cstack
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5201 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5202 ;;Total ram usage:        1 bytes
  5203 ;; Hardware stack levels used:    1
  5204 ;; Hardware stack levels required when called:    1
  5205 ;; This function calls:
  5206 ;;		_I2C_stop
  5207 ;; This function is called by:
  5208 ;;		_I2C_buffClear
  5209 ;;		_MCP9801_Init
  5210 ;;		_MCP9801_TempRead
  5211 ;;		_I2C_BusSCan
  5212 ;;		_MCP23008_Init
  5213 ;;		_MCP23008_Write
  5214 ;;		_MCP23008_read
  5215 ;;		_EEPROM_24AA512_Write
  5216 ;;		_EEPROM_24AA512_Read
  5217 ;;		_EEPROM_24AA512_pageWrite
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text38
  5222  0023C8                     __ptext38:
  5223                           	opt stack 0
  5224  0023C8                     _I2C_Write:
  5225                           	opt stack 28
  5226                           
  5227                           ;incstack = 0
  5228                           ;I2C_Write@data stored from wreg
  5229  0023C8  6E01               	movwf	I2C_Write@data,c
  5230                           
  5231                           ;I2C.c: 33: SSP2BUF = data;
  5232  0023CA  C001  FF75         	movff	I2C_Write@data,3957	;volatile
  5233  0023CE  A073               	btfss	3955,0,c	;volatile
  5234  0023D0  D7FE               	goto	l420
  5235  0023D2                     u2560:
  5236                           
  5237                           ;I2C.c: 35: while (!PIR3bits.SSP2IF);
  5238  0023D2  AEA4               	btfss	4004,7,c	;volatile
  5239  0023D4  D7FE               	goto	u2560
  5240                           
  5241                           ;I2C.c: 36: PIR3bits.SSP2IF = 0;
  5242  0023D6  9EA4               	bcf	4004,7,c	;volatile
  5243                           
  5244                           ;I2C.c: 37: if (SSP2CON2bits.ACKSTAT) {
  5245  0023D8  AC71               	btfss	3953,6,c	;volatile
  5246  0023DA  0012               	return	
  5247                           
  5248                           ;I2C.c: 38: I2C_stop();
  5249  0023DC  EC35  F012         	call	_I2C_stop	;wreg free
  5250                           
  5251                           ;I2C.c: 39: return;
  5252  0023E0  0012               	return	
  5253  0023E2                     __end_of_I2C_Write:
  5254                           	opt stack 0
  5255                           tblptru	equ	0xFF8
  5256                           tblptrh	equ	0xFF7
  5257                           tblptrl	equ	0xFF6
  5258                           tablat	equ	0xFF5
  5259                           prodh	equ	0xFF4
  5260                           prodl	equ	0xFF3
  5261                           intcon	equ	0xFF2
  5262                           intcon2	equ	0xFF1
  5263                           postinc0	equ	0xFEE
  5264                           wreg	equ	0xFE8
  5265                           postdec1	equ	0xFE5
  5266                           fsr1h	equ	0xFE2
  5267                           fsr1l	equ	0xFE1
  5268                           postinc2	equ	0xFDE
  5269                           postdec2	equ	0xFDD
  5270                           fsr2h	equ	0xFDA
  5271                           fsr2l	equ	0xFD9
  5272                           status	equ	0xFD8
  5273                           
  5274 ;; *************** function _I2C_stop *****************
  5275 ;; Defined at:
  5276 ;;		line 63 in file "I2C.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;		None
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;		None
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  1    wreg      void 
  5283 ;; Registers used:
  5284 ;;		None
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5294 ;;Total ram usage:        0 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; This function calls:
  5297 ;;		Nothing
  5298 ;; This function is called by:
  5299 ;;		_I2C_Write
  5300 ;;		_I2C_buffClear
  5301 ;;		_MCP9801_Init
  5302 ;;		_MCP9801_TempRead
  5303 ;;		_I2C_BusSCan
  5304 ;;		_MCP23008_Init
  5305 ;;		_MCP23008_Write
  5306 ;;		_MCP23008_read
  5307 ;;		_EEPROM_24AA512_Write
  5308 ;;		_EEPROM_24AA512_Read
  5309 ;;		_EEPROM_24AA512_pageWrite
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           	psect	text39
  5314  00246A                     __ptext39:
  5315                           	opt stack 0
  5316  00246A                     _I2C_stop:
  5317                           	opt stack 29
  5318                           
  5319                           ;I2C.c: 64: SSP2CON2bits.PEN = 1;
  5320                           
  5321                           ;incstack = 0
  5322  00246A  8471               	bsf	3953,2,c	;volatile
  5323  00246C  B471               	btfsc	3953,2,c	;volatile
  5324  00246E  D7FE               	goto	l451
  5325                           
  5326                           ;I2C.c: 66: PIR3bits.SSP2IF = 0;
  5327  002470  9EA4               	bcf	4004,7,c	;volatile
  5328  002472  0012               	return		;funcret
  5329  002474                     __end_of_I2C_stop:
  5330                           	opt stack 0
  5331                           tblptru	equ	0xFF8
  5332                           tblptrh	equ	0xFF7
  5333                           tblptrl	equ	0xFF6
  5334                           tablat	equ	0xFF5
  5335                           prodh	equ	0xFF4
  5336                           prodl	equ	0xFF3
  5337                           intcon	equ	0xFF2
  5338                           intcon2	equ	0xFF1
  5339                           postinc0	equ	0xFEE
  5340                           wreg	equ	0xFE8
  5341                           postdec1	equ	0xFE5
  5342                           fsr1h	equ	0xFE2
  5343                           fsr1l	equ	0xFE1
  5344                           postinc2	equ	0xFDE
  5345                           postdec2	equ	0xFDD
  5346                           fsr2h	equ	0xFDA
  5347                           fsr2l	equ	0xFD9
  5348                           status	equ	0xFD8
  5349                           
  5350 ;; *************** function _EUSART1_itoa *****************
  5351 ;; Defined at:
  5352 ;;		line 155 in file "mcc_generated_files/eusart1.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;  data            4    0[BANK0 ] unsigned long 
  5355 ;;  base            2    4[BANK0 ] int 
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  buf            10    6[BANK0 ] unsigned char [10]
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      void 
  5360 ;; Registers used:
  5361 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5367 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5368 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5370 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5371 ;;Total ram usage:       16 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:    3
  5374 ;; This function calls:
  5375 ;;		_EUSART1_Write_Text
  5376 ;;		_itoa
  5377 ;; This function is called by:
  5378 ;;		_main
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text40
  5383  002272                     __ptext40:
  5384                           	opt stack 0
  5385  002272                     _EUSART1_itoa:
  5386                           	opt stack 27
  5387                           
  5388                           ;eusart1.c: 156: char buf[10];
  5389                           ;eusart1.c: 157: itoa(buf, data, base);
  5390                           
  5391                           ;incstack = 0
  5392  002272  0E7A               	movlw	low EUSART1_itoa@buf
  5393  002274  6E11               	movwf	itoa@buf,c
  5394  002276  0E00               	movlw	high EUSART1_itoa@buf
  5395  002278  6E12               	movwf	itoa@buf+1,c
  5396  00227A  C074  F013         	movff	EUSART1_itoa@data,itoa@val
  5397  00227E  C075  F014         	movff	EUSART1_itoa@data+1,itoa@val+1
  5398  002282  C078  F015         	movff	EUSART1_itoa@base,itoa@base
  5399  002286  C079  F016         	movff	EUSART1_itoa@base+1,itoa@base+1
  5400  00228A  ECB8  F010         	call	_itoa	;wreg free
  5401                           
  5402                           ;eusart1.c: 158: EUSART1_Write_Text(buf, sizeof(buf));
  5403  00228E  0E7A               	movlw	low EUSART1_itoa@buf
  5404  002290  6E01               	movwf	EUSART1_Write_Text@pbData,c
  5405  002292  0E00               	movlw	high EUSART1_itoa@buf
  5406  002294  6E02               	movwf	EUSART1_Write_Text@pbData+1,c
  5407  002296  0E0A               	movlw	10
  5408  002298  6E03               	movwf	EUSART1_Write_Text@iSize,c
  5409  00229A  EC59  F00F         	call	_EUSART1_Write_Text	;wreg free
  5410                           
  5411                           ;eusart1.c: 159: EUSART1_Write_Text("\r",2);
  5412  00229E  0E3A               	movlw	low STR_1
  5413  0022A0  6E01               	movwf	EUSART1_Write_Text@pbData,c
  5414  0022A2  0E0F               	movlw	high STR_1
  5415  0022A4  6E02               	movwf	EUSART1_Write_Text@pbData+1,c
  5416  0022A6  0E02               	movlw	2
  5417  0022A8  6E03               	movwf	EUSART1_Write_Text@iSize,c
  5418  0022AA  EC59  F00F         	call	_EUSART1_Write_Text	;wreg free
  5419  0022AE  0012               	return		;funcret
  5420  0022B0                     __end_of_EUSART1_itoa:
  5421                           	opt stack 0
  5422                           tblptru	equ	0xFF8
  5423                           tblptrh	equ	0xFF7
  5424                           tblptrl	equ	0xFF6
  5425                           tablat	equ	0xFF5
  5426                           prodh	equ	0xFF4
  5427                           prodl	equ	0xFF3
  5428                           intcon	equ	0xFF2
  5429                           intcon2	equ	0xFF1
  5430                           postinc0	equ	0xFEE
  5431                           wreg	equ	0xFE8
  5432                           postdec1	equ	0xFE5
  5433                           fsr1h	equ	0xFE2
  5434                           fsr1l	equ	0xFE1
  5435                           postinc2	equ	0xFDE
  5436                           postdec2	equ	0xFDD
  5437                           fsr2h	equ	0xFDA
  5438                           fsr2l	equ	0xFD9
  5439                           status	equ	0xFD8
  5440                           
  5441 ;; *************** function _itoa *****************
  5442 ;; Defined at:
  5443 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  buf             2   16[COMRAM] PTR unsigned char 
  5446 ;;		 -> EUSART1_itoa@buf(10), 
  5447 ;;  val             2   18[COMRAM] int 
  5448 ;;  base            2   20[COMRAM] int 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  cp              2   22[COMRAM] PTR unsigned char 
  5451 ;;		 -> EUSART1_itoa@buf(10), 
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  2   16[COMRAM] PTR unsigned char 
  5454 ;; Registers used:
  5455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5461 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5462 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5464 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5465 ;;Total ram usage:        8 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; Hardware stack levels required when called:    2
  5468 ;; This function calls:
  5469 ;;		_utoa
  5470 ;; This function is called by:
  5471 ;;		_EUSART1_itoa
  5472 ;; This function uses a non-reentrant model
  5473 ;;
  5474                           
  5475                           	psect	text41
  5476  002170                     __ptext41:
  5477                           	opt stack 0
  5478  002170                     _itoa:
  5479                           	opt stack 27
  5480                           
  5481                           ;incstack = 0
  5482  002170  C011  F017         	movff	itoa@buf,itoa@cp
  5483  002174  C012  F018         	movff	itoa@buf+1,itoa@cp+1
  5484  002178  AE14               	btfss	itoa@val+1,7,c
  5485  00217A  D00C               	goto	l874
  5486  00217C  C011  FFD9         	movff	itoa@buf,fsr2l
  5487  002180  C012  FFDA         	movff	itoa@buf+1,fsr2h
  5488  002184  0E2D               	movlw	45
  5489  002186  6EDF               	movwf	indf2,c
  5490  002188  4A11               	infsnz	itoa@buf,f,c
  5491  00218A  2A12               	incf	itoa@buf+1,f,c
  5492  00218C  6C13               	negf	itoa@val,c
  5493  00218E  1E14               	comf	itoa@val+1,f,c
  5494  002190  B0D8               	btfsc	status,0,c
  5495  002192  2A14               	incf	itoa@val+1,f,c
  5496  002194                     l874:
  5497  002194  C011  F008         	movff	itoa@buf,utoa@buf
  5498  002198  C012  F009         	movff	itoa@buf+1,utoa@buf+1
  5499  00219C  C013  F00A         	movff	itoa@val,utoa@val
  5500  0021A0  C014  F00B         	movff	itoa@val+1,utoa@val+1
  5501  0021A4  C015  F00C         	movff	itoa@base,utoa@base
  5502  0021A8  C016  F00D         	movff	itoa@base+1,utoa@base+1
  5503  0021AC  EC77  F00E         	call	_utoa	;wreg free
  5504  0021B0  0012               	return	
  5505  0021B2                     __end_of_itoa:
  5506                           	opt stack 0
  5507                           tblptru	equ	0xFF8
  5508                           tblptrh	equ	0xFF7
  5509                           tblptrl	equ	0xFF6
  5510                           tablat	equ	0xFF5
  5511                           prodh	equ	0xFF4
  5512                           prodl	equ	0xFF3
  5513                           intcon	equ	0xFF2
  5514                           intcon2	equ	0xFF1
  5515                           postinc0	equ	0xFEE
  5516                           wreg	equ	0xFE8
  5517                           postdec1	equ	0xFE5
  5518                           fsr1h	equ	0xFE2
  5519                           fsr1l	equ	0xFE1
  5520                           indf2	equ	0xFDF
  5521                           postinc2	equ	0xFDE
  5522                           postdec2	equ	0xFDD
  5523                           fsr2h	equ	0xFDA
  5524                           fsr2l	equ	0xFD9
  5525                           status	equ	0xFD8
  5526                           
  5527 ;; *************** function _utoa *****************
  5528 ;; Defined at:
  5529 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;  buf             2    7[COMRAM] PTR unsigned char 
  5532 ;;		 -> EUSART1_itoa@buf(10), 
  5533 ;;  val             2    9[COMRAM] unsigned int 
  5534 ;;  base            2   11[COMRAM] int 
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;  v               2   13[COMRAM] unsigned int 
  5537 ;;  c               1   15[COMRAM] unsigned char 
  5538 ;; Return value:  Size  Location     Type
  5539 ;;                  2    7[COMRAM] PTR unsigned char 
  5540 ;; Registers used:
  5541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5547 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5548 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5550 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5551 ;;Total ram usage:        9 bytes
  5552 ;; Hardware stack levels used:    1
  5553 ;; Hardware stack levels required when called:    1
  5554 ;; This function calls:
  5555 ;;		___lwdiv
  5556 ;;		___lwmod
  5557 ;; This function is called by:
  5558 ;;		_itoa
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           	psect	text42
  5563  001CEE                     __ptext42:
  5564                           	opt stack 0
  5565  001CEE                     _utoa:
  5566                           	opt stack 27
  5567                           
  5568                           ;incstack = 0
  5569  001CEE  C00A  F00E         	movff	utoa@val,utoa@v
  5570  001CF2  C00B  F00F         	movff	utoa@val+1,utoa@v+1
  5571  001CF6  C00E  F001         	movff	utoa@v,___lwdiv@dividend
  5572  001CFA  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  5573  001CFE  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  5574  001D02  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  5575  001D06  EC6D  F010         	call	___lwdiv	;wreg free
  5576  001D0A  C001  F00E         	movff	?___lwdiv,utoa@v
  5577  001D0E  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
  5578  001D12  4A08               	infsnz	utoa@buf,f,c
  5579  001D14  2A09               	incf	utoa@buf+1,f,c
  5580  001D16  500E               	movf	utoa@v,w,c
  5581  001D18  100F               	iorwf	utoa@v+1,w,c
  5582  001D1A  A4D8               	btfss	status,2,c
  5583  001D1C  D7EC               	goto	l878
  5584  001D1E  C008  FFD9         	movff	utoa@buf,fsr2l
  5585  001D22  C009  FFDA         	movff	utoa@buf+1,fsr2h
  5586  001D26  0E00               	movlw	0
  5587  001D28  6EDF               	movwf	indf2,c
  5588  001D2A  0608               	decf	utoa@buf,f,c
  5589  001D2C  A0D8               	btfss	status,0,c
  5590  001D2E  0609               	decf	utoa@buf+1,f,c
  5591  001D30  C00A  F001         	movff	utoa@val,___lwmod@dividend
  5592  001D34  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
  5593  001D38  C00C  F003         	movff	utoa@base,___lwmod@divisor
  5594  001D3C  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
  5595  001D40  ECD9  F010         	call	___lwmod	;wreg free
  5596  001D44  5001               	movf	?___lwmod,w,c
  5597  001D46  6E10               	movwf	utoa@c,c
  5598  001D48  C00A  F001         	movff	utoa@val,___lwdiv@dividend
  5599  001D4C  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  5600  001D50  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  5601  001D54  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  5602  001D58  EC6D  F010         	call	___lwdiv	;wreg free
  5603  001D5C  C001  F00A         	movff	?___lwdiv,utoa@val
  5604  001D60  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
  5605  001D64  0E09               	movlw	9
  5606  001D66  6410               	cpfsgt	utoa@c,c
  5607  001D68  D002               	goto	l881
  5608  001D6A  0E07               	movlw	7
  5609  001D6C  2610               	addwf	utoa@c,f,c
  5610  001D6E                     l881:
  5611  001D6E  0E30               	movlw	48
  5612  001D70  2610               	addwf	utoa@c,f,c
  5613  001D72  C008  FFD9         	movff	utoa@buf,fsr2l
  5614  001D76  C009  FFDA         	movff	utoa@buf+1,fsr2h
  5615  001D7A  C010  FFDF         	movff	utoa@c,indf2
  5616  001D7E  0608               	decf	utoa@buf,f,c
  5617  001D80  A0D8               	btfss	status,0,c
  5618  001D82  0609               	decf	utoa@buf+1,f,c
  5619  001D84  500A               	movf	utoa@val,w,c
  5620  001D86  100B               	iorwf	utoa@val+1,w,c
  5621  001D88  A4D8               	btfss	status,2,c
  5622  001D8A  D7D2               	goto	l880
  5623                           
  5624                           ;	Return value of _utoa is never used
  5625  001D8C  4A08               	infsnz	utoa@buf,f,c
  5626  001D8E  2A09               	incf	utoa@buf+1,f,c
  5627  001D90  0012               	return	
  5628  001D92                     __end_of_utoa:
  5629                           	opt stack 0
  5630                           tblptru	equ	0xFF8
  5631                           tblptrh	equ	0xFF7
  5632                           tblptrl	equ	0xFF6
  5633                           tablat	equ	0xFF5
  5634                           prodh	equ	0xFF4
  5635                           prodl	equ	0xFF3
  5636                           intcon	equ	0xFF2
  5637                           intcon2	equ	0xFF1
  5638                           postinc0	equ	0xFEE
  5639                           wreg	equ	0xFE8
  5640                           postdec1	equ	0xFE5
  5641                           fsr1h	equ	0xFE2
  5642                           fsr1l	equ	0xFE1
  5643                           indf2	equ	0xFDF
  5644                           postinc2	equ	0xFDE
  5645                           postdec2	equ	0xFDD
  5646                           fsr2h	equ	0xFDA
  5647                           fsr2l	equ	0xFD9
  5648                           status	equ	0xFD8
  5649                           
  5650 ;; *************** function ___lwmod *****************
  5651 ;; Defined at:
  5652 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;  dividend        2    0[COMRAM] unsigned int 
  5655 ;;  divisor         2    2[COMRAM] unsigned int 
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;  counter         1    4[COMRAM] unsigned char 
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  2    0[COMRAM] unsigned int 
  5660 ;; Registers used:
  5661 ;;		wreg, status,2, status,0
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5667 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5668 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5670 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5671 ;;Total ram usage:        5 bytes
  5672 ;; Hardware stack levels used:    1
  5673 ;; This function calls:
  5674 ;;		Nothing
  5675 ;; This function is called by:
  5676 ;;		_utoa
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           	psect	text43
  5681  0021B2                     __ptext43:
  5682                           	opt stack 0
  5683  0021B2                     ___lwmod:
  5684                           	opt stack 27
  5685                           
  5686                           ;incstack = 0
  5687  0021B2  5003               	movf	___lwmod@divisor,w,c
  5688  0021B4  1004               	iorwf	___lwmod@divisor+1,w,c
  5689  0021B6  B4D8               	btfsc	status,2,c
  5690  0021B8  D018               	goto	l976
  5691  0021BA  0E01               	movlw	1
  5692  0021BC  6E05               	movwf	___lwmod@counter,c
  5693  0021BE  D004               	goto	l971
  5694  0021C0  90D8               	bcf	status,0,c
  5695  0021C2  3603               	rlcf	___lwmod@divisor,f,c
  5696  0021C4  3604               	rlcf	___lwmod@divisor+1,f,c
  5697  0021C6  2A05               	incf	___lwmod@counter,f,c
  5698  0021C8                     l971:
  5699  0021C8  AE04               	btfss	___lwmod@divisor+1,7,c
  5700  0021CA  D7FA               	goto	l972
  5701  0021CC                     u2180:
  5702  0021CC  5003               	movf	___lwmod@divisor,w,c
  5703  0021CE  5C01               	subwf	___lwmod@dividend,w,c
  5704  0021D0  5004               	movf	___lwmod@divisor+1,w,c
  5705  0021D2  5802               	subwfb	___lwmod@dividend+1,w,c
  5706  0021D4  A0D8               	btfss	status,0,c
  5707  0021D6  D004               	goto	l975
  5708  0021D8  5003               	movf	___lwmod@divisor,w,c
  5709  0021DA  5E01               	subwf	___lwmod@dividend,f,c
  5710  0021DC  5004               	movf	___lwmod@divisor+1,w,c
  5711  0021DE  5A02               	subwfb	___lwmod@dividend+1,f,c
  5712  0021E0                     l975:
  5713  0021E0  90D8               	bcf	status,0,c
  5714  0021E2  3204               	rrcf	___lwmod@divisor+1,f,c
  5715  0021E4  3203               	rrcf	___lwmod@divisor,f,c
  5716  0021E6  2E05               	decfsz	___lwmod@counter,f,c
  5717  0021E8  D7F1               	goto	u2180
  5718  0021EA                     l976:
  5719  0021EA  C001  F001         	movff	___lwmod@dividend,?___lwmod
  5720  0021EE  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  5721  0021F2  0012               	return		;funcret
  5722  0021F4                     __end_of___lwmod:
  5723                           	opt stack 0
  5724                           tblptru	equ	0xFF8
  5725                           tblptrh	equ	0xFF7
  5726                           tblptrl	equ	0xFF6
  5727                           tablat	equ	0xFF5
  5728                           prodh	equ	0xFF4
  5729                           prodl	equ	0xFF3
  5730                           intcon	equ	0xFF2
  5731                           intcon2	equ	0xFF1
  5732                           postinc0	equ	0xFEE
  5733                           wreg	equ	0xFE8
  5734                           postdec1	equ	0xFE5
  5735                           fsr1h	equ	0xFE2
  5736                           fsr1l	equ	0xFE1
  5737                           indf2	equ	0xFDF
  5738                           postinc2	equ	0xFDE
  5739                           postdec2	equ	0xFDD
  5740                           fsr2h	equ	0xFDA
  5741                           fsr2l	equ	0xFD9
  5742                           status	equ	0xFD8
  5743                           
  5744 ;; *************** function ___lwdiv *****************
  5745 ;; Defined at:
  5746 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  dividend        2    0[COMRAM] unsigned int 
  5749 ;;  divisor         2    2[COMRAM] unsigned int 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  quotient        2    4[COMRAM] unsigned int 
  5752 ;;  counter         1    6[COMRAM] unsigned char 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  2    0[COMRAM] unsigned int 
  5755 ;; Registers used:
  5756 ;;		wreg, status,2, status,0
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5762 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5763 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5765 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5766 ;;Total ram usage:        7 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; This function calls:
  5769 ;;		Nothing
  5770 ;; This function is called by:
  5771 ;;		_utoa
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           	psect	text44
  5776  0020DA                     __ptext44:
  5777                           	opt stack 0
  5778  0020DA                     ___lwdiv:
  5779                           	opt stack 27
  5780                           
  5781                           ;incstack = 0
  5782  0020DA  0E00               	movlw	0
  5783  0020DC  6E06               	movwf	___lwdiv@quotient+1,c
  5784  0020DE  0E00               	movlw	0
  5785  0020E0  6E05               	movwf	___lwdiv@quotient,c
  5786  0020E2  5003               	movf	___lwdiv@divisor,w,c
  5787  0020E4  1004               	iorwf	___lwdiv@divisor+1,w,c
  5788  0020E6  B4D8               	btfsc	status,2,c
  5789  0020E8  D01C               	goto	l966
  5790  0020EA  0E01               	movlw	1
  5791  0020EC  6E07               	movwf	___lwdiv@counter,c
  5792  0020EE  D004               	goto	l961
  5793  0020F0  90D8               	bcf	status,0,c
  5794  0020F2  3603               	rlcf	___lwdiv@divisor,f,c
  5795  0020F4  3604               	rlcf	___lwdiv@divisor+1,f,c
  5796  0020F6  2A07               	incf	___lwdiv@counter,f,c
  5797  0020F8                     l961:
  5798  0020F8  AE04               	btfss	___lwdiv@divisor+1,7,c
  5799  0020FA  D7FA               	goto	l962
  5800  0020FC                     u2150:
  5801  0020FC  90D8               	bcf	status,0,c
  5802  0020FE  3605               	rlcf	___lwdiv@quotient,f,c
  5803  002100  3606               	rlcf	___lwdiv@quotient+1,f,c
  5804  002102  5003               	movf	___lwdiv@divisor,w,c
  5805  002104  5C01               	subwf	___lwdiv@dividend,w,c
  5806  002106  5004               	movf	___lwdiv@divisor+1,w,c
  5807  002108  5802               	subwfb	___lwdiv@dividend+1,w,c
  5808  00210A  A0D8               	btfss	status,0,c
  5809  00210C  D005               	goto	l965
  5810  00210E  5003               	movf	___lwdiv@divisor,w,c
  5811  002110  5E01               	subwf	___lwdiv@dividend,f,c
  5812  002112  5004               	movf	___lwdiv@divisor+1,w,c
  5813  002114  5A02               	subwfb	___lwdiv@dividend+1,f,c
  5814  002116  8005               	bsf	___lwdiv@quotient,0,c
  5815  002118                     l965:
  5816  002118  90D8               	bcf	status,0,c
  5817  00211A  3204               	rrcf	___lwdiv@divisor+1,f,c
  5818  00211C  3203               	rrcf	___lwdiv@divisor,f,c
  5819  00211E  2E07               	decfsz	___lwdiv@counter,f,c
  5820  002120  D7ED               	goto	u2150
  5821  002122                     l966:
  5822  002122  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5823  002126  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5824  00212A  0012               	return		;funcret
  5825  00212C                     __end_of___lwdiv:
  5826                           	opt stack 0
  5827                           tblptru	equ	0xFF8
  5828                           tblptrh	equ	0xFF7
  5829                           tblptrl	equ	0xFF6
  5830                           tablat	equ	0xFF5
  5831                           prodh	equ	0xFF4
  5832                           prodl	equ	0xFF3
  5833                           intcon	equ	0xFF2
  5834                           intcon2	equ	0xFF1
  5835                           postinc0	equ	0xFEE
  5836                           wreg	equ	0xFE8
  5837                           postdec1	equ	0xFE5
  5838                           fsr1h	equ	0xFE2
  5839                           fsr1l	equ	0xFE1
  5840                           indf2	equ	0xFDF
  5841                           postinc2	equ	0xFDE
  5842                           postdec2	equ	0xFDD
  5843                           fsr2h	equ	0xFDA
  5844                           fsr2l	equ	0xFD9
  5845                           status	equ	0xFD8
  5846                           
  5847 ;; *************** function _EUSART1_Write_Text *****************
  5848 ;; Defined at:
  5849 ;;		line 145 in file "mcc_generated_files/eusart1.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;  pbData          2    0[COMRAM] PTR unsigned char 
  5852 ;;		 -> STR_1(2), EUSART1_itoa@buf(10), 
  5853 ;;  iSize           1    2[COMRAM] unsigned char 
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;  iSizeQueued     1    5[COMRAM] unsigned char 
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      void 
  5858 ;; Registers used:
  5859 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5865 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5866 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5867 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5868 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5869 ;;Total ram usage:        6 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; This function calls:
  5872 ;;		Nothing
  5873 ;; This function is called by:
  5874 ;;		_EUSART1_itoa
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           	psect	text45
  5879  001EB2                     __ptext45:
  5880                           	opt stack 0
  5881  001EB2                     _EUSART1_Write_Text:
  5882                           	opt stack 29
  5883                           
  5884                           ;eusart1.c: 146: for (uint8_t iSizeQueued = 0; iSizeQueued < iSize; iSizeQueued++) {
  5885                           
  5886                           ;incstack = 0
  5887  001EB2  0E00               	movlw	0
  5888  001EB4  6E06               	movwf	EUSART1_Write_Text@iSizeQueued,c
  5889  001EB6  D03B               	goto	l125
  5890  001EB8                     
  5891                           ;eusart1.c: 147: TxData[iSizeQueued] = pbData[iSizeQueued];
  5892  001EB8  5006               	movf	EUSART1_Write_Text@iSizeQueued,w,c
  5893  001EBA  0D01               	mullw	1
  5894  001EBC  C001  F004         	movff	EUSART1_Write_Text@pbData,??_EUSART1_Write_Text
  5895  001EC0  C002  F005         	movff	EUSART1_Write_Text@pbData+1,??_EUSART1_Write_Text+1
  5896  001EC4  50F3               	movf	prodl,w,c
  5897  001EC6  2604               	addwf	??_EUSART1_Write_Text,f,c
  5898  001EC8  50F4               	movf	prodh,w,c
  5899  001ECA  2205               	addwfc	??_EUSART1_Write_Text+1,f,c
  5900  001ECC  C004  FFF6         	movff	??_EUSART1_Write_Text,tblptrl
  5901  001ED0  C005  FFF7         	movff	??_EUSART1_Write_Text+1,tblptrh
  5902  001ED4  6AF8               	clrf	tblptru,c
  5903  001ED6  5006               	movf	EUSART1_Write_Text@iSizeQueued,w,c
  5904  001ED8  0D01               	mullw	1
  5905  001EDA  0E00               	movlw	low _TxData
  5906  001EDC  24F3               	addwf	prodl,w,c
  5907  001EDE  6ED9               	movwf	fsr2l,c
  5908  001EE0  0E01               	movlw	high _TxData
  5909  001EE2  20F4               	addwfc	prodh,w,c
  5910  001EE4  6EDA               	movwf	fsr2h,c
  5911  001EE6  0E0E               	movlw	(high __ramtop+-1)
  5912  001EE8  64F7               	cpfsgt	tblptrh,c
  5913  001EEA  D003               	bra	u2517
  5914  001EEC  0008               	tblrd		*
  5915  001EEE  50F5               	movf	tablat,w,c
  5916  001EF0  D005               	bra	u2510
  5917  001EF2                     u2517:
  5918  001EF2  CFF6 FFE9          	movff	tblptrl,fsr0l
  5919  001EF6  CFF7 FFEA          	movff	tblptrh,fsr0h
  5920  001EFA  50EF               	movf	indf0,w,c
  5921  001EFC                     u2510:
  5922  001EFC  6EDF               	movwf	indf2,c
  5923                           
  5924                           ;eusart1.c: 148: if (TxData[iSizeQueued] != '\0') {
  5925  001EFE  5006               	movf	EUSART1_Write_Text@iSizeQueued,w,c
  5926  001F00  0D01               	mullw	1
  5927  001F02  0E00               	movlw	low _TxData
  5928  001F04  24F3               	addwf	prodl,w,c
  5929  001F06  6ED9               	movwf	fsr2l,c
  5930  001F08  0E01               	movlw	high _TxData
  5931  001F0A  20F4               	addwfc	prodh,w,c
  5932  001F0C  6EDA               	movwf	fsr2h,c
  5933  001F0E  50DF               	movf	indf2,w,c
  5934  001F10  B4D8               	btfsc	status,2,c
  5935  001F12  D00C               	goto	l127
  5936  001F14                     u2520:
  5937                           
  5938                           ;eusart1.c: 149: while (!TXSTA1bits.TRMT);
  5939  001F14  A2AD               	btfss	4013,1,c	;volatile
  5940  001F16  D7FE               	goto	u2520
  5941                           
  5942                           ;eusart1.c: 150: TXREG1 = TxData[iSizeQueued];
  5943  001F18  5006               	movf	EUSART1_Write_Text@iSizeQueued,w,c
  5944  001F1A  0D01               	mullw	1
  5945  001F1C  0E00               	movlw	low _TxData
  5946  001F1E  24F3               	addwf	prodl,w,c
  5947  001F20  6ED9               	movwf	fsr2l,c
  5948  001F22  0E01               	movlw	high _TxData
  5949  001F24  20F4               	addwfc	prodh,w,c
  5950  001F26  6EDA               	movwf	fsr2h,c
  5951  001F28  50DF               	movf	indf2,w,c
  5952  001F2A  6EAE               	movwf	4014,c	;volatile
  5953  001F2C                     l127:
  5954  001F2C  2A06               	incf	EUSART1_Write_Text@iSizeQueued,f,c
  5955  001F2E                     l125:
  5956  001F2E  5003               	movf	EUSART1_Write_Text@iSize,w,c
  5957  001F30  5C06               	subwf	EUSART1_Write_Text@iSizeQueued,w,c
  5958  001F32  B0D8               	btfsc	status,0,c
  5959  001F34  0012               	return	
  5960  001F36  D7C0               	goto	l126
  5961  001F38                     __end_of_EUSART1_Write_Text:
  5962                           	opt stack 0
  5963                           tblptru	equ	0xFF8
  5964                           tblptrh	equ	0xFF7
  5965                           tblptrl	equ	0xFF6
  5966                           tablat	equ	0xFF5
  5967                           prodh	equ	0xFF4
  5968                           prodl	equ	0xFF3
  5969                           intcon	equ	0xFF2
  5970                           intcon2	equ	0xFF1
  5971                           indf0	equ	0xFEF
  5972                           postinc0	equ	0xFEE
  5973                           fsr0h	equ	0xFEA
  5974                           fsr0l	equ	0xFE9
  5975                           wreg	equ	0xFE8
  5976                           postdec1	equ	0xFE5
  5977                           fsr1h	equ	0xFE2
  5978                           fsr1l	equ	0xFE1
  5979                           indf2	equ	0xFDF
  5980                           postinc2	equ	0xFDE
  5981                           postdec2	equ	0xFDD
  5982                           fsr2h	equ	0xFDA
  5983                           fsr2l	equ	0xFD9
  5984                           status	equ	0xFD8
  5985                           tblptru	equ	0xFF8
  5986                           tblptrh	equ	0xFF7
  5987                           tblptrl	equ	0xFF6
  5988                           tablat	equ	0xFF5
  5989                           prodh	equ	0xFF4
  5990                           prodl	equ	0xFF3
  5991                           intcon	equ	0xFF2
  5992                           intcon2	equ	0xFF1
  5993                           indf0	equ	0xFEF
  5994                           postinc0	equ	0xFEE
  5995                           fsr0h	equ	0xFEA
  5996                           fsr0l	equ	0xFE9
  5997                           wreg	equ	0xFE8
  5998                           postdec1	equ	0xFE5
  5999                           fsr1h	equ	0xFE2
  6000                           fsr1l	equ	0xFE1
  6001                           indf2	equ	0xFDF
  6002                           postinc2	equ	0xFDE
  6003                           postdec2	equ	0xFDD
  6004                           fsr2h	equ	0xFDA
  6005                           fsr2l	equ	0xFD9
  6006                           status	equ	0xFD8
  6007                           
  6008                           	psect	rparam
  6009  0000                     tblptru	equ	0xFF8
  6010                           tblptrh	equ	0xFF7
  6011                           tblptrl	equ	0xFF6
  6012                           tablat	equ	0xFF5
  6013                           prodh	equ	0xFF4
  6014                           prodl	equ	0xFF3
  6015                           intcon	equ	0xFF2
  6016                           intcon2	equ	0xFF1
  6017                           indf0	equ	0xFEF
  6018                           postinc0	equ	0xFEE
  6019                           fsr0h	equ	0xFEA
  6020                           fsr0l	equ	0xFE9
  6021                           wreg	equ	0xFE8
  6022                           postdec1	equ	0xFE5
  6023                           fsr1h	equ	0xFE2
  6024                           fsr1l	equ	0xFE1
  6025                           indf2	equ	0xFDF
  6026                           postinc2	equ	0xFDE
  6027                           postdec2	equ	0xFDD
  6028                           fsr2h	equ	0xFDA
  6029                           fsr2l	equ	0xFD9
  6030                           status	equ	0xFD8


Data Sizes:
    Strings     2
    Constant    57
    Data        0
    BSS         277
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     16      36
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(BANK0[10]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(BANK0[10]), 

    EUSART1_Write_Text@pbData	PTR unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[2]), EUSART1_itoa@buf(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_MCP9801_TempRead
    _SYSTEM_Initialize->_I2C_Init
    _I2C_Init->___aldiv
    ___aldiv->___wmul
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _MCP9801_TempRead->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftmul
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lwtoft->___ftpack
    _MCP9801_Init->_I2C_Write
    _I2C_buffClear->_I2C_Write
    _EUSART1_itoa->_MCP9801_TempRead
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    _main->_EUSART1_itoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   81452
                                             92 COMRAM     2     2      0
                       _EUSART1_itoa
                      _I2C_buffClear
                       _MCP9801_Init
                   _MCP9801_TempRead
                  _SYSTEM_Initialize
                     _interrupt_Init
 ---------------------------------------------------------------------------------
 (1) _interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1383
                 _EUSART1_Initialize
                           _I2C_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             1     1      0    1089
                                             20 COMRAM     1     1      0
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              6 COMRAM    14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MCP9801_TempRead                                     6     6      0   77620
                                             86 COMRAM     6     6      0
                          _I2C_Write
                           _I2C_read
                 _I2C_repeated_Start
                          _I2C_start
                           _I2C_stop
                            ___ftmul
                            ___fttol
                           ___lwtoft
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 17    11      6   69536
                                             69 COMRAM    17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  5     2      3   22583
                                             51 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                  9     6      3   37308
                                             60 COMRAM     9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                7     2      5     400
                                             51 COMRAM     7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                                8     5      3    9489
                                             52 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     528
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4     632
                                             27 COMRAM    15    11      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     744
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) ___altoft                                            10     6      4    2797
                                             42 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           12     5      7   10087
                                             39 COMRAM    12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    4377
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    4806
                                             39 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    4461
                                             27 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     349
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    3141
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    2826
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2728
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2681
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2583
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _I2C_repeated_Start                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_read                                             2     0      2     326
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MCP9801_Init                                         0     0      0      22
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (1) _I2C_buffClear                                        0     0      0      22
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_itoa                                        16    10      6    2405
                                              0 BANK0     16    10      6
                 _EUSART1_Write_Text
                   _MCP9801_TempRead (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    1698
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1307
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write_Text                                   6     3      3     460
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_itoa
     _EUSART1_Write_Text
     _MCP9801_TempRead (ARG)
       _I2C_Write
         _I2C_stop
       _I2C_read
       _I2C_repeated_Start
       _I2C_start
       _I2C_stop
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___ftpack
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___lwtoft (ARG)
               ___ftpack
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _frexp
     _itoa (ARG)
       _utoa
         ___lwdiv
         ___lwmod
   _I2C_buffClear
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
   _MCP9801_Init
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
   _MCP9801_TempRead
     _I2C_Write
       _I2C_stop
     _I2C_read
     _I2C_repeated_Start
     _I2C_start
     _I2C_stop
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _frexp (ARG)
     ___fttol
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _pow
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
       _exp
         ___awtoft
           ___ftpack
         ___ftdiv
           ___ftpack
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
         ___fttol
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___lwtoft (ARG)
             ___ftpack
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___lwtoft (ARG)
                 ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___lwtoft (ARG)
               ___ftpack
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _frexp
       _log
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _frexp
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _I2C_Init
       ___aldiv
         ___wmul (ARG)
       ___wmul
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   _interrupt_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0     100       8      100.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     10      24       5       22.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     183       6        0.0%
DATA                 0      0     183       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Apr 04 23:09:49 2020

                                  ___altoft@exp 0033                                EUSART1_itoa@base 0078  
                              EUSART1_itoa@data 0074                                   ___altoft@sign 0034  
                            __size_of_I2C_Write 001A                             ___wmul@multiplicand 0003  
                        __end_of_interrupt_Init 2438                                    __CFG_CP0$OFF 000000  
                            __size_of_I2C_start 000A                                     __CFG_OSC$HS 000000  
                                  ___ftadd@exp1 0027                                    ___ftadd@exp2 0026  
                                  ___ftadd@sign 0025                                             l125 1F2E  
                                           l126 1EB8                                             l127 1F2C  
                                           l420 23CE                                             l252 1F48  
                                           l430 23FC                                             _ADC 006C  
                                           l600 1A18                                             l602 1A46  
                                           l451 246C                                             l603 1A3A  
                                           l445 2458                                             l606 1A7A  
                                           l439 2462                                             l607 1A88  
                                           l608 1A9E                                             l803 11FE  
                                           l812 123C                                             l804 11F4  
                                           l628 1FE0                                             l813 1232  
                                           l629 1FD4                                             l822 1776  
                                           l830 1E52                                             l815 1260  
                                           l831 1E82                                             l824 179E  
                                           l816 127C                                             l840 16DC  
                                           l761 1C9C                                             l825 17DC  
                                           l817 12AC                                             l841 16EC  
                                           l762 1C86                                             l930 2030  
                                           l826 1802                                             l739 22C4  
                                           l843 1704                                             l764 1CC4  
                                           l844 1714                                             l860 1608  
                                           l765 1CBA                                             l837 1682  
                                           l861 15F8                                             l758 1C68  
                                           l854 220A                                             l759 1C5E  
                                           l839 16AA                                             l599 1A00  
                                           l880 1D30                                             l848 237A  
                                           l961 20F8                                             l881 1D6E  
                                           l929 203C                                             l793 11A2  
                                           l962 20F0                                             l874 2194  
                                           l866 162C                                             l858 1592  
                                           l971 21C8                                             l867 1620  
                                           l972 21C0                                             l965 2118  
                                           l789 1178                                             l869 1648  
                                           l966 2122                                             l878 1CF6  
                                           l798 1208                                             l975 21E0  
                                           l991 1318                                             l976 21EA  
                                           l992 130A                                             l994 1330  
                                           l995 13B6                                             l996 1394  
                                           l997 143A                                             _exp 0F3E  
                                           _log 1448                                             _pow 12D2  
                                           prod 000FF3                                             wreg 000FE8  
                                    _TXSTA1bits 000FAD                                    __CFG_IESO$ON 000000  
                                  ___ftdiv@cntr 0012                                    ___ftdiv@sign 0017  
                                          l1201 19CE                                            l1202 1952  
                                          l1151 0F56                                            l1153 0F8E  
                                          l1162 1870                                            l1154 0FC6  
                                          l1171 1DBA                                            l1163 1862  
                                          l1155 0FF4                                            l1180 1BFC  
                                          l3012 10EE                                            l1156 1118  
                                          l1165 188A                                            l1157 10EE  
                                          l1166 1904                                            l1175 1B92  
                                          l1177 1BD8                                            l1193 1464  
                                          l1179 1C08                                            l1195 1486  
                                          l2420 1EAE                                            ?_exp 003D  
                                          ?_log 0034                                            ?_pow 0046  
                                          STR_1 0F3A                                            u2020 1632  
                                          u2050 1DE2                                            u2220 187C  
                                          u2061 175E                                            _LATA 000F89  
                                          u2150 20FC                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _LATD 000F8C  
                                          u2081 1786                                            _LATE 000F8D  
                                          u1610 1CCE                                            u2058 1DE4  
                                          u2180 21CC                                            u1700 116A  
                                          u2260 1BB2                                            u2340 1A4A  
                                          u2510 1EFC                                            u2520 1F14  
                                          u1800 1210                                            u1570 1C50  
                                          u1730 1194                                            u2268 1BB4  
                                          u2460 0FCE                                            u2517 1EF2  
                                          u2605 2408                                            u1661 1136  
                                          u2606 240A                                            u1830 1244  
                                          u2470 0FD0                                            u1671 114A  
                                          u2560 23D2                                            u1760 11D2  
                                          u2720 1F9C                                            u2726 1F9E  
                                          u1871 166A                                            u2807 2330  
                                          u2680 137C                                            u1961 1576  
                                          u1891 1692                                            u1980 15B0  
                                          u1985 15A8                                            u2787 1F70  
                                          u2797 1F88                                   __CFG_FCMEN$ON 000000  
                                          _main 1F38                                    ___ftpack@arg 0001  
                                          _itoa 2170                                    ___ftpack@exp 0004  
                              __end_of_I2C_Init 20DA                                            fsr0h 000FEA  
                                          fsr1h 000FE2                                            indf0 000FEF  
                                          fsr2h 000FDA                                            fsr0l 000FE9  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          fsr2l 000FD9                                            _utoa 1CEE  
                                          exp@x 003D                                            log@x 0034  
                                          pow@x 0046                                            pow@y 0049  
                                 ?_EUSART1_itoa 0074                                __end_of_I2C_read 2410  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0000                                __end_of_I2C_stop 2474  
                                  ___ftmul@cntr 001A                                    ___param_bank 000000  
                                  ___ftmul@sign 001B                                    ___fttol@exp1 002A  
                                         ??_exp 0040                                           ??_log 0037  
                                  ___fttol@lval 0026                                           ??_pow 004C  
                                 __CFG_PLLDIV$1 000000                  __size_of_OSCILLATOR_Initialize 002A  
                 __end_of_OSCILLATOR_Initialize 233E                                 ?_interrupt_Init 0001  
                               __end_of___aldiv 1AB0                                           ?_main 0001  
                                         ?_itoa 0011                                 __end_of___ftadd 12D2  
                               __end_of___ftdiv 1834                                 __end_of___ftneg 2388  
                                         ?_utoa 0008                                 __end_of___ftmul 174E  
                               __end_of___ftsub 2234                                 __end_of___fttol 165A  
                               __end_of___lwdiv 212C                                 __end_of___lwmod 21F4  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                                    ___lltoft@exp 0011  
                          __end_of_MCP9801_Init 23C8                                           _sData 0060  
                                 ___awtoft@sign 000C                                           _floor 1834  
                                         _ldexp 1B7A                                           _frexp 1D92  
                                         _errno 006A                                  __CFG_CLKOEC$ON 000000  
                                 ___ftpack@sign 0005                               __end_of_I2C_Write 23E2  
                                         tablat 000FF5                                           pow@yi 0053  
                                         utoa@c 0010                                           utoa@v 000E  
                                         status 000FD8                               __end_of_I2C_start 246A  
                                ??_EUSART1_itoa 005D              _EUSART1_DefaultFramingErrorHandler 000000  
                      __size_of_SPI1_Initialize 000E                                     exp@exponent 0043  
                       __CFG_DSWDTOSC$INTOSCREF 000000                                     ldexp@newexp 0037  
                               __initialization 22E8                                     log@exponent 0037  
                    __end_of_EUSART1_Initialize 2272                                    __end_of_main 1FB2  
                                  __end_of_itoa 21B2                                    __end_of_utoa 1D92  
                                        ??_main 005D                                   ___fttol@sign1 0025  
                                        ??_itoa 0017                                          ??_utoa 000E  
                                 __activetblptr 000002                                          ?_floor 0035  
                                        ?_ldexp 0034                                          ?_frexp 0001  
                              __end_of___altoft 202A                                          _ANCON0 000F48  
                                        _ANCON1 000F49                                __end_of___awtoft 22E8  
                              __end_of___ftpack 1CEE                                __end_of___lltoft 2086  
                                        _ODCON1 000F42                                          _ODCON2 000F41  
                                        _ODCON3 000F40                                  __CFG_WDTEN$OFF 000000  
                                        _RCREG1 000FAF                                __end_of___lwtoft 23AC  
                                        _RCSTA1 000FAC                                          _OSCCON 000FD3  
                                        _SPBRG1 000FB0                                  __CFG_WPCFG$OFF 000000  
                                        _TXREG1 000FAE                                          _TXSTA1 000FAD  
                     __size_of_MCP9801_TempRead 00CA                                  __CFG_WPDIS$OFF 000000  
                                __CFG_XINST$OFF 000000                                          _TxData 0100  
                                        ___ftge 1E22                                       ??___aldiv 000F  
                                        ___wmul 233E                                       ??___ftadd 0022  
                                __CFG_STVREN$ON 000000                                       ??___ftdiv 000F  
                                     ??___ftneg 0004                                       ??___ftmul 0013  
                                     ??___ftsub 002E                                       ??___fttol 0020  
                                     ??___lwdiv 0005                          __size_of_I2C_buffClear 0010  
                                     ??___lwmod 0005                        ?_EUSART1_SetErrorHandler 0001  
                                        clear_0 22F0                                          clear_1 2302  
              ??_EUSART1_SetOverrunErrorHandler 0003                 ?_EUSART1_SetOverrunErrorHandler 0001  
                                        floor@i 0038                                          floor@x 0035  
                         ___ftmul@f3_as_product 0017                                          itoa@cp 0017  
                                     ?_I2C_Init 0001                                    __mediumconst 0000  
                                     ?_I2C_read 0001                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                                     ?_I2C_stop 0001                                 __CFG_DSBOREN$ON 000000  
                              __end_ofexp@coeff 0F1F                               _SYSTEM_Initialize 23E2  
                              __end_oflog@coeff 0F3A                                      __accesstop 0060  
                       __end_of__initialization 230A                                      ___altoft@c 002B  
                                    ___ftadd@f1 001C                                      ___ftadd@f2 001F  
                                    ___ftge@ff1 0001                                      ___ftge@ff2 0004  
                            ?_SYSTEM_Initialize 0001                                    eval_poly@res 0031  
                                 ___rparam_used 000001                      __end_of_I2C_repeated_Start 2460  
                                    ___ftdiv@f1 0009                                      ___ftdiv@f2 000C  
                                    ___ftdiv@f3 0013                                      ___ftneg@f1 0001  
                               __CFG_IOL1WAY$ON 000000                                      ___awtoft@c 0009  
                          __CFG_WPEND$PAGE_WPFP 000000                                      ___ftmul@f1 000D  
                                    ___ftmul@f2 0010                      __end_of_EUSART1_Write_Text 1F38  
                                    ___ftsub@f1 0028                                      ___ftsub@f2 002B  
                                    ___fttol@f1 001C                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 0016                                      ___lltoft@c 0009  
                                 __end_of_floor 1912                                   __end_of_ldexp 1C40  
                                 __end_of_frexp 1E22                               ??_SPI1_Initialize 0001  
                               __CFG_DSWDTEN$ON 000000                                 __CFG_DSWDTPS$G2 000000  
                                    ___lwtoft@c 0009                           __size_of_MCP9801_Init 001C  
                          __end_of_EUSART1_itoa 22B0                                      ??_I2C_Init 0015  
                                    ??_I2C_read 0003                                      ??_I2C_stop 0001  
                                       ??_floor 0038                                         ??_ldexp 0039  
                                       ??_frexp 0006                       __end_of_SYSTEM_Initialize 23FA  
                                 _I2C_buffClear 2410                                      __pbssBANK0 0060  
                                    __pbssBANK1 0100                              __size_of_eval_poly 00D2  
               __end_of_EUSART1_SetErrorHandler 2456                               __CFG_PLLSEL$PLL4X 000000  
                              ??_interrupt_Init 0001                                    _MCP9801_Init 23AC  
                                       ?___ftge 0001                                         ?___wmul 0001  
                                     ?___altoft 002B                                       ?___awtoft 0009  
                                     ?___ftpack 0001                                       ?___lltoft 0009  
        __end_of_EUSART1_SetFramingErrorHandler 244C         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 2442                                       ?___lwtoft 0009  
                                       _REFOCON 000F3D                                         _OSCCON2 000F87  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000F7F  
                                       _SSP1ADD 000FC8                                         _SSP2ADD 000F74  
                                       _SSP1BUF 000FC9                                         _SSP2BUF 000F75  
                                ?_I2C_buffClear 0001                                I2C_read@ACK_NACK 0001  
                              _MCP9801_TempRead 1AB0                                       _I2C_Write 23C8  
                       EUSART1_Write_Text@iSize 0003                                         __Hparam 0000  
                                       __Lparam 0000                                       _I2C_start 2460  
                                       ___aldiv 19E4                                 __size_of___ftge 0090  
                                       ___ftadd 1126                                         ___ftdiv 174E  
                                       ___ftneg 2364                                 __size_of___wmul 0026  
                                       ___ftmul 165A                                         ___ftsub 21F4  
                                       ___fttol 1566                                         ___lwdiv 20DA  
                                       ___lwmod 21B2                                    __psmallconst 0F00  
                                    ??___altoft 002F                                         __pcinit 22E8  
                                    ??___awtoft 000C                                      ??___ftpack 0006  
                             __end_of_eval_poly 19E4                                         __ramtop 0F00  
                                    ??___lltoft 000D                                         __ptext0 1F38  
                                       __ptext1 242E                                         __ptext2 23E2  
                                       __ptext3 2420                                         __ptext4 212C  
                                       __ptext5 2314                                         __ptext6 2086  
                                       __ptext7 19E4                                         __ptext8 2234  
                                       __ptext9 2438                                      ??___lwtoft 000C  
                         _OSCILLATOR_Initialize 2314                                    __size_of_exp 01E8  
                                  __size_of_log 011E                                    __size_of_pow 0176  
                              ___aldiv@dividend 0007                              _EUSART1_Initialize 2234  
                      ??_PIN_MANAGER_Initialize 0001                      __size_of_SYSTEM_Initialize 0018  
                          end_of_initialization 230A                           _MCP9801_TempRead$2495 0057  
                         _MCP9801_TempRead$2496 005A                                         exp@sign 0045  
                           ?_EUSART1_Initialize 0001                                         itoa@buf 0011  
                                       itoa@val 0013                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 0070                                      ?_I2C_Write 0001  
                                       pow@sign 0052                                      ?_I2C_start 0001  
                              ___aldiv@quotient 0011                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc2 000FDE                                         utoa@buf 0008  
                         __size_of_EUSART1_itoa 003E                                         utoa@val 000A  
                          ??_EUSART1_Initialize 0003                                       _PORTBbits 000F81  
                               ??_I2C_buffClear 0002                                       _TRISDbits 000F95  
                                     _TRISEbits 000F96                               __size_of_I2C_Init 0054  
                               EUSART1_itoa@buf 007A                __size_of_EUSART1_SetErrorHandler 000A  
                             __size_of_I2C_read 0016                               __size_of_I2C_stop 000A  
                                   ___ftdiv@exp 0016                                 _SPI1_Initialize 2420  
                             __CFG_WPFP$PAGE_63 000000                                    _EUSART1_itoa 2272  
                           __CFG_MSSP7B_EN$MSK7 000000                                     ___ftmul@exp 0016  
                                __end_of___ftge 1EB2                                  __end_of___wmul 2364  
                            _I2C_repeated_Start 2456                          ?_OSCILLATOR_Initialize 0001  
                                    floor@expon 003B                              _EUSART1_Write_Text 1EB2  
                           start_initialization 22E8                                      eval_poly@d 002B  
                                    eval_poly@n 002D                                      eval_poly@x 0028  
                                    ldexp@value 0034                 __size_of_PIN_MANAGER_Initialize 0044  
                           ?_I2C_repeated_Start 0001                                     __end_of_exp 1126  
                                   __end_of_log 1566                                     __end_of_pow 1448  
                           ?_EUSART1_Write_Text 0001                                      frexp@value 0001  
                                   ??_I2C_Write 0001                                     ??_I2C_start 0001  
                          ??_I2C_repeated_Start 0001                                        ??___ftge 0007  
                                      ??___wmul 0005                            ??_EUSART1_Write_Text 0004  
                             __CFG_ADCSEL$BIT10 000000                                 I2C_Init@F_clock 0015  
                             __size_of___altoft 0078                        __end_of_MCP9801_TempRead 1B7A  
                             __size_of___awtoft 0038                               __size_of___ftpack 00AE  
                             __size_of___lltoft 005C                                     __pbssCOMRAM 005F  
                             __size_of___lwtoft 0024                                   __pcstackBANK0 0074  
                       __end_of_SPI1_Initialize 242E                ??_EUSART1_SetFramingErrorHandler 0003  
               ?_EUSART1_SetFramingErrorHandler 0001                                ___lwdiv@dividend 0001  
                        _PIN_MANAGER_Initialize 212C                                        ?___aldiv 0007  
                                      ?___ftadd 001C                                        ?___ftdiv 0009  
                                      ?___ftneg 0001                                        ?___ftmul 000D  
                                      ?___ftsub 0028                                        ?___fttol 001C  
                                      ?___lwdiv 0001                                        ?___lwmod 0001  
                                   __smallconst 0F00                                        _BAUDCON1 000F7E  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        _I2C_Init 2086  
                                     _eval_poly 1912                            _EUSART1_ErrorHandler 006E  
                          __CFG_RTCOSC$T1OSCREF 000000                                        _I2C_read 23FA  
                                      _I2C_stop 246A                         _EUSART1_SetErrorHandler 244C  
                              ___lwdiv@quotient 0005                                  __size_of_floor 00DE  
                                __size_of_ldexp 00C6                                  __size_of_frexp 0090  
                               ___aldiv@divisor 000B                                 ___aldiv@counter 000F  
                                ___wmul@product 0005         EUSART1_SetErrorHandler@interruptHandler 0001  
                                      _LATBbits 000F8A                                        _LATCbits 000F8B  
                                      _PIE3bits 000FA3                                        _PIR1bits 000F9E  
                                      _PIR3bits 000FA4                                __CFG_WDTPS$32768 000000  
                                      _SSP1CON1 000FC6                                        _SSP1STAT 000FC7  
                             ___wmul@multiplier 0001                                __CFG_SOSCSEL$DIG 000000  
                       __size_of_interrupt_Init 000A                                      ?_eval_poly 0028  
                             __CFG_CFGPLLEN$OFF 000000                                ?_SPI1_Initialize 0001  
                                   _INTCON2bits 000FF1                                       frexp@eptr 0004  
                      EUSART1_Write_Text@pbData 0001                                        __Hrparam 0000  
                                      __Lrparam 0000                                   I2C_Write@data 0001  
                       ??_OSCILLATOR_Initialize 0001                                __size_of___aldiv 00CC  
                              __size_of___ftadd 01AC                                __size_of___ftdiv 00E6  
                              __size_of___ftneg 0024                                        ___altoft 1FB2  
                              __size_of___ftmul 00F4                                __size_of___ftsub 0040  
                              __size_of___fttol 00F4                     __size_of_EUSART1_Initialize 003E  
                              __size_of___lwdiv 0052                                __size_of___lwmod 0042  
                                      ___awtoft 22B0                                        ___ftpack 1C40  
                                      ___lltoft 202A                                        ___lwtoft 2388  
                     ??_EUSART1_SetErrorHandler 0003                     _EUSART1_DefaultErrorHandler 000000  
                                      _exp$2501 0040                                 ___lwdiv@divisor 0003  
                               ___lwdiv@counter 0007                                        __ptext10 2442  
                                      __ptext11 244C                                        __ptext20 1E22  
                                      __ptext12 1AB0                                        __ptext21 1FB2  
                                      __ptext13 12D2                                        __ptext30 202A  
                                      __ptext22 1912                                        __ptext14 1448  
                                      __ptext31 2388                                        __ptext23 233E  
                                      __ptext15 0F3E                                        __ptext40 2272  
                                      __ptext32 1C40                                        __ptext24 165A  
                                      __ptext16 1B7A                                        __ptext41 2170  
                                      __ptext33 2456                                        __ptext25 21F4  
                                      __ptext17 1834                                        __ptext42 1CEE  
                                      __ptext34 23FA                                        __ptext26 1126  
                                      __ptext18 1D92                                        __ptext43 21B2  
                                      __ptext35 23AC                                        __ptext27 2364  
                                      __ptext19 1566                                        __ptext44 20DA  
                                      __ptext36 2410                                        __ptext28 174E  
                                      __ptext45 1EB2                                        __ptext37 2460  
                                      __ptext29 22B0                                        __ptext38 23C8  
                                      __ptext39 246A                           __end_of_I2C_buffClear 2420  
                                  _SSP1CON1bits 000FC6                                    _SSP2CON1bits 000F72  
                                      _pow$2500 004F                                    _SSP2CON2bits 000F71  
                                      _pow$2499 004C                                   __size_of_main 007A  
                                 __size_of_itoa 0042                                   __size_of_utoa 00A4  
                                 ?_MCP9801_Init 0001  EUSART1_SetOverrunErrorHandler@interruptHandler 0001  
                                  _SSP1STATbits 000FC7                     _EUSART1_FramingErrorHandler 0072  
                                  _SSP2STATbits 000F73                                        exp@coeff 0F01  
                                      log@coeff 0F1F                               ?_MCP9801_TempRead 0001  
                                    _INTCONbits 000FF2                                     ??_eval_poly 002F  
                            ??_MCP9801_TempRead 0057                                        itoa@base 0015  
                              ___lwmod@dividend 0001                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 2442         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 2438                                      _RCSTA1bits 000FAC  
                 EUSART1_Write_Text@iSizeQueued 0006                                  ??_MCP9801_Init 0002  
                   __size_of_I2C_repeated_Start 000A  EUSART1_SetFramingErrorHandler@interruptHandler 0001  
                   __size_of_EUSART1_Write_Text 0086                              _eusart1RxLastError 005F  
                                      utoa@base 000C                                  _interrupt_Init 242E  
                               ___lwmod@divisor 0003                                 ___lwmod@counter 0005  
                                  ___aldiv@sign 0010                  __end_of_PIN_MANAGER_Initialize 2170  
