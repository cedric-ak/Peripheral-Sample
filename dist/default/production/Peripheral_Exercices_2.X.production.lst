

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr 22 23:42:32 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46J13
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39  0000                     
    40                           ; Version 1.45
    41                           ; Generated 16/11/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18LF46J13 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    76  0000                     
    77 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    78  0000                     
    79 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    80  0000                     
    81                           	psect	idataCOMRAM
    82  001486                     __pidataCOMRAM:
    83                           	opt stack 0
    84                           
    85                           ;initializer for PCF8523_setTime@F7818
    86  001486  0003               	dw	3
    87  001488  0004               	dw	4
    88  00148A  0005               	dw	5
    89  00148C  00                 	db	0
    90  00148D  00                 	db	0
    91                           
    92                           ;initializer for _page
    93  00148E  B0                 	db	176
    94  00148F  B1                 	db	177
    95  001490  B2                 	db	178
    96  001491  B3                 	db	179
    97  001492  B4                 	db	180
    98  001493  B5                 	db	181
    99  001494  B6                 	db	182
   100  001495  B7                 	db	183
   101                           
   102                           ;initializer for PCF8523_setDate@F7825
   103  001496  06                 	db	6
   104  001497  07                 	db	7
   105  001498  08                 	db	8
   106  001499  09                 	db	9
   107  00149A  00                 	db	0
   108                           
   109                           	psect	idataBANK0
   110  00141C                     __pidataBANK0:
   111                           	opt stack 0
   112                           
   113                           ;initializer for _columm
   114  00141C  00                 	db	0
   115  00141D  01                 	db	1
   116  00141E  02                 	db	2
   117  00141F  03                 	db	3
   118  001420  04                 	db	4
   119  001421  05                 	db	5
   120  001422  06                 	db	6
   121  001423  07                 	db	7
   122  001424  08                 	db	8
   123  001425  09                 	db	9
   124  001426  0A                 	db	10
   125  001427  0B                 	db	11
   126  001428  0C                 	db	12
   127  001429  0D                 	db	13
   128  00142A  0E                 	db	14
   129  00142B  0F                 	db	15
   130  00142C  10                 	db	16
   131  00142D  11                 	db	17
   132  00142E  12                 	db	18
   133  00142F  13                 	db	19
   134  001430  14                 	db	20
   135  001431  15                 	db	21
   136  001432  16                 	db	22
   137  001433  17                 	db	23
   138  001434  18                 	db	24
   139  001435  19                 	db	25
   140  001436  1A                 	db	26
   141  001437  1B                 	db	27
   142  001438  1C                 	db	28
   143  001439  1D                 	db	29
   144  00143A  1E                 	db	30
   145  00143B  1F                 	db	31
   146                           
   147                           	psect	smallconst
   148  000F00                     __psmallconst:
   149                           	opt stack 0
   150  000F00  00                 	db	0
   151  000F01  00                 	db	0
   152  000F02  80                 	db	128
   153  000F03  3F                 	db	63
   154  000F04  72                 	db	114
   155  000F05  31                 	db	49
   156  000F06  3F                 	db	63
   157  000F07  FE                 	db	254
   158  000F08  75                 	db	117
   159  000F09  3E                 	db	62
   160  000F0A  58                 	db	88
   161  000F0B  63                 	db	99
   162  000F0C  3D                 	db	61
   163  000F0D  95                 	db	149
   164  000F0E  1D                 	db	29
   165  000F0F  3C                 	db	60
   166  000F10  C5                 	db	197
   167  000F11  AE                 	db	174
   168  000F12  3A                 	db	58
   169  000F13  79                 	db	121
   170  000F14  21                 	db	33
   171  000F15  39                 	db	57
   172  000F16  94                 	db	148
   173  000F17  80                 	db	128
   174  000F18  37                 	db	55
   175  000F19  93                 	db	147
   176  000F1A  A7                 	db	167
   177  000F1B  35                 	db	53
   178  000F1C  56                 	db	86
   179  000F1D  15                 	db	21
   180  000F1E  34                 	db	52
   181  000F1F                     __end_ofexp@coeff:
   182                           	opt stack 0
   183  000F1F  00                 	db	0
   184  000F20  00                 	db	0
   185  000F21  00                 	db	0
   186  000F22  00                 	db	0
   187  000F23  80                 	db	128
   188  000F24  3F                 	db	63
   189  000F25  F0                 	db	240
   190  000F26  FF                 	db	255
   191  000F27  BE                 	db	190
   192  000F28  E2                 	db	226
   193  000F29  A9                 	db	169
   194  000F2A  3E                 	db	62
   195  000F2B  83                 	db	131
   196  000F2C  76                 	db	118
   197  000F2D  BE                 	db	190
   198  000F2E  AE                 	db	174
   199  000F2F  2B                 	db	43
   200  000F30  3E                 	db	62
   201  000F31  3C                 	db	60
   202  000F32  C3                 	db	195
   203  000F33  BD                 	db	189
   204  000F34  D2                 	db	210
   205  000F35  13                 	db	19
   206  000F36  3D                 	db	61
   207  000F37  78                 	db	120
   208  000F38  D3                 	db	211
   209  000F39  BB                 	db	187
   210  000F3A                     __end_oflog@coeff:
   211                           	opt stack 0
   212  0000                     _ODCON3	set	3904
   213  0000                     _ODCON2	set	3905
   214  0000                     _ODCON1	set	3906
   215  0000                     _ANCON1	set	3913
   216  0000                     _ANCON0	set	3912
   217  0000                     _REFOCON	set	3901
   218  0000                     _LATEbits	set	3981
   219  0000                     _SSP2STATbits	set	3955
   220  0000                     _SSP2BUF	set	3957
   221  0000                     _SSP2ADD	set	3956
   222  0000                     _SSP2CON2bits	set	3953
   223  0000                     _SSP2CON1bits	set	3954
   224  0000                     _TRISDbits	set	3989
   225  0000                     _PIR3bits	set	4004
   226  0000                     _PIE3bits	set	4003
   227  0000                     _PORTBbits	set	3969
   228  0000                     _LATCbits	set	3979
   229  0000                     _TRISCbits	set	3988
   230  0000                     _INTCONbits	set	4082
   231  0000                     _TRISEbits	set	3990
   232  0000                     _INTCON2bits	set	4081
   233  0000                     _TRISD	set	3989
   234  0000                     _TRISC	set	3988
   235  0000                     _TRISB	set	3987
   236  0000                     _TRISA	set	3986
   237  0000                     _TRISE	set	3990
   238  0000                     _LATC	set	3979
   239  0000                     _LATB	set	3978
   240  0000                     _LATA	set	3977
   241  0000                     _LATD	set	3980
   242  0000                     _LATE	set	3981
   243  0000                     _OSCCON2	set	3975
   244  0000                     _OSCTUNE	set	3995
   245  0000                     _OSCCON	set	4051
   246  0000                     _TXREG1	set	4014
   247  0000                     _RCREG1	set	4015
   248  0000                     _RCSTA1bits	set	4012
   249  0000                     _TXSTA1bits	set	4013
   250  0000                     _PIR1bits	set	3998
   251  0000                     _SPBRGH1	set	3967
   252  0000                     _SPBRG1	set	4016
   253  0000                     _TXSTA1	set	4013
   254  0000                     _RCSTA1	set	4012
   255  0000                     _BAUDCON1	set	3966
   256  0000                     _SSP1STATbits	set	4039
   257  0000                     _SSP1BUF	set	4041
   258  0000                     _SSP1CON1bits	set	4038
   259  0000                     _SSP1ADD	set	4040
   260  0000                     _SSP1CON1	set	4038
   261  0000                     _SSP1STAT	set	4039
   262  000F3A  0D                 	db	13
   263  000F3B  00                 	db	0
   264  000F3C  30                 	db	48	;'0'
   265  000F3D  00                 	db	0
   266  000F3E  20                 	db	32
   267  000F3F  00                 	db	0
   268                           
   269                           ; #config settings
   270  000F40  00                 	db	0	; dummy byte at the end
   271  0000                     
   272                           	psect	cinit
   273  0011D0                     __pcinit:
   274                           	opt stack 0
   275  0011D0                     start_initialization:
   276                           	opt stack 0
   277  0011D0                     __initialization:
   278                           	opt stack 0
   279                           
   280                           ; Initialize objects allocated to BANK0 (32 bytes)
   281                           ; load TBLPTR registers with __pidataBANK0
   282  0011D0  0E1C               	movlw	low __pidataBANK0
   283  0011D2  6EF6               	movwf	tblptrl,c
   284  0011D4  0E14               	movlw	high __pidataBANK0
   285  0011D6  6EF7               	movwf	tblptrh,c
   286  0011D8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   287  0011DA  6EF8               	movwf	tblptru,c
   288  0011DC  EE00  F060         	lfsr	0,__pdataBANK0
   289  0011E0  EE10 F020          	lfsr	1,32
   290  0011E4                     copy_data0:
   291  0011E4  0009               	tblrd		*+
   292  0011E6  CFF5 FFEE          	movff	tablat,postinc0
   293  0011EA  50E5               	movf	postdec1,w,c
   294  0011EC  50E1               	movf	fsr1l,w,c
   295  0011EE  E1FA               	bnz	copy_data0
   296                           
   297                           ; Initialize objects allocated to COMRAM (21 bytes)
   298                           ; load TBLPTR registers with __pidataCOMRAM
   299  0011F0  0E86               	movlw	low __pidataCOMRAM
   300  0011F2  6EF6               	movwf	tblptrl,c
   301  0011F4  0E14               	movlw	high __pidataCOMRAM
   302  0011F6  6EF7               	movwf	tblptrh,c
   303  0011F8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   304  0011FA  6EF8               	movwf	tblptru,c
   305  0011FC  EE00  F037         	lfsr	0,__pdataCOMRAM
   306  001200  EE10 F015          	lfsr	1,21
   307  001204                     copy_data1:
   308  001204  0009               	tblrd		*+
   309  001206  CFF5 FFEE          	movff	tablat,postinc0
   310  00120A  50E5               	movf	postdec1,w,c
   311  00120C  50E1               	movf	fsr1l,w,c
   312  00120E  E1FA               	bnz	copy_data1
   313                           
   314                           ; Clear objects allocated to BANK1 (256 bytes)
   315  001210  EE01  F000         	lfsr	0,__pbssBANK1
   316  001214  EE11 F000          	lfsr	1,256
   317  001218                     clear_0:
   318  001218  6AEE               	clrf	postinc0,c
   319  00121A  50E5               	movf	postdec1,w,c
   320  00121C  50E1               	movf	fsr1l,w,c
   321  00121E  E1FC               	bnz	clear_0
   322  001220  50E2               	movf	fsr1h,w,c
   323  001222  E1FA               	bnz	clear_0
   324                           
   325                           ; Clear objects allocated to COMRAM (31 bytes)
   326  001224  EE00  F001         	lfsr	0,__pbssCOMRAM
   327  001228  0E1F               	movlw	31
   328  00122A                     clear_1:
   329  00122A  6AEE               	clrf	postinc0,c
   330  00122C  06E8               	decf	wreg,f,c
   331  00122E  E1FD               	bnz	clear_1
   332  001230                     end_of_initialization:
   333                           	opt stack 0
   334  001230                     __end_of__initialization:
   335                           	opt stack 0
   336  001230  0E00               	movlw	low (__Lmediumconst shr (0+16))
   337  001232  6EF8               	movwf	tblptru,c
   338  001234  0100               	movlb	0
   339  001236  EF07  F008         	goto	_main	;jump to C main() function
   340                           tblptru	equ	0xFF8
   341                           tblptrh	equ	0xFF7
   342                           tblptrl	equ	0xFF6
   343                           tablat	equ	0xFF5
   344                           postinc0	equ	0xFEE
   345                           wreg	equ	0xFE8
   346                           postdec1	equ	0xFE5
   347                           fsr1h	equ	0xFE2
   348                           fsr1l	equ	0xFE1
   349                           
   350                           	psect	bssCOMRAM
   351  000001                     __pbssCOMRAM:
   352                           	opt stack 0
   353  000001                     _sData:
   354                           	opt stack 0
   355  000001                     	ds	10
   356  00000B                     _bfSize:
   357                           	opt stack 0
   358  00000B                     	ds	4
   359  00000F                     _MAX31_ADC:
   360                           	opt stack 0
   361  00000F                     	ds	4
   362  000013                     _errno:
   363                           	opt stack 0
   364  000013                     	ds	2
   365  000015                     _buffer:
   366                           	opt stack 0
   367  000015                     	ds	2
   368  000017                     _ADC:
   369                           	opt stack 0
   370  000017                     	ds	2
   371  000019                     _EUSART1_ErrorHandler:
   372                           	opt stack 0
   373  000019                     	ds	2
   374  00001B                     _EUSART1_OverrunErrorHandler:
   375                           	opt stack 0
   376  00001B                     	ds	2
   377  00001D                     _EUSART1_FramingErrorHandler:
   378                           	opt stack 0
   379  00001D                     	ds	2
   380  00001F                     _eusart1RxLastError:
   381                           	opt stack 0
   382  00001F                     	ds	1
   383                           tblptru	equ	0xFF8
   384                           tblptrh	equ	0xFF7
   385                           tblptrl	equ	0xFF6
   386                           tablat	equ	0xFF5
   387                           postinc0	equ	0xFEE
   388                           wreg	equ	0xFE8
   389                           postdec1	equ	0xFE5
   390                           fsr1h	equ	0xFE2
   391                           fsr1l	equ	0xFE1
   392                           
   393                           	psect	dataCOMRAM
   394  000037                     __pdataCOMRAM:
   395                           	opt stack 0
   396  000037                     PCF8523_setTime@F7818:
   397                           	opt stack 0
   398  000037                     	ds	8
   399  00003F                     _page:
   400                           	opt stack 0
   401  00003F                     	ds	8
   402  000047                     PCF8523_setDate@F7825:
   403                           	opt stack 0
   404  000047                     	ds	5
   405                           tblptru	equ	0xFF8
   406                           tblptrh	equ	0xFF7
   407                           tblptrl	equ	0xFF6
   408                           tablat	equ	0xFF5
   409                           postinc0	equ	0xFEE
   410                           wreg	equ	0xFE8
   411                           postdec1	equ	0xFE5
   412                           fsr1h	equ	0xFE2
   413                           fsr1l	equ	0xFE1
   414                           
   415                           	psect	dataBANK0
   416  000060                     __pdataBANK0:
   417                           	opt stack 0
   418  000060                     _columm:
   419                           	opt stack 0
   420  000060                     	ds	32
   421                           tblptru	equ	0xFF8
   422                           tblptrh	equ	0xFF7
   423                           tblptrl	equ	0xFF6
   424                           tablat	equ	0xFF5
   425                           postinc0	equ	0xFEE
   426                           wreg	equ	0xFE8
   427                           postdec1	equ	0xFE5
   428                           fsr1h	equ	0xFE2
   429                           fsr1l	equ	0xFE1
   430                           
   431                           	psect	bssBANK1
   432  000100                     __pbssBANK1:
   433                           	opt stack 0
   434  000100                     _TxData:
   435                           	opt stack 0
   436  000100                     	ds	256
   437                           tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           postinc0	equ	0xFEE
   442                           wreg	equ	0xFE8
   443                           postdec1	equ	0xFE5
   444                           fsr1h	equ	0xFE2
   445                           fsr1l	equ	0xFE1
   446                           
   447                           	psect	cstackCOMRAM
   448  000020                     __pcstackCOMRAM:
   449                           	opt stack 0
   450  000020                     ??_OSCILLATOR_Initialize:
   451  000020                     ?___wmul:
   452                           	opt stack 0
   453  000020                     I2C_Write@data:
   454                           	opt stack 0
   455  000020                     EUSART1_SetFramingErrorHandler@interruptHandler:
   456                           	opt stack 0
   457  000020                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   458                           	opt stack 0
   459  000020                     EUSART1_SetErrorHandler@interruptHandler:
   460                           	opt stack 0
   461  000020                     I2C_read@ACK_NACK:
   462                           	opt stack 0
   463  000020                     ___wmul@multiplier:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x0
   467  000020                     	ds	1
   468  000021                     
   469                           ; 1 bytes @ 0x1
   470  000021                     	ds	1
   471  000022                     MCP23008_pinMode@port:
   472                           	opt stack 0
   473  000022                     MCP23008_Write@port:
   474                           	opt stack 0
   475  000022                     MCP23008_read@port:
   476                           	opt stack 0
   477  000022                     MCP23008_pullUp@port:
   478                           	opt stack 0
   479  000022                     ___wmul@multiplicand:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x2
   483  000022                     	ds	2
   484  000024                     ??_MCP23008_pullUp:
   485  000024                     ??_MCP23008_read:
   486  000024                     MCP23008_pinMode@mode:
   487                           	opt stack 0
   488  000024                     MCP23008_Write@data:
   489                           	opt stack 0
   490  000024                     ___wmul@product:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x4
   494  000024                     	ds	2
   495  000026                     ??_MCP23008_pinMode:
   496  000026                     ??_MCP23008_Write:
   497  000026                     ?___aldiv:
   498                           	opt stack 0
   499  000026                     MCP23008_pullUp@dataRead:
   500                           	opt stack 0
   501  000026                     ___aldiv@dividend:
   502                           	opt stack 0
   503                           
   504                           ; 4 bytes @ 0x6
   505  000026                     	ds	1
   506  000027                     MCP23008_read@dataRead:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x7
   510  000027                     	ds	1
   511  000028                     MCP23008_pinMode@dataRead:
   512                           	opt stack 0
   513  000028                     MCP23008_Write@dataRead:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x8
   517  000028                     	ds	2
   518  00002A                     ___aldiv@divisor:
   519                           	opt stack 0
   520                           
   521                           ; 4 bytes @ 0xA
   522  00002A                     	ds	4
   523  00002E                     ___aldiv@counter:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0xE
   527  00002E                     	ds	1
   528  00002F                     ___aldiv@sign:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0xF
   532  00002F                     	ds	1
   533  000030                     ___aldiv@quotient:
   534                           	opt stack 0
   535                           
   536                           ; 4 bytes @ 0x10
   537  000030                     	ds	4
   538  000034                     I2C_Init@F_clock:
   539                           	opt stack 0
   540                           
   541                           ; 1 bytes @ 0x14
   542  000034                     	ds	1
   543  000035                     ??_main:
   544                           
   545                           ; 1 bytes @ 0x15
   546  000035                     	ds	2
   547                           tblptru	equ	0xFF8
   548                           tblptrh	equ	0xFF7
   549                           tblptrl	equ	0xFF6
   550                           tablat	equ	0xFF5
   551                           postinc0	equ	0xFEE
   552                           wreg	equ	0xFE8
   553                           postdec1	equ	0xFE5
   554                           fsr1h	equ	0xFE2
   555                           fsr1l	equ	0xFE1
   556                           
   557 ;;
   558 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   559 ;;
   560 ;; *************** function _main *****************
   561 ;; Defined at:
   562 ;;		line 5 in file "main.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   578 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   579 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   580 ;;Total ram usage:        2 bytes
   581 ;; Hardware stack levels required when called:    3
   582 ;; This function calls:
   583 ;;		_I2C_buffClear
   584 ;;		_MCP23008_Write
   585 ;;		_MCP23008_pinMode
   586 ;;		_MCP23008_pullUp
   587 ;;		_MCP23008_read
   588 ;;		_SYSTEM_Initialize
   589 ;;		_interrupt_Init
   590 ;; This function is called by:
   591 ;;		Startup code after reset
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           	psect	text0
   596  00100E                     __ptext0:
   597                           	opt stack 0
   598  00100E                     _main:
   599                           	opt stack 28
   600                           
   601                           ;main.c: 7: interrupt_Init();
   602                           
   603                           ;incstack = 0
   604  00100E  EC5D  F00A         	call	_interrupt_Init	;wreg free
   605                           
   606                           ;main.c: 8: SYSTEM_Initialize();
   607  001012  EC2B  F00A         	call	_SYSTEM_Initialize	;wreg free
   608                           
   609                           ;main.c: 9: do { TRISCbits.TRISC0 = 0; } while(0);
   610  001016  9094               	bcf	3988,0,c	;volatile
   611                           
   612                           ;main.c: 10: I2C_buffClear();
   613  001018  EC4E  F00A         	call	_I2C_buffClear	;wreg free
   614                           
   615                           ;main.c: 11: _delay((unsigned long)((10)*(16000000/4000.0)));
   616  00101C  0E34               	movlw	52
   617  00101E  6E35               	movwf	??_main& (0+255),c
   618  001020  0EF2               	movlw	242
   619  001022                     u1227:
   620  001022  2EE8               	decfsz	wreg,f,c
   621  001024  D7FE               	bra	u1227
   622  001026  2E35               	decfsz	??_main& (0+255),f,c
   623  001028  D7FC               	bra	u1227
   624                           
   625                           ;main.c: 13: MCP23008_pinMode(3, 0x01);
   626  00102A  0E00               	movlw	0
   627  00102C  6E23               	movwf	MCP23008_pinMode@port+1,c
   628  00102E  0E03               	movlw	3
   629  001030  6E22               	movwf	MCP23008_pinMode@port,c
   630  001032  0E00               	movlw	0
   631  001034  6E25               	movwf	MCP23008_pinMode@mode+1,c
   632  001036  0E01               	movlw	1
   633  001038  6E24               	movwf	MCP23008_pinMode@mode,c
   634  00103A  EC5E  F008         	call	_MCP23008_pinMode	;wreg free
   635                           
   636                           ;main.c: 14: MCP23008_pinMode(5, 0x00);
   637  00103E  0E00               	movlw	0
   638  001040  6E23               	movwf	MCP23008_pinMode@port+1,c
   639  001042  0E05               	movlw	5
   640  001044  6E22               	movwf	MCP23008_pinMode@port,c
   641  001046  0E00               	movlw	0
   642  001048  6E25               	movwf	MCP23008_pinMode@mode+1,c
   643  00104A  0E00               	movlw	0
   644  00104C  6E24               	movwf	MCP23008_pinMode@mode,c
   645  00104E  EC5E  F008         	call	_MCP23008_pinMode	;wreg free
   646                           
   647                           ;main.c: 15: MCP23008_pullUp(3);
   648  001052  0E00               	movlw	0
   649  001054  6E23               	movwf	MCP23008_pullUp@port+1,c
   650  001056  0E03               	movlw	3
   651  001058  6E22               	movwf	MCP23008_pullUp@port,c
   652  00105A  EC1D  F009         	call	_MCP23008_pullUp	;wreg free
   653  00105E                     
   654                           ;main.c: 18: _delay((unsigned long)((500)*(16000000/4000.0)));
   655  00105E  0E0B               	movlw	11
   656  001060  6E36               	movwf	(??_main+1)& (0+255),c
   657  001062  0E26               	movlw	38
   658  001064  6E35               	movwf	??_main& (0+255),c
   659  001066  0E5E               	movlw	94
   660  001068                     u1237:
   661  001068  2EE8               	decfsz	wreg,f,c
   662  00106A  D7FE               	bra	u1237
   663  00106C  2E35               	decfsz	??_main& (0+255),f,c
   664  00106E  D7FC               	bra	u1237
   665  001070  2E36               	decfsz	(??_main+1)& (0+255),f,c
   666  001072  D7FA               	bra	u1237
   667                           
   668                           ;main.c: 19: if (MCP23008_read(3) == 0) {
   669  001074  0E00               	movlw	0
   670  001076  6E23               	movwf	MCP23008_read@port+1,c
   671  001078  0E03               	movlw	3
   672  00107A  6E22               	movwf	MCP23008_read@port,c
   673  00107C  EC4E  F009         	call	_MCP23008_read	;wreg free
   674  001080  0900               	iorlw	0
   675  001082  A4D8               	btfss	status,2,c
   676  001084  D7EC               	goto	l274
   677                           
   678                           ;main.c: 20: _delay((unsigned long)((10)*(16000000/4000.0)));
   679  001086  0E34               	movlw	52
   680  001088  6E35               	movwf	??_main& (0+255),c
   681  00108A  0EF2               	movlw	242
   682  00108C                     u1247:
   683  00108C  2EE8               	decfsz	wreg,f,c
   684  00108E  D7FE               	bra	u1247
   685  001090  2E35               	decfsz	??_main& (0+255),f,c
   686  001092  D7FC               	bra	u1247
   687                           
   688                           ;main.c: 21: if (MCP23008_read(3) == 0) {
   689  001094  0E00               	movlw	0
   690  001096  6E23               	movwf	MCP23008_read@port+1,c
   691  001098  0E03               	movlw	3
   692  00109A  6E22               	movwf	MCP23008_read@port,c
   693  00109C  EC4E  F009         	call	_MCP23008_read	;wreg free
   694  0010A0  0900               	iorlw	0
   695  0010A2  A4D8               	btfss	status,2,c
   696  0010A4  D7DC               	goto	l274
   697                           
   698                           ;main.c: 22: MCP23008_Write(5, 1);
   699  0010A6  0E00               	movlw	0
   700  0010A8  6E23               	movwf	MCP23008_Write@port+1,c
   701  0010AA  0E05               	movlw	5
   702  0010AC  6E22               	movwf	MCP23008_Write@port,c
   703  0010AE  0E00               	movlw	0
   704  0010B0  6E25               	movwf	MCP23008_Write@data+1,c
   705  0010B2  0E01               	movlw	1
   706  0010B4  6E24               	movwf	MCP23008_Write@data,c
   707  0010B6  ECA3  F008         	call	_MCP23008_Write	;wreg free
   708  0010BA  D7D1               	goto	l274
   709  0010BC                     __end_of_main:
   710                           	opt stack 0
   711                           tblptru	equ	0xFF8
   712                           tblptrh	equ	0xFF7
   713                           tblptrl	equ	0xFF6
   714                           tablat	equ	0xFF5
   715                           postinc0	equ	0xFEE
   716                           wreg	equ	0xFE8
   717                           postdec1	equ	0xFE5
   718                           fsr1h	equ	0xFE2
   719                           fsr1l	equ	0xFE1
   720                           status	equ	0xFD8
   721                           
   722 ;; *************** function _interrupt_Init *****************
   723 ;; Defined at:
   724 ;;		line 15 in file "Interrupt.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;		None
   727 ;; Auto vars:     Size  Location     Type
   728 ;;		None
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      void 
   731 ;; Registers used:
   732 ;;		None
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   742 ;;Total ram usage:        0 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; This function calls:
   745 ;;		Nothing
   746 ;; This function is called by:
   747 ;;		_main
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text1
   752  0014BA                     __ptext1:
   753                           	opt stack 0
   754  0014BA                     _interrupt_Init:
   755                           	opt stack 30
   756                           
   757                           ;Interrupt.c: 16: INTCONbits.GIE = 1;
   758                           
   759                           ;incstack = 0
   760  0014BA  8EF2               	bsf	intcon,7,c	;volatile
   761                           
   762                           ;Interrupt.c: 17: INTCONbits.PEIE = 1;
   763  0014BC  8CF2               	bsf	intcon,6,c	;volatile
   764                           
   765                           ;Interrupt.c: 18: PIE3bits.SSP2IE = 1;
   766  0014BE  8EA3               	bsf	4003,7,c	;volatile
   767                           
   768                           ;Interrupt.c: 19: PIR3bits.SSP2IF = 0;
   769  0014C0  9EA4               	bcf	4004,7,c	;volatile
   770  0014C2  0012               	return		;funcret
   771  0014C4                     __end_of_interrupt_Init:
   772                           	opt stack 0
   773                           tblptru	equ	0xFF8
   774                           tblptrh	equ	0xFF7
   775                           tblptrl	equ	0xFF6
   776                           tablat	equ	0xFF5
   777                           intcon	equ	0xFF2
   778                           postinc0	equ	0xFEE
   779                           wreg	equ	0xFE8
   780                           postdec1	equ	0xFE5
   781                           fsr1h	equ	0xFE2
   782                           fsr1l	equ	0xFE1
   783                           status	equ	0xFD8
   784                           
   785 ;; *************** function _SYSTEM_Initialize *****************
   786 ;; Defined at:
   787 ;;		line 50 in file "mcc_generated_files/mcc.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   805 ;;Total ram usage:        0 bytes
   806 ;; Hardware stack levels used:    1
   807 ;; Hardware stack levels required when called:    2
   808 ;; This function calls:
   809 ;;		_EUSART1_Initialize
   810 ;;		_I2C_Init
   811 ;;		_OSCILLATOR_Initialize
   812 ;;		_PIN_MANAGER_Initialize
   813 ;;		_SPI1_Initialize
   814 ;; This function is called by:
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text2
   820  001456                     __ptext2:
   821                           	opt stack 0
   822  001456                     _SYSTEM_Initialize:
   823                           	opt stack 28
   824                           
   825                           ;mcc.c: 52: PIN_MANAGER_Initialize();
   826                           
   827                           ;incstack = 0
   828  001456  ECA5  F009         	call	_PIN_MANAGER_Initialize	;wreg free
   829                           
   830                           ;mcc.c: 53: OSCILLATOR_Initialize();
   831  00145A  ECE6  F009         	call	_OSCILLATOR_Initialize	;wreg free
   832                           
   833                           ;mcc.c: 54: SPI1_Initialize();
   834  00145E  EC56  F00A         	call	_SPI1_Initialize	;wreg free
   835                           
   836                           ;mcc.c: 55: EUSART1_Initialize();
   837  001462  ECC7  F009         	call	_EUSART1_Initialize	;wreg free
   838                           
   839                           ;mcc.c: 56: I2C_Init(100);
   840  001466  0E64               	movlw	100
   841  001468  EC7B  F009         	call	_I2C_Init
   842  00146C  0012               	return		;funcret
   843  00146E                     __end_of_SYSTEM_Initialize:
   844                           	opt stack 0
   845                           tblptru	equ	0xFF8
   846                           tblptrh	equ	0xFF7
   847                           tblptrl	equ	0xFF6
   848                           tablat	equ	0xFF5
   849                           intcon	equ	0xFF2
   850                           postinc0	equ	0xFEE
   851                           wreg	equ	0xFE8
   852                           postdec1	equ	0xFE5
   853                           fsr1h	equ	0xFE2
   854                           fsr1l	equ	0xFE1
   855                           status	equ	0xFD8
   856                           
   857 ;; *************** function _SPI1_Initialize *****************
   858 ;; Defined at:
   859 ;;		line 65 in file "mcc_generated_files/spi1.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   877 ;;Total ram usage:        0 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_SYSTEM_Initialize
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text3
   887  0014AC                     __ptext3:
   888                           	opt stack 0
   889  0014AC                     _SPI1_Initialize:
   890                           	opt stack 29
   891                           
   892                           ;spi1.c: 70: SSP1STAT = 0x80;
   893                           
   894                           ;incstack = 0
   895  0014AC  0E80               	movlw	128
   896  0014AE  6EC7               	movwf	4039,c	;volatile
   897                           
   898                           ;spi1.c: 73: SSP1CON1 = 0x20;
   899  0014B0  0E20               	movlw	32
   900  0014B2  6EC6               	movwf	4038,c	;volatile
   901                           
   902                           ;spi1.c: 76: SSP1ADD = 0x00;
   903  0014B4  0E00               	movlw	0
   904  0014B6  6EC8               	movwf	4040,c	;volatile
   905  0014B8  0012               	return		;funcret
   906  0014BA                     __end_of_SPI1_Initialize:
   907                           	opt stack 0
   908                           tblptru	equ	0xFF8
   909                           tblptrh	equ	0xFF7
   910                           tblptrl	equ	0xFF6
   911                           tablat	equ	0xFF5
   912                           intcon	equ	0xFF2
   913                           postinc0	equ	0xFEE
   914                           wreg	equ	0xFE8
   915                           postdec1	equ	0xFE5
   916                           fsr1h	equ	0xFE2
   917                           fsr1l	equ	0xFE1
   918                           status	equ	0xFD8
   919                           
   920 ;; *************** function _PIN_MANAGER_Initialize *****************
   921 ;; Defined at:
   922 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;		None
   925 ;; Auto vars:     Size  Location     Type
   926 ;;		None
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, status,2
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   940 ;;Total ram usage:        0 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_SYSTEM_Initialize
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           	psect	text4
   950  00134A                     __ptext4:
   951                           	opt stack 0
   952  00134A                     _PIN_MANAGER_Initialize:
   953                           	opt stack 29
   954                           
   955                           ;pin_manager.c: 57: LATE = 0x04;
   956                           
   957                           ;incstack = 0
   958  00134A  0E04               	movlw	4
   959  00134C  6E8D               	movwf	3981,c	;volatile
   960                           
   961                           ;pin_manager.c: 58: LATD = 0x00;
   962  00134E  0E00               	movlw	0
   963  001350  6E8C               	movwf	3980,c	;volatile
   964                           
   965                           ;pin_manager.c: 59: LATA = 0x00;
   966  001352  0E00               	movlw	0
   967  001354  6E89               	movwf	3977,c	;volatile
   968                           
   969                           ;pin_manager.c: 60: LATB = 0x00;
   970  001356  0E00               	movlw	0
   971  001358  6E8A               	movwf	3978,c	;volatile
   972                           
   973                           ;pin_manager.c: 61: LATC = 0x01;
   974  00135A  0E01               	movlw	1
   975  00135C  6E8B               	movwf	3979,c	;volatile
   976                           
   977                           ;pin_manager.c: 66: TRISE = 0xC3;
   978  00135E  0EC3               	movlw	195
   979  001360  6E96               	movwf	3990,c	;volatile
   980                           
   981                           ;pin_manager.c: 67: TRISA = 0xEF;
   982  001362  0EEF               	movlw	239
   983  001364  6E92               	movwf	3986,c	;volatile
   984                           
   985                           ;pin_manager.c: 68: TRISB = 0xDF;
   986  001366  0EDF               	movlw	223
   987  001368  6E93               	movwf	3987,c	;volatile
   988                           
   989                           ;pin_manager.c: 69: TRISC = 0x96;
   990  00136A  0E96               	movlw	150
   991  00136C  6E94               	movwf	3988,c	;volatile
   992                           
   993                           ;pin_manager.c: 70: TRISD = 0xFF;
   994  00136E  6895               	setf	3989,c	;volatile
   995                           
   996                           ;pin_manager.c: 75: ANCON0 = 0x80;
   997  001370  0E80               	movlw	128
   998  001372  010F               	movlb	15	; () banked
   999  001374  6F48               	movwf	72,b	;volatile
  1000                           
  1001                           ;pin_manager.c: 76: ANCON1 = 0x10;
  1002  001376  0E10               	movlw	16
  1003  001378  6F49               	movwf	73,b	;volatile
  1004                           
  1005                           ; BSR set to: 15
  1006                           ;pin_manager.c: 81: INTCON2bits.nRBPU = 1;
  1007  00137A  8EF1               	bsf	intcon2,7,c	;volatile
  1008                           
  1009                           ; BSR set to: 15
  1010                           ;pin_manager.c: 82: TRISEbits.RDPU = 1;
  1011  00137C  8E96               	bsf	3990,7,c	;volatile
  1012                           
  1013                           ; BSR set to: 15
  1014                           ;pin_manager.c: 83: TRISEbits.REPU = 1;
  1015  00137E  8C96               	bsf	3990,6,c	;volatile
  1016                           
  1017                           ;pin_manager.c: 88: ODCON1 = 0x00;
  1018  001380  0E00               	movlw	0
  1019  001382  6F42               	movwf	66,b	;volatile
  1020                           
  1021                           ;pin_manager.c: 89: ODCON2 = 0x00;
  1022  001384  0E00               	movlw	0
  1023  001386  6F41               	movwf	65,b	;volatile
  1024                           
  1025                           ;pin_manager.c: 90: ODCON3 = 0x00;
  1026  001388  0E00               	movlw	0
  1027  00138A  6F40               	movwf	64,b	;volatile
  1028                           
  1029                           ; BSR set to: 15
  1030  00138C  0012               	return		;funcret
  1031  00138E                     __end_of_PIN_MANAGER_Initialize:
  1032                           	opt stack 0
  1033                           tblptru	equ	0xFF8
  1034                           tblptrh	equ	0xFF7
  1035                           tblptrl	equ	0xFF6
  1036                           tablat	equ	0xFF5
  1037                           intcon	equ	0xFF2
  1038                           intcon2	equ	0xFF1
  1039                           postinc0	equ	0xFEE
  1040                           wreg	equ	0xFE8
  1041                           postdec1	equ	0xFE5
  1042                           fsr1h	equ	0xFE2
  1043                           fsr1l	equ	0xFE1
  1044                           status	equ	0xFD8
  1045                           
  1046 ;; *************** function _OSCILLATOR_Initialize *****************
  1047 ;; Defined at:
  1048 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1065 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1066 ;;Total ram usage:        2 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_SYSTEM_Initialize
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text5
  1076  0013CC                     __ptext5:
  1077                           	opt stack 0
  1078  0013CC                     _OSCILLATOR_Initialize:
  1079                           	opt stack 29
  1080                           
  1081                           ;mcc.c: 62: OSCCON = 0x70;
  1082                           
  1083                           ; BSR set to: 15
  1084                           ;incstack = 0
  1085  0013CC  0E70               	movlw	112
  1086  0013CE  6ED3               	movwf	4051,c	;volatile
  1087                           
  1088                           ;mcc.c: 64: OSCTUNE = 0x00;
  1089  0013D0  0E00               	movlw	0
  1090  0013D2  6E9B               	movwf	3995,c	;volatile
  1091                           
  1092                           ;mcc.c: 66: REFOCON = 0x00;
  1093  0013D4  0E00               	movlw	0
  1094  0013D6  010F               	movlb	15	; () banked
  1095  0013D8  6F3D               	movwf	61,b	;volatile
  1096                           
  1097                           ;mcc.c: 68: OSCCON2 = 0x14;
  1098  0013DA  0E14               	movlw	20
  1099  0013DC  6E87               	movwf	3975,c	;volatile
  1100                           
  1101                           ; BSR set to: 15
  1102                           ;mcc.c: 69: _delay((unsigned long)((500)*(16000000/4000.0)));
  1103  0013DE  0E0B               	movlw	11
  1104  0013E0  6E21               	movwf	(??_OSCILLATOR_Initialize+1)& (0+255),c
  1105  0013E2  0E26               	movlw	38
  1106  0013E4  6E20               	movwf	??_OSCILLATOR_Initialize& (0+255),c
  1107  0013E6  0E5E               	movlw	94
  1108  0013E8                     u1257:
  1109  0013E8  2EE8               	decfsz	wreg,f,c
  1110  0013EA  D7FE               	bra	u1257
  1111  0013EC  2E20               	decfsz	??_OSCILLATOR_Initialize& (0+255),f,c
  1112  0013EE  D7FC               	bra	u1257
  1113  0013F0  2E21               	decfsz	(??_OSCILLATOR_Initialize+1)& (0+255),f,c
  1114  0013F2  D7FA               	bra	u1257
  1115  0013F4  0012               	return		;funcret
  1116  0013F6                     __end_of_OSCILLATOR_Initialize:
  1117                           	opt stack 0
  1118                           tblptru	equ	0xFF8
  1119                           tblptrh	equ	0xFF7
  1120                           tblptrl	equ	0xFF6
  1121                           tablat	equ	0xFF5
  1122                           intcon	equ	0xFF2
  1123                           intcon2	equ	0xFF1
  1124                           postinc0	equ	0xFEE
  1125                           wreg	equ	0xFE8
  1126                           postdec1	equ	0xFE5
  1127                           fsr1h	equ	0xFE2
  1128                           fsr1l	equ	0xFE1
  1129                           status	equ	0xFD8
  1130                           
  1131 ;; *************** function _I2C_Init *****************
  1132 ;; Defined at:
  1133 ;;		line 20 in file "I2C.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  F_clock         1    wreg     unsigned char 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  F_clock         1   20[COMRAM] unsigned char 
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      void 
  1140 ;; Registers used:
  1141 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1150 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1151 ;;Total ram usage:        1 bytes
  1152 ;; Hardware stack levels used:    1
  1153 ;; Hardware stack levels required when called:    1
  1154 ;; This function calls:
  1155 ;;		___aldiv
  1156 ;;		___wmul
  1157 ;; This function is called by:
  1158 ;;		_SYSTEM_Initialize
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text6
  1163  0012F6                     __ptext6:
  1164                           	opt stack 0
  1165  0012F6                     _I2C_Init:
  1166                           	opt stack 28
  1167                           
  1168                           ;incstack = 0
  1169                           ;I2C_Init@F_clock stored from wreg
  1170  0012F6  6E34               	movwf	I2C_Init@F_clock,c
  1171                           
  1172                           ;I2C.c: 21: TRISDbits.TRISD0 = 1;
  1173  0012F8  8095               	bsf	3989,0,c	;volatile
  1174                           
  1175                           ;I2C.c: 22: TRISDbits.TRISD1 = 1;
  1176  0012FA  8295               	bsf	3989,1,c	;volatile
  1177                           
  1178                           ;I2C.c: 23: SSP2CON1bits.WCOL = 0;
  1179  0012FC  9E72               	bcf	3954,7,c	;volatile
  1180                           
  1181                           ;I2C.c: 24: SSP2CON1bits.SSPEN = 1;
  1182  0012FE  8A72               	bsf	3954,5,c	;volatile
  1183                           
  1184                           ;I2C.c: 25: SSP2CON1bits.SSPM = 0x08;
  1185  001300  5072               	movf	3954,w,c	;volatile
  1186  001302  0BF0               	andlw	-16
  1187  001304  0908               	iorlw	8
  1188  001306  6E72               	movwf	3954,c	;volatile
  1189                           
  1190                           ;I2C.c: 26: SSP2CON2bits.ACKDT = 0;
  1191  001308  9A71               	bcf	3953,5,c	;volatile
  1192                           
  1193                           ;I2C.c: 27: SSP2CON2bits.ACKEN = 1;
  1194  00130A  8871               	bsf	3953,4,c	;volatile
  1195                           
  1196                           ;I2C.c: 28: SSP2ADD = (16000000 / ((F_clock * 1000) * 4)) - 1;
  1197  00130C  0E00               	movlw	0
  1198  00130E  6E26               	movwf	___aldiv@dividend,c
  1199  001310  0E24               	movlw	36
  1200  001312  6E27               	movwf	___aldiv@dividend+1,c
  1201  001314  0EF4               	movlw	244
  1202  001316  6E28               	movwf	___aldiv@dividend+2,c
  1203  001318  0E00               	movlw	0
  1204  00131A  6E29               	movwf	___aldiv@dividend+3,c
  1205  00131C  C034  F020         	movff	I2C_Init@F_clock,___wmul@multiplier
  1206  001320  6A21               	clrf	___wmul@multiplier+1,c
  1207  001322  0E0F               	movlw	15
  1208  001324  6E23               	movwf	___wmul@multiplicand+1,c
  1209  001326  0EA0               	movlw	160
  1210  001328  6E22               	movwf	___wmul@multiplicand,c
  1211  00132A  ECFB  F009         	call	___wmul	;wreg free
  1212  00132E  C020  F02A         	movff	?___wmul,___aldiv@divisor
  1213  001332  C021  F02B         	movff	?___wmul+1,___aldiv@divisor+1
  1214  001336  0E00               	movlw	0
  1215  001338  BE2B               	btfsc	___aldiv@divisor+1,7,c
  1216  00133A  0EFF               	movlw	-1
  1217  00133C  6E2C               	movwf	___aldiv@divisor+2,c
  1218  00133E  6E2D               	movwf	___aldiv@divisor+3,c
  1219  001340  ECA1  F007         	call	___aldiv	;wreg free
  1220  001344  0426               	decf	?___aldiv,w,c
  1221  001346  6E74               	movwf	3956,c	;volatile
  1222  001348  0012               	return		;funcret
  1223  00134A                     __end_of_I2C_Init:
  1224                           	opt stack 0
  1225                           tblptru	equ	0xFF8
  1226                           tblptrh	equ	0xFF7
  1227                           tblptrl	equ	0xFF6
  1228                           tablat	equ	0xFF5
  1229                           intcon	equ	0xFF2
  1230                           intcon2	equ	0xFF1
  1231                           postinc0	equ	0xFEE
  1232                           wreg	equ	0xFE8
  1233                           postdec1	equ	0xFE5
  1234                           fsr1h	equ	0xFE2
  1235                           fsr1l	equ	0xFE1
  1236                           status	equ	0xFD8
  1237                           
  1238 ;; *************** function ___wmul *****************
  1239 ;; Defined at:
  1240 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  multiplier      2    0[COMRAM] unsigned int 
  1243 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  product         2    4[COMRAM] unsigned int 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  2    0[COMRAM] unsigned int 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0, prodl, prodh
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1255 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1256 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1258 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1259 ;;Total ram usage:        6 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; This function calls:
  1262 ;;		Nothing
  1263 ;; This function is called by:
  1264 ;;		_I2C_Init
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text7
  1269  0013F6                     __ptext7:
  1270                           	opt stack 0
  1271  0013F6                     ___wmul:
  1272                           	opt stack 28
  1273                           
  1274                           ;incstack = 0
  1275  0013F6  5020               	movf	___wmul@multiplier,w,c
  1276  0013F8  0222               	mulwf	___wmul@multiplicand,c
  1277  0013FA  CFF3 F024          	movff	prodl,___wmul@product
  1278  0013FE  CFF4 F025          	movff	prodh,___wmul@product+1
  1279  001402  5020               	movf	___wmul@multiplier,w,c
  1280  001404  0223               	mulwf	___wmul@multiplicand+1,c
  1281  001406  50F3               	movf	prodl,w,c
  1282  001408  2625               	addwf	___wmul@product+1,f,c
  1283  00140A  5021               	movf	___wmul@multiplier+1,w,c
  1284  00140C  0222               	mulwf	___wmul@multiplicand,c
  1285  00140E  50F3               	movf	prodl,w,c
  1286  001410  2625               	addwf	___wmul@product+1,f,c
  1287  001412  C024  F020         	movff	___wmul@product,?___wmul
  1288  001416  C025  F021         	movff	___wmul@product+1,?___wmul+1
  1289  00141A  0012               	return	
  1290  00141C                     __end_of___wmul:
  1291                           	opt stack 0
  1292                           tblptru	equ	0xFF8
  1293                           tblptrh	equ	0xFF7
  1294                           tblptrl	equ	0xFF6
  1295                           tablat	equ	0xFF5
  1296                           prodh	equ	0xFF4
  1297                           prodl	equ	0xFF3
  1298                           intcon	equ	0xFF2
  1299                           intcon2	equ	0xFF1
  1300                           postinc0	equ	0xFEE
  1301                           wreg	equ	0xFE8
  1302                           postdec1	equ	0xFE5
  1303                           fsr1h	equ	0xFE2
  1304                           fsr1l	equ	0xFE1
  1305                           status	equ	0xFD8
  1306                           
  1307 ;; *************** function ___aldiv *****************
  1308 ;; Defined at:
  1309 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;  dividend        4    6[COMRAM] long 
  1312 ;;  divisor         4   10[COMRAM] long 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  quotient        4   16[COMRAM] long 
  1315 ;;  sign            1   15[COMRAM] unsigned char 
  1316 ;;  counter         1   14[COMRAM] unsigned char 
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  4    6[COMRAM] long 
  1319 ;; Registers used:
  1320 ;;		wreg, status,2, status,0
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1326 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1327 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1329 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1330 ;;Total ram usage:       14 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; This function calls:
  1333 ;;		Nothing
  1334 ;; This function is called by:
  1335 ;;		_I2C_Init
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text8
  1340  000F42                     __ptext8:
  1341                           	opt stack 0
  1342  000F42                     ___aldiv:
  1343                           	opt stack 28
  1344                           
  1345                           ;incstack = 0
  1346  000F42  0E00               	movlw	0
  1347  000F44  6E2F               	movwf	___aldiv@sign,c
  1348  000F46  AE2D               	btfss	___aldiv@divisor+3,7,c
  1349  000F48  D00A               	goto	l941
  1350  000F4A  1E2D               	comf	___aldiv@divisor+3,f,c
  1351  000F4C  1E2C               	comf	___aldiv@divisor+2,f,c
  1352  000F4E  1E2B               	comf	___aldiv@divisor+1,f,c
  1353  000F50  6C2A               	negf	___aldiv@divisor,c
  1354  000F52  0E00               	movlw	0
  1355  000F54  222B               	addwfc	___aldiv@divisor+1,f,c
  1356  000F56  222C               	addwfc	___aldiv@divisor+2,f,c
  1357  000F58  222D               	addwfc	___aldiv@divisor+3,f,c
  1358  000F5A  0E01               	movlw	1
  1359  000F5C  6E2F               	movwf	___aldiv@sign,c
  1360  000F5E                     l941:
  1361  000F5E  AE29               	btfss	___aldiv@dividend+3,7,c
  1362  000F60  D00A               	goto	l942
  1363  000F62  1E29               	comf	___aldiv@dividend+3,f,c
  1364  000F64  1E28               	comf	___aldiv@dividend+2,f,c
  1365  000F66  1E27               	comf	___aldiv@dividend+1,f,c
  1366  000F68  6C26               	negf	___aldiv@dividend,c
  1367  000F6A  0E00               	movlw	0
  1368  000F6C  2227               	addwfc	___aldiv@dividend+1,f,c
  1369  000F6E  2228               	addwfc	___aldiv@dividend+2,f,c
  1370  000F70  2229               	addwfc	___aldiv@dividend+3,f,c
  1371  000F72  0E01               	movlw	1
  1372  000F74  1A2F               	xorwf	___aldiv@sign,f,c
  1373  000F76                     l942:
  1374  000F76  0E00               	movlw	0
  1375  000F78  6E30               	movwf	___aldiv@quotient,c
  1376  000F7A  0E00               	movlw	0
  1377  000F7C  6E31               	movwf	___aldiv@quotient+1,c
  1378  000F7E  0E00               	movlw	0
  1379  000F80  6E32               	movwf	___aldiv@quotient+2,c
  1380  000F82  0E00               	movlw	0
  1381  000F84  6E33               	movwf	___aldiv@quotient+3,c
  1382  000F86  502A               	movf	___aldiv@divisor,w,c
  1383  000F88  102B               	iorwf	___aldiv@divisor+1,w,c
  1384  000F8A  102C               	iorwf	___aldiv@divisor+2,w,c
  1385  000F8C  102D               	iorwf	___aldiv@divisor+3,w,c
  1386  000F8E  B4D8               	btfsc	status,2,c
  1387  000F90  D02A               	goto	l949
  1388  000F92  0E01               	movlw	1
  1389  000F94  6E2E               	movwf	___aldiv@counter,c
  1390  000F96  D006               	goto	l944
  1391  000F98  90D8               	bcf	status,0,c
  1392  000F9A  362A               	rlcf	___aldiv@divisor,f,c
  1393  000F9C  362B               	rlcf	___aldiv@divisor+1,f,c
  1394  000F9E  362C               	rlcf	___aldiv@divisor+2,f,c
  1395  000FA0  362D               	rlcf	___aldiv@divisor+3,f,c
  1396  000FA2  2A2E               	incf	___aldiv@counter,f,c
  1397  000FA4                     l944:
  1398  000FA4  AE2D               	btfss	___aldiv@divisor+3,7,c
  1399  000FA6  D7F8               	goto	l945
  1400  000FA8                     u960:
  1401  000FA8  90D8               	bcf	status,0,c
  1402  000FAA  3630               	rlcf	___aldiv@quotient,f,c
  1403  000FAC  3631               	rlcf	___aldiv@quotient+1,f,c
  1404  000FAE  3632               	rlcf	___aldiv@quotient+2,f,c
  1405  000FB0  3633               	rlcf	___aldiv@quotient+3,f,c
  1406  000FB2  502A               	movf	___aldiv@divisor,w,c
  1407  000FB4  5C26               	subwf	___aldiv@dividend,w,c
  1408  000FB6  502B               	movf	___aldiv@divisor+1,w,c
  1409  000FB8  5827               	subwfb	___aldiv@dividend+1,w,c
  1410  000FBA  502C               	movf	___aldiv@divisor+2,w,c
  1411  000FBC  5828               	subwfb	___aldiv@dividend+2,w,c
  1412  000FBE  502D               	movf	___aldiv@divisor+3,w,c
  1413  000FC0  5829               	subwfb	___aldiv@dividend+3,w,c
  1414  000FC2  A0D8               	btfss	status,0,c
  1415  000FC4  D009               	goto	l948
  1416  000FC6  502A               	movf	___aldiv@divisor,w,c
  1417  000FC8  5E26               	subwf	___aldiv@dividend,f,c
  1418  000FCA  502B               	movf	___aldiv@divisor+1,w,c
  1419  000FCC  5A27               	subwfb	___aldiv@dividend+1,f,c
  1420  000FCE  502C               	movf	___aldiv@divisor+2,w,c
  1421  000FD0  5A28               	subwfb	___aldiv@dividend+2,f,c
  1422  000FD2  502D               	movf	___aldiv@divisor+3,w,c
  1423  000FD4  5A29               	subwfb	___aldiv@dividend+3,f,c
  1424  000FD6  8030               	bsf	___aldiv@quotient,0,c
  1425  000FD8                     l948:
  1426  000FD8  90D8               	bcf	status,0,c
  1427  000FDA  322D               	rrcf	___aldiv@divisor+3,f,c
  1428  000FDC  322C               	rrcf	___aldiv@divisor+2,f,c
  1429  000FDE  322B               	rrcf	___aldiv@divisor+1,f,c
  1430  000FE0  322A               	rrcf	___aldiv@divisor,f,c
  1431  000FE2  2E2E               	decfsz	___aldiv@counter,f,c
  1432  000FE4  D7E1               	goto	u960
  1433  000FE6                     l949:
  1434  000FE6  502F               	movf	___aldiv@sign,w,c
  1435  000FE8  B4D8               	btfsc	status,2,c
  1436  000FEA  D008               	goto	l950
  1437  000FEC  1E33               	comf	___aldiv@quotient+3,f,c
  1438  000FEE  1E32               	comf	___aldiv@quotient+2,f,c
  1439  000FF0  1E31               	comf	___aldiv@quotient+1,f,c
  1440  000FF2  6C30               	negf	___aldiv@quotient,c
  1441  000FF4  0E00               	movlw	0
  1442  000FF6  2231               	addwfc	___aldiv@quotient+1,f,c
  1443  000FF8  2232               	addwfc	___aldiv@quotient+2,f,c
  1444  000FFA  2233               	addwfc	___aldiv@quotient+3,f,c
  1445  000FFC                     l950:
  1446  000FFC  C030  F026         	movff	___aldiv@quotient,?___aldiv
  1447  001000  C031  F027         	movff	___aldiv@quotient+1,?___aldiv+1
  1448  001004  C032  F028         	movff	___aldiv@quotient+2,?___aldiv+2
  1449  001008  C033  F029         	movff	___aldiv@quotient+3,?___aldiv+3
  1450  00100C  0012               	return	
  1451  00100E                     __end_of___aldiv:
  1452                           	opt stack 0
  1453                           tblptru	equ	0xFF8
  1454                           tblptrh	equ	0xFF7
  1455                           tblptrl	equ	0xFF6
  1456                           tablat	equ	0xFF5
  1457                           prodh	equ	0xFF4
  1458                           prodl	equ	0xFF3
  1459                           intcon	equ	0xFF2
  1460                           intcon2	equ	0xFF1
  1461                           postinc0	equ	0xFEE
  1462                           wreg	equ	0xFE8
  1463                           postdec1	equ	0xFE5
  1464                           fsr1h	equ	0xFE2
  1465                           fsr1l	equ	0xFE1
  1466                           status	equ	0xFD8
  1467                           
  1468 ;; *************** function _EUSART1_Initialize *****************
  1469 ;; Defined at:
  1470 ;;		line 68 in file "mcc_generated_files/eusart1.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;		None
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2, status,0, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1488 ;;Total ram usage:        0 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; Hardware stack levels required when called:    1
  1491 ;; This function calls:
  1492 ;;		_EUSART1_SetErrorHandler
  1493 ;;		_EUSART1_SetFramingErrorHandler
  1494 ;;		_EUSART1_SetOverrunErrorHandler
  1495 ;; This function is called by:
  1496 ;;		_SYSTEM_Initialize
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text9
  1501  00138E                     __ptext9:
  1502                           	opt stack 0
  1503  00138E                     _EUSART1_Initialize:
  1504                           	opt stack 28
  1505                           
  1506                           ;eusart1.c: 72: BAUDCON1 = 0x18;
  1507                           
  1508                           ;incstack = 0
  1509  00138E  0E18               	movlw	24
  1510  001390  6E7E               	movwf	3966,c	;volatile
  1511                           
  1512                           ;eusart1.c: 75: RCSTA1 = 0x98;
  1513  001392  0E98               	movlw	152
  1514  001394  6EAC               	movwf	4012,c	;volatile
  1515                           
  1516                           ;eusart1.c: 78: TXSTA1 = 0x24;
  1517  001396  0E24               	movlw	36
  1518  001398  6EAD               	movwf	4013,c	;volatile
  1519                           
  1520                           ;eusart1.c: 81: SPBRG1 = 0xCF;
  1521  00139A  0ECF               	movlw	207
  1522  00139C  6EB0               	movwf	4016,c	;volatile
  1523                           
  1524                           ;eusart1.c: 84: SPBRGH1 = 0x00;
  1525  00139E  0E00               	movlw	0
  1526  0013A0  6E7F               	movwf	3967,c	;volatile
  1527                           
  1528                           ;eusart1.c: 87: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  1529  0013A2  0E00               	movlw	0
  1530  0013A4  6E20               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  1531  0013A6  0E00               	movlw	0
  1532  0013A8  6E21               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  1533  0013AA  EC67  F00A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1534                           
  1535                           ;eusart1.c: 88: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  1536  0013AE  0E00               	movlw	0
  1537  0013B0  6E20               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  1538  0013B2  0E00               	movlw	0
  1539  0013B4  6E21               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  1540  0013B6  EC62  F00A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1541                           
  1542                           ;eusart1.c: 89: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  1543  0013BA  0E00               	movlw	0
  1544  0013BC  6E20               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  1545  0013BE  0E00               	movlw	0
  1546  0013C0  6E21               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  1547  0013C2  EC6C  F00A         	call	_EUSART1_SetErrorHandler	;wreg free
  1548                           
  1549                           ;eusart1.c: 91: eusart1RxLastError.status = 0;
  1550  0013C6  0E00               	movlw	0
  1551  0013C8  6E1F               	movwf	_eusart1RxLastError,c	;volatile
  1552  0013CA  0012               	return		;funcret
  1553  0013CC                     __end_of_EUSART1_Initialize:
  1554                           	opt stack 0
  1555                           tblptru	equ	0xFF8
  1556                           tblptrh	equ	0xFF7
  1557                           tblptrl	equ	0xFF6
  1558                           tablat	equ	0xFF5
  1559                           prodh	equ	0xFF4
  1560                           prodl	equ	0xFF3
  1561                           intcon	equ	0xFF2
  1562                           intcon2	equ	0xFF1
  1563                           postinc0	equ	0xFEE
  1564                           wreg	equ	0xFE8
  1565                           postdec1	equ	0xFE5
  1566                           fsr1h	equ	0xFE2
  1567                           fsr1l	equ	0xFE1
  1568                           status	equ	0xFD8
  1569                           
  1570 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1571 ;; Defined at:
  1572 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1575 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, status,2, status,0
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1590 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1591 ;;Total ram usage:        2 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_EUSART1_Initialize
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text10
  1601  0014C4                     __ptext10:
  1602                           	opt stack 0
  1603  0014C4                     _EUSART1_SetOverrunErrorHandler:
  1604                           	opt stack 28
  1605                           
  1606                           ;eusart1.c: 171: EUSART1_OverrunErrorHandler = interruptHandler;
  1607                           
  1608                           ;incstack = 0
  1609  0014C4  C020  F01B         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1610  0014C8  C021  F01C         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1611  0014CC  0012               	return		;funcret
  1612  0014CE                     __end_of_EUSART1_SetOverrunErrorHandler:
  1613                           	opt stack 0
  1614                           tblptru	equ	0xFF8
  1615                           tblptrh	equ	0xFF7
  1616                           tblptrl	equ	0xFF6
  1617                           tablat	equ	0xFF5
  1618                           prodh	equ	0xFF4
  1619                           prodl	equ	0xFF3
  1620                           intcon	equ	0xFF2
  1621                           intcon2	equ	0xFF1
  1622                           postinc0	equ	0xFEE
  1623                           wreg	equ	0xFE8
  1624                           postdec1	equ	0xFE5
  1625                           fsr1h	equ	0xFE2
  1626                           fsr1l	equ	0xFE1
  1627                           status	equ	0xFD8
  1628                           
  1629 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1630 ;; Defined at:
  1631 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1634 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;		None
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1649 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1650 ;;Total ram usage:        2 bytes
  1651 ;; Hardware stack levels used:    1
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_EUSART1_Initialize
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text11
  1660  0014CE                     __ptext11:
  1661                           	opt stack 0
  1662  0014CE                     _EUSART1_SetFramingErrorHandler:
  1663                           	opt stack 28
  1664                           
  1665                           ;eusart1.c: 167: EUSART1_FramingErrorHandler = interruptHandler;
  1666                           
  1667                           ;incstack = 0
  1668  0014CE  C020  F01D         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1669  0014D2  C021  F01E         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1670  0014D6  0012               	return		;funcret
  1671  0014D8                     __end_of_EUSART1_SetFramingErrorHandler:
  1672                           	opt stack 0
  1673                           tblptru	equ	0xFF8
  1674                           tblptrh	equ	0xFF7
  1675                           tblptrl	equ	0xFF6
  1676                           tablat	equ	0xFF5
  1677                           prodh	equ	0xFF4
  1678                           prodl	equ	0xFF3
  1679                           intcon	equ	0xFF2
  1680                           intcon2	equ	0xFF1
  1681                           postinc0	equ	0xFEE
  1682                           wreg	equ	0xFE8
  1683                           postdec1	equ	0xFE5
  1684                           fsr1h	equ	0xFE2
  1685                           fsr1l	equ	0xFE1
  1686                           status	equ	0xFD8
  1687                           
  1688 ;; *************** function _EUSART1_SetErrorHandler *****************
  1689 ;; Defined at:
  1690 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1693 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2, status,0
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1708 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1709 ;;Total ram usage:        2 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_EUSART1_Initialize
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text12
  1719  0014D8                     __ptext12:
  1720                           	opt stack 0
  1721  0014D8                     _EUSART1_SetErrorHandler:
  1722                           	opt stack 28
  1723                           
  1724                           ;eusart1.c: 175: EUSART1_ErrorHandler = interruptHandler;
  1725                           
  1726                           ;incstack = 0
  1727  0014D8  C020  F019         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1728  0014DC  C021  F01A         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1729  0014E0  0012               	return		;funcret
  1730  0014E2                     __end_of_EUSART1_SetErrorHandler:
  1731                           	opt stack 0
  1732                           tblptru	equ	0xFF8
  1733                           tblptrh	equ	0xFF7
  1734                           tblptrl	equ	0xFF6
  1735                           tablat	equ	0xFF5
  1736                           prodh	equ	0xFF4
  1737                           prodl	equ	0xFF3
  1738                           intcon	equ	0xFF2
  1739                           intcon2	equ	0xFF1
  1740                           postinc0	equ	0xFEE
  1741                           wreg	equ	0xFE8
  1742                           postdec1	equ	0xFE5
  1743                           fsr1h	equ	0xFE2
  1744                           fsr1l	equ	0xFE1
  1745                           status	equ	0xFD8
  1746                           
  1747 ;; *************** function _MCP23008_read *****************
  1748 ;; Defined at:
  1749 ;;		line 59 in file "MCP23008_IO_expender.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  port            2    2[COMRAM] int 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  dataRead        2    7[COMRAM] int 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      unsigned char 
  1756 ;; Registers used:
  1757 ;;		wreg, status,2, status,0, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1763 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1764 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1765 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1766 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1767 ;;Total ram usage:        7 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    2
  1770 ;; This function calls:
  1771 ;;		_I2C_Write
  1772 ;;		_I2C_read
  1773 ;;		_I2C_repeated_Start
  1774 ;;		_I2C_start
  1775 ;;		_I2C_stop
  1776 ;; This function is called by:
  1777 ;;		_main
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text13
  1782  00129C                     __ptext13:
  1783                           	opt stack 0
  1784  00129C                     _MCP23008_read:
  1785                           	opt stack 28
  1786                           
  1787                           ;MCP23008_IO_expender.c: 60: int dataRead;
  1788                           ;MCP23008_IO_expender.c: 61: I2C_start();
  1789                           
  1790                           ;incstack = 0
  1791  00129C  EC76  F00A         	call	_I2C_start	;wreg free
  1792                           
  1793                           ;MCP23008_IO_expender.c: 62: I2C_Write(0x40);
  1794  0012A0  0E40               	movlw	64
  1795  0012A2  EC1E  F00A         	call	_I2C_Write
  1796                           
  1797                           ;MCP23008_IO_expender.c: 63: I2C_Write(0x09);
  1798  0012A6  0E09               	movlw	9
  1799  0012A8  EC1E  F00A         	call	_I2C_Write
  1800                           
  1801                           ;MCP23008_IO_expender.c: 64: I2C_repeated_Start();
  1802  0012AC  EC71  F00A         	call	_I2C_repeated_Start	;wreg free
  1803                           
  1804                           ;MCP23008_IO_expender.c: 65: I2C_Write(0x41 | 0x01);
  1805  0012B0  0E41               	movlw	65
  1806  0012B2  EC1E  F00A         	call	_I2C_Write
  1807                           
  1808                           ;MCP23008_IO_expender.c: 66: I2C_read(1);
  1809  0012B6  0E00               	movlw	0
  1810  0012B8  6E21               	movwf	I2C_read@ACK_NACK+1,c
  1811  0012BA  0E01               	movlw	1
  1812  0012BC  6E20               	movwf	I2C_read@ACK_NACK,c
  1813  0012BE  EC37  F00A         	call	_I2C_read	;wreg free
  1814                           
  1815                           ;MCP23008_IO_expender.c: 67: dataRead = (SSP2BUF & (0x01 << port));
  1816  0012C2  C022  F024         	movff	MCP23008_read@port,??_MCP23008_read
  1817  0012C6  0E01               	movlw	1
  1818  0012C8  6E25               	movwf	(??_MCP23008_read+1)& (0+255),c
  1819  0012CA  2A24               	incf	??_MCP23008_read,f,c
  1820  0012CC  D002               	goto	u1064
  1821  0012CE                     u1065:
  1822  0012CE  90D8               	bcf	status,0,c
  1823  0012D0  3625               	rlcf	??_MCP23008_read+1,f,c
  1824  0012D2                     u1064:
  1825  0012D2  2E24               	decfsz	??_MCP23008_read,f,c
  1826  0012D4  D7FC               	goto	u1065
  1827  0012D6  5025               	movf	??_MCP23008_read+1,w,c
  1828  0012D8  1475               	andwf	3957,w,c	;volatile
  1829  0012DA  6E26               	movwf	(??_MCP23008_read+2)& (0+255),c
  1830  0012DC  5026               	movf	??_MCP23008_read+2,w,c
  1831  0012DE  6E27               	movwf	MCP23008_read@dataRead,c
  1832  0012E0  6A28               	clrf	MCP23008_read@dataRead+1,c
  1833                           
  1834                           ;MCP23008_IO_expender.c: 68: I2C_stop();
  1835  0012E2  EC7B  F00A         	call	_I2C_stop	;wreg free
  1836                           
  1837                           ;MCP23008_IO_expender.c: 69: if (dataRead == 0) {
  1838  0012E6  5027               	movf	MCP23008_read@dataRead,w,c
  1839  0012E8  1028               	iorwf	MCP23008_read@dataRead+1,w,c
  1840  0012EA  A4D8               	btfss	status,2,c
  1841  0012EC  D002               	goto	l551
  1842                           
  1843                           ;MCP23008_IO_expender.c: 70: return 0;
  1844  0012EE  0E00               	movlw	0
  1845                           
  1846                           ;MCP23008_IO_expender.c: 71: } else {
  1847  0012F0  0012               	return	
  1848  0012F2                     l551:
  1849                           
  1850                           ;MCP23008_IO_expender.c: 72: return 1;
  1851  0012F2  0E01               	movlw	1
  1852  0012F4  0012               	return	
  1853  0012F6                     __end_of_MCP23008_read:
  1854                           	opt stack 0
  1855                           tblptru	equ	0xFF8
  1856                           tblptrh	equ	0xFF7
  1857                           tblptrl	equ	0xFF6
  1858                           tablat	equ	0xFF5
  1859                           prodh	equ	0xFF4
  1860                           prodl	equ	0xFF3
  1861                           intcon	equ	0xFF2
  1862                           intcon2	equ	0xFF1
  1863                           postinc0	equ	0xFEE
  1864                           wreg	equ	0xFE8
  1865                           postdec1	equ	0xFE5
  1866                           fsr1h	equ	0xFE2
  1867                           fsr1l	equ	0xFE1
  1868                           status	equ	0xFD8
  1869                           
  1870 ;; *************** function _MCP23008_pullUp *****************
  1871 ;; Defined at:
  1872 ;;		line 76 in file "MCP23008_IO_expender.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  port            2    2[COMRAM] int 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  dataRead        2    6[COMRAM] int 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2, status,0, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1886 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1887 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1888 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1889 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1890 ;;Total ram usage:        6 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    2
  1893 ;; This function calls:
  1894 ;;		_I2C_Write
  1895 ;;		_I2C_read
  1896 ;;		_I2C_repeated_Start
  1897 ;;		_I2C_start
  1898 ;;		_I2C_stop
  1899 ;; This function is called by:
  1900 ;;		_main
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           	psect	text14
  1905  00123A                     __ptext14:
  1906                           	opt stack 0
  1907  00123A                     _MCP23008_pullUp:
  1908                           	opt stack 28
  1909                           
  1910                           ;MCP23008_IO_expender.c: 77: int dataRead;
  1911                           ;MCP23008_IO_expender.c: 78: I2C_start();
  1912                           
  1913                           ;incstack = 0
  1914  00123A  EC76  F00A         	call	_I2C_start	;wreg free
  1915                           
  1916                           ;MCP23008_IO_expender.c: 79: I2C_Write(0x40);
  1917  00123E  0E40               	movlw	64
  1918  001240  EC1E  F00A         	call	_I2C_Write
  1919                           
  1920                           ;MCP23008_IO_expender.c: 80: I2C_Write(0x06);
  1921  001244  0E06               	movlw	6
  1922  001246  EC1E  F00A         	call	_I2C_Write
  1923                           
  1924                           ;MCP23008_IO_expender.c: 81: I2C_repeated_Start();
  1925  00124A  EC71  F00A         	call	_I2C_repeated_Start	;wreg free
  1926                           
  1927                           ;MCP23008_IO_expender.c: 82: I2C_Write(0x40 | 0x01);
  1928  00124E  0E41               	movlw	65
  1929  001250  EC1E  F00A         	call	_I2C_Write
  1930                           
  1931                           ;MCP23008_IO_expender.c: 83: I2C_read(1);
  1932  001254  0E00               	movlw	0
  1933  001256  6E21               	movwf	I2C_read@ACK_NACK+1,c
  1934  001258  0E01               	movlw	1
  1935  00125A  6E20               	movwf	I2C_read@ACK_NACK,c
  1936  00125C  EC37  F00A         	call	_I2C_read	;wreg free
  1937                           
  1938                           ;MCP23008_IO_expender.c: 84: dataRead = SSP2BUF;
  1939  001260  CF75 F026          	movff	3957,MCP23008_pullUp@dataRead	;volatile
  1940  001264  6A27               	clrf	MCP23008_pullUp@dataRead+1,c
  1941                           
  1942                           ;MCP23008_IO_expender.c: 85: I2C_stop();
  1943  001266  EC7B  F00A         	call	_I2C_stop	;wreg free
  1944                           
  1945                           ;MCP23008_IO_expender.c: 87: I2C_start();
  1946  00126A  EC76  F00A         	call	_I2C_start	;wreg free
  1947                           
  1948                           ;MCP23008_IO_expender.c: 88: I2C_Write(0x40);
  1949  00126E  0E40               	movlw	64
  1950  001270  EC1E  F00A         	call	_I2C_Write
  1951                           
  1952                           ;MCP23008_IO_expender.c: 89: I2C_Write(0x06);
  1953  001274  0E06               	movlw	6
  1954  001276  EC1E  F00A         	call	_I2C_Write
  1955                           
  1956                           ;MCP23008_IO_expender.c: 90: I2C_Write(dataRead | (0x01 << port));
  1957  00127A  C022  F024         	movff	MCP23008_pullUp@port,??_MCP23008_pullUp
  1958  00127E  0E01               	movlw	1
  1959  001280  6E25               	movwf	(??_MCP23008_pullUp+1)& (0+255),c
  1960  001282  2A24               	incf	??_MCP23008_pullUp,f,c
  1961  001284  D002               	goto	u1054
  1962  001286                     u1055:
  1963  001286  90D8               	bcf	status,0,c
  1964  001288  3625               	rlcf	??_MCP23008_pullUp+1,f,c
  1965  00128A                     u1054:
  1966  00128A  2E24               	decfsz	??_MCP23008_pullUp,f,c
  1967  00128C  D7FC               	goto	u1055
  1968  00128E  5025               	movf	??_MCP23008_pullUp+1,w,c
  1969  001290  1026               	iorwf	MCP23008_pullUp@dataRead,w,c
  1970  001292  EC1E  F00A         	call	_I2C_Write
  1971                           
  1972                           ;MCP23008_IO_expender.c: 91: I2C_stop();
  1973  001296  EC7B  F00A         	call	_I2C_stop	;wreg free
  1974  00129A  0012               	return		;funcret
  1975  00129C                     __end_of_MCP23008_pullUp:
  1976                           	opt stack 0
  1977                           tblptru	equ	0xFF8
  1978                           tblptrh	equ	0xFF7
  1979                           tblptrl	equ	0xFF6
  1980                           tablat	equ	0xFF5
  1981                           prodh	equ	0xFF4
  1982                           prodl	equ	0xFF3
  1983                           intcon	equ	0xFF2
  1984                           intcon2	equ	0xFF1
  1985                           postinc0	equ	0xFEE
  1986                           wreg	equ	0xFE8
  1987                           postdec1	equ	0xFE5
  1988                           fsr1h	equ	0xFE2
  1989                           fsr1l	equ	0xFE1
  1990                           status	equ	0xFD8
  1991                           
  1992 ;; *************** function _MCP23008_pinMode *****************
  1993 ;; Defined at:
  1994 ;;		line 15 in file "MCP23008_IO_expender.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;  port            2    2[COMRAM] int 
  1997 ;;  mode            2    4[COMRAM] int 
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  dataRead        2    8[COMRAM] int 
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		wreg, status,2, status,0, cstack
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2009 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2011 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2012 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2013 ;;Total ram usage:        8 bytes
  2014 ;; Hardware stack levels used:    1
  2015 ;; Hardware stack levels required when called:    2
  2016 ;; This function calls:
  2017 ;;		_I2C_Write
  2018 ;;		_I2C_read
  2019 ;;		_I2C_repeated_Start
  2020 ;;		_I2C_start
  2021 ;;		_I2C_stop
  2022 ;; This function is called by:
  2023 ;;		_main
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text15
  2028  0010BC                     __ptext15:
  2029                           	opt stack 0
  2030  0010BC                     _MCP23008_pinMode:
  2031                           	opt stack 28
  2032                           
  2033                           ;MCP23008_IO_expender.c: 16: int dataRead;
  2034                           ;MCP23008_IO_expender.c: 17: I2C_start();
  2035                           
  2036                           ;incstack = 0
  2037  0010BC  EC76  F00A         	call	_I2C_start	;wreg free
  2038                           
  2039                           ;MCP23008_IO_expender.c: 18: I2C_Write(0x40);
  2040  0010C0  0E40               	movlw	64
  2041  0010C2  EC1E  F00A         	call	_I2C_Write
  2042                           
  2043                           ;MCP23008_IO_expender.c: 19: I2C_Write(0x00);
  2044  0010C6  0E00               	movlw	0
  2045  0010C8  EC1E  F00A         	call	_I2C_Write
  2046                           
  2047                           ;MCP23008_IO_expender.c: 20: I2C_repeated_Start();
  2048  0010CC  EC71  F00A         	call	_I2C_repeated_Start	;wreg free
  2049                           
  2050                           ;MCP23008_IO_expender.c: 21: I2C_Write(0x40 | 0x01);
  2051  0010D0  0E41               	movlw	65
  2052  0010D2  EC1E  F00A         	call	_I2C_Write
  2053                           
  2054                           ;MCP23008_IO_expender.c: 22: I2C_read(1);
  2055  0010D6  0E00               	movlw	0
  2056  0010D8  6E21               	movwf	I2C_read@ACK_NACK+1,c
  2057  0010DA  0E01               	movlw	1
  2058  0010DC  6E20               	movwf	I2C_read@ACK_NACK,c
  2059  0010DE  EC37  F00A         	call	_I2C_read	;wreg free
  2060                           
  2061                           ;MCP23008_IO_expender.c: 23: dataRead = SSP2BUF;
  2062  0010E2  CF75 F028          	movff	3957,MCP23008_pinMode@dataRead	;volatile
  2063  0010E6  6A29               	clrf	MCP23008_pinMode@dataRead+1,c
  2064                           
  2065                           ;MCP23008_IO_expender.c: 24: I2C_stop();
  2066  0010E8  EC7B  F00A         	call	_I2C_stop	;wreg free
  2067                           
  2068                           ;MCP23008_IO_expender.c: 26: I2C_start();
  2069  0010EC  EC76  F00A         	call	_I2C_start	;wreg free
  2070                           
  2071                           ;MCP23008_IO_expender.c: 27: I2C_Write(0x40);
  2072  0010F0  0E40               	movlw	64
  2073  0010F2  EC1E  F00A         	call	_I2C_Write
  2074                           
  2075                           ;MCP23008_IO_expender.c: 28: I2C_Write(0x00);
  2076  0010F6  0E00               	movlw	0
  2077  0010F8  EC1E  F00A         	call	_I2C_Write
  2078                           
  2079                           ;MCP23008_IO_expender.c: 29: if (mode == 0x01) {
  2080  0010FC  0424               	decf	MCP23008_pinMode@mode,w,c
  2081  0010FE  1025               	iorwf	MCP23008_pinMode@mode+1,w,c
  2082  001100  A4D8               	btfss	status,2,c
  2083  001102  D00F               	goto	l541
  2084                           
  2085                           ;MCP23008_IO_expender.c: 30: I2C_Write(dataRead | (0x01 << port));
  2086  001104  C022  F026         	movff	MCP23008_pinMode@port,??_MCP23008_pinMode
  2087  001108  0E01               	movlw	1
  2088  00110A  6E27               	movwf	(??_MCP23008_pinMode+1)& (0+255),c
  2089  00110C  2A26               	incf	??_MCP23008_pinMode,f,c
  2090  00110E  D002               	goto	u1034
  2091  001110                     u1035:
  2092  001110  90D8               	bcf	status,0,c
  2093  001112  3627               	rlcf	??_MCP23008_pinMode+1,f,c
  2094  001114                     u1034:
  2095  001114  2E26               	decfsz	??_MCP23008_pinMode,f,c
  2096  001116  D7FC               	goto	u1035
  2097  001118  5027               	movf	??_MCP23008_pinMode+1,w,c
  2098  00111A  1028               	iorwf	MCP23008_pinMode@dataRead,w,c
  2099  00111C  EC1E  F00A         	call	_I2C_Write
  2100                           
  2101                           ;MCP23008_IO_expender.c: 31: } else {
  2102  001120  D00F               	goto	l542
  2103  001122                     l541:
  2104                           
  2105                           ;MCP23008_IO_expender.c: 32: I2C_Write(dataRead & ~(0x01 << port));
  2106  001122  C022  F026         	movff	MCP23008_pinMode@port,??_MCP23008_pinMode
  2107  001126  0E01               	movlw	1
  2108  001128  6E27               	movwf	(??_MCP23008_pinMode+1)& (0+255),c
  2109  00112A  2A26               	incf	??_MCP23008_pinMode,f,c
  2110  00112C  D002               	goto	u1044
  2111  00112E                     u1045:
  2112  00112E  90D8               	bcf	status,0,c
  2113  001130  3627               	rlcf	??_MCP23008_pinMode+1,f,c
  2114  001132                     u1044:
  2115  001132  2E26               	decfsz	??_MCP23008_pinMode,f,c
  2116  001134  D7FC               	goto	u1045
  2117  001136  5027               	movf	??_MCP23008_pinMode+1,w,c
  2118  001138  0AFF               	xorlw	255
  2119  00113A  1428               	andwf	MCP23008_pinMode@dataRead,w,c
  2120  00113C  EC1E  F00A         	call	_I2C_Write
  2121  001140                     l542:
  2122                           
  2123                           ;MCP23008_IO_expender.c: 33: }
  2124                           ;MCP23008_IO_expender.c: 34: I2C_stop();
  2125  001140  EC7B  F00A         	call	_I2C_stop	;wreg free
  2126  001144  0012               	return		;funcret
  2127  001146                     __end_of_MCP23008_pinMode:
  2128                           	opt stack 0
  2129                           tblptru	equ	0xFF8
  2130                           tblptrh	equ	0xFF7
  2131                           tblptrl	equ	0xFF6
  2132                           tablat	equ	0xFF5
  2133                           prodh	equ	0xFF4
  2134                           prodl	equ	0xFF3
  2135                           intcon	equ	0xFF2
  2136                           intcon2	equ	0xFF1
  2137                           postinc0	equ	0xFEE
  2138                           wreg	equ	0xFE8
  2139                           postdec1	equ	0xFE5
  2140                           fsr1h	equ	0xFE2
  2141                           fsr1l	equ	0xFE1
  2142                           status	equ	0xFD8
  2143                           
  2144 ;; *************** function _MCP23008_Write *****************
  2145 ;; Defined at:
  2146 ;;		line 37 in file "MCP23008_IO_expender.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  port            2    2[COMRAM] int 
  2149 ;;  data            2    4[COMRAM] int 
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  dataRead        2    8[COMRAM] int 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  1    wreg      void 
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0, cstack
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2162 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2163 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2164 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2165 ;;Total ram usage:        8 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; Hardware stack levels required when called:    2
  2168 ;; This function calls:
  2169 ;;		_I2C_Write
  2170 ;;		_I2C_read
  2171 ;;		_I2C_repeated_Start
  2172 ;;		_I2C_start
  2173 ;;		_I2C_stop
  2174 ;; This function is called by:
  2175 ;;		_main
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text16
  2180  001146                     __ptext16:
  2181                           	opt stack 0
  2182  001146                     _MCP23008_Write:
  2183                           	opt stack 28
  2184                           
  2185                           ;MCP23008_IO_expender.c: 38: int dataRead;
  2186                           ;MCP23008_IO_expender.c: 39: I2C_start();
  2187                           
  2188                           ;incstack = 0
  2189  001146  EC76  F00A         	call	_I2C_start	;wreg free
  2190                           
  2191                           ;MCP23008_IO_expender.c: 40: I2C_Write(0x40);
  2192  00114A  0E40               	movlw	64
  2193  00114C  EC1E  F00A         	call	_I2C_Write
  2194                           
  2195                           ;MCP23008_IO_expender.c: 41: I2C_Write(0x0A);
  2196  001150  0E0A               	movlw	10
  2197  001152  EC1E  F00A         	call	_I2C_Write
  2198                           
  2199                           ;MCP23008_IO_expender.c: 42: I2C_repeated_Start();
  2200  001156  EC71  F00A         	call	_I2C_repeated_Start	;wreg free
  2201                           
  2202                           ;MCP23008_IO_expender.c: 43: I2C_Write(0x40 | 0x01);
  2203  00115A  0E41               	movlw	65
  2204  00115C  EC1E  F00A         	call	_I2C_Write
  2205                           
  2206                           ;MCP23008_IO_expender.c: 44: I2C_read(1);
  2207  001160  0E00               	movlw	0
  2208  001162  6E21               	movwf	I2C_read@ACK_NACK+1,c
  2209  001164  0E01               	movlw	1
  2210  001166  6E20               	movwf	I2C_read@ACK_NACK,c
  2211  001168  EC37  F00A         	call	_I2C_read	;wreg free
  2212                           
  2213                           ;MCP23008_IO_expender.c: 45: dataRead = SSP2BUF;
  2214  00116C  CF75 F028          	movff	3957,MCP23008_Write@dataRead	;volatile
  2215  001170  6A29               	clrf	MCP23008_Write@dataRead+1,c
  2216                           
  2217                           ;MCP23008_IO_expender.c: 46: I2C_stop();
  2218  001172  EC7B  F00A         	call	_I2C_stop	;wreg free
  2219                           
  2220                           ;MCP23008_IO_expender.c: 48: I2C_start();
  2221  001176  EC76  F00A         	call	_I2C_start	;wreg free
  2222                           
  2223                           ;MCP23008_IO_expender.c: 49: I2C_Write(0x40);
  2224  00117A  0E40               	movlw	64
  2225  00117C  EC1E  F00A         	call	_I2C_Write
  2226                           
  2227                           ;MCP23008_IO_expender.c: 50: I2C_Write(0x0A);
  2228  001180  0E0A               	movlw	10
  2229  001182  EC1E  F00A         	call	_I2C_Write
  2230                           
  2231                           ;MCP23008_IO_expender.c: 51: if (data == 1) {
  2232  001186  0424               	decf	MCP23008_Write@data,w,c
  2233  001188  1025               	iorwf	MCP23008_Write@data+1,w,c
  2234  00118A  A4D8               	btfss	status,2,c
  2235  00118C  D00F               	goto	l546
  2236                           
  2237                           ;MCP23008_IO_expender.c: 52: I2C_Write(dataRead | (0x01 << port));
  2238  00118E  C022  F026         	movff	MCP23008_Write@port,??_MCP23008_Write
  2239  001192  0E01               	movlw	1
  2240  001194  6E27               	movwf	(??_MCP23008_Write+1)& (0+255),c
  2241  001196  2A26               	incf	??_MCP23008_Write,f,c
  2242  001198  D002               	goto	u1094
  2243  00119A                     u1095:
  2244  00119A  90D8               	bcf	status,0,c
  2245  00119C  3627               	rlcf	??_MCP23008_Write+1,f,c
  2246  00119E                     u1094:
  2247  00119E  2E26               	decfsz	??_MCP23008_Write,f,c
  2248  0011A0  D7FC               	goto	u1095
  2249  0011A2  5027               	movf	??_MCP23008_Write+1,w,c
  2250  0011A4  1028               	iorwf	MCP23008_Write@dataRead,w,c
  2251  0011A6  EC1E  F00A         	call	_I2C_Write
  2252                           
  2253                           ;MCP23008_IO_expender.c: 53: } else {
  2254  0011AA  D00F               	goto	l547
  2255  0011AC                     l546:
  2256                           
  2257                           ;MCP23008_IO_expender.c: 54: I2C_Write(dataRead & ~(0x01 << port));
  2258  0011AC  C022  F026         	movff	MCP23008_Write@port,??_MCP23008_Write
  2259  0011B0  0E01               	movlw	1
  2260  0011B2  6E27               	movwf	(??_MCP23008_Write+1)& (0+255),c
  2261  0011B4  2A26               	incf	??_MCP23008_Write,f,c
  2262  0011B6  D002               	goto	u1104
  2263  0011B8                     u1105:
  2264  0011B8  90D8               	bcf	status,0,c
  2265  0011BA  3627               	rlcf	??_MCP23008_Write+1,f,c
  2266  0011BC                     u1104:
  2267  0011BC  2E26               	decfsz	??_MCP23008_Write,f,c
  2268  0011BE  D7FC               	goto	u1105
  2269  0011C0  5027               	movf	??_MCP23008_Write+1,w,c
  2270  0011C2  0AFF               	xorlw	255
  2271  0011C4  1428               	andwf	MCP23008_Write@dataRead,w,c
  2272  0011C6  EC1E  F00A         	call	_I2C_Write
  2273  0011CA                     l547:
  2274                           
  2275                           ;MCP23008_IO_expender.c: 55: }
  2276                           ;MCP23008_IO_expender.c: 56: I2C_stop();
  2277  0011CA  EC7B  F00A         	call	_I2C_stop	;wreg free
  2278  0011CE  0012               	return		;funcret
  2279  0011D0                     __end_of_MCP23008_Write:
  2280                           	opt stack 0
  2281                           tblptru	equ	0xFF8
  2282                           tblptrh	equ	0xFF7
  2283                           tblptrl	equ	0xFF6
  2284                           tablat	equ	0xFF5
  2285                           prodh	equ	0xFF4
  2286                           prodl	equ	0xFF3
  2287                           intcon	equ	0xFF2
  2288                           intcon2	equ	0xFF1
  2289                           postinc0	equ	0xFEE
  2290                           wreg	equ	0xFE8
  2291                           postdec1	equ	0xFE5
  2292                           fsr1h	equ	0xFE2
  2293                           fsr1l	equ	0xFE1
  2294                           status	equ	0xFD8
  2295                           
  2296 ;; *************** function _I2C_repeated_Start *****************
  2297 ;; Defined at:
  2298 ;;		line 57 in file "I2C.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;		None
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;		None
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		None
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2316 ;;Total ram usage:        0 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; This function calls:
  2319 ;;		Nothing
  2320 ;; This function is called by:
  2321 ;;		_MCP23008_pinMode
  2322 ;;		_MCP23008_Write
  2323 ;;		_MCP23008_read
  2324 ;;		_MCP23008_pullUp
  2325 ;;		_MCP23008_ISR
  2326 ;;		_portINT_status
  2327 ;;		_MCP9801_TempRead
  2328 ;;		_EEPROM_24AA512_Read
  2329 ;;		_EEPROM_24AA512_pageRead
  2330 ;;		_MCP794x_readEEPROM
  2331 ;;		_MCP794x_getID
  2332 ;;		_MCP7941x_read
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text17
  2337  0014E2                     __ptext17:
  2338                           	opt stack 0
  2339  0014E2                     _I2C_repeated_Start:
  2340                           	opt stack 29
  2341                           
  2342                           ;I2C.c: 58: SSP2CON2bits.RSEN = 1;
  2343                           
  2344                           ;incstack = 0
  2345  0014E2  8271               	bsf	3953,1,c	;volatile
  2346  0014E4  B271               	btfsc	3953,1,c	;volatile
  2347  0014E6  D7FE               	goto	l495
  2348                           
  2349                           ;I2C.c: 60: PIR3bits.SSP2IF = 0;
  2350  0014E8  9EA4               	bcf	4004,7,c	;volatile
  2351  0014EA  0012               	return		;funcret
  2352  0014EC                     __end_of_I2C_repeated_Start:
  2353                           	opt stack 0
  2354                           tblptru	equ	0xFF8
  2355                           tblptrh	equ	0xFF7
  2356                           tblptrl	equ	0xFF6
  2357                           tablat	equ	0xFF5
  2358                           prodh	equ	0xFF4
  2359                           prodl	equ	0xFF3
  2360                           intcon	equ	0xFF2
  2361                           intcon2	equ	0xFF1
  2362                           postinc0	equ	0xFEE
  2363                           wreg	equ	0xFE8
  2364                           postdec1	equ	0xFE5
  2365                           fsr1h	equ	0xFE2
  2366                           fsr1l	equ	0xFE1
  2367                           status	equ	0xFD8
  2368                           
  2369 ;; *************** function _I2C_read *****************
  2370 ;; Defined at:
  2371 ;;		line 42 in file "I2C.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  ACK_NACK        2    0[COMRAM] int 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  2    0[COMRAM] int 
  2378 ;; Registers used:
  2379 ;;		None
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2389 ;;Total ram usage:        2 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_MCP23008_pinMode
  2395 ;;		_MCP23008_Write
  2396 ;;		_MCP23008_read
  2397 ;;		_MCP23008_pullUp
  2398 ;;		_MCP23008_ISR
  2399 ;;		_portINT_status
  2400 ;;		_MCP9801_TempRead
  2401 ;;		_EEPROM_24AA512_Read
  2402 ;;		_EEPROM_24AA512_pageRead
  2403 ;;		_PCF8523_rtcRead
  2404 ;;		_MCP794x_readEEPROM
  2405 ;;		_MCP794x_getID
  2406 ;;		_MCP7941x_read
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           	psect	text18
  2411  00146E                     __ptext18:
  2412                           	opt stack 0
  2413  00146E                     _I2C_read:
  2414                           	opt stack 29
  2415                           
  2416                           ;I2C.c: 43: SSP2CON2bits.RCEN = 1;
  2417                           
  2418                           ;incstack = 0
  2419  00146E  8671               	bsf	3953,3,c	;volatile
  2420  001470  A073               	btfss	3955,0,c	;volatile
  2421  001472  D7FE               	goto	l480
  2422                           
  2423                           ;I2C.c: 45: SSP2CON2bits.ACKDT = ACK_NACK;
  2424  001474  B020               	btfsc	I2C_read@ACK_NACK,0,c
  2425  001476  D002               	bra	u1005
  2426  001478  9A71               	bcf	3953,5,c	;volatile
  2427  00147A  D001               	bra	u1006
  2428  00147C                     u1005:
  2429  00147C  8A71               	bsf	3953,5,c	;volatile
  2430  00147E                     u1006:
  2431                           
  2432                           ;I2C.c: 46: SSP2CON2bits.ACKEN = 1;
  2433  00147E  8871               	bsf	3953,4,c	;volatile
  2434  001480  A871               	btfss	3953,4,c	;volatile
  2435  001482  0012               	return	
  2436  001484  D7FD               	goto	l483
  2437  001486                     __end_of_I2C_read:
  2438                           	opt stack 0
  2439                           tblptru	equ	0xFF8
  2440                           tblptrh	equ	0xFF7
  2441                           tblptrl	equ	0xFF6
  2442                           tablat	equ	0xFF5
  2443                           prodh	equ	0xFF4
  2444                           prodl	equ	0xFF3
  2445                           intcon	equ	0xFF2
  2446                           intcon2	equ	0xFF1
  2447                           postinc0	equ	0xFEE
  2448                           wreg	equ	0xFE8
  2449                           postdec1	equ	0xFE5
  2450                           fsr1h	equ	0xFE2
  2451                           fsr1l	equ	0xFE1
  2452                           status	equ	0xFD8
  2453                           
  2454 ;; *************** function _I2C_buffClear *****************
  2455 ;; Defined at:
  2456 ;;		line 81 in file "I2C.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2474 ;;Total ram usage:        0 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    2
  2477 ;; This function calls:
  2478 ;;		_I2C_Write
  2479 ;;		_I2C_start
  2480 ;;		_I2C_stop
  2481 ;; This function is called by:
  2482 ;;		_main
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text19
  2487  00149C                     __ptext19:
  2488                           	opt stack 0
  2489  00149C                     _I2C_buffClear:
  2490                           	opt stack 28
  2491                           
  2492                           ;I2C.c: 82: I2C_start();
  2493                           
  2494                           ;incstack = 0
  2495  00149C  EC76  F00A         	call	_I2C_start	;wreg free
  2496                           
  2497                           ;I2C.c: 83: I2C_Write(0x00);
  2498  0014A0  0E00               	movlw	0
  2499  0014A2  EC1E  F00A         	call	_I2C_Write
  2500                           
  2501                           ;I2C.c: 84: I2C_stop();
  2502  0014A6  EC7B  F00A         	call	_I2C_stop	;wreg free
  2503  0014AA  0012               	return		;funcret
  2504  0014AC                     __end_of_I2C_buffClear:
  2505                           	opt stack 0
  2506                           tblptru	equ	0xFF8
  2507                           tblptrh	equ	0xFF7
  2508                           tblptrl	equ	0xFF6
  2509                           tablat	equ	0xFF5
  2510                           prodh	equ	0xFF4
  2511                           prodl	equ	0xFF3
  2512                           intcon	equ	0xFF2
  2513                           intcon2	equ	0xFF1
  2514                           postinc0	equ	0xFEE
  2515                           wreg	equ	0xFE8
  2516                           postdec1	equ	0xFE5
  2517                           fsr1h	equ	0xFE2
  2518                           fsr1l	equ	0xFE1
  2519                           status	equ	0xFD8
  2520                           
  2521 ;; *************** function _I2C_start *****************
  2522 ;; Defined at:
  2523 ;;		line 51 in file "I2C.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;		None
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		None
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2541 ;;Total ram usage:        0 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_I2C_buffClear
  2547 ;;		_MCP23008_pinMode
  2548 ;;		_MCP23008_Write
  2549 ;;		_MCP23008_read
  2550 ;;		_MCP23008_pullUp
  2551 ;;		_I2C_BusSCan
  2552 ;;		_MCP23008_ISR
  2553 ;;		_portINT_status
  2554 ;;		_MCP9801_Init
  2555 ;;		_MCP9801_TempRead
  2556 ;;		_EEPROM_24AA512_Write
  2557 ;;		_EEPROM_24AA512_Read
  2558 ;;		_EEPROM_24AA512_pageWrite
  2559 ;;		_EEPROM_24AA512_pageRead
  2560 ;;		_PCF8523_rtcRead
  2561 ;;		_PCF8523_write
  2562 ;;		_MCP794x_setTime
  2563 ;;		_MCP794x_setDate
  2564 ;;		_MCP794x_writeRtcc
  2565 ;;		_MCP794x_writeEEPROM
  2566 ;;		_MCP794x_readEEPROM
  2567 ;;		_MCP794x_getID
  2568 ;;		_MCP7941x_read
  2569 ;;		_SSD1306_writeCMD
  2570 ;;		_displaySetCursor
  2571 ;;		_displayWrite
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text20
  2576  0014EC                     __ptext20:
  2577                           	opt stack 0
  2578  0014EC                     _I2C_start:
  2579                           	opt stack 29
  2580                           
  2581                           ;I2C.c: 52: SSP2CON2bits.SEN = 1;
  2582                           
  2583                           ;incstack = 0
  2584  0014EC  8071               	bsf	3953,0,c	;volatile
  2585  0014EE  B071               	btfsc	3953,0,c	;volatile
  2586  0014F0  D7FE               	goto	l489
  2587                           
  2588                           ;I2C.c: 54: PIR3bits.SSP2IF = 0;
  2589  0014F2  9EA4               	bcf	4004,7,c	;volatile
  2590  0014F4  0012               	return		;funcret
  2591  0014F6                     __end_of_I2C_start:
  2592                           	opt stack 0
  2593                           tblptru	equ	0xFF8
  2594                           tblptrh	equ	0xFF7
  2595                           tblptrl	equ	0xFF6
  2596                           tablat	equ	0xFF5
  2597                           prodh	equ	0xFF4
  2598                           prodl	equ	0xFF3
  2599                           intcon	equ	0xFF2
  2600                           intcon2	equ	0xFF1
  2601                           postinc0	equ	0xFEE
  2602                           wreg	equ	0xFE8
  2603                           postdec1	equ	0xFE5
  2604                           fsr1h	equ	0xFE2
  2605                           fsr1l	equ	0xFE1
  2606                           status	equ	0xFD8
  2607                           
  2608 ;; *************** function _I2C_Write *****************
  2609 ;; Defined at:
  2610 ;;		line 31 in file "I2C.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  data            1    wreg     unsigned char 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  data            1    0[COMRAM] unsigned char 
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  1    wreg      void 
  2617 ;; Registers used:
  2618 ;;		wreg, cstack
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2628 ;;Total ram usage:        1 bytes
  2629 ;; Hardware stack levels used:    1
  2630 ;; Hardware stack levels required when called:    1
  2631 ;; This function calls:
  2632 ;;		_I2C_stop
  2633 ;; This function is called by:
  2634 ;;		_I2C_buffClear
  2635 ;;		_MCP23008_pinMode
  2636 ;;		_MCP23008_Write
  2637 ;;		_MCP23008_read
  2638 ;;		_MCP23008_pullUp
  2639 ;;		_I2C_BusSCan
  2640 ;;		_MCP23008_ISR
  2641 ;;		_portINT_status
  2642 ;;		_MCP9801_Init
  2643 ;;		_MCP9801_TempRead
  2644 ;;		_EEPROM_24AA512_Write
  2645 ;;		_EEPROM_24AA512_Read
  2646 ;;		_EEPROM_24AA512_pageWrite
  2647 ;;		_EEPROM_24AA512_pageRead
  2648 ;;		_PCF8523_rtcRead
  2649 ;;		_PCF8523_write
  2650 ;;		_MCP794x_setTime
  2651 ;;		_MCP794x_setDate
  2652 ;;		_MCP794x_writeRtcc
  2653 ;;		_MCP794x_writeEEPROM
  2654 ;;		_MCP794x_readEEPROM
  2655 ;;		_MCP794x_getID
  2656 ;;		_MCP7941x_read
  2657 ;;		_SSD1306_writeCMD
  2658 ;;		_displaySetCursor
  2659 ;;		_displayWrite
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text21
  2664  00143C                     __ptext21:
  2665                           	opt stack 0
  2666  00143C                     _I2C_Write:
  2667                           	opt stack 28
  2668                           
  2669                           ;incstack = 0
  2670                           ;I2C_Write@data stored from wreg
  2671  00143C  6E20               	movwf	I2C_Write@data,c
  2672                           
  2673                           ;I2C.c: 32: SSP2BUF = data;
  2674  00143E  C020  FF75         	movff	I2C_Write@data,3957	;volatile
  2675  001442  A073               	btfss	3955,0,c	;volatile
  2676  001444  D7FE               	goto	l470
  2677  001446                     u120:
  2678                           
  2679                           ;I2C.c: 34: while (!PIR3bits.SSP2IF);
  2680  001446  AEA4               	btfss	4004,7,c	;volatile
  2681  001448  D7FE               	goto	u120
  2682                           
  2683                           ;I2C.c: 35: PIR3bits.SSP2IF = 0;
  2684  00144A  9EA4               	bcf	4004,7,c	;volatile
  2685                           
  2686                           ;I2C.c: 36: if (SSP2CON2bits.ACKSTAT) {
  2687  00144C  AC71               	btfss	3953,6,c	;volatile
  2688  00144E  0012               	return	
  2689                           
  2690                           ;I2C.c: 37: I2C_stop();
  2691  001450  EC7B  F00A         	call	_I2C_stop	;wreg free
  2692                           
  2693                           ;I2C.c: 38: return;
  2694  001454  0012               	return	
  2695  001456                     __end_of_I2C_Write:
  2696                           	opt stack 0
  2697                           tblptru	equ	0xFF8
  2698                           tblptrh	equ	0xFF7
  2699                           tblptrl	equ	0xFF6
  2700                           tablat	equ	0xFF5
  2701                           prodh	equ	0xFF4
  2702                           prodl	equ	0xFF3
  2703                           intcon	equ	0xFF2
  2704                           intcon2	equ	0xFF1
  2705                           postinc0	equ	0xFEE
  2706                           wreg	equ	0xFE8
  2707                           postdec1	equ	0xFE5
  2708                           fsr1h	equ	0xFE2
  2709                           fsr1l	equ	0xFE1
  2710                           status	equ	0xFD8
  2711                           
  2712 ;; *************** function _I2C_stop *****************
  2713 ;; Defined at:
  2714 ;;		line 63 in file "I2C.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;		None
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;		None
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  1    wreg      void 
  2721 ;; Registers used:
  2722 ;;		None
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2732 ;;Total ram usage:        0 bytes
  2733 ;; Hardware stack levels used:    1
  2734 ;; This function calls:
  2735 ;;		Nothing
  2736 ;; This function is called by:
  2737 ;;		_I2C_Write
  2738 ;;		_I2C_buffClear
  2739 ;;		_MCP23008_pinMode
  2740 ;;		_MCP23008_Write
  2741 ;;		_MCP23008_read
  2742 ;;		_MCP23008_pullUp
  2743 ;;		_I2C_BusSCan
  2744 ;;		_MCP23008_ISR
  2745 ;;		_portINT_status
  2746 ;;		_MCP9801_Init
  2747 ;;		_MCP9801_TempRead
  2748 ;;		_EEPROM_24AA512_Write
  2749 ;;		_EEPROM_24AA512_Read
  2750 ;;		_EEPROM_24AA512_pageWrite
  2751 ;;		_EEPROM_24AA512_pageRead
  2752 ;;		_PCF8523_rtcRead
  2753 ;;		_PCF8523_write
  2754 ;;		_MCP794x_setTime
  2755 ;;		_MCP794x_setDate
  2756 ;;		_MCP794x_writeRtcc
  2757 ;;		_MCP794x_writeEEPROM
  2758 ;;		_MCP794x_readEEPROM
  2759 ;;		_MCP794x_getID
  2760 ;;		_SSD1306_writeCMD
  2761 ;;		_displaySetCursor
  2762 ;;		_displayWrite
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text22
  2767  0014F6                     __ptext22:
  2768                           	opt stack 0
  2769  0014F6                     _I2C_stop:
  2770                           	opt stack 29
  2771                           
  2772                           ;I2C.c: 64: SSP2CON2bits.PEN = 1;
  2773                           
  2774                           ;incstack = 0
  2775  0014F6  8471               	bsf	3953,2,c	;volatile
  2776  0014F8  B471               	btfsc	3953,2,c	;volatile
  2777  0014FA  D7FE               	goto	l501
  2778                           
  2779                           ;I2C.c: 66: PIR3bits.SSP2IF = 0;
  2780  0014FC  9EA4               	bcf	4004,7,c	;volatile
  2781  0014FE  0012               	return		;funcret
  2782  001500                     __end_of_I2C_stop:
  2783                           	opt stack 0
  2784                           tblptru	equ	0xFF8
  2785                           tblptrh	equ	0xFF7
  2786                           tblptrl	equ	0xFF6
  2787                           tablat	equ	0xFF5
  2788                           prodh	equ	0xFF4
  2789                           prodl	equ	0xFF3
  2790                           intcon	equ	0xFF2
  2791                           intcon2	equ	0xFF1
  2792                           postinc0	equ	0xFEE
  2793                           wreg	equ	0xFE8
  2794                           postdec1	equ	0xFE5
  2795                           fsr1h	equ	0xFE2
  2796                           fsr1l	equ	0xFE1
  2797                           status	equ	0xFD8
  2798                           tblptru	equ	0xFF8
  2799                           tblptrh	equ	0xFF7
  2800                           tblptrl	equ	0xFF6
  2801                           tablat	equ	0xFF5
  2802                           prodh	equ	0xFF4
  2803                           prodl	equ	0xFF3
  2804                           intcon	equ	0xFF2
  2805                           intcon2	equ	0xFF1
  2806                           postinc0	equ	0xFEE
  2807                           wreg	equ	0xFE8
  2808                           postdec1	equ	0xFE5
  2809                           fsr1h	equ	0xFE2
  2810                           fsr1l	equ	0xFE1
  2811                           status	equ	0xFD8
  2812                           
  2813                           	psect	rparam
  2814  0000                     tblptru	equ	0xFF8
  2815                           tblptrh	equ	0xFF7
  2816                           tblptrl	equ	0xFF6
  2817                           tablat	equ	0xFF5
  2818                           prodh	equ	0xFF4
  2819                           prodl	equ	0xFF3
  2820                           intcon	equ	0xFF2
  2821                           intcon2	equ	0xFF1
  2822                           postinc0	equ	0xFEE
  2823                           wreg	equ	0xFE8
  2824                           postdec1	equ	0xFE5
  2825                           fsr1h	equ	0xFE2
  2826                           fsr1l	equ	0xFE1
  2827                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    57
    Data        53
    BSS         287
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      75
    BANK0           160      0      32
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 

    sp__memset	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    buffer	PTR unsigned int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_I2C_Init
    _I2C_Init->___aldiv
    ___aldiv->___wmul
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _MCP23008_read->_I2C_read
    _MCP23008_pullUp->_I2C_read
    _MCP23008_pinMode->_I2C_read
    _MCP23008_Write->_I2C_read
    _I2C_buffClear->_I2C_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7962
                                             21 COMRAM     2     2      0
                      _I2C_buffClear
                     _MCP23008_Write
                   _MCP23008_pinMode
                    _MCP23008_pullUp
                      _MCP23008_read
                  _SYSTEM_Initialize
                     _interrupt_Init
 ---------------------------------------------------------------------------------
 (1) _interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1331
                 _EUSART1_Initialize
                           _I2C_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             1     1      0    1037
                                             20 COMRAM     1     1      0
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     563
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              6 COMRAM    14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MCP23008_read                                        7     5      2    1602
                                              2 COMRAM     7     5      2
                          _I2C_Write
                           _I2C_read
                 _I2C_repeated_Start
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (1) _MCP23008_pullUp                                      6     4      2    1526
                                              2 COMRAM     6     4      2
                          _I2C_Write
                           _I2C_read
                 _I2C_repeated_Start
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (1) _MCP23008_pinMode                                     8     4      4    1820
                                              2 COMRAM     8     4      4
                          _I2C_Write
                           _I2C_read
                 _I2C_repeated_Start
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (1) _MCP23008_Write                                       8     4      4    1668
                                              2 COMRAM     8     4      4
                          _I2C_Write
                           _I2C_read
                 _I2C_repeated_Start
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _I2C_repeated_Start                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_read                                             2     0      2    1390
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_buffClear                                        0     0      0      15
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      15
                                              0 COMRAM     1     1      0
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_buffClear
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
   _MCP23008_Write
     _I2C_Write
       _I2C_stop
     _I2C_read
     _I2C_repeated_Start
     _I2C_start
     _I2C_stop
   _MCP23008_pinMode
     _I2C_Write
       _I2C_stop
     _I2C_read
     _I2C_repeated_Start
     _I2C_start
     _I2C_stop
   _MCP23008_pullUp
     _I2C_Write
       _I2C_stop
     _I2C_read
     _I2C_repeated_Start
     _I2C_start
     _I2C_stop
   _MCP23008_read
     _I2C_Write
       _I2C_stop
     _I2C_read
     _I2C_repeated_Start
     _I2C_start
     _I2C_stop
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _I2C_Init
       ___aldiv
         ___wmul (ARG)
       ___wmul
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   _interrupt_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0     100       8      100.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     17      4B       1       78.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16B       6        0.0%
DATA                 0      0     16B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr 22 23:42:32 2020

                            __size_of_I2C_Write 001A                             ___wmul@multiplicand 0022  
                        __end_of_interrupt_Init 14C4                                    __CFG_CP0$OFF 000000  
                            __size_of_I2C_start 000A                                     __CFG_OSC$HS 000000  
                                           l501 14F8                                             _ADC 0017  
                                           l274 105E                                             l541 1122  
                                           l470 1442                                             l542 1140  
                                           l551 12F2                                             l480 1470  
                                           l546 11AC                                             l483 1480  
                                           l547 11CA                                             l495 14E4  
                                           l489 14EE                                             l941 0F5E  
                                           l950 0FFC                                             l942 0F76  
                                           l944 0FA4                                             l945 0F98  
                                           l948 0FD8                                             l949 0FE6  
                                           u120 1446                                             u960 0FA8  
                                           wreg 000FE8                                      _TXSTA1bits 000FAD  
                                  __CFG_IESO$ON 000000                                            STR_1 0F3E  
                                          STR_2 0F3C                                            STR_3 0F3A  
                                          u1005 147C                                            u1006 147E  
                                          u1104 11BC                                            u1105 11B8  
                                          u1034 1114                                            u1035 1110  
                                          u1044 1132                                            u1045 112E  
                                          u1054 128A                                            u1055 1286  
                                          u1064 12D2                                            u1065 12CE  
                                          u1227 1022                                            u1237 1068  
                                          _LATA 000F89                                            u1094 119E  
                                          _LATB 000F8A                                            u1095 119A  
                                          u1247 108C                                            _LATC 000F8B  
                                          _LATD 000F8C                                            u1257 13E8  
                                          _LATE 000F8D                                   __CFG_FCMEN$ON 000000  
                                          _main 100E                                            _page 003F  
                              __end_of_I2C_Init 134A                                            fsr1h 000FE2  
                                          fsr1l 000FE1                                __end_of_I2C_read 1486  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0000                                __end_of_I2C_stop 1500  
                             ??_MCP23008_pullUp 0024                                    ___param_bank 000000  
                                 __CFG_PLLDIV$1 000000                  __size_of_OSCILLATOR_Initialize 002A  
                 __end_of_OSCILLATOR_Initialize 13F6                                 ?_interrupt_Init 0020  
                               __end_of___aldiv 100E                                           ?_main 0020  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                             MCP23008_pullUp@port 0022  
                                         _sData 0001                           __end_of_MCP23008_read 12F6  
                                         _errno 0013                                  __CFG_CLKOEC$ON 000000  
                             ?_MCP23008_pinMode 0022                               __end_of_I2C_Write 1456  
                                         tablat 000FF5                              ??_MCP23008_pinMode 0026  
                                         status 000FD8                               __end_of_I2C_start 14F6  
            _EUSART1_DefaultFramingErrorHandler 000000                        __size_of_SPI1_Initialize 000E  
                       __CFG_DSWDTOSC$INTOSCREF 000000                                 __initialization 11D0  
                    __end_of_EUSART1_Initialize 13CC                                    __end_of_main 10BC  
                                _MCP23008_Write 1146                                          ??_main 0035  
                                 __activetblptr 000002                                          _ANCON0 000F48  
                                        _ANCON1 000F49                                          _ODCON1 000F42  
                                        _ODCON2 000F41                                          _ODCON3 000F40  
                                __CFG_WDTEN$OFF 000000                                          _RCREG1 000FAF  
                                        _RCSTA1 000FAC                                          _OSCCON 000FD3  
                                        _SPBRG1 000FB0                                  __CFG_WPCFG$OFF 000000  
                                        _TXREG1 000FAE                                          _TXSTA1 000FAD  
                                __CFG_WPDIS$OFF 000000                                  __CFG_XINST$OFF 000000  
                                        _TxData 0100                                          _bfSize 000B  
                                     ??___aldiv 002E                          __end_of_MCP23008_Write 11D0  
                                        ___wmul 13F6                                  __CFG_STVREN$ON 000000  
                        __size_of_I2C_buffClear 0010                                          _buffer 0015  
                                        _columm 0060                        ?_EUSART1_SetErrorHandler 0020  
                                        clear_0 1218                                          clear_1 122A  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                  __pdataCOMRAM 0037                                       ?_I2C_Init 0020  
                                  __mediumconst 0000                                       ?_I2C_read 0020  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                       ?_I2C_stop 0020  
                               __CFG_DSBOREN$ON 000000                                __end_ofexp@coeff 0F1F  
                             _SYSTEM_Initialize 1456                                __end_oflog@coeff 0F3A  
                                    __accesstop 0060                         __end_of__initialization 1230  
                        MCP23008_Write@dataRead 0028                              ?_SYSTEM_Initialize 0020  
                                 ___rparam_used 000001                      __end_of_I2C_repeated_Start 14EC  
                               __CFG_IOL1WAY$ON 000000                            __CFG_WPEND$PAGE_WPFP 000000  
                                __pcstackCOMRAM 0020                                    __pidataBANK0 141C  
                           ??_SYSTEM_Initialize 0035                                 ?_MCP23008_Write 0022  
                             ??_SPI1_Initialize 0020                                 __CFG_DSWDTEN$ON 000000  
                               __CFG_DSWDTPS$G2 000000                                      ??_I2C_Init 0034  
                                    ??_I2C_read 0022                                      ??_I2C_stop 0020  
                               _MCP23008_pullUp 123A                       __end_of_SYSTEM_Initialize 146E  
                                 _I2C_buffClear 149C                                      __pbssBANK1 0100  
                            MCP23008_Write@data 0024                              MCP23008_Write@port 0022  
               __end_of_EUSART1_SetErrorHandler 14E2                               __CFG_PLLSEL$PLL4X 000000  
                              ??_interrupt_Init 0020                                         ?___wmul 0020  
        __end_of_EUSART1_SetFramingErrorHandler 14D8         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 14CE                                         _REFOCON 000F3D  
                                       _OSCCON2 000F87                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000F7F                                         _SSP1ADD 000FC8  
                                       _SSP2ADD 000F74                                         _SSP1BUF 000FC9  
                                       _SSP2BUF 000F75                                  ?_I2C_buffClear 0020  
                              I2C_read@ACK_NACK 0020                                       _I2C_Write 143C  
                                       __Hparam 0000                                         __Lparam 0000  
                                     _I2C_start 14EC                                         ___aldiv 0F42  
                     __size_of_MCP23008_pinMode 008A                                 __size_of___wmul 0026  
                                  __psmallconst 0F00                                         __pcinit 11D0  
                                       __ramtop 0F00                                         __ptext0 100E  
                                       __ptext1 14BA                                         __ptext2 1456  
                                       __ptext3 14AC                                         __ptext4 134A  
                                       __ptext5 13CC                                         __ptext6 12F6  
                                       __ptext7 13F6                                         __ptext8 0F42  
                                       __ptext9 138E                                       _MAX31_ADC 000F  
                       __end_of_MCP23008_pullUp 129C                           _OSCILLATOR_Initialize 13CC  
                              ___aldiv@dividend 0026                              _EUSART1_Initialize 138E  
                      ??_PIN_MANAGER_Initialize 0020                      __size_of_SYSTEM_Initialize 0018  
                          end_of_initialization 1230                             ?_EUSART1_Initialize 0020  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 001B  
                                    ?_I2C_Write 0020                                      ?_I2C_start 0020  
                              ___aldiv@quotient 0030                                         postdec1 000FE5  
                                       postinc0 000FEE                          __size_of_MCP23008_read 005A  
                          ??_EUSART1_Initialize 0022                                       _PORTBbits 000F81  
                               ??_I2C_buffClear 0021                                       _TRISCbits 000F94  
                                     _TRISDbits 000F95                                       _TRISEbits 000F96  
                             __size_of_I2C_Init 0054                __size_of_EUSART1_SetErrorHandler 000A  
                             __size_of_I2C_read 0018                               __size_of_I2C_stop 000A  
                               _SPI1_Initialize 14AC                               __CFG_WPFP$PAGE_63 000000  
                              ??_MCP23008_Write 0026                             __CFG_MSSP7B_EN$MSK7 000000  
                                __end_of___wmul 141C                                   __pidataCOMRAM 1486  
                            _I2C_repeated_Start 14E2                          ?_OSCILLATOR_Initialize 0020  
                              ?_MCP23008_pullUp 0022                             start_initialization 11D0  
               __size_of_PIN_MANAGER_Initialize 0044                             ?_I2C_repeated_Start 0020  
                                 _MCP23008_read 129C                                     ??_I2C_Write 0020  
                                   ??_I2C_start 0020                            ??_I2C_repeated_Start 0020  
                       MCP23008_pullUp@dataRead 0026                                _MCP23008_pinMode 10BC  
                                      ??___wmul 0024                               __CFG_ADCSEL$BIT10 000000  
                                   __pdataBANK0 0060                                 I2C_Init@F_clock 0034  
                                   __pbssCOMRAM 0001                         __end_of_SPI1_Initialize 14BA  
                                ?_MCP23008_read 0022                ??_EUSART1_SetFramingErrorHandler 0022  
               ?_EUSART1_SetFramingErrorHandler 0020                          _PIN_MANAGER_Initialize 134A  
                         MCP23008_read@dataRead 0027                                        ?___aldiv 0026  
                                   __smallconst 0F00                                        _BAUDCON1 000F7E  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        _I2C_Init 12F6  
                          _EUSART1_ErrorHandler 0019                            __CFG_RTCOSC$T1OSCREF 000000  
                                      _I2C_read 146E                                        _I2C_stop 14F6  
                       _EUSART1_SetErrorHandler 14D8                                 ___aldiv@divisor 002A  
                               ___aldiv@counter 002E                                  ___wmul@product 0024  
       EUSART1_SetErrorHandler@interruptHandler 0020                                        _LATCbits 000F8B  
                                      _LATEbits 000F8D                                        _PIE3bits 000FA3  
                             MCP23008_read@port 0022                                        _PIR1bits 000F9E  
                                      _PIR3bits 000FA4                                __CFG_WDTPS$32768 000000  
                                      _SSP1CON1 000FC6                                        _SSP1STAT 000FC7  
                             ___wmul@multiplier 0020                                __CFG_SOSCSEL$DIG 000000  
                       __size_of_interrupt_Init 000A                               __CFG_CFGPLLEN$OFF 000000  
                               ??_MCP23008_read 0024                                ?_SPI1_Initialize 0020  
                                   _INTCON2bits 000FF1                                       copy_data0 11E4  
                                     copy_data1 1204                                        __Hrparam 0000  
                                      __Lrparam 0000                                   I2C_Write@data 0020  
                       ??_OSCILLATOR_Initialize 0020                                __size_of___aldiv 00CC  
                   __size_of_EUSART1_Initialize 003E                       ??_EUSART1_SetErrorHandler 0022  
                   _EUSART1_DefaultErrorHandler 000000                            PCF8523_setDate@F7825 0047  
                                      __ptext10 14C4                                        __ptext11 14CE  
                                      __ptext20 14EC                                        __ptext12 14D8  
                                      __ptext21 143C                                        __ptext13 129C  
                                      __ptext22 14F6                                        __ptext14 123A  
                                      __ptext15 10BC                                        __ptext16 1146  
                                      __ptext17 14E2                                        __ptext18 146E  
                                      __ptext19 149C                           __end_of_I2C_buffClear 14AC  
                                  _SSP1CON1bits 000FC6                        __end_of_MCP23008_pinMode 1146  
                                  _SSP2CON1bits 000F72                                    _SSP2CON2bits 000F71  
                                 __size_of_main 00AE  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                                  _SSP1STATbits 000FC7                     _EUSART1_FramingErrorHandler 001D  
                                  _SSP2STATbits 000F73                                        exp@coeff 0F01  
                                      log@coeff 0F1F                                      _INTCONbits 000FF2  
                      __size_of_MCP23008_pullUp 0062                         ?_PIN_MANAGER_Initialize 0020  
        __end_of_EUSART1_SetOverrunErrorHandler 14CE         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 14C4                                      _RCSTA1bits 000FAC  
                   __size_of_I2C_repeated_Start 000A                            MCP23008_pinMode@mode 0024  
                          MCP23008_pinMode@port 0022  EUSART1_SetFramingErrorHandler@interruptHandler 0020  
                       __size_of_MCP23008_Write 008A                              _eusart1RxLastError 001F  
                                _interrupt_Init 14BA                        MCP23008_pinMode@dataRead 0028  
                                  ___aldiv@sign 002F                  __end_of_PIN_MANAGER_Initialize 138E  
                          PCF8523_setTime@F7818 0037  
