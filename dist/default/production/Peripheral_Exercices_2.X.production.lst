

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Apr 23 21:33:17 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF46J13
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41  0000                     
    42                           ; Version 1.45
    43                           ; Generated 16/11/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18LF46J13 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    78  0000                     
    79 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    80  0000                     
    81 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    82  0000                     
    83                           	psect	idataCOMRAM
    84  00149E                     __pidataCOMRAM:
    85                           	opt stack 0
    86                           
    87                           ;initializer for PCF8523_setTime@F7830
    88  00149E  0003               	dw	3
    89  0014A0  0004               	dw	4
    90  0014A2  0005               	dw	5
    91  0014A4  00                 	db	0
    92  0014A5  00                 	db	0
    93                           
    94                           ;initializer for _page
    95  0014A6  B0                 	db	176
    96  0014A7  B1                 	db	177
    97  0014A8  B2                 	db	178
    98  0014A9  B3                 	db	179
    99  0014AA  B4                 	db	180
   100  0014AB  B5                 	db	181
   101  0014AC  B6                 	db	182
   102  0014AD  B7                 	db	183
   103                           
   104                           ;initializer for PCF8523_setDate@F7837
   105  0014AE  06                 	db	6
   106  0014AF  07                 	db	7
   107  0014B0  08                 	db	8
   108  0014B1  09                 	db	9
   109  0014B2  00                 	db	0
   110                           
   111                           	psect	idataBANK0
   112  001434                     __pidataBANK0:
   113                           	opt stack 0
   114                           
   115                           ;initializer for _columm
   116  001434  00                 	db	0
   117  001435  01                 	db	1
   118  001436  02                 	db	2
   119  001437  03                 	db	3
   120  001438  04                 	db	4
   121  001439  05                 	db	5
   122  00143A  06                 	db	6
   123  00143B  07                 	db	7
   124  00143C  08                 	db	8
   125  00143D  09                 	db	9
   126  00143E  0A                 	db	10
   127  00143F  0B                 	db	11
   128  001440  0C                 	db	12
   129  001441  0D                 	db	13
   130  001442  0E                 	db	14
   131  001443  0F                 	db	15
   132  001444  10                 	db	16
   133  001445  11                 	db	17
   134  001446  12                 	db	18
   135  001447  13                 	db	19
   136  001448  14                 	db	20
   137  001449  15                 	db	21
   138  00144A  16                 	db	22
   139  00144B  17                 	db	23
   140  00144C  18                 	db	24
   141  00144D  19                 	db	25
   142  00144E  1A                 	db	26
   143  00144F  1B                 	db	27
   144  001450  1C                 	db	28
   145  001451  1D                 	db	29
   146  001452  1E                 	db	30
   147  001453  1F                 	db	31
   148                           
   149                           	psect	smallconst
   150  000F00                     __psmallconst:
   151                           	opt stack 0
   152  000F00  00                 	db	0
   153  000F01  00                 	db	0
   154  000F02  80                 	db	128
   155  000F03  3F                 	db	63
   156  000F04  72                 	db	114
   157  000F05  31                 	db	49
   158  000F06  3F                 	db	63
   159  000F07  FE                 	db	254
   160  000F08  75                 	db	117
   161  000F09  3E                 	db	62
   162  000F0A  58                 	db	88
   163  000F0B  63                 	db	99
   164  000F0C  3D                 	db	61
   165  000F0D  95                 	db	149
   166  000F0E  1D                 	db	29
   167  000F0F  3C                 	db	60
   168  000F10  C5                 	db	197
   169  000F11  AE                 	db	174
   170  000F12  3A                 	db	58
   171  000F13  79                 	db	121
   172  000F14  21                 	db	33
   173  000F15  39                 	db	57
   174  000F16  94                 	db	148
   175  000F17  80                 	db	128
   176  000F18  37                 	db	55
   177  000F19  93                 	db	147
   178  000F1A  A7                 	db	167
   179  000F1B  35                 	db	53
   180  000F1C  56                 	db	86
   181  000F1D  15                 	db	21
   182  000F1E  34                 	db	52
   183  000F1F                     __end_ofexp@coeff:
   184                           	opt stack 0
   185  000F1F  00                 	db	0
   186  000F20  00                 	db	0
   187  000F21  00                 	db	0
   188  000F22  00                 	db	0
   189  000F23  80                 	db	128
   190  000F24  3F                 	db	63
   191  000F25  F0                 	db	240
   192  000F26  FF                 	db	255
   193  000F27  BE                 	db	190
   194  000F28  E2                 	db	226
   195  000F29  A9                 	db	169
   196  000F2A  3E                 	db	62
   197  000F2B  83                 	db	131
   198  000F2C  76                 	db	118
   199  000F2D  BE                 	db	190
   200  000F2E  AE                 	db	174
   201  000F2F  2B                 	db	43
   202  000F30  3E                 	db	62
   203  000F31  3C                 	db	60
   204  000F32  C3                 	db	195
   205  000F33  BD                 	db	189
   206  000F34  D2                 	db	210
   207  000F35  13                 	db	19
   208  000F36  3D                 	db	61
   209  000F37  78                 	db	120
   210  000F38  D3                 	db	211
   211  000F39  BB                 	db	187
   212  000F3A                     __end_oflog@coeff:
   213                           	opt stack 0
   214  0000                     _ODCON3	set	3904
   215  0000                     _ODCON2	set	3905
   216  0000                     _ODCON1	set	3906
   217  0000                     _ANCON1	set	3913
   218  0000                     _ANCON0	set	3912
   219  0000                     _REFOCON	set	3901
   220  0000                     _LATEbits	set	3981
   221  0000                     _SSP2STATbits	set	3955
   222  0000                     _SSP2BUF	set	3957
   223  0000                     _SSP2ADD	set	3956
   224  0000                     _SSP2CON2bits	set	3953
   225  0000                     _SSP2CON1bits	set	3954
   226  0000                     _TRISDbits	set	3989
   227  0000                     _PIR3bits	set	4004
   228  0000                     _PIE3bits	set	4003
   229  0000                     _PORTBbits	set	3969
   230  0000                     _LATCbits	set	3979
   231  0000                     _TRISCbits	set	3988
   232  0000                     _INTCONbits	set	4082
   233  0000                     _TRISEbits	set	3990
   234  0000                     _INTCON2bits	set	4081
   235  0000                     _TRISD	set	3989
   236  0000                     _TRISC	set	3988
   237  0000                     _TRISB	set	3987
   238  0000                     _TRISA	set	3986
   239  0000                     _TRISE	set	3990
   240  0000                     _LATC	set	3979
   241  0000                     _LATB	set	3978
   242  0000                     _LATA	set	3977
   243  0000                     _LATD	set	3980
   244  0000                     _LATE	set	3981
   245  0000                     _OSCCON2	set	3975
   246  0000                     _OSCTUNE	set	3995
   247  0000                     _OSCCON	set	4051
   248  0000                     _TXREG1	set	4014
   249  0000                     _RCREG1	set	4015
   250  0000                     _RCSTA1bits	set	4012
   251  0000                     _TXSTA1bits	set	4013
   252  0000                     _PIR1bits	set	3998
   253  0000                     _SPBRGH1	set	3967
   254  0000                     _SPBRG1	set	4016
   255  0000                     _TXSTA1	set	4013
   256  0000                     _RCSTA1	set	4012
   257  0000                     _BAUDCON1	set	3966
   258  0000                     _SSP1STATbits	set	4039
   259  0000                     _SSP1BUF	set	4041
   260  0000                     _SSP1CON1bits	set	4038
   261  0000                     _SSP1ADD	set	4040
   262  0000                     _SSP1CON1	set	4038
   263  0000                     _SSP1STAT	set	4039
   264  000F3A  0D                 	db	13
   265  000F3B  00                 	db	0
   266  000F3C  30                 	db	48	;'0'
   267  000F3D  00                 	db	0
   268  000F3E  20                 	db	32
   269  000F3F  00                 	db	0
   270                           
   271                           ; #config settings
   272  000F40  00                 	db	0	; dummy byte at the end
   273  0000                     
   274                           	psect	cinit
   275  001224                     __pcinit:
   276                           	opt stack 0
   277  001224                     start_initialization:
   278                           	opt stack 0
   279  001224                     __initialization:
   280                           	opt stack 0
   281                           
   282                           ; Initialize objects allocated to BANK0 (32 bytes)
   283                           ; load TBLPTR registers with __pidataBANK0
   284  001224  0E34               	movlw	low __pidataBANK0
   285  001226  6EF6               	movwf	tblptrl,c
   286  001228  0E14               	movlw	high __pidataBANK0
   287  00122A  6EF7               	movwf	tblptrh,c
   288  00122C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   289  00122E  6EF8               	movwf	tblptru,c
   290  001230  EE00  F060         	lfsr	0,__pdataBANK0
   291  001234  EE10 F020          	lfsr	1,32
   292  001238                     copy_data0:
   293  001238  0009               	tblrd		*+
   294  00123A  CFF5 FFEE          	movff	tablat,postinc0
   295  00123E  50E5               	movf	postdec1,w,c
   296  001240  50E1               	movf	fsr1l,w,c
   297  001242  E1FA               	bnz	copy_data0
   298                           
   299                           ; Initialize objects allocated to COMRAM (21 bytes)
   300                           ; load TBLPTR registers with __pidataCOMRAM
   301  001244  0E9E               	movlw	low __pidataCOMRAM
   302  001246  6EF6               	movwf	tblptrl,c
   303  001248  0E14               	movlw	high __pidataCOMRAM
   304  00124A  6EF7               	movwf	tblptrh,c
   305  00124C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   306  00124E  6EF8               	movwf	tblptru,c
   307  001250  EE00  F038         	lfsr	0,__pdataCOMRAM
   308  001254  EE10 F015          	lfsr	1,21
   309  001258                     copy_data1:
   310  001258  0009               	tblrd		*+
   311  00125A  CFF5 FFEE          	movff	tablat,postinc0
   312  00125E  50E5               	movf	postdec1,w,c
   313  001260  50E1               	movf	fsr1l,w,c
   314  001262  E1FA               	bnz	copy_data1
   315                           
   316                           ; Clear objects allocated to BANK1 (256 bytes)
   317  001264  EE01  F000         	lfsr	0,__pbssBANK1
   318  001268  EE11 F000          	lfsr	1,256
   319  00126C                     clear_0:
   320  00126C  6AEE               	clrf	postinc0,c
   321  00126E  50E5               	movf	postdec1,w,c
   322  001270  50E1               	movf	fsr1l,w,c
   323  001272  E1FC               	bnz	clear_0
   324  001274  50E2               	movf	fsr1h,w,c
   325  001276  E1FA               	bnz	clear_0
   326                           
   327                           ; Clear objects allocated to COMRAM (31 bytes)
   328  001278  EE00  F001         	lfsr	0,__pbssCOMRAM
   329  00127C  0E1F               	movlw	31
   330  00127E                     clear_1:
   331  00127E  6AEE               	clrf	postinc0,c
   332  001280  06E8               	decf	wreg,f,c
   333  001282  E1FD               	bnz	clear_1
   334  001284                     end_of_initialization:
   335                           	opt stack 0
   336  001284                     __end_of__initialization:
   337                           	opt stack 0
   338  001284  0E00               	movlw	low (__Lmediumconst shr (0+16))
   339  001286  6EF8               	movwf	tblptru,c
   340  001288  0100               	movlb	0
   341  00128A  EF60  F008         	goto	_main	;jump to C main() function
   342                           tblptru	equ	0xFF8
   343                           tblptrh	equ	0xFF7
   344                           tblptrl	equ	0xFF6
   345                           tablat	equ	0xFF5
   346                           postinc0	equ	0xFEE
   347                           wreg	equ	0xFE8
   348                           postdec1	equ	0xFE5
   349                           fsr1h	equ	0xFE2
   350                           fsr1l	equ	0xFE1
   351                           
   352                           	psect	bssCOMRAM
   353  000001                     __pbssCOMRAM:
   354                           	opt stack 0
   355  000001                     _sData:
   356                           	opt stack 0
   357  000001                     	ds	10
   358  00000B                     _bfSize:
   359                           	opt stack 0
   360  00000B                     	ds	4
   361  00000F                     _MAX31_ADC:
   362                           	opt stack 0
   363  00000F                     	ds	4
   364  000013                     _errno:
   365                           	opt stack 0
   366  000013                     	ds	2
   367  000015                     _buffer:
   368                           	opt stack 0
   369  000015                     	ds	2
   370  000017                     _ADC:
   371                           	opt stack 0
   372  000017                     	ds	2
   373  000019                     _EUSART1_ErrorHandler:
   374                           	opt stack 0
   375  000019                     	ds	2
   376  00001B                     _EUSART1_OverrunErrorHandler:
   377                           	opt stack 0
   378  00001B                     	ds	2
   379  00001D                     _EUSART1_FramingErrorHandler:
   380                           	opt stack 0
   381  00001D                     	ds	2
   382  00001F                     _eusart1RxLastError:
   383                           	opt stack 0
   384  00001F                     	ds	1
   385                           tblptru	equ	0xFF8
   386                           tblptrh	equ	0xFF7
   387                           tblptrl	equ	0xFF6
   388                           tablat	equ	0xFF5
   389                           postinc0	equ	0xFEE
   390                           wreg	equ	0xFE8
   391                           postdec1	equ	0xFE5
   392                           fsr1h	equ	0xFE2
   393                           fsr1l	equ	0xFE1
   394                           
   395                           	psect	dataCOMRAM
   396  000038                     __pdataCOMRAM:
   397                           	opt stack 0
   398  000038                     PCF8523_setTime@F7830:
   399                           	opt stack 0
   400  000038                     	ds	8
   401  000040                     _page:
   402                           	opt stack 0
   403  000040                     	ds	8
   404  000048                     PCF8523_setDate@F7837:
   405                           	opt stack 0
   406  000048                     	ds	5
   407                           tblptru	equ	0xFF8
   408                           tblptrh	equ	0xFF7
   409                           tblptrl	equ	0xFF6
   410                           tablat	equ	0xFF5
   411                           postinc0	equ	0xFEE
   412                           wreg	equ	0xFE8
   413                           postdec1	equ	0xFE5
   414                           fsr1h	equ	0xFE2
   415                           fsr1l	equ	0xFE1
   416                           
   417                           	psect	dataBANK0
   418  000060                     __pdataBANK0:
   419                           	opt stack 0
   420  000060                     _columm:
   421                           	opt stack 0
   422  000060                     	ds	32
   423                           tblptru	equ	0xFF8
   424                           tblptrh	equ	0xFF7
   425                           tblptrl	equ	0xFF6
   426                           tablat	equ	0xFF5
   427                           postinc0	equ	0xFEE
   428                           wreg	equ	0xFE8
   429                           postdec1	equ	0xFE5
   430                           fsr1h	equ	0xFE2
   431                           fsr1l	equ	0xFE1
   432                           
   433                           	psect	bssBANK1
   434  000100                     __pbssBANK1:
   435                           	opt stack 0
   436  000100                     _TxData:
   437                           	opt stack 0
   438  000100                     	ds	256
   439                           tblptru	equ	0xFF8
   440                           tblptrh	equ	0xFF7
   441                           tblptrl	equ	0xFF6
   442                           tablat	equ	0xFF5
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           postdec1	equ	0xFE5
   446                           fsr1h	equ	0xFE2
   447                           fsr1l	equ	0xFE1
   448                           
   449                           	psect	cstackCOMRAM
   450  000020                     __pcstackCOMRAM:
   451                           	opt stack 0
   452  000020                     ??_OSCILLATOR_Initialize:
   453  000020                     ?___wmul:
   454                           	opt stack 0
   455  000020                     I2C_Write@data:
   456                           	opt stack 0
   457  000020                     EUSART1_SetFramingErrorHandler@interruptHandler:
   458                           	opt stack 0
   459  000020                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   460                           	opt stack 0
   461  000020                     EUSART1_SetErrorHandler@interruptHandler:
   462                           	opt stack 0
   463  000020                     I2C_read@ACK_NACK:
   464                           	opt stack 0
   465  000020                     ___wmul@multiplier:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x0
   469  000020                     	ds	1
   470  000021                     
   471                           ; 1 bytes @ 0x1
   472  000021                     	ds	1
   473  000022                     ?_MCP23008_reagReg:
   474                           	opt stack 0
   475  000022                     MCP23008_reagReg@regAdd:
   476                           	opt stack 0
   477  000022                     ___wmul@multiplicand:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x2
   481  000022                     	ds	2
   482  000024                     MCP23008_reagReg@dataRead:
   483                           	opt stack 0
   484  000024                     ___wmul@product:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x4
   488  000024                     	ds	2
   489  000026                     ?___aldiv:
   490                           	opt stack 0
   491  000026                     MCP23008_pinMode@port:
   492                           	opt stack 0
   493  000026                     MCP23008_pullUp@port:
   494                           	opt stack 0
   495  000026                     MCP23008_ISR_polarity@port:
   496                           	opt stack 0
   497  000026                     ___aldiv@dividend:
   498                           	opt stack 0
   499                           
   500                           ; 4 bytes @ 0x6
   501  000026                     	ds	2
   502  000028                     ??_MCP23008_pullUp:
   503  000028                     MCP23008_pinMode@mode:
   504                           	opt stack 0
   505  000028                     MCP23008_ISR_polarity@INTedge:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x8
   509  000028                     	ds	2
   510  00002A                     ??_MCP23008_pinMode:
   511  00002A                     ??_MCP23008_ISR_polarity:
   512  00002A                     MCP23008_pullUp@dataRead:
   513                           	opt stack 0
   514  00002A                     ___aldiv@divisor:
   515                           	opt stack 0
   516                           
   517                           ; 4 bytes @ 0xA
   518  00002A                     	ds	2
   519  00002C                     MCP23008_pinMode@dataRead:
   520                           	opt stack 0
   521  00002C                     MCP23008_ISR_polarity@dataRead:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0xC
   525  00002C                     	ds	2
   526  00002E                     ___aldiv@counter:
   527                           	opt stack 0
   528  00002E                     MCP23008_ISR_EN@port:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0xE
   532  00002E                     	ds	1
   533  00002F                     ___aldiv@sign:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0xF
   537  00002F                     	ds	1
   538  000030                     MCP23008_ISR_EN@INTedge:
   539                           	opt stack 0
   540  000030                     ___aldiv@quotient:
   541                           	opt stack 0
   542                           
   543                           ; 4 bytes @ 0x10
   544  000030                     	ds	2
   545  000032                     ??_MCP23008_ISR_EN:
   546                           
   547                           ; 1 bytes @ 0x12
   548  000032                     	ds	2
   549  000034                     I2C_Init@F_clock:
   550                           	opt stack 0
   551  000034                     MCP23008_ISR_EN@dataRead:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x14
   555  000034                     	ds	1
   556  000035                     
   557                           ; 1 bytes @ 0x15
   558  000035                     	ds	1
   559  000036                     ??_main:
   560                           
   561                           ; 1 bytes @ 0x16
   562  000036                     	ds	2
   563                           tblptru	equ	0xFF8
   564                           tblptrh	equ	0xFF7
   565                           tblptrl	equ	0xFF6
   566                           tablat	equ	0xFF5
   567                           postinc0	equ	0xFEE
   568                           wreg	equ	0xFE8
   569                           postdec1	equ	0xFE5
   570                           fsr1h	equ	0xFE2
   571                           fsr1l	equ	0xFE1
   572                           
   573 ;;
   574 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   575 ;;
   576 ;; *************** function _main *****************
   577 ;; Defined at:
   578 ;;		line 5 in file "main.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   594 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   595 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   596 ;;Total ram usage:        2 bytes
   597 ;; Hardware stack levels required when called:    5
   598 ;; This function calls:
   599 ;;		_I2C_buffClear
   600 ;;		_MCP23008_INTclear
   601 ;;		_MCP23008_ISR_EN
   602 ;;		_MCP23008_pinMode
   603 ;;		_MCP23008_pullUp
   604 ;;		_SYSTEM_Initialize
   605 ;;		_interrupt_Init
   606 ;; This function is called by:
   607 ;;		Startup code after reset
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text0
   612  0010C0                     __ptext0:
   613                           	opt stack 0
   614  0010C0                     _main:
   615                           	opt stack 26
   616                           
   617                           ;main.c: 7: interrupt_Init();
   618                           
   619                           ;incstack = 0
   620  0010C0  EC70  F00A         	call	_interrupt_Init	;wreg free
   621                           
   622                           ;main.c: 8: SYSTEM_Initialize();
   623  0010C4  EC37  F00A         	call	_SYSTEM_Initialize	;wreg free
   624                           
   625                           ;main.c: 9: do { TRISCbits.TRISC0 = 0; } while(0);
   626  0010C8  9094               	bcf	3988,0,c	;volatile
   627                           
   628                           ;main.c: 10: I2C_buffClear();
   629  0010CA  EC5A  F00A         	call	_I2C_buffClear	;wreg free
   630                           
   631                           ;main.c: 11: _delay((unsigned long)((10)*(16000000/4000.0)));
   632  0010CE  0E34               	movlw	52
   633  0010D0  6E36               	movwf	??_main& (0+255),c
   634  0010D2  0EF2               	movlw	242
   635  0010D4                     u1207:
   636  0010D4  2EE8               	decfsz	wreg,f,c
   637  0010D6  D7FE               	bra	u1207
   638  0010D8  2E36               	decfsz	??_main& (0+255),f,c
   639  0010DA  D7FC               	bra	u1207
   640                           
   641                           ;main.c: 14: MCP23008_pinMode(5, 0x00);
   642  0010DC  0E00               	movlw	0
   643  0010DE  6E27               	movwf	MCP23008_pinMode@port+1,c
   644  0010E0  0E05               	movlw	5
   645  0010E2  6E26               	movwf	MCP23008_pinMode@port,c
   646  0010E4  0E00               	movlw	0
   647  0010E6  6E29               	movwf	MCP23008_pinMode@mode+1,c
   648  0010E8  0E00               	movlw	0
   649  0010EA  6E28               	movwf	MCP23008_pinMode@mode,c
   650  0010EC  ECDB  F008         	call	_MCP23008_pinMode	;wreg free
   651                           
   652                           ;main.c: 15: MCP23008_pinMode(3, 0x01);
   653  0010F0  0E00               	movlw	0
   654  0010F2  6E27               	movwf	MCP23008_pinMode@port+1,c
   655  0010F4  0E03               	movlw	3
   656  0010F6  6E26               	movwf	MCP23008_pinMode@port,c
   657  0010F8  0E00               	movlw	0
   658  0010FA  6E29               	movwf	MCP23008_pinMode@mode+1,c
   659  0010FC  0E01               	movlw	1
   660  0010FE  6E28               	movwf	MCP23008_pinMode@mode,c
   661  001100  ECDB  F008         	call	_MCP23008_pinMode	;wreg free
   662                           
   663                           ;main.c: 16: MCP23008_pullUp(3);
   664  001104  0E00               	movlw	0
   665  001106  6E27               	movwf	MCP23008_pullUp@port+1,c
   666  001108  0E03               	movlw	3
   667  00110A  6E26               	movwf	MCP23008_pullUp@port,c
   668  00110C  EC71  F009         	call	_MCP23008_pullUp	;wreg free
   669                           
   670                           ;main.c: 17: MCP23008_ISR_EN(3,0x00);
   671  001110  0E00               	movlw	0
   672  001112  6E2F               	movwf	MCP23008_ISR_EN@port+1,c
   673  001114  0E03               	movlw	3
   674  001116  6E2E               	movwf	MCP23008_ISR_EN@port,c
   675  001118  0E00               	movlw	0
   676  00111A  6E31               	movwf	MCP23008_ISR_EN@INTedge+1,c
   677  00111C  0E00               	movlw	0
   678  00111E  6E30               	movwf	MCP23008_ISR_EN@INTedge,c
   679  001120  ECA1  F008         	call	_MCP23008_ISR_EN	;wreg free
   680  001124                     
   681                           ;main.c: 20: MCP23008_INTclear();
   682  001124  EC69  F00A         	call	_MCP23008_INTclear	;wreg free
   683                           
   684                           ;main.c: 21: _delay((unsigned long)((300)*(16000000/4000.0)));
   685  001128  0E07               	movlw	7
   686  00112A  6E37               	movwf	(??_main+1)& (0+255),c
   687  00112C  0E17               	movlw	23
   688  00112E  6E36               	movwf	??_main& (0+255),c
   689  001130  0E6A               	movlw	106
   690  001132                     u1217:
   691  001132  2EE8               	decfsz	wreg,f,c
   692  001134  D7FE               	bra	u1217
   693  001136  2E36               	decfsz	??_main& (0+255),f,c
   694  001138  D7FC               	bra	u1217
   695  00113A  2E37               	decfsz	(??_main+1)& (0+255),f,c
   696  00113C  D7FA               	bra	u1217
   697  00113E  D000               	nop2	
   698  001140  D7F1               	goto	l274
   699  001142                     __end_of_main:
   700                           	opt stack 0
   701                           tblptru	equ	0xFF8
   702                           tblptrh	equ	0xFF7
   703                           tblptrl	equ	0xFF6
   704                           tablat	equ	0xFF5
   705                           postinc0	equ	0xFEE
   706                           wreg	equ	0xFE8
   707                           postdec1	equ	0xFE5
   708                           fsr1h	equ	0xFE2
   709                           fsr1l	equ	0xFE1
   710                           
   711 ;; *************** function _interrupt_Init *****************
   712 ;; Defined at:
   713 ;;		line 15 in file "Interrupt.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;		None
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		None
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   731 ;;Total ram usage:        0 bytes
   732 ;; Hardware stack levels used:    1
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		_main
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           	psect	text1
   741  0014E0                     __ptext1:
   742                           	opt stack 0
   743  0014E0                     _interrupt_Init:
   744                           	opt stack 30
   745                           
   746                           ;Interrupt.c: 16: INTCONbits.GIE = 1;
   747                           
   748                           ;incstack = 0
   749  0014E0  8EF2               	bsf	intcon,7,c	;volatile
   750                           
   751                           ;Interrupt.c: 17: INTCONbits.PEIE = 1;
   752  0014E2  8CF2               	bsf	intcon,6,c	;volatile
   753                           
   754                           ;Interrupt.c: 18: PIE3bits.SSP2IE = 1;
   755  0014E4  8EA3               	bsf	4003,7,c	;volatile
   756                           
   757                           ;Interrupt.c: 19: PIR3bits.SSP2IF = 0;
   758  0014E6  9EA4               	bcf	4004,7,c	;volatile
   759  0014E8  0012               	return		;funcret
   760  0014EA                     __end_of_interrupt_Init:
   761                           	opt stack 0
   762                           tblptru	equ	0xFF8
   763                           tblptrh	equ	0xFF7
   764                           tblptrl	equ	0xFF6
   765                           tablat	equ	0xFF5
   766                           intcon	equ	0xFF2
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           postdec1	equ	0xFE5
   770                           fsr1h	equ	0xFE2
   771                           fsr1l	equ	0xFE1
   772                           
   773 ;; *************** function _SYSTEM_Initialize *****************
   774 ;; Defined at:
   775 ;;		line 50 in file "mcc_generated_files/mcc.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;		None
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   793 ;;Total ram usage:        0 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; Hardware stack levels required when called:    2
   796 ;; This function calls:
   797 ;;		_EUSART1_Initialize
   798 ;;		_I2C_Init
   799 ;;		_OSCILLATOR_Initialize
   800 ;;		_PIN_MANAGER_Initialize
   801 ;;		_SPI1_Initialize
   802 ;; This function is called by:
   803 ;;		_main
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text2
   808  00146E                     __ptext2:
   809                           	opt stack 0
   810  00146E                     _SYSTEM_Initialize:
   811                           	opt stack 28
   812                           
   813                           ;mcc.c: 52: PIN_MANAGER_Initialize();
   814                           
   815                           ;incstack = 0
   816  00146E  EC94  F009         	call	_PIN_MANAGER_Initialize	;wreg free
   817                           
   818                           ;mcc.c: 53: OSCILLATOR_Initialize();
   819  001472  ECF2  F009         	call	_OSCILLATOR_Initialize	;wreg free
   820                           
   821                           ;mcc.c: 54: SPI1_Initialize();
   822  001476  EC62  F00A         	call	_SPI1_Initialize	;wreg free
   823                           
   824                           ;mcc.c: 55: EUSART1_Initialize();
   825  00147A  ECB6  F009         	call	_EUSART1_Initialize	;wreg free
   826                           
   827                           ;mcc.c: 56: I2C_Init(100);
   828  00147E  0E64               	movlw	100
   829  001480  EC47  F009         	call	_I2C_Init
   830  001484  0012               	return		;funcret
   831  001486                     __end_of_SYSTEM_Initialize:
   832                           	opt stack 0
   833                           tblptru	equ	0xFF8
   834                           tblptrh	equ	0xFF7
   835                           tblptrl	equ	0xFF6
   836                           tablat	equ	0xFF5
   837                           intcon	equ	0xFF2
   838                           postinc0	equ	0xFEE
   839                           wreg	equ	0xFE8
   840                           postdec1	equ	0xFE5
   841                           fsr1h	equ	0xFE2
   842                           fsr1l	equ	0xFE1
   843                           
   844 ;; *************** function _SPI1_Initialize *****************
   845 ;; Defined at:
   846 ;;		line 65 in file "mcc_generated_files/spi1.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, status,2
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   864 ;;Total ram usage:        0 bytes
   865 ;; Hardware stack levels used:    1
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_SYSTEM_Initialize
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text3
   874  0014C4                     __ptext3:
   875                           	opt stack 0
   876  0014C4                     _SPI1_Initialize:
   877                           	opt stack 29
   878                           
   879                           ;spi1.c: 70: SSP1STAT = 0x80;
   880                           
   881                           ;incstack = 0
   882  0014C4  0E80               	movlw	128
   883  0014C6  6EC7               	movwf	4039,c	;volatile
   884                           
   885                           ;spi1.c: 73: SSP1CON1 = 0x20;
   886  0014C8  0E20               	movlw	32
   887  0014CA  6EC6               	movwf	4038,c	;volatile
   888                           
   889                           ;spi1.c: 76: SSP1ADD = 0x00;
   890  0014CC  0E00               	movlw	0
   891  0014CE  6EC8               	movwf	4040,c	;volatile
   892  0014D0  0012               	return		;funcret
   893  0014D2                     __end_of_SPI1_Initialize:
   894                           	opt stack 0
   895                           tblptru	equ	0xFF8
   896                           tblptrh	equ	0xFF7
   897                           tblptrl	equ	0xFF6
   898                           tablat	equ	0xFF5
   899                           intcon	equ	0xFF2
   900                           postinc0	equ	0xFEE
   901                           wreg	equ	0xFE8
   902                           postdec1	equ	0xFE5
   903                           fsr1h	equ	0xFE2
   904                           fsr1l	equ	0xFE1
   905                           
   906 ;; *************** function _PIN_MANAGER_Initialize *****************
   907 ;; Defined at:
   908 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, status,2
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   926 ;;Total ram usage:        0 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; This function calls:
   929 ;;		Nothing
   930 ;; This function is called by:
   931 ;;		_SYSTEM_Initialize
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text4
   936  001328                     __ptext4:
   937                           	opt stack 0
   938  001328                     _PIN_MANAGER_Initialize:
   939                           	opt stack 29
   940                           
   941                           ;pin_manager.c: 57: LATE = 0x04;
   942                           
   943                           ;incstack = 0
   944  001328  0E04               	movlw	4
   945  00132A  6E8D               	movwf	3981,c	;volatile
   946                           
   947                           ;pin_manager.c: 58: LATD = 0x00;
   948  00132C  0E00               	movlw	0
   949  00132E  6E8C               	movwf	3980,c	;volatile
   950                           
   951                           ;pin_manager.c: 59: LATA = 0x00;
   952  001330  0E00               	movlw	0
   953  001332  6E89               	movwf	3977,c	;volatile
   954                           
   955                           ;pin_manager.c: 60: LATB = 0x00;
   956  001334  0E00               	movlw	0
   957  001336  6E8A               	movwf	3978,c	;volatile
   958                           
   959                           ;pin_manager.c: 61: LATC = 0x01;
   960  001338  0E01               	movlw	1
   961  00133A  6E8B               	movwf	3979,c	;volatile
   962                           
   963                           ;pin_manager.c: 66: TRISE = 0xC3;
   964  00133C  0EC3               	movlw	195
   965  00133E  6E96               	movwf	3990,c	;volatile
   966                           
   967                           ;pin_manager.c: 67: TRISA = 0xEF;
   968  001340  0EEF               	movlw	239
   969  001342  6E92               	movwf	3986,c	;volatile
   970                           
   971                           ;pin_manager.c: 68: TRISB = 0xDF;
   972  001344  0EDF               	movlw	223
   973  001346  6E93               	movwf	3987,c	;volatile
   974                           
   975                           ;pin_manager.c: 69: TRISC = 0x96;
   976  001348  0E96               	movlw	150
   977  00134A  6E94               	movwf	3988,c	;volatile
   978                           
   979                           ;pin_manager.c: 70: TRISD = 0xFF;
   980  00134C  6895               	setf	3989,c	;volatile
   981                           
   982                           ;pin_manager.c: 75: ANCON0 = 0x80;
   983  00134E  0E80               	movlw	128
   984  001350  010F               	movlb	15	; () banked
   985  001352  6F48               	movwf	72,b	;volatile
   986                           
   987                           ;pin_manager.c: 76: ANCON1 = 0x10;
   988  001354  0E10               	movlw	16
   989  001356  6F49               	movwf	73,b	;volatile
   990                           
   991                           ; BSR set to: 15
   992                           ;pin_manager.c: 81: INTCON2bits.nRBPU = 1;
   993  001358  8EF1               	bsf	intcon2,7,c	;volatile
   994                           
   995                           ; BSR set to: 15
   996                           ;pin_manager.c: 82: TRISEbits.RDPU = 1;
   997  00135A  8E96               	bsf	3990,7,c	;volatile
   998                           
   999                           ; BSR set to: 15
  1000                           ;pin_manager.c: 83: TRISEbits.REPU = 1;
  1001  00135C  8C96               	bsf	3990,6,c	;volatile
  1002                           
  1003                           ;pin_manager.c: 88: ODCON1 = 0x00;
  1004  00135E  0E00               	movlw	0
  1005  001360  6F42               	movwf	66,b	;volatile
  1006                           
  1007                           ;pin_manager.c: 89: ODCON2 = 0x00;
  1008  001362  0E00               	movlw	0
  1009  001364  6F41               	movwf	65,b	;volatile
  1010                           
  1011                           ;pin_manager.c: 90: ODCON3 = 0x00;
  1012  001366  0E00               	movlw	0
  1013  001368  6F40               	movwf	64,b	;volatile
  1014                           
  1015                           ; BSR set to: 15
  1016  00136A  0012               	return		;funcret
  1017  00136C                     __end_of_PIN_MANAGER_Initialize:
  1018                           	opt stack 0
  1019                           tblptru	equ	0xFF8
  1020                           tblptrh	equ	0xFF7
  1021                           tblptrl	equ	0xFF6
  1022                           tablat	equ	0xFF5
  1023                           intcon	equ	0xFF2
  1024                           intcon2	equ	0xFF1
  1025                           postinc0	equ	0xFEE
  1026                           wreg	equ	0xFE8
  1027                           postdec1	equ	0xFE5
  1028                           fsr1h	equ	0xFE2
  1029                           fsr1l	equ	0xFE1
  1030                           
  1031 ;; *************** function _OSCILLATOR_Initialize *****************
  1032 ;; Defined at:
  1033 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1049 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1050 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1051 ;;Total ram usage:        2 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_SYSTEM_Initialize
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text5
  1061  0013E4                     __ptext5:
  1062                           	opt stack 0
  1063  0013E4                     _OSCILLATOR_Initialize:
  1064                           	opt stack 29
  1065                           
  1066                           ;mcc.c: 62: OSCCON = 0x70;
  1067                           
  1068                           ; BSR set to: 15
  1069                           ;incstack = 0
  1070  0013E4  0E70               	movlw	112
  1071  0013E6  6ED3               	movwf	4051,c	;volatile
  1072                           
  1073                           ;mcc.c: 64: OSCTUNE = 0x00;
  1074  0013E8  0E00               	movlw	0
  1075  0013EA  6E9B               	movwf	3995,c	;volatile
  1076                           
  1077                           ;mcc.c: 66: REFOCON = 0x00;
  1078  0013EC  0E00               	movlw	0
  1079  0013EE  010F               	movlb	15	; () banked
  1080  0013F0  6F3D               	movwf	61,b	;volatile
  1081                           
  1082                           ;mcc.c: 68: OSCCON2 = 0x14;
  1083  0013F2  0E14               	movlw	20
  1084  0013F4  6E87               	movwf	3975,c	;volatile
  1085                           
  1086                           ; BSR set to: 15
  1087                           ;mcc.c: 69: _delay((unsigned long)((500)*(16000000/4000.0)));
  1088  0013F6  0E0B               	movlw	11
  1089  0013F8  6E21               	movwf	(??_OSCILLATOR_Initialize+1)& (0+255),c
  1090  0013FA  0E26               	movlw	38
  1091  0013FC  6E20               	movwf	??_OSCILLATOR_Initialize& (0+255),c
  1092  0013FE  0E5E               	movlw	94
  1093  001400                     u1227:
  1094  001400  2EE8               	decfsz	wreg,f,c
  1095  001402  D7FE               	bra	u1227
  1096  001404  2E20               	decfsz	??_OSCILLATOR_Initialize& (0+255),f,c
  1097  001406  D7FC               	bra	u1227
  1098  001408  2E21               	decfsz	(??_OSCILLATOR_Initialize+1)& (0+255),f,c
  1099  00140A  D7FA               	bra	u1227
  1100  00140C  0012               	return		;funcret
  1101  00140E                     __end_of_OSCILLATOR_Initialize:
  1102                           	opt stack 0
  1103                           tblptru	equ	0xFF8
  1104                           tblptrh	equ	0xFF7
  1105                           tblptrl	equ	0xFF6
  1106                           tablat	equ	0xFF5
  1107                           intcon	equ	0xFF2
  1108                           intcon2	equ	0xFF1
  1109                           postinc0	equ	0xFEE
  1110                           wreg	equ	0xFE8
  1111                           postdec1	equ	0xFE5
  1112                           fsr1h	equ	0xFE2
  1113                           fsr1l	equ	0xFE1
  1114                           
  1115 ;; *************** function _I2C_Init *****************
  1116 ;; Defined at:
  1117 ;;		line 20 in file "I2C.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  F_clock         1    wreg     unsigned char 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  F_clock         1   20[COMRAM] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1135 ;;Total ram usage:        1 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    1
  1138 ;; This function calls:
  1139 ;;		___aldiv
  1140 ;;		___wmul
  1141 ;; This function is called by:
  1142 ;;		_SYSTEM_Initialize
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text6
  1147  00128E                     __ptext6:
  1148                           	opt stack 0
  1149  00128E                     _I2C_Init:
  1150                           	opt stack 28
  1151                           
  1152                           ;incstack = 0
  1153                           ;I2C_Init@F_clock stored from wreg
  1154  00128E  6E34               	movwf	I2C_Init@F_clock,c
  1155                           
  1156                           ;I2C.c: 21: TRISDbits.TRISD0 = 1;
  1157  001290  8095               	bsf	3989,0,c	;volatile
  1158                           
  1159                           ;I2C.c: 22: TRISDbits.TRISD1 = 1;
  1160  001292  8295               	bsf	3989,1,c	;volatile
  1161                           
  1162                           ;I2C.c: 23: SSP2CON1bits.WCOL = 0;
  1163  001294  9E72               	bcf	3954,7,c	;volatile
  1164                           
  1165                           ;I2C.c: 24: SSP2CON1bits.SSPEN = 1;
  1166  001296  8A72               	bsf	3954,5,c	;volatile
  1167                           
  1168                           ;I2C.c: 25: SSP2CON1bits.SSPM = 0x08;
  1169  001298  5072               	movf	3954,w,c	;volatile
  1170  00129A  0BF0               	andlw	-16
  1171  00129C  0908               	iorlw	8
  1172  00129E  6E72               	movwf	3954,c	;volatile
  1173                           
  1174                           ;I2C.c: 26: SSP2CON2bits.ACKDT = 0;
  1175  0012A0  9A71               	bcf	3953,5,c	;volatile
  1176                           
  1177                           ;I2C.c: 27: SSP2CON2bits.ACKEN = 1;
  1178  0012A2  8871               	bsf	3953,4,c	;volatile
  1179                           
  1180                           ;I2C.c: 28: SSP2ADD = (16000000 / ((F_clock * 1000) * 4)) - 1;
  1181  0012A4  0E00               	movlw	0
  1182  0012A6  6E26               	movwf	___aldiv@dividend,c
  1183  0012A8  0E24               	movlw	36
  1184  0012AA  6E27               	movwf	___aldiv@dividend+1,c
  1185  0012AC  0EF4               	movlw	244
  1186  0012AE  6E28               	movwf	___aldiv@dividend+2,c
  1187  0012B0  0E00               	movlw	0
  1188  0012B2  6E29               	movwf	___aldiv@dividend+3,c
  1189  0012B4  C034  F020         	movff	I2C_Init@F_clock,___wmul@multiplier
  1190  0012B8  6A21               	clrf	___wmul@multiplier+1,c
  1191  0012BA  0E0F               	movlw	15
  1192  0012BC  6E23               	movwf	___wmul@multiplicand+1,c
  1193  0012BE  0EA0               	movlw	160
  1194  0012C0  6E22               	movwf	___wmul@multiplicand,c
  1195  0012C2  EC07  F00A         	call	___wmul	;wreg free
  1196  0012C6  C020  F02A         	movff	?___wmul,___aldiv@divisor
  1197  0012CA  C021  F02B         	movff	?___wmul+1,___aldiv@divisor+1
  1198  0012CE  0E00               	movlw	0
  1199  0012D0  BE2B               	btfsc	___aldiv@divisor+1,7,c
  1200  0012D2  0EFF               	movlw	-1
  1201  0012D4  6E2C               	movwf	___aldiv@divisor+2,c
  1202  0012D6  6E2D               	movwf	___aldiv@divisor+3,c
  1203  0012D8  ECA1  F007         	call	___aldiv	;wreg free
  1204  0012DC  0426               	decf	?___aldiv,w,c
  1205  0012DE  6E74               	movwf	3956,c	;volatile
  1206  0012E0  0012               	return		;funcret
  1207  0012E2                     __end_of_I2C_Init:
  1208                           	opt stack 0
  1209                           tblptru	equ	0xFF8
  1210                           tblptrh	equ	0xFF7
  1211                           tblptrl	equ	0xFF6
  1212                           tablat	equ	0xFF5
  1213                           intcon	equ	0xFF2
  1214                           intcon2	equ	0xFF1
  1215                           postinc0	equ	0xFEE
  1216                           wreg	equ	0xFE8
  1217                           postdec1	equ	0xFE5
  1218                           fsr1h	equ	0xFE2
  1219                           fsr1l	equ	0xFE1
  1220                           
  1221 ;; *************** function ___wmul *****************
  1222 ;; Defined at:
  1223 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;  multiplier      2    0[COMRAM] unsigned int 
  1226 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  product         2    4[COMRAM] unsigned int 
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  2    0[COMRAM] unsigned int 
  1231 ;; Registers used:
  1232 ;;		wreg, status,2, status,0, prodl, prodh
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1238 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1239 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1241 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1242 ;;Total ram usage:        6 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; This function calls:
  1245 ;;		Nothing
  1246 ;; This function is called by:
  1247 ;;		_I2C_Init
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text7
  1252  00140E                     __ptext7:
  1253                           	opt stack 0
  1254  00140E                     ___wmul:
  1255                           	opt stack 28
  1256                           
  1257                           ;incstack = 0
  1258  00140E  5020               	movf	___wmul@multiplier,w,c
  1259  001410  0222               	mulwf	___wmul@multiplicand,c
  1260  001412  CFF3 F024          	movff	prodl,___wmul@product
  1261  001416  CFF4 F025          	movff	prodh,___wmul@product+1
  1262  00141A  5020               	movf	___wmul@multiplier,w,c
  1263  00141C  0223               	mulwf	___wmul@multiplicand+1,c
  1264  00141E  50F3               	movf	prodl,w,c
  1265  001420  2625               	addwf	___wmul@product+1,f,c
  1266  001422  5021               	movf	___wmul@multiplier+1,w,c
  1267  001424  0222               	mulwf	___wmul@multiplicand,c
  1268  001426  50F3               	movf	prodl,w,c
  1269  001428  2625               	addwf	___wmul@product+1,f,c
  1270  00142A  C024  F020         	movff	___wmul@product,?___wmul
  1271  00142E  C025  F021         	movff	___wmul@product+1,?___wmul+1
  1272  001432  0012               	return	
  1273  001434                     __end_of___wmul:
  1274                           	opt stack 0
  1275                           tblptru	equ	0xFF8
  1276                           tblptrh	equ	0xFF7
  1277                           tblptrl	equ	0xFF6
  1278                           tablat	equ	0xFF5
  1279                           prodh	equ	0xFF4
  1280                           prodl	equ	0xFF3
  1281                           intcon	equ	0xFF2
  1282                           intcon2	equ	0xFF1
  1283                           postinc0	equ	0xFEE
  1284                           wreg	equ	0xFE8
  1285                           postdec1	equ	0xFE5
  1286                           fsr1h	equ	0xFE2
  1287                           fsr1l	equ	0xFE1
  1288                           
  1289 ;; *************** function ___aldiv *****************
  1290 ;; Defined at:
  1291 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  dividend        4    6[COMRAM] long 
  1294 ;;  divisor         4   10[COMRAM] long 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  quotient        4   16[COMRAM] long 
  1297 ;;  sign            1   15[COMRAM] unsigned char 
  1298 ;;  counter         1   14[COMRAM] unsigned char 
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  4    6[COMRAM] long 
  1301 ;; Registers used:
  1302 ;;		wreg, status,2, status,0
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1308 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1309 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1311 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1312 ;;Total ram usage:       14 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_I2C_Init
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text8
  1322  000F42                     __ptext8:
  1323                           	opt stack 0
  1324  000F42                     ___aldiv:
  1325                           	opt stack 28
  1326                           
  1327                           ;incstack = 0
  1328  000F42  0E00               	movlw	0
  1329  000F44  6E2F               	movwf	___aldiv@sign,c
  1330  000F46  AE2D               	btfss	___aldiv@divisor+3,7,c
  1331  000F48  D00A               	goto	l954
  1332  000F4A  1E2D               	comf	___aldiv@divisor+3,f,c
  1333  000F4C  1E2C               	comf	___aldiv@divisor+2,f,c
  1334  000F4E  1E2B               	comf	___aldiv@divisor+1,f,c
  1335  000F50  6C2A               	negf	___aldiv@divisor,c
  1336  000F52  0E00               	movlw	0
  1337  000F54  222B               	addwfc	___aldiv@divisor+1,f,c
  1338  000F56  222C               	addwfc	___aldiv@divisor+2,f,c
  1339  000F58  222D               	addwfc	___aldiv@divisor+3,f,c
  1340  000F5A  0E01               	movlw	1
  1341  000F5C  6E2F               	movwf	___aldiv@sign,c
  1342  000F5E                     l954:
  1343  000F5E  AE29               	btfss	___aldiv@dividend+3,7,c
  1344  000F60  D00A               	goto	l955
  1345  000F62  1E29               	comf	___aldiv@dividend+3,f,c
  1346  000F64  1E28               	comf	___aldiv@dividend+2,f,c
  1347  000F66  1E27               	comf	___aldiv@dividend+1,f,c
  1348  000F68  6C26               	negf	___aldiv@dividend,c
  1349  000F6A  0E00               	movlw	0
  1350  000F6C  2227               	addwfc	___aldiv@dividend+1,f,c
  1351  000F6E  2228               	addwfc	___aldiv@dividend+2,f,c
  1352  000F70  2229               	addwfc	___aldiv@dividend+3,f,c
  1353  000F72  0E01               	movlw	1
  1354  000F74  1A2F               	xorwf	___aldiv@sign,f,c
  1355  000F76                     l955:
  1356  000F76  0E00               	movlw	0
  1357  000F78  6E30               	movwf	___aldiv@quotient,c
  1358  000F7A  0E00               	movlw	0
  1359  000F7C  6E31               	movwf	___aldiv@quotient+1,c
  1360  000F7E  0E00               	movlw	0
  1361  000F80  6E32               	movwf	___aldiv@quotient+2,c
  1362  000F82  0E00               	movlw	0
  1363  000F84  6E33               	movwf	___aldiv@quotient+3,c
  1364  000F86  502A               	movf	___aldiv@divisor,w,c
  1365  000F88  102B               	iorwf	___aldiv@divisor+1,w,c
  1366  000F8A  102C               	iorwf	___aldiv@divisor+2,w,c
  1367  000F8C  102D               	iorwf	___aldiv@divisor+3,w,c
  1368  000F8E  B4D8               	btfsc	status,2,c
  1369  000F90  D02A               	goto	l962
  1370  000F92  0E01               	movlw	1
  1371  000F94  6E2E               	movwf	___aldiv@counter,c
  1372  000F96  D006               	goto	l957
  1373  000F98  90D8               	bcf	status,0,c
  1374  000F9A  362A               	rlcf	___aldiv@divisor,f,c
  1375  000F9C  362B               	rlcf	___aldiv@divisor+1,f,c
  1376  000F9E  362C               	rlcf	___aldiv@divisor+2,f,c
  1377  000FA0  362D               	rlcf	___aldiv@divisor+3,f,c
  1378  000FA2  2A2E               	incf	___aldiv@counter,f,c
  1379  000FA4                     l957:
  1380  000FA4  AE2D               	btfss	___aldiv@divisor+3,7,c
  1381  000FA6  D7F8               	goto	l958
  1382  000FA8                     u980:
  1383  000FA8  90D8               	bcf	status,0,c
  1384  000FAA  3630               	rlcf	___aldiv@quotient,f,c
  1385  000FAC  3631               	rlcf	___aldiv@quotient+1,f,c
  1386  000FAE  3632               	rlcf	___aldiv@quotient+2,f,c
  1387  000FB0  3633               	rlcf	___aldiv@quotient+3,f,c
  1388  000FB2  502A               	movf	___aldiv@divisor,w,c
  1389  000FB4  5C26               	subwf	___aldiv@dividend,w,c
  1390  000FB6  502B               	movf	___aldiv@divisor+1,w,c
  1391  000FB8  5827               	subwfb	___aldiv@dividend+1,w,c
  1392  000FBA  502C               	movf	___aldiv@divisor+2,w,c
  1393  000FBC  5828               	subwfb	___aldiv@dividend+2,w,c
  1394  000FBE  502D               	movf	___aldiv@divisor+3,w,c
  1395  000FC0  5829               	subwfb	___aldiv@dividend+3,w,c
  1396  000FC2  A0D8               	btfss	status,0,c
  1397  000FC4  D009               	goto	l961
  1398  000FC6  502A               	movf	___aldiv@divisor,w,c
  1399  000FC8  5E26               	subwf	___aldiv@dividend,f,c
  1400  000FCA  502B               	movf	___aldiv@divisor+1,w,c
  1401  000FCC  5A27               	subwfb	___aldiv@dividend+1,f,c
  1402  000FCE  502C               	movf	___aldiv@divisor+2,w,c
  1403  000FD0  5A28               	subwfb	___aldiv@dividend+2,f,c
  1404  000FD2  502D               	movf	___aldiv@divisor+3,w,c
  1405  000FD4  5A29               	subwfb	___aldiv@dividend+3,f,c
  1406  000FD6  8030               	bsf	___aldiv@quotient,0,c
  1407  000FD8                     l961:
  1408  000FD8  90D8               	bcf	status,0,c
  1409  000FDA  322D               	rrcf	___aldiv@divisor+3,f,c
  1410  000FDC  322C               	rrcf	___aldiv@divisor+2,f,c
  1411  000FDE  322B               	rrcf	___aldiv@divisor+1,f,c
  1412  000FE0  322A               	rrcf	___aldiv@divisor,f,c
  1413  000FE2  2E2E               	decfsz	___aldiv@counter,f,c
  1414  000FE4  D7E1               	goto	u980
  1415  000FE6                     l962:
  1416  000FE6  502F               	movf	___aldiv@sign,w,c
  1417  000FE8  B4D8               	btfsc	status,2,c
  1418  000FEA  D008               	goto	l963
  1419  000FEC  1E33               	comf	___aldiv@quotient+3,f,c
  1420  000FEE  1E32               	comf	___aldiv@quotient+2,f,c
  1421  000FF0  1E31               	comf	___aldiv@quotient+1,f,c
  1422  000FF2  6C30               	negf	___aldiv@quotient,c
  1423  000FF4  0E00               	movlw	0
  1424  000FF6  2231               	addwfc	___aldiv@quotient+1,f,c
  1425  000FF8  2232               	addwfc	___aldiv@quotient+2,f,c
  1426  000FFA  2233               	addwfc	___aldiv@quotient+3,f,c
  1427  000FFC                     l963:
  1428  000FFC  C030  F026         	movff	___aldiv@quotient,?___aldiv
  1429  001000  C031  F027         	movff	___aldiv@quotient+1,?___aldiv+1
  1430  001004  C032  F028         	movff	___aldiv@quotient+2,?___aldiv+2
  1431  001008  C033  F029         	movff	___aldiv@quotient+3,?___aldiv+3
  1432  00100C  0012               	return	
  1433  00100E                     __end_of___aldiv:
  1434                           	opt stack 0
  1435                           tblptru	equ	0xFF8
  1436                           tblptrh	equ	0xFF7
  1437                           tblptrl	equ	0xFF6
  1438                           tablat	equ	0xFF5
  1439                           prodh	equ	0xFF4
  1440                           prodl	equ	0xFF3
  1441                           intcon	equ	0xFF2
  1442                           intcon2	equ	0xFF1
  1443                           postinc0	equ	0xFEE
  1444                           wreg	equ	0xFE8
  1445                           postdec1	equ	0xFE5
  1446                           fsr1h	equ	0xFE2
  1447                           fsr1l	equ	0xFE1
  1448                           status	equ	0xFD8
  1449                           
  1450 ;; *************** function _EUSART1_Initialize *****************
  1451 ;; Defined at:
  1452 ;;		line 68 in file "mcc_generated_files/eusart1.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, status,2, status,0, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1470 ;;Total ram usage:        0 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    1
  1473 ;; This function calls:
  1474 ;;		_EUSART1_SetErrorHandler
  1475 ;;		_EUSART1_SetFramingErrorHandler
  1476 ;;		_EUSART1_SetOverrunErrorHandler
  1477 ;; This function is called by:
  1478 ;;		_SYSTEM_Initialize
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text9
  1483  00136C                     __ptext9:
  1484                           	opt stack 0
  1485  00136C                     _EUSART1_Initialize:
  1486                           	opt stack 28
  1487                           
  1488                           ;eusart1.c: 72: BAUDCON1 = 0x18;
  1489                           
  1490                           ;incstack = 0
  1491  00136C  0E18               	movlw	24
  1492  00136E  6E7E               	movwf	3966,c	;volatile
  1493                           
  1494                           ;eusart1.c: 75: RCSTA1 = 0x98;
  1495  001370  0E98               	movlw	152
  1496  001372  6EAC               	movwf	4012,c	;volatile
  1497                           
  1498                           ;eusart1.c: 78: TXSTA1 = 0x24;
  1499  001374  0E24               	movlw	36
  1500  001376  6EAD               	movwf	4013,c	;volatile
  1501                           
  1502                           ;eusart1.c: 81: SPBRG1 = 0xCF;
  1503  001378  0ECF               	movlw	207
  1504  00137A  6EB0               	movwf	4016,c	;volatile
  1505                           
  1506                           ;eusart1.c: 84: SPBRGH1 = 0x00;
  1507  00137C  0E00               	movlw	0
  1508  00137E  6E7F               	movwf	3967,c	;volatile
  1509                           
  1510                           ;eusart1.c: 87: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  1511  001380  0E00               	movlw	0
  1512  001382  6E20               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  1513  001384  0E00               	movlw	0
  1514  001386  6E21               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  1515  001388  EC7A  F00A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1516                           
  1517                           ;eusart1.c: 88: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  1518  00138C  0E00               	movlw	0
  1519  00138E  6E20               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  1520  001390  0E00               	movlw	0
  1521  001392  6E21               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  1522  001394  EC75  F00A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1523                           
  1524                           ;eusart1.c: 89: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  1525  001398  0E00               	movlw	0
  1526  00139A  6E20               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  1527  00139C  0E00               	movlw	0
  1528  00139E  6E21               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  1529  0013A0  EC7F  F00A         	call	_EUSART1_SetErrorHandler	;wreg free
  1530                           
  1531                           ;eusart1.c: 91: eusart1RxLastError.status = 0;
  1532  0013A4  0E00               	movlw	0
  1533  0013A6  6E1F               	movwf	_eusart1RxLastError,c	;volatile
  1534  0013A8  0012               	return		;funcret
  1535  0013AA                     __end_of_EUSART1_Initialize:
  1536                           	opt stack 0
  1537                           tblptru	equ	0xFF8
  1538                           tblptrh	equ	0xFF7
  1539                           tblptrl	equ	0xFF6
  1540                           tablat	equ	0xFF5
  1541                           prodh	equ	0xFF4
  1542                           prodl	equ	0xFF3
  1543                           intcon	equ	0xFF2
  1544                           intcon2	equ	0xFF1
  1545                           postinc0	equ	0xFEE
  1546                           wreg	equ	0xFE8
  1547                           postdec1	equ	0xFE5
  1548                           fsr1h	equ	0xFE2
  1549                           fsr1l	equ	0xFE1
  1550                           status	equ	0xFD8
  1551                           
  1552 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1553 ;; Defined at:
  1554 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1557 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;		None
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1    wreg      void 
  1562 ;; Registers used:
  1563 ;;		wreg, status,2, status,0
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1572 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1573 ;;Total ram usage:        2 bytes
  1574 ;; Hardware stack levels used:    1
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_EUSART1_Initialize
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text10
  1583  0014EA                     __ptext10:
  1584                           	opt stack 0
  1585  0014EA                     _EUSART1_SetOverrunErrorHandler:
  1586                           	opt stack 28
  1587                           
  1588                           ;eusart1.c: 171: EUSART1_OverrunErrorHandler = interruptHandler;
  1589                           
  1590                           ;incstack = 0
  1591  0014EA  C020  F01B         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1592  0014EE  C021  F01C         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1593  0014F2  0012               	return		;funcret
  1594  0014F4                     __end_of_EUSART1_SetOverrunErrorHandler:
  1595                           	opt stack 0
  1596                           tblptru	equ	0xFF8
  1597                           tblptrh	equ	0xFF7
  1598                           tblptrl	equ	0xFF6
  1599                           tablat	equ	0xFF5
  1600                           prodh	equ	0xFF4
  1601                           prodl	equ	0xFF3
  1602                           intcon	equ	0xFF2
  1603                           intcon2	equ	0xFF1
  1604                           postinc0	equ	0xFEE
  1605                           wreg	equ	0xFE8
  1606                           postdec1	equ	0xFE5
  1607                           fsr1h	equ	0xFE2
  1608                           fsr1l	equ	0xFE1
  1609                           status	equ	0xFD8
  1610                           
  1611 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1612 ;; Defined at:
  1613 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1616 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1632 ;;Total ram usage:        2 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_EUSART1_Initialize
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text11
  1642  0014F4                     __ptext11:
  1643                           	opt stack 0
  1644  0014F4                     _EUSART1_SetFramingErrorHandler:
  1645                           	opt stack 28
  1646                           
  1647                           ;eusart1.c: 167: EUSART1_FramingErrorHandler = interruptHandler;
  1648                           
  1649                           ;incstack = 0
  1650  0014F4  C020  F01D         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1651  0014F8  C021  F01E         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1652  0014FC  0012               	return		;funcret
  1653  0014FE                     __end_of_EUSART1_SetFramingErrorHandler:
  1654                           	opt stack 0
  1655                           tblptru	equ	0xFF8
  1656                           tblptrh	equ	0xFF7
  1657                           tblptrl	equ	0xFF6
  1658                           tablat	equ	0xFF5
  1659                           prodh	equ	0xFF4
  1660                           prodl	equ	0xFF3
  1661                           intcon	equ	0xFF2
  1662                           intcon2	equ	0xFF1
  1663                           postinc0	equ	0xFEE
  1664                           wreg	equ	0xFE8
  1665                           postdec1	equ	0xFE5
  1666                           fsr1h	equ	0xFE2
  1667                           fsr1l	equ	0xFE1
  1668                           status	equ	0xFD8
  1669                           
  1670 ;; *************** function _EUSART1_SetErrorHandler *****************
  1671 ;; Defined at:
  1672 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  1675 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2, status,0
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1691 ;;Total ram usage:        2 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; This function calls:
  1694 ;;		Nothing
  1695 ;; This function is called by:
  1696 ;;		_EUSART1_Initialize
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text12
  1701  0014FE                     __ptext12:
  1702                           	opt stack 0
  1703  0014FE                     _EUSART1_SetErrorHandler:
  1704                           	opt stack 28
  1705                           
  1706                           ;eusart1.c: 175: EUSART1_ErrorHandler = interruptHandler;
  1707                           
  1708                           ;incstack = 0
  1709  0014FE  C020  F019         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1710  001502  C021  F01A         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1711  001506  0012               	return		;funcret
  1712  001508                     __end_of_EUSART1_SetErrorHandler:
  1713                           	opt stack 0
  1714                           tblptru	equ	0xFF8
  1715                           tblptrh	equ	0xFF7
  1716                           tblptrl	equ	0xFF6
  1717                           tablat	equ	0xFF5
  1718                           prodh	equ	0xFF4
  1719                           prodl	equ	0xFF3
  1720                           intcon	equ	0xFF2
  1721                           intcon2	equ	0xFF1
  1722                           postinc0	equ	0xFEE
  1723                           wreg	equ	0xFE8
  1724                           postdec1	equ	0xFE5
  1725                           fsr1h	equ	0xFE2
  1726                           fsr1l	equ	0xFE1
  1727                           status	equ	0xFD8
  1728                           
  1729 ;; *************** function _MCP23008_pullUp *****************
  1730 ;; Defined at:
  1731 ;;		line 58 in file "MCP23008_IO_expender.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  port            2    6[COMRAM] int 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  dataRead        2   10[COMRAM] int 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      void 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, status,0, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1746 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1748 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1749 ;;Total ram usage:        6 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    3
  1752 ;; This function calls:
  1753 ;;		_I2C_Write
  1754 ;;		_I2C_start
  1755 ;;		_I2C_stop
  1756 ;;		_MCP23008_reagReg
  1757 ;; This function is called by:
  1758 ;;		_main
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text13
  1763  0012E2                     __ptext13:
  1764                           	opt stack 0
  1765  0012E2                     _MCP23008_pullUp:
  1766                           	opt stack 27
  1767                           
  1768                           ;MCP23008_IO_expender.c: 59: int dataRead;
  1769                           ;MCP23008_IO_expender.c: 60: dataRead = MCP23008_reagReg(0x06);
  1770                           
  1771                           ;incstack = 0
  1772  0012E2  0E00               	movlw	0
  1773  0012E4  6E23               	movwf	MCP23008_reagReg@regAdd+1,c
  1774  0012E6  0E06               	movlw	6
  1775  0012E8  6E22               	movwf	MCP23008_reagReg@regAdd,c
  1776  0012EA  ECD5  F009         	call	_MCP23008_reagReg	;wreg free
  1777  0012EE  C022  F02A         	movff	?_MCP23008_reagReg,MCP23008_pullUp@dataRead
  1778  0012F2  C023  F02B         	movff	?_MCP23008_reagReg+1,MCP23008_pullUp@dataRead+1
  1779                           
  1780                           ;MCP23008_IO_expender.c: 62: I2C_start();
  1781  0012F6  EC89  F00A         	call	_I2C_start	;wreg free
  1782                           
  1783                           ;MCP23008_IO_expender.c: 63: I2C_Write(0x40);
  1784  0012FA  0E40               	movlw	64
  1785  0012FC  EC2A  F00A         	call	_I2C_Write
  1786                           
  1787                           ;MCP23008_IO_expender.c: 64: I2C_Write(0x06);
  1788  001300  0E06               	movlw	6
  1789  001302  EC2A  F00A         	call	_I2C_Write
  1790                           
  1791                           ;MCP23008_IO_expender.c: 65: I2C_Write(dataRead | (0x01 << port));
  1792  001306  C026  F028         	movff	MCP23008_pullUp@port,??_MCP23008_pullUp
  1793  00130A  0E01               	movlw	1
  1794  00130C  6E29               	movwf	(??_MCP23008_pullUp+1)& (0+255),c
  1795  00130E  2A28               	incf	??_MCP23008_pullUp,f,c
  1796  001310  D002               	goto	u1084
  1797  001312                     u1085:
  1798  001312  90D8               	bcf	status,0,c
  1799  001314  3629               	rlcf	??_MCP23008_pullUp+1,f,c
  1800  001316                     u1084:
  1801  001316  2E28               	decfsz	??_MCP23008_pullUp,f,c
  1802  001318  D7FC               	goto	u1085
  1803  00131A  5029               	movf	??_MCP23008_pullUp+1,w,c
  1804  00131C  102A               	iorwf	MCP23008_pullUp@dataRead,w,c
  1805  00131E  EC2A  F00A         	call	_I2C_Write
  1806                           
  1807                           ;MCP23008_IO_expender.c: 66: I2C_stop();
  1808  001322  EC8E  F00A         	call	_I2C_stop	;wreg free
  1809  001326  0012               	return		;funcret
  1810  001328                     __end_of_MCP23008_pullUp:
  1811                           	opt stack 0
  1812                           tblptru	equ	0xFF8
  1813                           tblptrh	equ	0xFF7
  1814                           tblptrl	equ	0xFF6
  1815                           tablat	equ	0xFF5
  1816                           prodh	equ	0xFF4
  1817                           prodl	equ	0xFF3
  1818                           intcon	equ	0xFF2
  1819                           intcon2	equ	0xFF1
  1820                           postinc0	equ	0xFEE
  1821                           wreg	equ	0xFE8
  1822                           postdec1	equ	0xFE5
  1823                           fsr1h	equ	0xFE2
  1824                           fsr1l	equ	0xFE1
  1825                           status	equ	0xFD8
  1826                           
  1827 ;; *************** function _MCP23008_pinMode *****************
  1828 ;; Defined at:
  1829 ;;		line 11 in file "MCP23008_IO_expender.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  port            2    6[COMRAM] int 
  1832 ;;  mode            2    8[COMRAM] int 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  dataRead        2   12[COMRAM] int 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1844 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1845 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1846 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1847 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1848 ;;Total ram usage:        8 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    3
  1851 ;; This function calls:
  1852 ;;		_I2C_Write
  1853 ;;		_I2C_start
  1854 ;;		_I2C_stop
  1855 ;;		_MCP23008_reagReg
  1856 ;; This function is called by:
  1857 ;;		_main
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           	psect	text14
  1862  0011B6                     __ptext14:
  1863                           	opt stack 0
  1864  0011B6                     _MCP23008_pinMode:
  1865                           	opt stack 27
  1866                           
  1867                           ;MCP23008_IO_expender.c: 12: int dataRead;
  1868                           ;MCP23008_IO_expender.c: 13: dataRead = MCP23008_reagReg(0x00);
  1869                           
  1870                           ;incstack = 0
  1871  0011B6  0E00               	movlw	0
  1872  0011B8  6E23               	movwf	MCP23008_reagReg@regAdd+1,c
  1873  0011BA  0E00               	movlw	0
  1874  0011BC  6E22               	movwf	MCP23008_reagReg@regAdd,c
  1875  0011BE  ECD5  F009         	call	_MCP23008_reagReg	;wreg free
  1876  0011C2  C022  F02C         	movff	?_MCP23008_reagReg,MCP23008_pinMode@dataRead
  1877  0011C6  C023  F02D         	movff	?_MCP23008_reagReg+1,MCP23008_pinMode@dataRead+1
  1878                           
  1879                           ;MCP23008_IO_expender.c: 15: I2C_start();
  1880  0011CA  EC89  F00A         	call	_I2C_start	;wreg free
  1881                           
  1882                           ;MCP23008_IO_expender.c: 16: I2C_Write(0x40);
  1883  0011CE  0E40               	movlw	64
  1884  0011D0  EC2A  F00A         	call	_I2C_Write
  1885                           
  1886                           ;MCP23008_IO_expender.c: 17: I2C_Write(0x00);
  1887  0011D4  0E00               	movlw	0
  1888  0011D6  EC2A  F00A         	call	_I2C_Write
  1889                           
  1890                           ;MCP23008_IO_expender.c: 18: if (mode == 0x01) {
  1891  0011DA  0428               	decf	MCP23008_pinMode@mode,w,c
  1892  0011DC  1029               	iorwf	MCP23008_pinMode@mode+1,w,c
  1893  0011DE  A4D8               	btfss	status,2,c
  1894  0011E0  D00F               	goto	l543
  1895                           
  1896                           ;MCP23008_IO_expender.c: 19: I2C_Write(dataRead | (0x01 << port));
  1897  0011E2  C026  F02A         	movff	MCP23008_pinMode@port,??_MCP23008_pinMode
  1898  0011E6  0E01               	movlw	1
  1899  0011E8  6E2B               	movwf	(??_MCP23008_pinMode+1)& (0+255),c
  1900  0011EA  2A2A               	incf	??_MCP23008_pinMode,f,c
  1901  0011EC  D002               	goto	u1064
  1902  0011EE                     u1065:
  1903  0011EE  90D8               	bcf	status,0,c
  1904  0011F0  362B               	rlcf	??_MCP23008_pinMode+1,f,c
  1905  0011F2                     u1064:
  1906  0011F2  2E2A               	decfsz	??_MCP23008_pinMode,f,c
  1907  0011F4  D7FC               	goto	u1065
  1908  0011F6  502B               	movf	??_MCP23008_pinMode+1,w,c
  1909  0011F8  102C               	iorwf	MCP23008_pinMode@dataRead,w,c
  1910  0011FA  EC2A  F00A         	call	_I2C_Write
  1911                           
  1912                           ;MCP23008_IO_expender.c: 20: } else {
  1913  0011FE  D00F               	goto	l544
  1914  001200                     l543:
  1915                           
  1916                           ;MCP23008_IO_expender.c: 21: I2C_Write(dataRead & ~(0x01 << port));
  1917  001200  C026  F02A         	movff	MCP23008_pinMode@port,??_MCP23008_pinMode
  1918  001204  0E01               	movlw	1
  1919  001206  6E2B               	movwf	(??_MCP23008_pinMode+1)& (0+255),c
  1920  001208  2A2A               	incf	??_MCP23008_pinMode,f,c
  1921  00120A  D002               	goto	u1074
  1922  00120C                     u1075:
  1923  00120C  90D8               	bcf	status,0,c
  1924  00120E  362B               	rlcf	??_MCP23008_pinMode+1,f,c
  1925  001210                     u1074:
  1926  001210  2E2A               	decfsz	??_MCP23008_pinMode,f,c
  1927  001212  D7FC               	goto	u1075
  1928  001214  502B               	movf	??_MCP23008_pinMode+1,w,c
  1929  001216  0AFF               	xorlw	255
  1930  001218  142C               	andwf	MCP23008_pinMode@dataRead,w,c
  1931  00121A  EC2A  F00A         	call	_I2C_Write
  1932  00121E                     l544:
  1933                           
  1934                           ;MCP23008_IO_expender.c: 22: }
  1935                           ;MCP23008_IO_expender.c: 23: I2C_stop();
  1936  00121E  EC8E  F00A         	call	_I2C_stop	;wreg free
  1937  001222  0012               	return		;funcret
  1938  001224                     __end_of_MCP23008_pinMode:
  1939                           	opt stack 0
  1940                           tblptru	equ	0xFF8
  1941                           tblptrh	equ	0xFF7
  1942                           tblptrl	equ	0xFF6
  1943                           tablat	equ	0xFF5
  1944                           prodh	equ	0xFF4
  1945                           prodl	equ	0xFF3
  1946                           intcon	equ	0xFF2
  1947                           intcon2	equ	0xFF1
  1948                           postinc0	equ	0xFEE
  1949                           wreg	equ	0xFE8
  1950                           postdec1	equ	0xFE5
  1951                           fsr1h	equ	0xFE2
  1952                           fsr1l	equ	0xFE1
  1953                           status	equ	0xFD8
  1954                           
  1955 ;; *************** function _MCP23008_ISR_EN *****************
  1956 ;; Defined at:
  1957 ;;		line 69 in file "MCP23008_IO_expender.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  port            2   14[COMRAM] int 
  1960 ;;  INTedge         2   16[COMRAM] int 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;  dataRead        2   20[COMRAM] int 
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      unsigned char 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1972 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1973 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1974 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1975 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1976 ;;Total ram usage:        8 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    4
  1979 ;; This function calls:
  1980 ;;		_I2C_Write
  1981 ;;		_I2C_start
  1982 ;;		_I2C_stop
  1983 ;;		_MCP23008_ISR_polarity
  1984 ;;		_MCP23008_reagReg
  1985 ;; This function is called by:
  1986 ;;		_main
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text15
  1991  001142                     __ptext15:
  1992                           	opt stack 0
  1993  001142                     _MCP23008_ISR_EN:
  1994                           	opt stack 26
  1995                           
  1996                           ;MCP23008_IO_expender.c: 70: int dataRead;
  1997                           ;MCP23008_IO_expender.c: 72: dataRead = MCP23008_reagReg(0x02);
  1998                           
  1999                           ;incstack = 0
  2000  001142  0E00               	movlw	0
  2001  001144  6E23               	movwf	MCP23008_reagReg@regAdd+1,c
  2002  001146  0E02               	movlw	2
  2003  001148  6E22               	movwf	MCP23008_reagReg@regAdd,c
  2004  00114A  ECD5  F009         	call	_MCP23008_reagReg	;wreg free
  2005  00114E  C022  F034         	movff	?_MCP23008_reagReg,MCP23008_ISR_EN@dataRead
  2006  001152  C023  F035         	movff	?_MCP23008_reagReg+1,MCP23008_ISR_EN@dataRead+1
  2007                           
  2008                           ;MCP23008_IO_expender.c: 74: I2C_start();
  2009  001156  EC89  F00A         	call	_I2C_start	;wreg free
  2010                           
  2011                           ;MCP23008_IO_expender.c: 75: I2C_Write(0x40);
  2012  00115A  0E40               	movlw	64
  2013  00115C  EC2A  F00A         	call	_I2C_Write
  2014                           
  2015                           ;MCP23008_IO_expender.c: 76: I2C_Write(0x02);
  2016  001160  0E02               	movlw	2
  2017  001162  EC2A  F00A         	call	_I2C_Write
  2018                           
  2019                           ;MCP23008_IO_expender.c: 77: I2C_Write(dataRead | (0x01 << port));
  2020  001166  C02E  F032         	movff	MCP23008_ISR_EN@port,??_MCP23008_ISR_EN
  2021  00116A  0E01               	movlw	1
  2022  00116C  6E33               	movwf	(??_MCP23008_ISR_EN+1)& (0+255),c
  2023  00116E  2A32               	incf	??_MCP23008_ISR_EN,f,c
  2024  001170  D002               	goto	u1094
  2025  001172                     u1095:
  2026  001172  90D8               	bcf	status,0,c
  2027  001174  3633               	rlcf	??_MCP23008_ISR_EN+1,f,c
  2028  001176                     u1094:
  2029  001176  2E32               	decfsz	??_MCP23008_ISR_EN,f,c
  2030  001178  D7FC               	goto	u1095
  2031  00117A  5033               	movf	??_MCP23008_ISR_EN+1,w,c
  2032  00117C  1034               	iorwf	MCP23008_ISR_EN@dataRead,w,c
  2033  00117E  EC2A  F00A         	call	_I2C_Write
  2034                           
  2035                           ;MCP23008_IO_expender.c: 78: I2C_stop();
  2036  001182  EC8E  F00A         	call	_I2C_stop	;wreg free
  2037                           
  2038                           ;MCP23008_IO_expender.c: 81: I2C_start();
  2039  001186  EC89  F00A         	call	_I2C_start	;wreg free
  2040                           
  2041                           ;MCP23008_IO_expender.c: 82: I2C_Write(0x40);
  2042  00118A  0E40               	movlw	64
  2043  00118C  EC2A  F00A         	call	_I2C_Write
  2044                           
  2045                           ;MCP23008_IO_expender.c: 83: I2C_Write(0x05);
  2046  001190  0E05               	movlw	5
  2047  001192  EC2A  F00A         	call	_I2C_Write
  2048                           
  2049                           ;MCP23008_IO_expender.c: 84: I2C_Write(0x04);
  2050  001196  0E04               	movlw	4
  2051  001198  EC2A  F00A         	call	_I2C_Write
  2052                           
  2053                           ;MCP23008_IO_expender.c: 85: I2C_stop();
  2054  00119C  EC8E  F00A         	call	_I2C_stop	;wreg free
  2055                           
  2056                           ;MCP23008_IO_expender.c: 87: MCP23008_ISR_polarity(port,INTedge);
  2057  0011A0  C02E  F026         	movff	MCP23008_ISR_EN@port,MCP23008_ISR_polarity@port
  2058  0011A4  C02F  F027         	movff	MCP23008_ISR_EN@port+1,MCP23008_ISR_polarity@port+1
  2059  0011A8  C030  F028         	movff	MCP23008_ISR_EN@INTedge,MCP23008_ISR_polarity@INTedge
  2060  0011AC  C031  F029         	movff	MCP23008_ISR_EN@INTedge+1,MCP23008_ISR_polarity@INTedge+1
  2061  0011B0  EC07  F008         	call	_MCP23008_ISR_polarity	;wreg free
  2062  0011B4  0012               	return		;funcret
  2063  0011B6                     __end_of_MCP23008_ISR_EN:
  2064                           	opt stack 0
  2065                           tblptru	equ	0xFF8
  2066                           tblptrh	equ	0xFF7
  2067                           tblptrl	equ	0xFF6
  2068                           tablat	equ	0xFF5
  2069                           prodh	equ	0xFF4
  2070                           prodl	equ	0xFF3
  2071                           intcon	equ	0xFF2
  2072                           intcon2	equ	0xFF1
  2073                           postinc0	equ	0xFEE
  2074                           wreg	equ	0xFE8
  2075                           postdec1	equ	0xFE5
  2076                           fsr1h	equ	0xFE2
  2077                           fsr1l	equ	0xFE1
  2078                           status	equ	0xFD8
  2079                           
  2080 ;; *************** function _MCP23008_ISR_polarity *****************
  2081 ;; Defined at:
  2082 ;;		line 90 in file "MCP23008_IO_expender.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  port            2    6[COMRAM] int 
  2085 ;;  INTedge         2    8[COMRAM] int 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  dataRead        2   12[COMRAM] int 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2097 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2098 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2099 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2100 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2101 ;;Total ram usage:        8 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    3
  2104 ;; This function calls:
  2105 ;;		_I2C_Write
  2106 ;;		_I2C_start
  2107 ;;		_I2C_stop
  2108 ;;		_MCP23008_reagReg
  2109 ;; This function is called by:
  2110 ;;		_MCP23008_ISR_EN
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text16
  2115  00100E                     __ptext16:
  2116                           	opt stack 0
  2117  00100E                     _MCP23008_ISR_polarity:
  2118                           	opt stack 26
  2119                           
  2120                           ;MCP23008_IO_expender.c: 91: int dataRead;
  2121                           ;MCP23008_IO_expender.c: 93: dataRead = MCP23008_reagReg(0x03);
  2122                           
  2123                           ;incstack = 0
  2124  00100E  0E00               	movlw	0
  2125  001010  6E23               	movwf	MCP23008_reagReg@regAdd+1,c
  2126  001012  0E03               	movlw	3
  2127  001014  6E22               	movwf	MCP23008_reagReg@regAdd,c
  2128  001016  ECD5  F009         	call	_MCP23008_reagReg	;wreg free
  2129  00101A  C022  F02C         	movff	?_MCP23008_reagReg,MCP23008_ISR_polarity@dataRead
  2130  00101E  C023  F02D         	movff	?_MCP23008_reagReg+1,MCP23008_ISR_polarity@dataRead+1
  2131                           
  2132                           ;MCP23008_IO_expender.c: 94: I2C_start();
  2133  001022  EC89  F00A         	call	_I2C_start	;wreg free
  2134                           
  2135                           ;MCP23008_IO_expender.c: 95: I2C_Write(0x40);
  2136  001026  0E40               	movlw	64
  2137  001028  EC2A  F00A         	call	_I2C_Write
  2138                           
  2139                           ;MCP23008_IO_expender.c: 96: I2C_Write(0x03);
  2140  00102C  0E03               	movlw	3
  2141  00102E  EC2A  F00A         	call	_I2C_Write
  2142                           
  2143                           ;MCP23008_IO_expender.c: 97: if (INTedge == 0x00) {
  2144  001032  5028               	movf	MCP23008_ISR_polarity@INTedge,w,c
  2145  001034  1029               	iorwf	MCP23008_ISR_polarity@INTedge+1,w,c
  2146  001036  A4D8               	btfss	status,2,c
  2147  001038  D00F               	goto	l564
  2148                           
  2149                           ;MCP23008_IO_expender.c: 98: I2C_Write(dataRead |(0x01 << port));
  2150  00103A  C026  F02A         	movff	MCP23008_ISR_polarity@port,??_MCP23008_ISR_polarity
  2151  00103E  0E01               	movlw	1
  2152  001040  6E2B               	movwf	(??_MCP23008_ISR_polarity+1)& (0+255),c
  2153  001042  2A2A               	incf	??_MCP23008_ISR_polarity,f,c
  2154  001044  D002               	goto	u1024
  2155  001046                     u1025:
  2156  001046  90D8               	bcf	status,0,c
  2157  001048  362B               	rlcf	??_MCP23008_ISR_polarity+1,f,c
  2158  00104A                     u1024:
  2159  00104A  2E2A               	decfsz	??_MCP23008_ISR_polarity,f,c
  2160  00104C  D7FC               	goto	u1025
  2161  00104E  502B               	movf	??_MCP23008_ISR_polarity+1,w,c
  2162  001050  102C               	iorwf	MCP23008_ISR_polarity@dataRead,w,c
  2163  001052  EC2A  F00A         	call	_I2C_Write
  2164                           
  2165                           ;MCP23008_IO_expender.c: 99: } else {
  2166  001056  D00F               	goto	l565
  2167  001058                     l564:
  2168                           
  2169                           ;MCP23008_IO_expender.c: 100: I2C_Write(dataRead & ~(0x01 << port));
  2170  001058  C026  F02A         	movff	MCP23008_ISR_polarity@port,??_MCP23008_ISR_polarity
  2171  00105C  0E01               	movlw	1
  2172  00105E  6E2B               	movwf	(??_MCP23008_ISR_polarity+1)& (0+255),c
  2173  001060  2A2A               	incf	??_MCP23008_ISR_polarity,f,c
  2174  001062  D002               	goto	u1034
  2175  001064                     u1035:
  2176  001064  90D8               	bcf	status,0,c
  2177  001066  362B               	rlcf	??_MCP23008_ISR_polarity+1,f,c
  2178  001068                     u1034:
  2179  001068  2E2A               	decfsz	??_MCP23008_ISR_polarity,f,c
  2180  00106A  D7FC               	goto	u1035
  2181  00106C  502B               	movf	??_MCP23008_ISR_polarity+1,w,c
  2182  00106E  0AFF               	xorlw	255
  2183  001070  142C               	andwf	MCP23008_ISR_polarity@dataRead,w,c
  2184  001072  EC2A  F00A         	call	_I2C_Write
  2185  001076                     l565:
  2186                           
  2187                           ;MCP23008_IO_expender.c: 101: }
  2188                           ;MCP23008_IO_expender.c: 102: I2C_stop();
  2189  001076  EC8E  F00A         	call	_I2C_stop	;wreg free
  2190                           
  2191                           ;MCP23008_IO_expender.c: 105: dataRead = MCP23008_reagReg(0x04);
  2192  00107A  0E00               	movlw	0
  2193  00107C  6E23               	movwf	MCP23008_reagReg@regAdd+1,c
  2194  00107E  0E04               	movlw	4
  2195  001080  6E22               	movwf	MCP23008_reagReg@regAdd,c
  2196  001082  ECD5  F009         	call	_MCP23008_reagReg	;wreg free
  2197  001086  C022  F02C         	movff	?_MCP23008_reagReg,MCP23008_ISR_polarity@dataRead
  2198  00108A  C023  F02D         	movff	?_MCP23008_reagReg+1,MCP23008_ISR_polarity@dataRead+1
  2199                           
  2200                           ;MCP23008_IO_expender.c: 106: I2C_start();
  2201  00108E  EC89  F00A         	call	_I2C_start	;wreg free
  2202                           
  2203                           ;MCP23008_IO_expender.c: 107: I2C_Write(0x40);
  2204  001092  0E40               	movlw	64
  2205  001094  EC2A  F00A         	call	_I2C_Write
  2206                           
  2207                           ;MCP23008_IO_expender.c: 108: I2C_Write(0x04);
  2208  001098  0E04               	movlw	4
  2209  00109A  EC2A  F00A         	call	_I2C_Write
  2210                           
  2211                           ;MCP23008_IO_expender.c: 109: I2C_Write(dataRead |(0x01 << port));
  2212  00109E  C026  F02A         	movff	MCP23008_ISR_polarity@port,??_MCP23008_ISR_polarity
  2213  0010A2  0E01               	movlw	1
  2214  0010A4  6E2B               	movwf	(??_MCP23008_ISR_polarity+1)& (0+255),c
  2215  0010A6  2A2A               	incf	??_MCP23008_ISR_polarity,f,c
  2216  0010A8  D002               	goto	u1044
  2217  0010AA                     u1045:
  2218  0010AA  90D8               	bcf	status,0,c
  2219  0010AC  362B               	rlcf	??_MCP23008_ISR_polarity+1,f,c
  2220  0010AE                     u1044:
  2221  0010AE  2E2A               	decfsz	??_MCP23008_ISR_polarity,f,c
  2222  0010B0  D7FC               	goto	u1045
  2223  0010B2  502B               	movf	??_MCP23008_ISR_polarity+1,w,c
  2224  0010B4  102C               	iorwf	MCP23008_ISR_polarity@dataRead,w,c
  2225  0010B6  EC2A  F00A         	call	_I2C_Write
  2226                           
  2227                           ;MCP23008_IO_expender.c: 110: I2C_stop();
  2228  0010BA  EC8E  F00A         	call	_I2C_stop	;wreg free
  2229  0010BE  0012               	return		;funcret
  2230  0010C0                     __end_of_MCP23008_ISR_polarity:
  2231                           	opt stack 0
  2232                           tblptru	equ	0xFF8
  2233                           tblptrh	equ	0xFF7
  2234                           tblptrl	equ	0xFF6
  2235                           tablat	equ	0xFF5
  2236                           prodh	equ	0xFF4
  2237                           prodl	equ	0xFF3
  2238                           intcon	equ	0xFF2
  2239                           intcon2	equ	0xFF1
  2240                           postinc0	equ	0xFEE
  2241                           wreg	equ	0xFE8
  2242                           postdec1	equ	0xFE5
  2243                           fsr1h	equ	0xFE2
  2244                           fsr1l	equ	0xFE1
  2245                           status	equ	0xFD8
  2246                           
  2247 ;; *************** function _MCP23008_INTclear *****************
  2248 ;; Defined at:
  2249 ;;		line 144 in file "MCP23008_IO_expender.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;		None
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;		None
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2267 ;;Total ram usage:        0 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    3
  2270 ;; This function calls:
  2271 ;;		_MCP23008_reagReg
  2272 ;; This function is called by:
  2273 ;;		_main
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text17
  2278  0014D2                     __ptext17:
  2279                           	opt stack 0
  2280  0014D2                     _MCP23008_INTclear:
  2281                           	opt stack 27
  2282                           
  2283                           ;MCP23008_IO_expender.c: 145: MCP23008_reagReg(0x08);
  2284                           
  2285                           ;incstack = 0
  2286  0014D2  0E00               	movlw	0
  2287  0014D4  6E23               	movwf	MCP23008_reagReg@regAdd+1,c
  2288  0014D6  0E08               	movlw	8
  2289  0014D8  6E22               	movwf	MCP23008_reagReg@regAdd,c
  2290  0014DA  ECD5  F009         	call	_MCP23008_reagReg	;wreg free
  2291  0014DE  0012               	return		;funcret
  2292  0014E0                     __end_of_MCP23008_INTclear:
  2293                           	opt stack 0
  2294                           tblptru	equ	0xFF8
  2295                           tblptrh	equ	0xFF7
  2296                           tblptrl	equ	0xFF6
  2297                           tablat	equ	0xFF5
  2298                           prodh	equ	0xFF4
  2299                           prodl	equ	0xFF3
  2300                           intcon	equ	0xFF2
  2301                           intcon2	equ	0xFF1
  2302                           postinc0	equ	0xFEE
  2303                           wreg	equ	0xFE8
  2304                           postdec1	equ	0xFE5
  2305                           fsr1h	equ	0xFE2
  2306                           fsr1l	equ	0xFE1
  2307                           status	equ	0xFD8
  2308                           
  2309 ;; *************** function _MCP23008_reagReg *****************
  2310 ;; Defined at:
  2311 ;;		line 131 in file "MCP23008_IO_expender.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  regAdd          2    2[COMRAM] int 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  dataRead        2    4[COMRAM] int 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  2    2[COMRAM] int 
  2318 ;; Registers used:
  2319 ;;		wreg, status,2, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2325 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2326 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2328 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2329 ;;Total ram usage:        4 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    2
  2332 ;; This function calls:
  2333 ;;		_I2C_Write
  2334 ;;		_I2C_read
  2335 ;;		_I2C_repeated_Start
  2336 ;;		_I2C_start
  2337 ;;		_I2C_stop
  2338 ;; This function is called by:
  2339 ;;		_MCP23008_pinMode
  2340 ;;		_MCP23008_pullUp
  2341 ;;		_MCP23008_ISR_EN
  2342 ;;		_MCP23008_ISR_polarity
  2343 ;;		_MCP23008_INTclear
  2344 ;;		_MCP23008_Write
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           	psect	text18
  2349  0013AA                     __ptext18:
  2350                           	opt stack 0
  2351  0013AA                     _MCP23008_reagReg:
  2352                           	opt stack 27
  2353                           
  2354                           ;MCP23008_IO_expender.c: 132: int dataRead;
  2355                           ;MCP23008_IO_expender.c: 133: I2C_start();
  2356                           
  2357                           ;incstack = 0
  2358  0013AA  EC89  F00A         	call	_I2C_start	;wreg free
  2359                           
  2360                           ;MCP23008_IO_expender.c: 134: I2C_Write(0x40);
  2361  0013AE  0E40               	movlw	64
  2362  0013B0  EC2A  F00A         	call	_I2C_Write
  2363                           
  2364                           ;MCP23008_IO_expender.c: 135: I2C_Write(regAdd);
  2365  0013B4  5022               	movf	MCP23008_reagReg@regAdd,w,c
  2366  0013B6  EC2A  F00A         	call	_I2C_Write
  2367                           
  2368                           ;MCP23008_IO_expender.c: 136: I2C_repeated_Start();
  2369  0013BA  EC84  F00A         	call	_I2C_repeated_Start	;wreg free
  2370                           
  2371                           ;MCP23008_IO_expender.c: 137: I2C_Write(0x40 | 0x01);
  2372  0013BE  0E41               	movlw	65
  2373  0013C0  EC2A  F00A         	call	_I2C_Write
  2374                           
  2375                           ;MCP23008_IO_expender.c: 138: I2C_read(1);
  2376  0013C4  0E00               	movlw	0
  2377  0013C6  6E21               	movwf	I2C_read@ACK_NACK+1,c
  2378  0013C8  0E01               	movlw	1
  2379  0013CA  6E20               	movwf	I2C_read@ACK_NACK,c
  2380  0013CC  EC43  F00A         	call	_I2C_read	;wreg free
  2381                           
  2382                           ;MCP23008_IO_expender.c: 139: dataRead = SSP2BUF;
  2383  0013D0  CF75 F024          	movff	3957,MCP23008_reagReg@dataRead	;volatile
  2384  0013D4  6A25               	clrf	MCP23008_reagReg@dataRead+1,c
  2385                           
  2386                           ;MCP23008_IO_expender.c: 140: I2C_stop();
  2387  0013D6  EC8E  F00A         	call	_I2C_stop	;wreg free
  2388                           
  2389                           ;MCP23008_IO_expender.c: 141: return dataRead;
  2390  0013DA  C024  F022         	movff	MCP23008_reagReg@dataRead,?_MCP23008_reagReg
  2391  0013DE  C025  F023         	movff	MCP23008_reagReg@dataRead+1,?_MCP23008_reagReg+1
  2392  0013E2  0012               	return	
  2393  0013E4                     __end_of_MCP23008_reagReg:
  2394                           	opt stack 0
  2395                           tblptru	equ	0xFF8
  2396                           tblptrh	equ	0xFF7
  2397                           tblptrl	equ	0xFF6
  2398                           tablat	equ	0xFF5
  2399                           prodh	equ	0xFF4
  2400                           prodl	equ	0xFF3
  2401                           intcon	equ	0xFF2
  2402                           intcon2	equ	0xFF1
  2403                           postinc0	equ	0xFEE
  2404                           wreg	equ	0xFE8
  2405                           postdec1	equ	0xFE5
  2406                           fsr1h	equ	0xFE2
  2407                           fsr1l	equ	0xFE1
  2408                           status	equ	0xFD8
  2409                           
  2410 ;; *************** function _I2C_repeated_Start *****************
  2411 ;; Defined at:
  2412 ;;		line 57 in file "I2C.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;		None
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;		None
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      void 
  2419 ;; Registers used:
  2420 ;;		None
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2430 ;;Total ram usage:        0 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_MCP23008_reagReg
  2436 ;;		_MCP23008_read
  2437 ;;		_portINT_status
  2438 ;;		_MCP9801_TempRead
  2439 ;;		_EEPROM_24AA512_Read
  2440 ;;		_EEPROM_24AA512_pageRead
  2441 ;;		_MCP794x_readEEPROM
  2442 ;;		_MCP794x_getID
  2443 ;;		_MCP7941x_read
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text19
  2448  001508                     __ptext19:
  2449                           	opt stack 0
  2450  001508                     _I2C_repeated_Start:
  2451                           	opt stack 28
  2452                           
  2453                           ;I2C.c: 58: SSP2CON2bits.RSEN = 1;
  2454                           
  2455                           ;incstack = 0
  2456  001508  8271               	bsf	3953,1,c	;volatile
  2457  00150A  B271               	btfsc	3953,1,c	;volatile
  2458  00150C  D7FE               	goto	l493
  2459                           
  2460                           ;I2C.c: 60: PIR3bits.SSP2IF = 0;
  2461  00150E  9EA4               	bcf	4004,7,c	;volatile
  2462  001510  0012               	return		;funcret
  2463  001512                     __end_of_I2C_repeated_Start:
  2464                           	opt stack 0
  2465                           tblptru	equ	0xFF8
  2466                           tblptrh	equ	0xFF7
  2467                           tblptrl	equ	0xFF6
  2468                           tablat	equ	0xFF5
  2469                           prodh	equ	0xFF4
  2470                           prodl	equ	0xFF3
  2471                           intcon	equ	0xFF2
  2472                           intcon2	equ	0xFF1
  2473                           postinc0	equ	0xFEE
  2474                           wreg	equ	0xFE8
  2475                           postdec1	equ	0xFE5
  2476                           fsr1h	equ	0xFE2
  2477                           fsr1l	equ	0xFE1
  2478                           status	equ	0xFD8
  2479                           
  2480 ;; *************** function _I2C_read *****************
  2481 ;; Defined at:
  2482 ;;		line 42 in file "I2C.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  ACK_NACK        2    0[COMRAM] int 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  2    0[COMRAM] int 
  2489 ;; Registers used:
  2490 ;;		None
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2499 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2500 ;;Total ram usage:        2 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_MCP23008_reagReg
  2506 ;;		_MCP23008_read
  2507 ;;		_portINT_status
  2508 ;;		_MCP9801_TempRead
  2509 ;;		_EEPROM_24AA512_Read
  2510 ;;		_EEPROM_24AA512_pageRead
  2511 ;;		_PCF8523_rtcRead
  2512 ;;		_MCP794x_readEEPROM
  2513 ;;		_MCP794x_getID
  2514 ;;		_MCP7941x_read
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text20
  2519  001486                     __ptext20:
  2520                           	opt stack 0
  2521  001486                     _I2C_read:
  2522                           	opt stack 28
  2523                           
  2524                           ;I2C.c: 43: SSP2CON2bits.RCEN = 1;
  2525                           
  2526                           ;incstack = 0
  2527  001486  8671               	bsf	3953,3,c	;volatile
  2528  001488  A073               	btfss	3955,0,c	;volatile
  2529  00148A  D7FE               	goto	l478
  2530                           
  2531                           ;I2C.c: 45: SSP2CON2bits.ACKDT = ACK_NACK;
  2532  00148C  B020               	btfsc	I2C_read@ACK_NACK,0,c
  2533  00148E  D002               	bra	u935
  2534  001490  9A71               	bcf	3953,5,c	;volatile
  2535  001492  D001               	bra	u936
  2536  001494                     u935:
  2537  001494  8A71               	bsf	3953,5,c	;volatile
  2538  001496                     u936:
  2539                           
  2540                           ;I2C.c: 46: SSP2CON2bits.ACKEN = 1;
  2541  001496  8871               	bsf	3953,4,c	;volatile
  2542  001498  A871               	btfss	3953,4,c	;volatile
  2543  00149A  0012               	return	
  2544  00149C  D7FD               	goto	l481
  2545  00149E                     __end_of_I2C_read:
  2546                           	opt stack 0
  2547                           tblptru	equ	0xFF8
  2548                           tblptrh	equ	0xFF7
  2549                           tblptrl	equ	0xFF6
  2550                           tablat	equ	0xFF5
  2551                           prodh	equ	0xFF4
  2552                           prodl	equ	0xFF3
  2553                           intcon	equ	0xFF2
  2554                           intcon2	equ	0xFF1
  2555                           postinc0	equ	0xFEE
  2556                           wreg	equ	0xFE8
  2557                           postdec1	equ	0xFE5
  2558                           fsr1h	equ	0xFE2
  2559                           fsr1l	equ	0xFE1
  2560                           status	equ	0xFD8
  2561                           
  2562 ;; *************** function _I2C_buffClear *****************
  2563 ;; Defined at:
  2564 ;;		line 81 in file "I2C.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;		None
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      void 
  2571 ;; Registers used:
  2572 ;;		wreg, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2582 ;;Total ram usage:        0 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:    2
  2585 ;; This function calls:
  2586 ;;		_I2C_Write
  2587 ;;		_I2C_start
  2588 ;;		_I2C_stop
  2589 ;; This function is called by:
  2590 ;;		_main
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text21
  2595  0014B4                     __ptext21:
  2596                           	opt stack 0
  2597  0014B4                     _I2C_buffClear:
  2598                           	opt stack 28
  2599                           
  2600                           ;I2C.c: 82: I2C_start();
  2601                           
  2602                           ;incstack = 0
  2603  0014B4  EC89  F00A         	call	_I2C_start	;wreg free
  2604                           
  2605                           ;I2C.c: 83: I2C_Write(0x00);
  2606  0014B8  0E00               	movlw	0
  2607  0014BA  EC2A  F00A         	call	_I2C_Write
  2608                           
  2609                           ;I2C.c: 84: I2C_stop();
  2610  0014BE  EC8E  F00A         	call	_I2C_stop	;wreg free
  2611  0014C2  0012               	return		;funcret
  2612  0014C4                     __end_of_I2C_buffClear:
  2613                           	opt stack 0
  2614                           tblptru	equ	0xFF8
  2615                           tblptrh	equ	0xFF7
  2616                           tblptrl	equ	0xFF6
  2617                           tablat	equ	0xFF5
  2618                           prodh	equ	0xFF4
  2619                           prodl	equ	0xFF3
  2620                           intcon	equ	0xFF2
  2621                           intcon2	equ	0xFF1
  2622                           postinc0	equ	0xFEE
  2623                           wreg	equ	0xFE8
  2624                           postdec1	equ	0xFE5
  2625                           fsr1h	equ	0xFE2
  2626                           fsr1l	equ	0xFE1
  2627                           status	equ	0xFD8
  2628                           
  2629 ;; *************** function _I2C_start *****************
  2630 ;; Defined at:
  2631 ;;		line 51 in file "I2C.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;		None
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;		None
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		None
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2649 ;;Total ram usage:        0 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; This function calls:
  2652 ;;		Nothing
  2653 ;; This function is called by:
  2654 ;;		_I2C_buffClear
  2655 ;;		_MCP23008_pinMode
  2656 ;;		_MCP23008_pullUp
  2657 ;;		_MCP23008_ISR_EN
  2658 ;;		_MCP23008_ISR_polarity
  2659 ;;		_MCP23008_reagReg
  2660 ;;		_I2C_BusSCan
  2661 ;;		_MCP23008_Write
  2662 ;;		_MCP23008_read
  2663 ;;		_portINT_status
  2664 ;;		_MCP9801_Init
  2665 ;;		_MCP9801_TempRead
  2666 ;;		_EEPROM_24AA512_Write
  2667 ;;		_EEPROM_24AA512_Read
  2668 ;;		_EEPROM_24AA512_pageWrite
  2669 ;;		_EEPROM_24AA512_pageRead
  2670 ;;		_PCF8523_rtcRead
  2671 ;;		_PCF8523_write
  2672 ;;		_MCP794x_setTime
  2673 ;;		_MCP794x_setDate
  2674 ;;		_MCP794x_writeRtcc
  2675 ;;		_MCP794x_writeEEPROM
  2676 ;;		_MCP794x_readEEPROM
  2677 ;;		_MCP794x_getID
  2678 ;;		_MCP7941x_read
  2679 ;;		_SSD1306_writeCMD
  2680 ;;		_displaySetCursor
  2681 ;;		_displayWrite
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text22
  2686  001512                     __ptext22:
  2687                           	opt stack 0
  2688  001512                     _I2C_start:
  2689                           	opt stack 28
  2690                           
  2691                           ;I2C.c: 52: SSP2CON2bits.SEN = 1;
  2692                           
  2693                           ;incstack = 0
  2694  001512  8071               	bsf	3953,0,c	;volatile
  2695  001514  B071               	btfsc	3953,0,c	;volatile
  2696  001516  D7FE               	goto	l487
  2697                           
  2698                           ;I2C.c: 54: PIR3bits.SSP2IF = 0;
  2699  001518  9EA4               	bcf	4004,7,c	;volatile
  2700  00151A  0012               	return		;funcret
  2701  00151C                     __end_of_I2C_start:
  2702                           	opt stack 0
  2703                           tblptru	equ	0xFF8
  2704                           tblptrh	equ	0xFF7
  2705                           tblptrl	equ	0xFF6
  2706                           tablat	equ	0xFF5
  2707                           prodh	equ	0xFF4
  2708                           prodl	equ	0xFF3
  2709                           intcon	equ	0xFF2
  2710                           intcon2	equ	0xFF1
  2711                           postinc0	equ	0xFEE
  2712                           wreg	equ	0xFE8
  2713                           postdec1	equ	0xFE5
  2714                           fsr1h	equ	0xFE2
  2715                           fsr1l	equ	0xFE1
  2716                           status	equ	0xFD8
  2717                           
  2718 ;; *************** function _I2C_Write *****************
  2719 ;; Defined at:
  2720 ;;		line 31 in file "I2C.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  data            1    wreg     unsigned char 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  data            1    0[COMRAM] unsigned char 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2735 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2737 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2738 ;;Total ram usage:        1 bytes
  2739 ;; Hardware stack levels used:    1
  2740 ;; Hardware stack levels required when called:    1
  2741 ;; This function calls:
  2742 ;;		_I2C_stop
  2743 ;; This function is called by:
  2744 ;;		_I2C_buffClear
  2745 ;;		_MCP23008_pinMode
  2746 ;;		_MCP23008_pullUp
  2747 ;;		_MCP23008_ISR_EN
  2748 ;;		_MCP23008_ISR_polarity
  2749 ;;		_MCP23008_reagReg
  2750 ;;		_I2C_BusSCan
  2751 ;;		_MCP23008_Write
  2752 ;;		_MCP23008_read
  2753 ;;		_portINT_status
  2754 ;;		_MCP9801_Init
  2755 ;;		_MCP9801_TempRead
  2756 ;;		_EEPROM_24AA512_Write
  2757 ;;		_EEPROM_24AA512_Read
  2758 ;;		_EEPROM_24AA512_pageWrite
  2759 ;;		_EEPROM_24AA512_pageRead
  2760 ;;		_PCF8523_rtcRead
  2761 ;;		_PCF8523_write
  2762 ;;		_MCP794x_setTime
  2763 ;;		_MCP794x_setDate
  2764 ;;		_MCP794x_writeRtcc
  2765 ;;		_MCP794x_writeEEPROM
  2766 ;;		_MCP794x_readEEPROM
  2767 ;;		_MCP794x_getID
  2768 ;;		_MCP7941x_read
  2769 ;;		_SSD1306_writeCMD
  2770 ;;		_displaySetCursor
  2771 ;;		_displayWrite
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           	psect	text23
  2776  001454                     __ptext23:
  2777                           	opt stack 0
  2778  001454                     _I2C_Write:
  2779                           	opt stack 27
  2780                           
  2781                           ;incstack = 0
  2782                           ;I2C_Write@data stored from wreg
  2783  001454  6E20               	movwf	I2C_Write@data,c
  2784                           
  2785                           ;I2C.c: 32: SSP2BUF = data;
  2786  001456  C020  FF75         	movff	I2C_Write@data,3957	;volatile
  2787  00145A  A073               	btfss	3955,0,c	;volatile
  2788  00145C  D7FE               	goto	l468
  2789  00145E                     u20:
  2790                           
  2791                           ;I2C.c: 34: while (!PIR3bits.SSP2IF);
  2792  00145E  AEA4               	btfss	4004,7,c	;volatile
  2793  001460  D7FE               	goto	u20
  2794                           
  2795                           ;I2C.c: 35: PIR3bits.SSP2IF = 0;
  2796  001462  9EA4               	bcf	4004,7,c	;volatile
  2797                           
  2798                           ;I2C.c: 36: if (SSP2CON2bits.ACKSTAT) {
  2799  001464  AC71               	btfss	3953,6,c	;volatile
  2800  001466  0012               	return	
  2801                           
  2802                           ;I2C.c: 37: I2C_stop();
  2803  001468  EC8E  F00A         	call	_I2C_stop	;wreg free
  2804                           
  2805                           ;I2C.c: 38: return;
  2806  00146C  0012               	return	
  2807  00146E                     __end_of_I2C_Write:
  2808                           	opt stack 0
  2809                           tblptru	equ	0xFF8
  2810                           tblptrh	equ	0xFF7
  2811                           tblptrl	equ	0xFF6
  2812                           tablat	equ	0xFF5
  2813                           prodh	equ	0xFF4
  2814                           prodl	equ	0xFF3
  2815                           intcon	equ	0xFF2
  2816                           intcon2	equ	0xFF1
  2817                           postinc0	equ	0xFEE
  2818                           wreg	equ	0xFE8
  2819                           postdec1	equ	0xFE5
  2820                           fsr1h	equ	0xFE2
  2821                           fsr1l	equ	0xFE1
  2822                           status	equ	0xFD8
  2823                           
  2824 ;; *************** function _I2C_stop *****************
  2825 ;; Defined at:
  2826 ;;		line 63 in file "I2C.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;		None
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;		None
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  1    wreg      void 
  2833 ;; Registers used:
  2834 ;;		None
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2844 ;;Total ram usage:        0 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_I2C_Write
  2850 ;;		_I2C_buffClear
  2851 ;;		_MCP23008_pinMode
  2852 ;;		_MCP23008_pullUp
  2853 ;;		_MCP23008_ISR_EN
  2854 ;;		_MCP23008_ISR_polarity
  2855 ;;		_MCP23008_reagReg
  2856 ;;		_I2C_BusSCan
  2857 ;;		_MCP23008_Write
  2858 ;;		_MCP23008_read
  2859 ;;		_portINT_status
  2860 ;;		_MCP9801_Init
  2861 ;;		_MCP9801_TempRead
  2862 ;;		_EEPROM_24AA512_Write
  2863 ;;		_EEPROM_24AA512_Read
  2864 ;;		_EEPROM_24AA512_pageWrite
  2865 ;;		_EEPROM_24AA512_pageRead
  2866 ;;		_PCF8523_rtcRead
  2867 ;;		_PCF8523_write
  2868 ;;		_MCP794x_setTime
  2869 ;;		_MCP794x_setDate
  2870 ;;		_MCP794x_writeRtcc
  2871 ;;		_MCP794x_writeEEPROM
  2872 ;;		_MCP794x_readEEPROM
  2873 ;;		_MCP794x_getID
  2874 ;;		_SSD1306_writeCMD
  2875 ;;		_displaySetCursor
  2876 ;;		_displayWrite
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text24
  2881  00151C                     __ptext24:
  2882                           	opt stack 0
  2883  00151C                     _I2C_stop:
  2884                           	opt stack 28
  2885                           
  2886                           ;I2C.c: 64: SSP2CON2bits.PEN = 1;
  2887                           
  2888                           ;incstack = 0
  2889  00151C  8471               	bsf	3953,2,c	;volatile
  2890  00151E  B471               	btfsc	3953,2,c	;volatile
  2891  001520  D7FE               	goto	l499
  2892                           
  2893                           ;I2C.c: 66: PIR3bits.SSP2IF = 0;
  2894  001522  9EA4               	bcf	4004,7,c	;volatile
  2895  001524  0012               	return		;funcret
  2896  001526                     __end_of_I2C_stop:
  2897                           	opt stack 0
  2898                           tblptru	equ	0xFF8
  2899                           tblptrh	equ	0xFF7
  2900                           tblptrl	equ	0xFF6
  2901                           tablat	equ	0xFF5
  2902                           prodh	equ	0xFF4
  2903                           prodl	equ	0xFF3
  2904                           intcon	equ	0xFF2
  2905                           intcon2	equ	0xFF1
  2906                           postinc0	equ	0xFEE
  2907                           wreg	equ	0xFE8
  2908                           postdec1	equ	0xFE5
  2909                           fsr1h	equ	0xFE2
  2910                           fsr1l	equ	0xFE1
  2911                           status	equ	0xFD8
  2912                           tblptru	equ	0xFF8
  2913                           tblptrh	equ	0xFF7
  2914                           tblptrl	equ	0xFF6
  2915                           tablat	equ	0xFF5
  2916                           prodh	equ	0xFF4
  2917                           prodl	equ	0xFF3
  2918                           intcon	equ	0xFF2
  2919                           intcon2	equ	0xFF1
  2920                           postinc0	equ	0xFEE
  2921                           wreg	equ	0xFE8
  2922                           postdec1	equ	0xFE5
  2923                           fsr1h	equ	0xFE2
  2924                           fsr1l	equ	0xFE1
  2925                           status	equ	0xFD8
  2926                           
  2927                           	psect	rparam
  2928  0000                     tblptru	equ	0xFF8
  2929                           tblptrh	equ	0xFF7
  2930                           tblptrl	equ	0xFF6
  2931                           tablat	equ	0xFF5
  2932                           prodh	equ	0xFF4
  2933                           prodl	equ	0xFF3
  2934                           intcon	equ	0xFF2
  2935                           intcon2	equ	0xFF1
  2936                           postinc0	equ	0xFEE
  2937                           wreg	equ	0xFE8
  2938                           postdec1	equ	0xFE5
  2939                           fsr1h	equ	0xFE2
  2940                           fsr1l	equ	0xFE1
  2941                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    57
    Data        53
    BSS         287
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      76
    BANK0           160      0      32
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 

    sp__memset	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    buffer	PTR unsigned int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> EUSART1_itoa@buf(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->_MCP23008_ISR_EN
    _SYSTEM_Initialize->_I2C_Init
    _I2C_Init->___aldiv
    ___aldiv->___wmul
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _MCP23008_pullUp->_MCP23008_reagReg
    _MCP23008_pinMode->_MCP23008_reagReg
    _MCP23008_ISR_EN->_MCP23008_ISR_polarity
    _MCP23008_ISR_polarity->_MCP23008_reagReg
    _MCP23008_INTclear->_MCP23008_reagReg
    _MCP23008_reagReg->_I2C_read
    _I2C_buffClear->_I2C_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10501
                                             22 COMRAM     2     2      0
                      _I2C_buffClear
                  _MCP23008_INTclear
                    _MCP23008_ISR_EN
                   _MCP23008_pinMode
                    _MCP23008_pullUp
                  _SYSTEM_Initialize
                     _interrupt_Init
 ---------------------------------------------------------------------------------
 (1) _interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1331
                 _EUSART1_Initialize
                           _I2C_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             1     1      0    1037
                                             20 COMRAM     1     1      0
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     563
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              6 COMRAM    14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MCP23008_pullUp                                      6     4      2    1738
                                              6 COMRAM     6     4      2
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
                   _MCP23008_reagReg
 ---------------------------------------------------------------------------------
 (1) _MCP23008_pinMode                                     8     4      4    2032
                                              6 COMRAM     8     4      4
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
                   _MCP23008_reagReg
 ---------------------------------------------------------------------------------
 (1) _MCP23008_ISR_EN                                      8     4      4    3783
                                             14 COMRAM     8     4      4
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
              _MCP23008_ISR_polarity
                   _MCP23008_reagReg
 ---------------------------------------------------------------------------------
 (2) _MCP23008_ISR_polarity                                8     4      4    1925
                                              6 COMRAM     8     4      4
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
                   _MCP23008_reagReg
 ---------------------------------------------------------------------------------
 (1) _MCP23008_INTclear                                    0     0      0    1602
                   _MCP23008_reagReg
 ---------------------------------------------------------------------------------
 (2) _MCP23008_reagReg                                     4     2      2    1602
                                              2 COMRAM     4     2      2
                          _I2C_Write
                           _I2C_read
                 _I2C_repeated_Start
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (3) _I2C_repeated_Start                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_read                                             2     0      2    1010
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_buffClear                                        0     0      0      15
                          _I2C_Write
                          _I2C_start
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (3) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      15
                                              0 COMRAM     1     1      0
                           _I2C_stop
 ---------------------------------------------------------------------------------
 (3) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_buffClear
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
   _MCP23008_INTclear
     _MCP23008_reagReg
       _I2C_Write
         _I2C_stop
       _I2C_read
       _I2C_repeated_Start
       _I2C_start
       _I2C_stop
   _MCP23008_ISR_EN
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
     _MCP23008_ISR_polarity
       _I2C_Write
         _I2C_stop
       _I2C_start
       _I2C_stop
       _MCP23008_reagReg
         _I2C_Write
           _I2C_stop
         _I2C_read
         _I2C_repeated_Start
         _I2C_start
         _I2C_stop
     _MCP23008_reagReg
       _I2C_Write
         _I2C_stop
       _I2C_read
       _I2C_repeated_Start
       _I2C_start
       _I2C_stop
   _MCP23008_pinMode
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
     _MCP23008_reagReg
       _I2C_Write
         _I2C_stop
       _I2C_read
       _I2C_repeated_Start
       _I2C_start
       _I2C_stop
   _MCP23008_pullUp
     _I2C_Write
       _I2C_stop
     _I2C_start
     _I2C_stop
     _MCP23008_reagReg
       _I2C_Write
         _I2C_stop
       _I2C_read
       _I2C_repeated_Start
       _I2C_start
       _I2C_stop
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _I2C_Init
       ___aldiv
         ___wmul (ARG)
       ___wmul
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   _interrupt_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0     100       8      100.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      4C       1       80.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16C       6        0.0%
DATA                 0      0     16C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Apr 23 21:33:17 2020

                            __size_of_I2C_Write 001A                                              u20 145E  
                      MCP23008_reagReg@dataRead 0024                             ___wmul@multiplicand 0022  
                        __end_of_interrupt_Init 14EA                                    __CFG_CP0$OFF 000000  
                            __size_of_I2C_start 000A                                     __CFG_OSC$HS 000000  
                                           _ADC 0017                                             l274 1124  
                                           l543 1200                                             l544 121E  
                                           l481 1498                                             l468 145A  
                                           l564 1058                                             l493 150A  
                                           l565 1076                                             l478 1488  
                                           l487 1514                                             l499 151E  
                                           l961 0FD8                                             l962 0FE6  
                                           l954 0F5E                                             l963 0FFC  
                                           l955 0F76                                             l957 0FA4  
                                           l958 0F98                                             u935 1494  
                                           u936 1496                                             u980 0FA8  
                             ??_MCP23008_ISR_EN 0032                                             wreg 000FE8  
                                    _TXSTA1bits 000FAD                                    __CFG_IESO$ON 000000  
                                          STR_1 0F3E                                            STR_2 0F3C  
                                          STR_3 0F3A                                            u1024 104A  
                                          u1025 1046                                            u1034 1068  
                                          u1035 1064                                            u1044 10AE  
                                          u1045 10AA                                            u1207 10D4  
                                          u1064 11F2                                            u1065 11EE  
                                          u1217 1132                                            u1074 1210  
                                          u1075 120C                                            u1227 1400  
                                          u1084 1316                                            u1085 1312  
                                          _LATA 000F89                                            u1094 1176  
                                          _LATB 000F8A                                            u1095 1172  
                                          _LATC 000F8B                                            _LATD 000F8C  
                                          _LATE 000F8D                                   __CFG_FCMEN$ON 000000  
                                          _main 10C0                                            _page 0040  
                              __end_of_I2C_Init 12E2                                            fsr1h 000FE2  
                                          fsr1l 000FE1                                __end_of_I2C_read 149E  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0000                                __end_of_I2C_stop 1526  
                             ??_MCP23008_pullUp 0028                                    ___param_bank 000000  
                                 __CFG_PLLDIV$1 000000                  __size_of_OSCILLATOR_Initialize 002A  
                 __end_of_OSCILLATOR_Initialize 140E                                 ?_interrupt_Init 0020  
                               __end_of___aldiv 100E                                           ?_main 0020  
                             _MCP23008_INTclear 14D2                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                            ?_MCP23008_INTclear 0020                             MCP23008_pullUp@port 0026  
                                         _sData 0001                                           _errno 0013  
                             ?_MCP23008_reagReg 0022                                  __CFG_CLKOEC$ON 000000  
                             ?_MCP23008_pinMode 0026                               __end_of_I2C_Write 146E  
                                         tablat 000FF5                              ??_MCP23008_reagReg 0024  
                           ??_MCP23008_INTclear 0026                              ??_MCP23008_pinMode 002A  
                                         status 000FD8                               __end_of_I2C_start 151C  
            _EUSART1_DefaultFramingErrorHandler 000000                       MCP23008_ISR_polarity@port 0026  
                      __size_of_SPI1_Initialize 000E                         __CFG_DSWDTOSC$INTOSCREF 000000  
                               __initialization 1224                      __end_of_EUSART1_Initialize 13AA  
                                  __end_of_main 1142                       __end_of_MCP23008_INTclear 14E0  
                                        ??_main 0036                                   __activetblptr 000002  
                                        _ANCON0 000F48                                          _ANCON1 000F49  
                                        _ODCON1 000F42                                          _ODCON2 000F41  
                                        _ODCON3 000F40                                  __CFG_WDTEN$OFF 000000  
                                        _RCREG1 000FAF                                          _RCSTA1 000FAC  
                                        _OSCCON 000FD3                                          _SPBRG1 000FB0  
                                __CFG_WPCFG$OFF 000000                                          _TXREG1 000FAE  
                                        _TXSTA1 000FAD                                  __CFG_WPDIS$OFF 000000  
                __size_of_MCP23008_ISR_polarity 00B2                                  __CFG_XINST$OFF 000000  
                 __end_of_MCP23008_ISR_polarity 10C0                                          _TxData 0100  
                                        _bfSize 000B                                       ??___aldiv 002E  
                                        ___wmul 140E                                  __CFG_STVREN$ON 000000  
                        __size_of_I2C_buffClear 0010                                          _buffer 0015  
                                        _columm 0060                        ?_EUSART1_SetErrorHandler 0020  
                                        clear_0 126C                                          clear_1 127E  
              ??_EUSART1_SetOverrunErrorHandler 0022                 ?_EUSART1_SetOverrunErrorHandler 0020  
                                  __pdataCOMRAM 0038                                       ?_I2C_Init 0020  
                                  __mediumconst 0000                                       ?_I2C_read 0020  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                       ?_I2C_stop 0020  
                               __CFG_DSBOREN$ON 000000                                __end_ofexp@coeff 0F1F  
                             _SYSTEM_Initialize 146E                                __end_oflog@coeff 0F3A  
                                    __accesstop 0060                         __end_of__initialization 1284  
                            ?_SYSTEM_Initialize 0020                                   ___rparam_used 000001  
                    __end_of_I2C_repeated_Start 1512                                 __CFG_IOL1WAY$ON 000000  
                          __CFG_WPEND$PAGE_WPFP 000000                                  __pcstackCOMRAM 0020  
                                  __pidataBANK0 1434                                 _MCP23008_ISR_EN 1142  
                           ??_SYSTEM_Initialize 0035                               ??_SPI1_Initialize 0020  
                               __CFG_DSWDTEN$ON 000000                                 __CFG_DSWDTPS$G2 000000  
                    __size_of_MCP23008_INTclear 000E                                      ??_I2C_Init 0034  
                                    ??_I2C_read 0022                                      ??_I2C_stop 0020  
                               _MCP23008_pullUp 12E2                       __end_of_SYSTEM_Initialize 1486  
                                 _I2C_buffClear 14B4                                      __pbssBANK1 0100  
               __end_of_EUSART1_SetErrorHandler 1508                               __CFG_PLLSEL$PLL4X 000000  
                              ??_interrupt_Init 0020                                         ?___wmul 0020  
        __end_of_EUSART1_SetFramingErrorHandler 14FE         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 14F4                                         _REFOCON 000F3D  
                                       _OSCCON2 000F87                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000F7F                                         _SSP1ADD 000FC8  
                                       _SSP2ADD 000F74                                         _SSP1BUF 000FC9  
                                       _SSP2BUF 000F75                                  ?_I2C_buffClear 0020  
                              I2C_read@ACK_NACK 0020                         __end_of_MCP23008_ISR_EN 11B6  
                                     _I2C_Write 1454                                         __Hparam 0000  
                                       __Lparam 0000                                       _I2C_start 1512  
                     __size_of_MCP23008_reagReg 003A                                         ___aldiv 0F42  
                     __size_of_MCP23008_pinMode 006E                                 __size_of___wmul 0026  
                                  __psmallconst 0F00                                         __pcinit 1224  
                                       __ramtop 0F00                                         __ptext0 10C0  
                                       __ptext1 14E0                                         __ptext2 146E  
                                       __ptext3 14C4                                         __ptext4 1328  
                                       __ptext5 13E4                                         __ptext6 128E  
                                       __ptext7 140E                                         __ptext8 0F42  
                                       __ptext9 136C                                       _MAX31_ADC 000F  
                       __end_of_MCP23008_pullUp 1328                           _OSCILLATOR_Initialize 13E4  
                              ___aldiv@dividend 0026                              _EUSART1_Initialize 136C  
                      ??_PIN_MANAGER_Initialize 0020                      __size_of_SYSTEM_Initialize 0018  
                          end_of_initialization 1284                             ?_EUSART1_Initialize 0020  
                                 __Lmediumconst 0000                     _EUSART1_OverrunErrorHandler 001B  
                                    ?_I2C_Write 0020                                      ?_I2C_start 0020  
                              ___aldiv@quotient 0030                                         postdec1 000FE5  
                                       postinc0 000FEE                            ??_EUSART1_Initialize 0022  
                                     _PORTBbits 000F81                                 ??_I2C_buffClear 0021  
                                     _TRISCbits 000F94                                       _TRISDbits 000F95  
                                     _TRISEbits 000F96                               __size_of_I2C_Init 0054  
              __size_of_EUSART1_SetErrorHandler 000A                               __size_of_I2C_read 0018  
                        MCP23008_reagReg@regAdd 0022                               __size_of_I2C_stop 000A  
                               _SPI1_Initialize 14C4                               __CFG_WPFP$PAGE_63 000000  
                              ?_MCP23008_ISR_EN 002E                   MCP23008_ISR_polarity@dataRead 002C  
                           __CFG_MSSP7B_EN$MSK7 000000                           _MCP23008_ISR_polarity 100E  
                                __end_of___wmul 1434                                   __pidataCOMRAM 149E  
                            _I2C_repeated_Start 1508                          ?_OSCILLATOR_Initialize 0020  
                              ?_MCP23008_pullUp 0026                             start_initialization 1224  
               __size_of_PIN_MANAGER_Initialize 0044                             ?_I2C_repeated_Start 0020  
                                   ??_I2C_Write 0020                                     ??_I2C_start 0020  
                          ??_I2C_repeated_Start 0020                         MCP23008_pullUp@dataRead 002A  
                              _MCP23008_reagReg 13AA                                _MCP23008_pinMode 11B6  
                                      ??___wmul 0024                               __CFG_ADCSEL$BIT10 000000  
                                   __pdataBANK0 0060                                 I2C_Init@F_clock 0034  
                                   __pbssCOMRAM 0001                         __end_of_SPI1_Initialize 14D2  
              ??_EUSART1_SetFramingErrorHandler 0022                 ?_EUSART1_SetFramingErrorHandler 0020  
                        _PIN_MANAGER_Initialize 1328                          ?_MCP23008_ISR_polarity 0026  
                                      ?___aldiv 0026                         MCP23008_ISR_EN@dataRead 0034  
                                   __smallconst 0F00                                        _BAUDCON1 000F7E  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        _I2C_Init 128E  
                          _EUSART1_ErrorHandler 0019                            __CFG_RTCOSC$T1OSCREF 000000  
                                      _I2C_read 1486                                        _I2C_stop 151C  
                       _EUSART1_SetErrorHandler 14FE                                 ___aldiv@divisor 002A  
                               ___aldiv@counter 002E                                  ___wmul@product 0024  
       EUSART1_SetErrorHandler@interruptHandler 0020                                        _LATCbits 000F8B  
                                      _LATEbits 000F8D                                        _PIE3bits 000FA3  
                                      _PIR1bits 000F9E                                        _PIR3bits 000FA4  
                              __CFG_WDTPS$32768 000000                                        _SSP1CON1 000FC6  
                                      _SSP1STAT 000FC7                               ___wmul@multiplier 0020  
                              __CFG_SOSCSEL$DIG 000000                         __size_of_interrupt_Init 000A  
                             __CFG_CFGPLLEN$OFF 000000                                ?_SPI1_Initialize 0020  
                                   _INTCON2bits 000FF1                                       copy_data0 1238  
                                     copy_data1 1258                          MCP23008_ISR_EN@INTedge 0030  
                                      __Hrparam 0000                                        __Lrparam 0000  
                                 I2C_Write@data 0020                         ??_OSCILLATOR_Initialize 0020  
                              __size_of___aldiv 00CC                     __size_of_EUSART1_Initialize 003E  
                     ??_EUSART1_SetErrorHandler 0022                     _EUSART1_DefaultErrorHandler 000000  
                          PCF8523_setDate@F7837 0048                                        __ptext10 14EA  
                                      __ptext11 14F4                                        __ptext20 1486  
                                      __ptext12 14FE                                        __ptext21 14B4  
                                      __ptext13 12E2                                        __ptext22 1512  
                                      __ptext14 11B6                                        __ptext23 1454  
                                      __ptext15 1142                                        __ptext24 151C  
                                      __ptext16 100E                                        __ptext17 14D2  
                                      __ptext18 13AA                                        __ptext19 1508  
                         __end_of_I2C_buffClear 14C4                        __end_of_MCP23008_reagReg 13E4  
                                  _SSP1CON1bits 000FC6                        __end_of_MCP23008_pinMode 1224  
                                  _SSP2CON1bits 000F72                                    _SSP2CON2bits 000F71  
                                 __size_of_main 0082  EUSART1_SetOverrunErrorHandler@interruptHandler 0020  
                      __size_of_MCP23008_ISR_EN 0074                                    _SSP1STATbits 000FC7  
                   _EUSART1_FramingErrorHandler 001D                                    _SSP2STATbits 000F73  
                                      exp@coeff 0F01                                        log@coeff 0F1F  
                                    _INTCONbits 000FF2                        __size_of_MCP23008_pullUp 0046  
                       ?_PIN_MANAGER_Initialize 0020                         ??_MCP23008_ISR_polarity 002A  
        __end_of_EUSART1_SetOverrunErrorHandler 14F4         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 14EA                                      _RCSTA1bits 000FAC  
                  MCP23008_ISR_polarity@INTedge 0028                     __size_of_I2C_repeated_Start 000A  
                          MCP23008_pinMode@mode 0028                            MCP23008_pinMode@port 0026  
EUSART1_SetFramingErrorHandler@interruptHandler 0020                              _eusart1RxLastError 001F  
                                _interrupt_Init 14E0                        MCP23008_pinMode@dataRead 002C  
                                  ___aldiv@sign 002F                  __end_of_PIN_MANAGER_Initialize 136C  
                          PCF8523_setTime@F7830 0038                             MCP23008_ISR_EN@port 002E  
